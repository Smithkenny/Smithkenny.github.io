<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on TechOps</title><link>https://www.haipengv.com/posts/</link><description>Recent content in Posts on TechOps</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 22 Mar 2025 00:00:00 +0800</lastBuildDate><atom:link href="https://www.haipengv.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Graylog搭建及测试</title><link>https://www.haipengv.com/posts/graylog%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 22 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/graylog%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%B5%8B%E8%AF%95/</guid><description>系统配置 2C8G 注意：2C 4G 会报错，内存不足，运行java失败。 graylog(9000): https://packages.graylog2.org/el/stable/6.0/x86_64 opensearch(9200): https://opensearch.org/artifacts/opensearch/opensearch-2-13-0-linux-x64-rpm.html graylog-opensearch-mongodb 版本对应关系： https://go2docs.graylog.org/6-0/downloading_and_installing_graylog/red_hat_installation.htm 搭建过程 mongo7.0.6(27017) 1 2 docker pull docker.1ms.run/mongo:7.0.6 docker run --restart=always --name mongo -p 27017:27017 -e TZ=Asia/Shanghai --privileged=true -e MONGODB_INITDB_ROOT_USERNAME=mongo -e MONGODB_INITDB_ROOT_PASSWORD=mongo -d docker.1ms.run/mongo:7.0.6 graylog and opensearch 1 2 3 4 5 6 7 8 9</description></item><item><title>OpenEuler系统部署1.28.2单节点集群</title><link>https://www.haipengv.com/posts/openeuler%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B21.28.2%E5%8D%95%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/</link><pubDate>Sat, 22 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/openeuler%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B21.28.2%E5%8D%95%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4/</guid><description>Kubernetes介绍 kubernetes（k8s）是2014年由Google公司基于Go语言编写的一款开源的容器集群编排系统，用于自动化容器的部署、扩缩容和</description></item><item><title>Rocky9换源</title><link>https://www.haipengv.com/posts/rocky9%E6%8D%A2%E6%BA%90/</link><pubDate>Fri, 21 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/rocky9%E6%8D%A2%E6%BA%90/</guid><description>1. Rocky Linux 官方镜像源 地址：https://mirror.rockylinux.org/mirrormanager/mirrors 2. Rocky Linux 国内镜像源 1 2 3 4 5 6 7 8 9 10</description></item><item><title>Rocky9搭建LAMP</title><link>https://www.haipengv.com/posts/rocky9%E6%90%AD%E5%BB%BAlamp/</link><pubDate>Fri, 21 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/rocky9%E6%90%AD%E5%BB%BAlamp/</guid><description>系统环境: Rocky9.5 安装LAMP 安装Apache: 1 2 3 yum install httpd -y systemctl start httpd systemctl enable httpd 安装php 1 2 yum install php php-mysqli -y systemctl restart httpd 安装mariadb 1 2 3 yum install mariadb-server -y systemctl start mariadb systemctl enable mariadb 设置密码，登录ma</description></item><item><title>Rocky9部署Zabbix7.0监控</title><link>https://www.haipengv.com/posts/rocky9%E9%83%A8%E7%BD%B2zabbix7.0%E7%9B%91%E6%8E%A7/</link><pubDate>Thu, 20 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/rocky9%E9%83%A8%E7%BD%B2zabbix7.0%E7%9B%91%E6%8E%A7/</guid><description>Rocky9部署Zabbix7.0监控 ZABBIX7.0安装 安装zabbix7.0仓库 rpm -Uvh https://repo.zabbix.com/zabbix/7.0/rocky/9/x86_64/zabbix-release-7.0-5.el9.noarch.rpm 安装zabbix相关软件包 dnf install -y zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf zabbix-sql-scripts zabbix-selinux-policy zabbix-agent gd-devel 添加MySQL8.0仓</description></item><item><title>CentOS7.9系统管理与服务配置综合指南</title><link>https://www.haipengv.com/posts/centos7.9%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E7%BB%BC%E5%90%88%E6%8C%87%E5%8D%97/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7.9%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E7%BB%BC%E5%90%88%E6%8C%87%E5%8D%97/</guid><description>一、CentOS 7.9 网卡名称更改与恢复 CentOS 7.9 默认网卡名称（如 enp0s3）可能不符合传统习惯（如 eth0），或因硬件环境导致网口乱序。以下是更改和恢复网卡名称的两种</description></item><item><title>Centos7本地源及共享源搭建02</title><link>https://www.haipengv.com/posts/centos7%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%8F%8A%E5%85%B1%E4%BA%AB%E6%BA%90%E6%90%AD%E5%BB%BA02/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%8F%8A%E5%85%B1%E4%BA%AB%E6%BA%90%E6%90%AD%E5%BB%BA02/</guid><description>一、环境 Centos7.9 服务器2台、Centos7.9 iso镜像文件（CentOS-7-x86_64-DVD-2009.iso） 二、搭建过程 启动其中一台服务器用作共享源服务器</description></item><item><title>Centos7本地源和网络源创建</title><link>https://www.haipengv.com/posts/centos7%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%92%8C%E7%BD%91%E7%BB%9C%E6%BA%90%E5%88%9B%E5%BB%BA/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%92%8C%E7%BD%91%E7%BB%9C%E6%BA%90%E5%88%9B%E5%BB%BA/</guid><description>在虚拟机没有网络或者网络不稳定的情况下需要配置本地yum源 优点：由于数据从本地获取，下载和安装软件包的速度非常快，完全不需要网络 缺点：软件可能不是最新版，需要手</description></item><item><title>Centos7配置docker</title><link>https://www.haipengv.com/posts/centos7%E9%85%8D%E7%BD%AEdocker/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7%E9%85%8D%E7%BD%AEdocker/</guid><description>1、卸载旧版本docker 卸载旧版本docker命令 yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 2、安装docker的yum库 1 yum install -y yum-utils 3、配置docker的yum源 1 yum-config-manager</description></item><item><title>Docker Compose搭建mysql8</title><link>https://www.haipengv.com/posts/docker-compose%E6%90%AD%E5%BB%BAmysql8/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker-compose%E6%90%AD%E5%BB%BAmysql8/</guid><description>创建dockerfile文件名称为docker-compose.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 docker-compose.yaml version: &amp;#39;3.9&amp;#39; services: mysql: image: mysql:8.2.0 ports: - 3306:3306 volumes: - ~/apps/mysql:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=A123456 - MYSQL_PASSWORD=A123456 - MYSQL_USER=citizix_user - MYSQL_DATABASE=citizix_db 运行： 1 docker-compose up -d</description></item><item><title>Docker实用技巧与管理指南</title><link>https://www.haipengv.com/posts/docker%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%AE%A1%E7%90%86%E6%8C%87%E5%8D%97/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%AE%A1%E7%90%86%E6%8C%87%E5%8D%97/</guid><description>一、Docker 容器的健康检查 在 Docker 中，容器的运行状态不仅仅是“启动”或“停止”那么简单。通过健康检查（Health Check），我们可以更精确地了解容器内部应用</description></item><item><title>Goaccess</title><link>https://www.haipengv.com/posts/goaccess/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/goaccess/</guid><description>简介 GoAccess 是一款开源的且具有交互视图界面的实时 Web 日志分析工具，通过你的 Web 浏览器或者 *nix 系统下的**终端程序(terminal)**即可访问。 能为系统管理员提供快速且有</description></item><item><title>Idea2023更改maven默认仓库源</title><link>https://www.haipengv.com/posts/idea2023%E6%9B%B4%E6%94%B9maven%E9%BB%98%E8%AE%A4%E4%BB%93%E5%BA%93%E6%BA%90/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/idea2023%E6%9B%B4%E6%94%B9maven%E9%BB%98%E8%AE%A4%E4%BB%93%E5%BA%93%E6%BA%90/</guid><description>一、起因 使用maven默认仓库源拉取代码时间很慢，更改为aliyun的仓库源可以显著缩短项目初始化时间。 二、更改过程 2.1 下载maven并配置环境变量 http://maven.apache.org/docs/history.html 解压到D盘，</description></item><item><title>Java实现简单web项目</title><link>https://www.haipengv.com/posts/java%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95web%E9%A1%B9%E7%9B%AE/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/java%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95web%E9%A1%B9%E7%9B%AE/</guid><description>一、需求 创建一个简单的web页面，需要实现以下功能： 1.能够CURD mysql8.0数据库 2.能够显示日志。 二、项目设置 项目整体结构如下所示： 1.创建一个新的S</description></item><item><title>Jenkins升级</title><link>https://www.haipengv.com/posts/jenkins%E5%8D%87%E7%BA%A7/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/jenkins%E5%8D%87%E7%BA%A7/</guid><description>升级原因，插件版本太新，jenkins版本太旧，导致插件无法安装。 报错如下： 1 2 3 4 5 6 7 8 9 10 Some plugins could not be loaded due to unsatisfied dependencies. Fix these issues and restart Jenkins to re-enable these plugins. Dependency errors: Mina SSHD API :: Core (2.12.1-101.v85b_e08b_780dd) Jenkins (2.387.3) or higher</description></item><item><title>Minio简介</title><link>https://www.haipengv.com/posts/minio%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/minio%E7%AE%80%E4%BB%8B/</guid><description>简介 MinIO 是在 Apache License v2.0 下发布的高性能对象存储。它是与 Amazon S3 云存储服务兼容的 API。使用 MinIO 构建 用于机器学习、分析和应用的高性能基础设施数据工作负载。MinIO 从根本上与众</description></item><item><title>Nginx反向代理应用</title><link>https://www.haipengv.com/posts/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%BA%94%E7%94%A8/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%BA%94%E7%94%A8/</guid><description>使用 Tomcat 作为后端服务 步骤1:修改 docker-compose.yml 文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 version: &amp;#39;3&amp;#39; services: nginx: image: nginx:latest container_name: nginx-proxy ports: - &amp;#34;80:80&amp;#34; volumes: - ./nginx/default.conf:/etc/nginx/conf.d/default.conf depends_on: - backend backend: image: tomcat:9 # 使用 Tomcat 官方镜像 container_name: tomcat-backend expose: - &amp;#34;8080&amp;#34; # Tomcat 默认监听 8080 端口</description></item><item><title>Shell常见练习题</title><link>https://www.haipengv.com/posts/shell%E5%B8%B8%E8%A7%81%E7%BB%83%E4%B9%A0%E9%A2%98/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E5%B8%B8%E8%A7%81%E7%BB%83%E4%B9%A0%E9%A2%98/</guid><description>第一组 1.wc-l命令可以统计输入内容的行数，请统计/etc/passwd文件行数 2.将cat/etc/passwd输出内容中的sb替换为**（提示：sed命令</description></item><item><title>Springboot指定运行端口</title><link>https://www.haipengv.com/posts/springboot%E6%8C%87%E5%AE%9A%E8%BF%90%E8%A1%8C%E7%AB%AF%E5%8F%A3/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/springboot%E6%8C%87%E5%AE%9A%E8%BF%90%E8%A1%8C%E7%AB%AF%E5%8F%A3/</guid><description>方法1 修改源代码里的“\src\main\resources\application.properties” 文件，增加或修改 1 server.port=8081 方法2 如果是已经打包好的jar包</description></item><item><title>Virtualbox-Net模式下ssh连接</title><link>https://www.haipengv.com/posts/virtualbox-net%E6%A8%A1%E5%BC%8F%E4%B8%8Bssh%E8%BF%9E%E6%8E%A5/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/virtualbox-net%E6%A8%A1%E5%BC%8F%E4%B8%8Bssh%E8%BF%9E%E6%8E%A5/</guid><description>virtualBox本地虚拟机通过ssh连接一般可通过桥接模式和Nat模式 桥接模式下，共享本地主机网卡，在同一个局域网之下，直接获取Ip地址就可以进行连接了。 N</description></item><item><title>传统运维技术篇01</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8701/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8701/</guid><description>一、环境拓扑 使用virtualbox部署服务器，其中开发机器和测试运维机都是单网卡并且使用内部网络。路由器充当网关配置双网卡（nat网卡用于上网，内部网络用于和</description></item><item><title>传统运维技术篇02</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8702/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8702/</guid><description>研发代码仓库（gitee）及使用git代码上传过程 一、gitee代码仓库使用 官网：https://gitee.com 注册账号、创建仓库，我这里创建的试验仓库为：</description></item><item><title>传统运维技术篇03</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8703/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8703/</guid><description>数据库篇 一、数据库基本知识 实体：客观存在的真实事物，人、物品都是。 属性：实体的某个特征，比如一个人的年龄是18 关系：实体与实体之间的联系，分为一对一、一对多、多</description></item><item><title>传统运维技术篇04</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8704/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8704/</guid><description>MYSQL主从搭建 一、试验环境 新搭建两台机器（从71上链接克隆过去） MYSQL主：jx-mysql-master-36(10.10.10.36/24) MySQL</description></item><item><title>传统运维技术篇05</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8705/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8705/</guid><description>一、环境介绍 根据前几篇的部署环境，现实情况中我们向代理服务器（31）发送请求的服务器不止一台，今天我们还是使用71来克隆两台jx-busi-21和jx-busi</description></item><item><title>传统运维技术篇06</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8706/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8706/</guid><description>keepalive高可用。 一、试验环境 根据前几篇的文章，我们发现请求通过应用服务器（21、22），在经过mysql代理服务器（31）上，给到mysql服务器（3</description></item><item><title>传统运维技术篇07</title><link>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8707/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BC%A0%E7%BB%9F%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E7%AF%8707/</guid><description>一、使用ansible搭建prometheus监控系统 1.部署环境 我们在运维机（81）上使用ansible将prometheus软件部署在应用服务器（21、22</description></item><item><title>使用容器搭建zabbix监控</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BAzabbix%E7%9B%91%E6%8E%A7/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BAzabbix%E7%9B%91%E6%8E%A7/</guid><description>一、搭建过程 创建专用网卡 1 docker network create --subnet 172.20.0.0/16 --ip-range 172.20.240.0/20 zabbix-net 1.创建数据库 1 2 3 4 5 6 7 8 9 10 11 12 docker run --name mysql-server -t \ -e MYSQL_DATABASE=&amp;#34;zabbix&amp;#34; \ -e MYSQL_USER=&amp;#34;zabbix&amp;#34; \ -e MYSQL_PASSWORD=&amp;#34;123qwe..&amp;#34; \ -e MYSQL_ROOT_PASSWORD=&amp;#34;123qwe..&amp;#34; \ -e TZ=Asia/Shanghai \ --network=zabbix-net \ --restart unless-stopped \ -p 13306:3306 \ -d docker.io/mysql:8.2.0 \ --character-set-server=utf8 --collation-server=utf8_bin \ --default-authentication-plugin=mysql_native_password 在数据库</description></item><item><title>快速删除大量小文件多种方式速度对比</title><link>https://www.haipengv.com/posts/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E5%A4%A7%E9%87%8F%E5%B0%8F%E6%96%87%E4%BB%B6-%E5%A4%9A%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%80%9F%E5%BA%A6%E5%AF%B9%E6%AF%94/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E5%A4%A7%E9%87%8F%E5%B0%8F%E6%96%87%E4%BB%B6-%E5%A4%9A%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%80%9F%E5%BA%A6%E5%AF%B9%E6%AF%94/</guid><description>要测试删除大量小文件，首先需要先创建大量小文件，比如创建50W个txt文件： mkdir /tmp/temp &amp;amp;&amp;amp; cd /tmp/temp seq -f &amp;#34;%g.txt&amp;#34; 1 500000 | xargs -P 4 -n 10000 touch 最快的是直接rm删除目录(但并非是瞬间的)，是删除</description></item><item><title>新物理磁盘格式化、分区、挂载过程</title><link>https://www.haipengv.com/posts/%E6%96%B0%E7%89%A9%E7%90%86%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%96%B0%E7%89%A9%E7%90%86%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B/</guid><description>1.在物理层面将数据盘附件到指定的服务器，运行 lsblk -f 命令检查是否附加成功（体现为 sdb 磁盘） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [root@docker01 ~]# lsblk -f NAME FSTYPE LABEL UUID MOUNTPOINT sda ├─sda1 xfs 558ada87-6f41-46ec-a49c-55a55750a6f8 /boot └─</description></item><item><title>面试题整理</title><link>https://www.haipengv.com/posts/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/</guid><description>工作职责 说一下你之前工作具体职责都是什么？ 工作中用到过哪些工具？ 你在这个项目里主要作什么？ 平常都负责系统哪部分工作？ 这个项目的主要功能是什么？ 在公司主要从事的什</description></item><item><title>Dockerfile指令详解</title><link>https://www.haipengv.com/posts/dockerfile%E6%8C%87%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/dockerfile%E6%8C%87%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid><description>1.COPY复制文件 格式： COPY [--chown=&amp;lt;user&amp;gt;:&amp;lt;group&amp;gt;] &amp;lt;源路径&amp;gt;... &amp;lt;目标路径&amp;gt; COPY [--chown=&amp;lt;user&amp;gt;:&amp;lt;group&amp;gt;] [&amp;quot;&amp;lt;源路径1&amp;gt;&amp;quot;,... &amp;quot;&amp;l</description></item><item><title>Docker创建容器rm参数使用</title><link>https://www.haipengv.com/posts/docker%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8rm%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8rm%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8/</guid><description>1.创建容器，容器停止后立即删除 1 docker run --rm --name web -p 8080:8080 ubuntu:latest 注意: `&amp;ndash;rm` 参数不可和`-d`参数同时使用 使用一下参数找不到运行过的容器 1 docker ps -a</description></item><item><title>Docker应用开发01</title><link>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9101/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9101/</guid><description>1.项目概述 开发一个web应用接口，能够通过该接口实现对数据库中数据的增删改。 2.工具准备 idea docker mongodb robo 3T springboot postman 3.开发过程 3.1 docker中搭建mongo数据库 1 docker run -itd</description></item><item><title>Docker应用开发02</title><link>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9102/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9102/</guid><description>1.项目回顾 上一篇我们使用容器搭建了mongo数据库并创建了具有读写操作的用户，本篇我们将使用idea工具创建springboot项目和mongo数据库结合起来</description></item><item><title>Docker应用开发03</title><link>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9103/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%9103/</guid><description>1.项目回顾 上篇文章中我们使用idea创建了springboot项目并且和mongo数据库整合。本篇将使用idea把springboot项目代码打包成jar包，</description></item><item><title>Idea如何回退到之前的工程</title><link>https://www.haipengv.com/posts/idea%E5%A6%82%E4%BD%95%E5%9B%9E%E9%80%80%E5%88%B0%E4%B9%8B%E5%89%8D%E7%9A%84%E5%B7%A5%E7%A8%8B/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/idea%E5%A6%82%E4%BD%95%E5%9B%9E%E9%80%80%E5%88%B0%E4%B9%8B%E5%89%8D%E7%9A%84%E5%B7%A5%E7%A8%8B/</guid><description>打开项目，如果回退整个项目的代码，选择项目-&amp;gt;Local History-&amp;gt;show History</description></item><item><title>Postman简单使用</title><link>https://www.haipengv.com/posts/postman%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/postman%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid><description>一、前置条件 前端：spring-boot（搭建方式参考：链接） 后端：linux、mongodb（可视化工具：Robo 3T，搭建方式参考：link） 测试url: localhost:8080/user</description></item><item><title>Springboot各版本和java版本对应关系</title><link>https://www.haipengv.com/posts/springboot%E5%90%84%E7%89%88%E6%9C%AC%E5%92%8Cjava%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/springboot%E5%90%84%E7%89%88%E6%9C%AC%E5%92%8Cjava%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/</guid><description>Release Java 3.1 17 - 20 3.0 17 - 19 2.6 - 2.7 8 - 19 2.5 8 - 18 2.4 8 - 16 2.2 - 2.3 8 - 15 2.1 8 - 12 2.0 8 - 9 1.5 6 - 8 注意：JDK 1.8 对应JAVA 8 ，JDK 1.9 对应 JAVA 9 以此类推。</description></item><item><title>使用Dockerfile创建镜像</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8dockerfile%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8dockerfile%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F/</guid><description>1.构建示例 1.1 文件层级 1 2 3 4 5 6 7 [root@k3s-storage test-build]# tree . ├── Dockerfile └── target └── 123.txt 1 directory, 2 files 1.2 Dockerfile文件内容 1 2 3 4 5 6 7 FROM siyu.com/alpine:latest VOLUME /tmp COPY target/123.txt /tmp RUN apk add --no-cache python3 EXPOSE 8080 ENV NAME World CMD [&amp;#34;python3&amp;#34;, &amp;#34;-m&amp;#34;,</description></item><item><title>自建仓库registry使用证书认证方法</title><link>https://www.haipengv.com/posts/%E8%87%AA%E5%BB%BA%E4%BB%93%E5%BA%93registry%E4%BD%BF%E7%94%A8%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%87%AA%E5%BB%BA%E4%BB%93%E5%BA%93registry%E4%BD%BF%E7%94%A8%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81%E6%96%B9%E6%B3%95/</guid><description>1.证书创建过程 服务端创建所需目录 1 mkdir -p /home/docker-registry/certs /home/docker-registry/registry 1.1 创建配置文件（san.cnf） 创建一个文本文件，命名为 san.cnf，用于定义证书生成的配置。示例内容如下： 1 2 3</description></item><item><title>Dbeaver查看已连接的库密码</title><link>https://www.haipengv.com/posts/dbeaver%E6%9F%A5%E7%9C%8B%E5%B7%B2%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%BA%93%E5%AF%86%E7%A0%81/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/dbeaver%E6%9F%A5%E7%9C%8B%E5%B7%B2%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%BA%93%E5%AF%86%E7%A0%81/</guid><description>dbeaver 查看已连接的库密码 DBeaver的“窗口”-“首选项”界面 常规下的 “工作空间”界面找到 工作空间路径勾选show for workspace path&amp;hellip;.. 进入 1 &amp;#34;C:\Users\Administrator\AppData\Roaming\DBeaverData\workspace6\General\.dbeaver&amp;#34; 目录内找到credentials-</description></item><item><title>DeepSeek满血版部署</title><link>https://www.haipengv.com/posts/deepseek%E6%BB%A1%E8%A1%80%E7%89%88%E9%83%A8%E7%BD%B2/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/deepseek%E6%BB%A1%E8%A1%80%E7%89%88%E9%83%A8%E7%BD%B2/</guid><description>1.本地部署 Ollama 或LM Studio，优先LM Studio，简单还可以通过这两者部署到一台不怎么用的机器上，设置外网访问。 2.云端部署 国内可选阿里云或腾讯云，国外选</description></item><item><title>JDK和编译版本对应关系</title><link>https://www.haipengv.com/posts/jdk%E5%92%8C%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/jdk%E5%92%8C%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/</guid><description>JDK Version JAVA 开发环境版本号 Class File Version Class文件编译版本号 JDK 21 65 JDK 17 61 JDK 16 60 JDK 15 59 JDK 14 58 JDK 13 57 JDK 12 56 JDK 11 55 JDK 10 54 JDK 9 53 JDK 8 52 JDK 7 51 JDK 6 50 JDK 5 49 JDK 1.4 48 JDK 1.3 47 JDK 1.2 46 JDK 1.1 45.0-45.6 官</description></item><item><title>K3s持久化存储 NFS</title><link>https://www.haipengv.com/posts/k3s%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8-nfs/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/k3s%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8-nfs/</guid><description>一、基础环境 master: 192.168.1.189 node1: 192.168.1.190 node2: 192.168.1.188 二、NFS服务端部署 本文选择 IP 为 192.168.1.188 的 node2 节点，作为 NFS 存储服务器。 安装 NFS 服务端软件包并创建共享目录 1 2 3 yum install nfs-utils -y mkdir -p /home/data/k8s chown nfsnobody:nfsnobody /home/data/k8s 编辑服务配置文件</description></item><item><title>K3s部署单机kafka</title><link>https://www.haipengv.com/posts/k3s%E9%83%A8%E7%BD%B2%E5%8D%95%E6%9C%BAkafka/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/k3s%E9%83%A8%E7%BD%B2%E5%8D%95%E6%9C%BAkafka/</guid><description>一、部署单机版kafka kafka部署之前先要部署zookeeper。编写部署zookeeper的YAML文件如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description></item><item><title>K8s国内镜像加速服务整理</title><link>https://www.haipengv.com/posts/k8s%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E6%9C%8D%E5%8A%A1%E6%95%B4%E7%90%86/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/k8s%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E6%9C%8D%E5%8A%A1%E6%95%B4%E7%90%86/</guid><description>主流可用 Docker 镜像加速站列表汇总 更新：所有仓库都可以使用“https://dockerhub.icu/”来拉取 首先添加地址： 1 2 3 4 5 6 7 8 sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;EOF { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://dockerhub.icu&amp;#34;] } EOF sudo systemctl daemon-reload</description></item><item><title>Kubernetes修炼手册阅读笔记</title><link>https://www.haipengv.com/posts/kubernetes%E4%BF%AE%E7%82%BC%E6%89%8B%E5%86%8C%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/kubernetes%E4%BF%AE%E7%82%BC%E6%89%8B%E5%86%8C%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid><description>应用（pod）创建过程: 1 2 3 (http、restful api)api-server &amp;lt;-----(listen) ---kubelet controller -----&amp;gt;cri -----&amp;gt;Deployment controller---&amp;gt;pods kubectl --http post---&amp;gt; .yaml -&amp;gt;control-plane pod &amp;mdash;&amp;gt; 1个或多个容器。同一个pod中多个容器之间的共享的。 svc 的作用： Deployment 扩缩容会使p</description></item><item><title>Linux OOM介绍</title><link>https://www.haipengv.com/posts/linux-oom%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux-oom%E4%BB%8B%E7%BB%8D/</guid><description>OOM(out of memory) 当 Linux 内存使用压力时，Linux 内核会杀掉一些不太重要的进程，通过如下文件判断 现象 OOM 日志一般在 /var/log/syslog、/var/log/messag</description></item><item><title>Linux硬盘扩容和缩容</title><link>https://www.haipengv.com/posts/linux%E7%A1%AC%E7%9B%98%E6%89%A9%E5%AE%B9%E5%92%8C%E7%BC%A9%E5%AE%B9/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E7%A1%AC%E7%9B%98%E6%89%A9%E5%AE%B9%E5%92%8C%E7%BC%A9%E5%AE%B9/</guid><description>一、不带lvm的系统 1. 本地添加一块新硬盘（如200G），确认硬盘设备 列出硬盘： 1 sudo fdisk -l 找到要格式化的设备，如 /dev/sdb。 2. 创建分区（可选） 使用 fdisk：</description></item><item><title>Pve安装winserver2019系统找不到硬盘驱动</title><link>https://www.haipengv.com/posts/pve%E5%AE%89%E8%A3%85winserver2019%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E7%A1%AC%E7%9B%98%E9%A9%B1%E5%8A%A8/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/pve%E5%AE%89%E8%A3%85winserver2019%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E7%A1%AC%E7%9B%98%E9%A9%B1%E5%8A%A8/</guid><description>在PVE中安装虚拟机时，默认的硬盘设备为SCSI，用这个接口安装linux系统一般不会遇到问题，但是安装windows时则会提示找不到硬盘。原因在于window</description></item><item><title>内网隧道ssh搭建方法</title><link>https://www.haipengv.com/posts/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93ssh%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93ssh%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</guid><description>一、准备条件： 内网服务器： 假设IP为：192.168.1.189 ssh 端口： 7777 拥有公网IP的云服务器： 假设IP为：100.100.100.100 服务器需要开通两个端</description></item><item><title>自建本地镜像仓库Registry</title><link>https://www.haipengv.com/posts/%E8%87%AA%E5%BB%BA%E6%9C%AC%E5%9C%B0%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93-registry/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%87%AA%E5%BB%BA%E6%9C%AC%E5%9C%B0%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93-registry/</guid><description>一、起因 使用k3s拉取镜像时总是会遇到拉取失败，所以如果把需要的镜像都存放到本地仓库中，每次使用只需要从本地仓库中获取，这样方便许多。 二、部署过程 选用和k3s集</description></item><item><title>轻量k3s部署-上篇</title><link>https://www.haipengv.com/posts/%E8%BD%BB%E9%87%8Fk3s%E9%83%A8%E7%BD%B2-%E4%B8%8A%E7%AF%87/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%BD%BB%E9%87%8Fk3s%E9%83%A8%E7%BD%B2-%E4%B8%8A%E7%AF%87/</guid><description>一、部署环境： 1 2 3 4 5 6 7 os:centos7.9 k3s-master: 192.168.1.189 k3s-node1: 192.168.1.190 k3s-node2: 192.168.1.188 注意：每台机器主机名要唯一! 二、部署前准备： 1.关闭 firewalld 1 systemctl disable firewalld --now 如果启用，则需要禁用 nm-cloud-setup 并重新启动节点： 1 2 3 systemctl disable nm-cloud-setup.service nm-cloud-setup.timer reboot</description></item><item><title>轻量k3s部署-下篇</title><link>https://www.haipengv.com/posts/%E8%BD%BB%E9%87%8Fk3s%E9%83%A8%E7%BD%B2-%E4%B8%8B%E7%AF%87/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%BD%BB%E9%87%8Fk3s%E9%83%A8%E7%BD%B2-%E4%B8%8B%E7%AF%87/</guid><description>一、开源k8s web页面部署（openlens） 下载官方版本： https://github.com/MuhammedKalkan/OpenLens/releases 我这里使用windows版本，安装即可。 不需要部署到集群中，同时提供多平台，只需要下载对应平台的</description></item><item><title>黑群晖外部访问frp搭建过程</title><link>https://www.haipengv.com/posts/%E9%BB%91%E7%BE%A4%E6%99%96%E5%A4%96%E9%83%A8%E8%AE%BF%E9%97%AEfrp%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E9%BB%91%E7%BE%A4%E6%99%96%E5%A4%96%E9%83%A8%E8%AE%BF%E9%97%AEfrp%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</guid><description>一、前提条件 1.公网IP（公有云IP即可）、没有公网IP的内网nas。 2.frp 客户端、服务端版本为：0.57.0 二、搭建过程 1.使用frp搭建内网穿透 内网nas 使用f</description></item><item><title>Ansible基础教程</title><link>https://www.haipengv.com/posts/ansible%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ansible%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid><description>应用场景 Ansible是一个基于Python开发的配置管理和应用部署工具，现在也在自动化管理领域大放异彩。它融合了众多老牌运维工具的优点，Pubbet和Salt</description></item><item><title>Ansible相关参考资料</title><link>https://www.haipengv.com/posts/ansible%E7%9B%B8%E5%85%B3%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ansible%E7%9B%B8%E5%85%B3%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</guid><description>Ansible模块官方手册 模块 模块筛选 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ ansible-doc -l | grep &amp;#39;copy&amp;#39; vsphere_copy Copy a file to a VMware datastore win_copy Copies files to remote locations on windows hosts bigip_file_copy Manage files in datastores on a BIG-IP ec2_ami_copy copies AMI between AWS regions, return new image id win_robocopy Synchronizes the contents of two</description></item><item><title>Caddy开源web服务器</title><link>https://www.haipengv.com/posts/caddy%E5%BC%80%E6%BA%90web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/caddy%E5%BC%80%E6%BA%90web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>偶然看见一款开源的web服务器搭建软件，基于go 语言的，很好用，记录一下。 详细介绍：链接</description></item><item><title>CentOS7 升级内核</title><link>https://www.haipengv.com/posts/centos7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</guid><description>CentOS 7 升级内核 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 uname -r # 查看内核 yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm yum --disablerepo=&amp;#34;*&amp;#34; --enablerepo=&amp;#34;elrepo-kernel&amp;#34; list available yum --enablerepo=elrepo-kernel install -y kernel-lt awk -F\&amp;#39; &amp;#39;$1==&amp;#34;menuentry &amp;#34; {print i++ &amp;#34; : &amp;#34; $2}&amp;#39; /boot/grub2/grub.cfg yum install -y grub2-pc grub2-set-default 0 vim /etc/default/grub # 修改 GRUB_DEFAULT=0 grub2-mkconfig -o /boot/grub2/grub.cfg reboot # 重启</description></item><item><title>Centos7.3离线安装docker</title><link>https://www.haipengv.com/posts/centos7.3%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7.3%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</guid><description>离线安装 1 2 3 [root@HZ ~]$ uname -a Linux HZ 3.10.0-514.el7.centos.x86_64 #1 SMP Fri Jan 13 15:16:57 CST 2017 x86_64 x86_64 x86_64 GNU/Linux CentOS Linux release 7.3.1611 (Core) 离线包下载 https://download.docker.com/linux/static/stable/x86_64/ 在这里我选在下载的版本是：docker-20.10.9.tgz 上传到服务器上 开始安装 创</description></item><item><title>Centos7使用systemd管理程序</title><link>https://www.haipengv.com/posts/centos7%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F/</guid><description>centos7使用systemd管理程序 systemd的配置文件主要放在/usr/lib/systemd/system目录，也可能在/etc/systemd/s</description></item><item><title>CentOS7常规命令</title><link>https://www.haipengv.com/posts/centos7-%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7-%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/</guid><description>CentOS 7 常规命令 文件类 常规 tar 打包解包 1 2 3 4 tar cvf FileName.tar DirName or FileName # 打包 tar xvf FileName.tar -C 指定位置目录 # 解包 tar gz 打包压缩 1 2 3 4 tar zcvf FileName.tar.gz DirName or FileName # 打包并压缩 tar zxvf FileName.tar.gz -C 指定位置目录 # 解包 zip 压缩</description></item><item><title>Centos7网卡改回eth0显示</title><link>https://www.haipengv.com/posts/centos7%E7%BD%91%E5%8D%A1%E6%94%B9%E5%9B%9Eeth0%E6%98%BE%E7%A4%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos7%E7%BD%91%E5%8D%A1%E6%94%B9%E5%9B%9Eeth0%E6%98%BE%E7%A4%BA/</guid><description>将centos7网卡改回eth0显示 1 grubby --update-kernel=ALL --args=&amp;#34;net.ifnames=0 biosdevname=0&amp;#34; 实验环境&amp;ndash;&amp;gt;net.ifnames=0 物理环境dell&amp;mdash;&amp;gt;biosdevnam</description></item><item><title>CentOS8配置yum源</title><link>https://www.haipengv.com/posts/centos8%E9%85%8D%E7%BD%AEyum%E6%BA%90/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos8%E9%85%8D%E7%BD%AEyum%E6%BA%90/</guid><description>CentOS8配置yum源 将源文件备份 1 cd /etc/yum.repos.d/ &amp;amp;&amp;amp; mkdir backup &amp;amp;&amp;amp; mv *repo backup/ 下载yum源文件 1 curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo 修改yum源里面的地址 1 2 sed -i -e &amp;#34;s|mirrors.cloud.aliyuncs.com|mirrors.aliyun.com|g &amp;#34; /etc/yum.repos.d/CentOS-* sed -i -e &amp;#34;s|releasever|releasever-stream|g&amp;#34; /etc/yum.repos.d/CentOS-* 重新生成缓存 1 yum clean all &amp;amp;&amp;amp; yum makecache</description></item><item><title>Centos搭建内网邮件服务器</title><link>https://www.haipengv.com/posts/centos%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/centos%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>安装环境 centos7.9 postfix2.10.1 dovecot2.2.36 foxmail(windows版) 功能概括 使用foxmail软件登录邮件服务器（192.168.1.89）能够成功发送和接收邮件。 具体实现配置步骤</description></item><item><title>CEPH搭建</title><link>https://www.haipengv.com/posts/ceph%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ceph%E6%90%AD%E5%BB%BA/</guid><description>基于k8s的ceph集群搭建 环境 master-139 mon,osd 既做管理节点又做子节点 node1-140 mon,osd 做子节点 node2-141 mon,osd 做子节点 ceph 版本 13.2.10 mimic (stable) 系统配置 系统配置工作， 三台节点依次执行 1、修改主机名称 1 2 [root@master-139 ~]# vi /etc/hostname</description></item><item><title>CKS初始环境搭建</title><link>https://www.haipengv.com/posts/cks%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/cks%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>准备工作 k8s主机名 IP地址 系统版本号 k8s组件版本 CKS-master 10.4.7.180 ubuntu 20.04 1.24.4 CKS-node1 10.4.7.181 ubuntu 20.04 1.24.4 CKS-node2 10.4.7.182 ubuntu 20.04 1.24.4 配置前准备 1 2 3 4 5 6 7 8 9 10 11 12 13 # 开root用户设置密码 sudo passwd root # 切换roo</description></item><item><title>Clickhouse搭建及使用</title><link>https://www.haipengv.com/posts/clickhouse%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/clickhouse%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid><description>一、什么是ClickHouse？ ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)。官方介绍如下链接。 二、搭建过程 1.使用doc</description></item><item><title>Crontab执行shell脚本报错</title><link>https://www.haipengv.com/posts/crontab%E6%89%A7%E8%A1%8Cshell%E8%84%9A%E6%9C%AC%E6%8A%A5%E9%94%99/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/crontab%E6%89%A7%E8%A1%8Cshell%E8%84%9A%E6%9C%AC%E6%8A%A5%E9%94%99/</guid><description>shell执行脚本报错如下(环境centos7) 1 [: ==: unexpected operator 脚本如下： 1 2 3 4 5 #!/bin/sh if [ $1 == &amp;#34;hello&amp;#34; ]; then echo &amp;#34;Well done!&amp;#34; fi 这是因为 shell 脚本开头使用 #!/bin/sh，而不是 #!/bi</description></item><item><title>Crontab踩坑记</title><link>https://www.haipengv.com/posts/crontab%E8%B8%A9%E5%9D%91%E8%AE%B0/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/crontab%E8%B8%A9%E5%9D%91%E8%AE%B0/</guid><description>Linux Crontab定时执行脚本出错，但手动执行脚本正常原因及解决方案 手动执行脚本可以执行成功，但用定时任务后却执行不成功。查看日志tail -f /var/log/cron 显示执行成功了。 1 2023-07-31T16:06:01.624003+08:00</description></item><item><title>Django</title><link>https://www.haipengv.com/posts/django/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/django/</guid><description>安装及查看版本 1 2 3 4 5 6 pip3 install Django==4.0.6 # 进入python python import django print(django.get_version()) windows安装路径 1 C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Lib\site-packages\django 创建第一个django 项目 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 新建一个文件夹 E:\code2022\django\demo</description></item><item><title>Dmesg时间显示问题</title><link>https://www.haipengv.com/posts/dmesg%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/dmesg%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</guid><description>dmesg时间显示问题 默认显示时间戳 1 2 3 4 5 6 7 # dmesg [24241362.110367] rmlog.sh (14746): drop_caches: 1 [24241362.120529] rmlog.sh (14746): drop_caches: 2 [24241362.218306] rmlog.sh (14746): drop_caches: 3 [24846165.362560] rmlog.sh (7364): drop_caches: 1 [24846165.371097] rmlog.sh (7364): drop_caches: 2 [24846165.463682] rmlog.sh (7364): drop_caches: 3 添加 -T参数，显示人类可以读懂的时间戳。 1 2 3</description></item><item><title>Docker冷门技巧</title><link>https://www.haipengv.com/posts/docker%E5%86%B7%E9%97%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%86%B7%E9%97%A8%E6%8A%80%E5%B7%A7/</guid><description>查看docker镜像的dockerfile 将&amp;lt;IMAGE ID&amp;gt;替换为待查看Dockerfile的镜像ID。 1 docker history &amp;lt;IMAGE ID&amp;gt; --format &amp;#34;{{.CreatedBy}}&amp;#34; --no-trunc |tac | awk &amp;#39;{if($3~/nop/){for(i=1;i&amp;lt;=3;i++){$i=&amp;#34;&amp;#34;};print substr($0,4)}else{print &amp;#34;RUN&amp;#34;,$0}}&amp;#39; 对比 1 2 3 4 5</description></item><item><title>Docker创建专有网卡</title><link>https://www.haipengv.com/posts/docker%E5%88%9B%E5%BB%BA%E4%B8%93%E6%9C%89%E7%BD%91%E5%8D%A1/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%88%9B%E5%BB%BA%E4%B8%93%E6%9C%89%E7%BD%91%E5%8D%A1/</guid><description>docker创建专有网卡 需求： tomcat容器需要通过jdbc模块连接数据库mysql，配置文件如果指定IP地址，mysql容器一旦损坏，IP地址就会更改，需要</description></item><item><title>Docker基础</title><link>https://www.haipengv.com/posts/docker%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%9F%BA%E7%A1%80/</guid><description>安装及命令 Docker命令 常用 1 2 3 4 5 6 7 8 9 10 11 docker version docker info docker pull docker login docker logout docker images docker ps -a docker start|stop|restart docker rm xxxx docker rmi xxxx docker exec -it `name OR id` /bin/bash 批量停止删除容器和镜像 停止所有容器 1 docker stop $(docker ps -aq) 删</description></item><item><title>Docker安装jupyter</title><link>https://www.haipengv.com/posts/docker%E5%AE%89%E8%A3%85jupyter/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E5%AE%89%E8%A3%85jupyter/</guid><description>安装jupyter 1、登录dockerhub查看需要的Jupyter - Docker Official Images。 2、下载jupyter镜像（以6.4.12为例） docker pull jupyter/base-notebook:notebook-6.4.12 3、创建配置目录 mkdir</description></item><item><title>Docker配置tab补全命令</title><link>https://www.haipengv.com/posts/docker%E9%85%8D%E7%BD%AEtab%E8%A1%A5%E5%85%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E9%85%8D%E7%BD%AEtab%E8%A1%A5%E5%85%A8%E5%91%BD%E4%BB%A4/</guid><description>docker使用tab自动补全命令 On RHEL-based systems dnf install bash-completion -y yum install bash-completion -y On Debian-based systems 1 apt-get install bash-completion -y 下载命令补全文件 1 curl https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker -o /etc/bash_completion.d/docker.sh 如果下载失败最后附上文件内容。 重新登录终端 测试命令补全 1 2 3 docker</description></item><item><title>Docker镜像加速</title><link>https://www.haipengv.com/posts/docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</guid><description>docker镜像加速 创建/etc/docker/daemon.json文件 1 2 3 4 5 6 7 8 9 10 11 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; { &amp;#34;registry-mirrors&amp;#34;: [ &amp;#34;https://docker.1ms.run&amp;#34;, &amp;#34;https://docker.mirrors.ustc.edu.cn&amp;#34; ] } EOF sudo systemctl daemon-reload sudo systemctl restart docker docker hub 国内镜像加速列</description></item><item><title>Flask入门</title><link>https://www.haipengv.com/posts/flask%E5%85%A5%E9%97%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/flask%E5%85%A5%E9%97%A8/</guid><description>数据可视化 关于Flask Flask作为web框架，它的作用主要是开发web应用程序。 Flask基础的操作 浏览器打印hello world! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import</description></item><item><title>GHCR镜像加速方式</title><link>https://www.haipengv.com/posts/ghcr%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E6%96%B9%E5%BC%8F/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ghcr%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E6%96%B9%E5%BC%8F/</guid><description>直接拉取镜像速度很慢，网上看到一个加速方法很好用，特此记录一下。 1 2 docker pull ghcr.io/home-assistant/home-assistant:stable # 这里的ghcr.io是github的docker镜像地址 加速方法：将ghcr.io替</description></item><item><title>Git入门</title><link>https://www.haipengv.com/posts/git%E5%85%A5%E9%97%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/git%E5%85%A5%E9%97%A8/</guid><description>git入门 介绍 Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 windows中安装 各操作系统版本下载 安装后在开始菜单里找到&amp;quot;G</description></item><item><title>Greenplum Db7容器方式安装</title><link>https://www.haipengv.com/posts/greenplum-db7%E5%AE%B9%E5%99%A8%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/greenplum-db7%E5%AE%B9%E5%99%A8%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85/</guid><description>一、安装环境 提前安装任意版本docker 宿主机系统环境：centos7.7 二、docker安装 安装过程 三、安装脚本 build.sh Dockerfile entrypoint.sh install.sh test.sh build.sh脚本内容： 1 2 3 4 5</description></item><item><title>GreenplumDb7单节点安装说明</title><link>https://www.haipengv.com/posts/greenplum-db7%E5%8D%95%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/greenplum-db7%E5%8D%95%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/</guid><description>一、安装环境 系统：Rocky8.8 数据库版本：greenplum-db7.0.0-beta5 注意：greenplum数据库只能用普通用户运行，不可用root管理</description></item><item><title>Greenplumdb7数据入库速度优化</title><link>https://www.haipengv.com/posts/greenplumdb7%E6%95%B0%E6%8D%AE%E5%85%A5%E5%BA%93%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/greenplumdb7%E6%95%B0%E6%8D%AE%E5%85%A5%E5%BA%93%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</guid><description>GP调整的参数如下： 1 2 3 4 5 6 7 8 9 10 11 12 (1)全局死锁检测开关 在Greenplum 6中其默认关闭，需要打开它才可以支持并发更新/删除操作； gpconfig -c gp_enable_global_deadlock_detector -v on (2) 禁用G</description></item><item><title>Harbor使用自签名证书实现https登录</title><link>https://www.haipengv.com/posts/harbor%E4%BD%BF%E7%94%A8%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E7%99%BB%E5%BD%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/harbor%E4%BD%BF%E7%94%A8%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E7%99%BB%E5%BD%95/</guid><description>前言 上次安装了Harbor，并没有开启https，不太安全，这次记录下自签名证书来实现https登录。 自签名证书创建过程 创建证书目录 1 2 3 4 mkdir /root/ca -p cd /root/ca #以下命令</description></item><item><title>Harbor安装与简单使用</title><link>https://www.haipengv.com/posts/harbor%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/harbor%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid><description>前言 Harbor 是一个开源的容器镜像仓库，它提供用户权限管理、镜像复制等功能，提高使用的registry的效率。确保镜像被扫描并且没有漏洞，并将镜像标记为可信。 harbo</description></item><item><title>Hexo文章发布和删除(已废弃)</title><link>https://www.haipengv.com/posts/hexo%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%92%8C%E5%88%A0%E9%99%A4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/hexo%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%92%8C%E5%88%A0%E9%99%A4/</guid><description>创建文章 进入博客目录，在 /source/_posts 文件夹下直接建立一个.md文件 hexo new “这里填入文章的标题” .md文件注意使用带有makedown语法的编辑器打开，对文章进行编辑，你可以</description></item><item><title>Http和Https各种方法测试</title><link>https://www.haipengv.com/posts/http%E5%92%8Chttps%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E6%B5%8B%E8%AF%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/http%E5%92%8Chttps%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E6%B5%8B%E8%AF%95/</guid><description>测试网站： 1 http://httpbin.org/ http所有方法 get 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import requests def get_html_text(url): headers = { &amp;#39;user-agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&amp;#39; } r = requests.get(url, headers=headers) if r.status_code == 200: html = r.text print(html) else: print(&amp;#34;访问失败&amp;</description></item><item><title>Iptables常用总结</title><link>https://www.haipengv.com/posts/iptables%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/iptables%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</guid><description>iptables常用总结 安装 查询当前防火墙状态 1 2 3 4 systemctl status iptables # 检查 iptables 是否安装 systemctl status firewalld # 检查 firewall 是否安装 停止并禁用firewalld 1 2 3 4 systemctl stop firewalld # 停止 firewalld 服务 systemctl disable firewalld #</description></item><item><title>Java安装与使用</title><link>https://www.haipengv.com/posts/java%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/java%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>快速开始 系统环境:centos7 安装之前先查看一下有无系统自带jdk 1 2 3 rpm -qa |grep java rpm -qa |grep jdk rpm -qa |grep gcj 如果有就使用批量卸载命令 1 rpm -qa | grep java | xargs rpm -e --nodeps 使用yum安装1</description></item><item><title>Java知识点理解</title><link>https://www.haipengv.com/posts/java%E7%9F%A5%E8%AF%86%E7%82%B9%E7%90%86%E8%A7%A3/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/java%E7%9F%A5%E8%AF%86%E7%82%B9%E7%90%86%E8%A7%A3/</guid><description>如何区分对象是否有返回值？ 1.有返回值 需要指定返回值类型，方法执行完毕后用return 将结果返回给调用者。 1 2 3 4 # 类型double public double area(){ return height * weight } 2.无返回值</description></item><item><title>JDK国内镜像下载免登录</title><link>https://www.haipengv.com/posts/jdk%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E5%85%8D%E7%99%BB%E5%BD%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/jdk%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E5%85%8D%E7%99%BB%E5%BD%95/</guid><description>清华镜像 1 https://mirrors.tuna.tsinghua.edu.cn/Adoptium/ 编程宝库 1 http://www.codebaoku.com/jdk/jdk-index.html 这个镜像站，包含Oracle JDK,、OpenJDK、AdoptOpenJDK、阿里的OpenJDK（ Dragonwell）和华为的Op</description></item><item><title>Jupyter更改登录密码</title><link>https://www.haipengv.com/posts/jupyter%E6%9B%B4%E6%94%B9%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/jupyter%E6%9B%B4%E6%94%B9%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/</guid><description>前言 长时间不登陆jupyter竟然忘记了密码，所以记录下jupyter容器中更改密码过程。 更改过程 进入jupyter容器 1 2 3 docker exec -it vk-jupyter bash cd .jupyter/ vi jupyter_notebook_config.json 生成新密码哈希值</description></item><item><title>K8s网络通信</title><link>https://www.haipengv.com/posts/k8s%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/k8s%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</guid><description>基于k8s中cni插件calico网络原理使用总结 1.实验环境 name version ip cni master v1.22.2 ens33:10.4.7.60 calico worker1 v1.22.2 ens33:10.4.7.61 calico worker2 v1.22.2 ens33:10.4.7.62 calico 2.实验整体拓扑 3.部署一个deployment 问题1 pod的ip</description></item><item><title>K8s集群搭建</title><link>https://www.haipengv.com/posts/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid><description>Kubernetes （1.22.2）安装手册（Ubuntu非高可用版） 安装前准备工作 （重要！）安装k8s 1.22.2 版本需要的硬件条件： 所有节点： cpu数量2个及以上 4G 以上内存 不用开虚拟化</description></item><item><title>Linux下混杂模式判断</title><link>https://www.haipengv.com/posts/linux%E4%B8%8B%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%88%A4%E6%96%AD/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E4%B8%8B%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%88%A4%E6%96%AD/</guid><description>简介 混杂模式就是接收所有经过网卡的数据包，包括不是发给本机的包，即不验证MAC地址。普通模式下网卡只接收发给本机的包（包括广播包）传递给上层程序，其它的包一律丢</description></item><item><title>Linux中环境变量</title><link>https://www.haipengv.com/posts/linux%E4%B8%AD%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E4%B8%AD%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid><description>linux中环境变量 针对当前会话（重启失效） 1 2 PATH=$PATH:/home/test/mysql/bin echo $PATH 针对当前用户有效（重启失效） 1 2 3 4 5 6 7 8 vim ~/.bash_profile #更改，原行 PATH=$PATH:$HOME/bin， 改为</description></item><item><title>Linux中的隔离</title><link>https://www.haipengv.com/posts/linux%E4%B8%AD%E7%9A%84%E9%9A%94%E7%A6%BB/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E4%B8%AD%E7%9A%84%E9%9A%94%E7%A6%BB/</guid><description>linux中的隔离技术 隔离的意义在于处于不同命名空间下的进程不能看到对方的信息。命名空间在Liunx内核中，不是一块分配，你可以定制隔离程度，比如只隔离网络，但</description></item><item><title>Linux信息查询命令</title><link>https://www.haipengv.com/posts/linux%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4/</guid><description>Linux 信息查询命令 硬件查询 查看 CPU 信息 1 cat /proc/cpuinfo 查看物理 CPU 数量 1 cat /proc/cpuinfo |grep &amp;#34;physical id&amp;#34;|sort |uniq|wc -l 查看逻辑 CPU 数量 1 cat /proc/cpuinfo |grep &amp;#34;processor&amp;#34;|wc -l 查看每个 CPU 中 core 的数量 (核心数) 1 cat /proc/cpuinfo |grep &amp;#34;cores&amp;#34;|uniq 查看 CPU 的主频 1 cat /proc/cpuinfo |grep MHz|uniq 查看</description></item><item><title>Linux垃圾桶</title><link>https://www.haipengv.com/posts/linux%E5%9E%83%E5%9C%BE%E6%A1%B6/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E5%9E%83%E5%9C%BE%E6%A1%B6/</guid><description>rm垃圾桶 rm命令杀伤力很大，如果误删了系统文件，会很麻烦。所以，给linux系统建立一个垃圾桶，是很有必要的，详情参考Make “rm” Command To Move The Files To “Trash</description></item><item><title>Linux小技巧汇总</title><link>https://www.haipengv.com/posts/linux%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</guid><description>Linux小技巧汇总 1.超时不操作自动退出登录TMOUT 1 2 3 4 5 6 vi /etc/profile 最后一行加上 TMOUT=90 退出当前用户使配置生效 exit 重新登录 查看是否生效 1 2 set | grep -i tmout TMOUT=90 生效了！！！不</description></item><item><title>Linux日志大文件切割</title><link>https://www.haipengv.com/posts/linux%E6%97%A5%E5%BF%97%E5%A4%A7%E6%96%87%E4%BB%B6%E5%88%87%E5%89%B2/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E6%97%A5%E5%BF%97%E5%A4%A7%E6%96%87%E4%BB%B6%E5%88%87%E5%89%B2/</guid><description>1.根据行数切割 如下以一个372M大小的日志文件做切割演示，每一个文件按照50000行做切割，指定文件名为split-line，-d参数以数字的方式显示。 1 2 3</description></item><item><title>Linux查看程序进程启动时间</title><link>https://www.haipengv.com/posts/linux%E6%9F%A5%E7%9C%8B%E7%A8%8B%E5%BA%8F%E8%BF%9B%E7%A8%8B%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E6%9F%A5%E7%9C%8B%E7%A8%8B%E5%BA%8F%E8%BF%9B%E7%A8%8B%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/</guid><description>使用以下命令查看进程启动时间 ps -eo lstart,cmd | grep sip 结果： [root@video_end /var/log]$ ps -eo lstart,cmd | grep sip Mon Jan 29 14:12:46 2024 /etc/jtsec/sipholeWatchDog/sipholeWatchDog Tue Feb 6 21:20:04 2024 /usr/sbin/siphole_end Wed Feb 7 20:39:46 2024 grep --color=auto sip</description></item><item><title>Linux根分区满了处理方法</title><link>https://www.haipengv.com/posts/linux%E6%A0%B9%E5%88%86%E5%8C%BA%E6%BB%A1%E4%BA%86%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/linux%E6%A0%B9%E5%88%86%E5%8C%BA%E6%BB%A1%E4%BA%86%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid><description>linux根分区满了处理方法 使用du命令查找占用空间较多的文件或目录： 1 du -sh /* 如果/目录下有很多子目录，可以使用find命令结合du来查找占用空间较多的目录： 1</description></item><item><title>Mysql主从架构</title><link>https://www.haipengv.com/posts/mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/</guid><description>实验环境 1 2 3 4 5 [root@hdss7-11 ~]# uname -r 3.10.0-1062.el7.x86_64 [root@hdss7-11 ~]# cat /etc/redhat-release CentOS Linux release 7.7.1908 (Core) [root@hdss7-11 ~]# master 10.4.7.11 slave1 10.4.7.12 slave2 10.4.7.21 安装mysql5.7 查询并删除旧的MySQL(没有可以忽略) 1 2 3 4 5 [root@hdss7-11 ~]# rpm -qa |grep mysql php-mysql-5.4.16-48.el7.x86_64 mysql57-community-release-el7-9.noarch [root@hdss7-11 ~]# rpm -e php-mysql-5.4.16-48.el7.x86_64 下</description></item><item><title>Mysql常用命令总结</title><link>https://www.haipengv.com/posts/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid><description>常见命令 连接本地数据库与远程数据库(10.4.xx.xx:3306) 1 2 3 mysql -h localhost -u root -p123 mysql -h 10.4.xx.xx -P 3306 -u root -p 显示数据库列表 1 show databases; 显示库中的数据表 1 show tables; 显示数据表的结构</description></item><item><title>Mysql的user表详解</title><link>https://www.haipengv.com/posts/mysql%E7%9A%84user%E8%A1%A8%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/mysql%E7%9A%84user%E8%A1%A8%E8%AF%A6%E8%A7%A3/</guid><description>mysql中引用了一张表来存储mysql的用户信息 mysql.user 基础字段 Host： 访问数据库客户端机器的IP地址。&amp;rsquo;%&amp;rsquo;:通配符，匹配所有的ip地址</description></item><item><title>Nginx安装与使用</title><link>https://www.haipengv.com/posts/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>nginx 1.16.1 安装使用说明 1.创建目录 mkdir -p /var/temp/nginx 下载： https://nginx.org/en/download.html 解压 tar -zxvf nginx-1.16.1.tar.gz 安装编译依赖包： yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel 2.进入nginx-1.16.1 编译参数 1 2 3 4 5 6 7 8 9 10 11 12 ./configure \ --prefix=/usr/local/nginx</description></item><item><title>Oracle版本号查看</title><link>https://www.haipengv.com/posts/oracle%E7%89%88%E6%9C%AC%E5%8F%B7%E6%9F%A5%E7%9C%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/oracle%E7%89%88%E6%9C%AC%E5%8F%B7%E6%9F%A5%E7%9C%8B/</guid><description>使用sql语句查询： select * from V$VERSION</description></item><item><title>Pam模块限制登录</title><link>https://www.haipengv.com/posts/pam%E6%A8%A1%E5%9D%97%E9%99%90%E5%88%B6%E7%99%BB%E5%BD%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/pam%E6%A8%A1%E5%9D%97%E9%99%90%E5%88%B6%E7%99%BB%E5%BD%95/</guid><description>系统环境 [root@43f873a76b81 ~]# uname -a Linux 43f873a76b81 4.18.0-147.5.1.el8_1.x86_64 #1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux [root@43f873a76b81 ~]# cat /etc/*release* CentOS Linux release 7.9.2009 (Core) Derived from Red Hat Enterprise Linux 7.9 (Source) NAME=&amp;#34;CentOS Linux&amp;#34; VERSION=&amp;#34;7 (Core)&amp;#34; ID=&amp;#34;centos&amp;#34; ID_LIKE=&amp;#34;rhel fedora&amp;#34; VERSION_ID=&amp;#34;7&amp;#34; PRETTY_NAME=&amp;#34;CentOS Linux 7 (Core)&amp;#34; ANSI_COLOR=&amp;#34;0;31&amp;#34; CPE_NAME=&amp;#34;cpe:/o:centos:centos:7&amp;#34; HOME_URL=&amp;#34;https://www.centos.org/&amp;#34; BUG_REPORT_URL=&amp;#34;https://bugs.centos.org/&amp;#34; CENTOS_MANTISBT_PROJECT=&amp;#34;CentOS-7&amp;#34; CENTOS_MANTISBT_PROJECT_VERSION=&amp;#34;7&amp;#34; REDHAT_SUPPORT_PRODUCT=&amp;#34;centos&amp;#34; REDHAT_SUPPORT_PRODUCT_VERSION=&amp;#34;7&amp;#34; CentOS Linux release 7.9.2009 (Core) CentOS Linux release 7.9.2009 (Core) cpe:/o:centos:centos:7 检查是否有ssh服</description></item><item><title>PVE优化</title><link>https://www.haipengv.com/posts/pve%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/pve%E4%BC%98%E5%8C%96/</guid><description>pve优化 1.Proxmox VE(PVE)系统移除《无有效订阅》弹窗提示通知 Proxmox VE(PVE)系统安装完成后，输入账号密码登录系统后会有提示：无有效订阅，本文主要介绍如何去除此弹</description></item><item><title>Python回炉重造 函数</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%87%BD%E6%95%B0/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%87%BD%E6%95%B0/</guid><description>函数基础 函数基本使用 函数定义 定义函数格式如下： 1 2 3 4 def 函数名(): 函数封装的代码 ... 1.def是英文define的缩写 2.函数名称 应该能够表达 函数封装代码的功能</description></item><item><title>Python回炉重造-元组</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%85%83%E7%BB%84/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%85%83%E7%BB%84/</guid><description>元组 元组的定义 tuple（元组）与列表类似，不同之处在于元组的元素不能修改 元组中包含列表项，可以修改元组值（间接修改列表） 1 2 3 a = ([1,2],[3,4]) a[0][0] = 520 print(a) # ([520, 2], [3, 4]) 元组 表示</description></item><item><title>Python回炉重造-列表</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%88%97%E8%A1%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%88%97%E8%A1%A8/</guid><description>列表常用操作 在ipython3中定义一个列表，例如：name_list = [] 输入name_list.按下Tab键，ipython会提示能够使用的方法如下： 1 2 3 name_list.append</description></item><item><title>Python回炉重造-字典</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E5%85%B8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E5%85%B8/</guid><description>字典的定义 dictionary（字典）是 除列表意外python之中 最灵活的数据类型 字典同样可以用来 存储多个数据 通常用于存储 描述一个 物体的相关信息 和列表的区别 列表</description></item><item><title>Python回炉重造-字符串</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>字符串 定义 字符串 就是一串字符，是编程语言中表示文本的数据类型 在 python中可以使用 一堆双引号 &amp;quot;&amp;quot;或者 一对单引号 ''定义一个字符串 虽然可以使</description></item><item><title>Python回炉重造-集合</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9B%86%E5%90%88/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9B%86%E5%90%88/</guid><description>集合 特性： 1.无序性： 一个集合中，每个元素的地位都是相同的，元素之间是无序的 2.互异性： 一个集合中，任何两个元素都是不同的，即元素在集合中只能出现一次 3.确定性</description></item><item><title>Python回炉重造-面向对象编程入门</title><link>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/</guid><description>面向对象编程入门 程序是指令的集合 函数： 把相互独立且经常重复使用的代码放置到函数中，在需要使用这些代码的时候调用函数即可。 在面向对象编程的世界里，程序中的数据和操</description></item><item><title>Python多线程</title><link>https://www.haipengv.com/posts/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid><description>python多线程使用 创建线程，入口函数带参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import threading import time print(&amp;#34;*******主线程开始******</description></item><item><title>Python对象和数据结构基础</title><link>https://www.haipengv.com/posts/python%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/</guid><description>运算 算数运算 运算符 描述 实例 + 加 - 两个对象相加 a + b 输出结果 30 - 减 - 得到负数或是一个数减去另一个数 a - b 输出结果 -10 * 乘 - 两个数相乘或是返回一个被重复若干次的字符串</description></item><item><title>Python封装</title><link>https://www.haipengv.com/posts/python%E5%B0%81%E8%A3%85/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%B0%81%E8%A3%85/</guid><description>封装与反射 片面理解：封装相当于隐藏。 如何将属性隐藏（设置成私有）？ 用双下划线开头方式将属性隐藏起来。 1.__开头的属性只是一种语法意义上的变形，并不会真的限制外</description></item><item><title>Python常用模块</title><link>https://www.haipengv.com/posts/python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</guid><description>日志模块角色 1.Logger:产生日志 2.Filter:几乎不用 3.Handler: 接收Logger传过来的日志，进行日志格式化，可以打印到终端，也可以打印到文件 4.Format</description></item><item><title>Python数据结构总结</title><link>https://www.haipengv.com/posts/python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93/</guid><description>可变和不可变类型 不可变类型，内存中的数据不允许被修改： 数字类型 int, bool, float, complex, long(2.x) 字符串 str 元组 tuple 可变类型，内存中的数据可以被修改： 列表 list 字典 dict 集合set 哈希 (hash) Python 中内置有一</description></item><item><title>Python文件处理</title><link>https://www.haipengv.com/posts/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</guid><description>文件处理流程 1.打开文件，得到文件句柄并赋值给一个变量 2.通过句柄对文件进行操作 3.关闭文件 两种文件操作方式 直接操作（需要手动关闭文件） 1 2 3 4 5 6 7 8 #1. 打开文</description></item><item><title>Python方法和函数</title><link>https://www.haipengv.com/posts/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/</guid><description>方法 方法的格式 1 object.method(arg1,arg2,etc...) 让我们快速看一下列表的各种方法的例子。 1 2 # Create a simple list lst = [1,2,3,4,5] 通过iPython和Jupyter笔记本，我们可以使用tab键快速查看所有可能的方法</description></item><item><title>Python自动化办公</title><link>https://www.haipengv.com/posts/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/</guid><description>读写文件（上）&amp;ndash;文件与文件路径 主要是os.path()第三方库 1.Windows系统中的\和Linux系统中的/ 以下代码在Terminal中执行更直</description></item><item><title>Python自动化办公之excel</title><link>https://www.haipengv.com/posts/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC%E4%B9%8Bexcel/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC%E4%B9%8Bexcel/</guid><description>安装第三方模块openpyxl 1 pip3 install openpyxl 关于openpyxl模块的参考文档. 使用python操作excel表格，代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # 引</description></item><item><title>Python语法</title><link>https://www.haipengv.com/posts/python%E8%AF%AD%E6%B3%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/python%E8%AF%AD%E6%B3%95/</guid><description>python 语法 if、elif、else 语句 嘿，如果发生这种情况，请执行一些操作。否则，如果发生其他情况，请执行其他操作。否则，如果上述情况均未发生，请执行此操作。 if case1: perform</description></item><item><title>Redhat6.3yum源失效解决</title><link>https://www.haipengv.com/posts/redhat6.3yum%E6%BA%90%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/redhat6.3yum%E6%BA%90%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3/</guid><description>备份原repo 1 mv /etc/yum.repos.d/rhel-source.repo /etc/yum.repos.d/rhel-source.repo-old 新建repo文件 vi /etc/yum.repos.d/rhel-source.repo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 # CentOS-Base.repo # # The mirror system</description></item><item><title>Rsyslog日志服务器搭建</title><link>https://www.haipengv.com/posts/rsyslog%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/rsyslog%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</guid><description>rsyslog日志服务器搭建 rsyslog客户端：负责发送日志到远程日志服务器，支持udp,tcp,relp协议。 rsyslog服务端：负责接收客户端发来的日志</description></item><item><title>SeaTunnel及SeaTunnelWeb部署指南</title><link>https://www.haipengv.com/posts/seatunnel%E5%8F%8Aseatunnel-web%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/seatunnel%E5%8F%8Aseatunnel-web%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</guid><description>网上看到的适合新手的部署教程，特此记录下。 教程 遇到的问题 1.启动web进程后，浏览器访问404。 1.1 一定要在bin的上级目录执行启动脚本。 比如：web项目的启动脚</description></item><item><title>Shell中的EOF用法</title><link>https://www.haipengv.com/posts/shell%E4%B8%AD%E7%9A%84eof%E7%94%A8%E6%B3%95/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E4%B8%AD%E7%9A%84eof%E7%94%A8%E6%B3%95/</guid><description>shell中的EOF用法 EOF Shell中通常将EOF与&amp;laquo;结合使用，表示后续的输入作为子命令或子shell的输入,直到遇到EOF为止，再返回到主shel</description></item><item><title>Shell小练习</title><link>https://www.haipengv.com/posts/shell%E5%B0%8F%E7%BB%83%E4%B9%A0/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E5%B0%8F%E7%BB%83%E4%B9%A0/</guid><description>shell小练习 job1:检索本机的IP、NETMASK、MAC地址、广播地址 1 2 3 4 IP: 172.20.10.3 NetMask: 255.255.255.240 Broadcast: 172.20.10.15 MAC Address: 00:0c:29:8d:49:ea job2:将系统中所有普通用户的用户名、密码和默认she</description></item><item><title>Shell小练习答案</title><link>https://www.haipengv.com/posts/shell%E5%B0%8F%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E5%B0%8F%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88/</guid><description>shell小练习答案 job1:检索本机的IP、NETMASK、MAC地址、广播地址 1 2 3 4 IP: 172.20.10.3 NetMask: 255.255.255.240 Broadcast: 172.20.10.15 MAC Address: 00:0c:29:8d:49:ea 1 2 3 4 ifconfig eth0 | grep inet | tr -s &amp;#34; &amp;#34; | cut -d &amp;#34; &amp;#34; -f 3 | xargs echo &amp;#34;IP: &amp;#34;</description></item><item><title>Shell脚本常用参考</title><link>https://www.haipengv.com/posts/shell%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/</guid><description>Shell 脚本常用参考 echo cat read sed awk cat 1 2 3 4 5 6 cat &amp;gt; /path/${TEMP}/account.conf&amp;lt;&amp;lt;EOF export ${API_ID_HEADER}=&amp;#34;${API_ID_INPUT}&amp;#34; export ${API_KEY_HEADER}=&amp;#34;${API_KEY_INPUT}&amp;#34; EOF # 单引号转译内容 # cat &amp;gt; /path/${TEMP}/account.conf&amp;lt;&amp;lt;&amp;#39;EOF&amp;#39; sed 1 2 3 4 5 6 7 8 sed -i \ -e &amp;#39;/Port 22/a\Port 22222&amp;#39; \ -e &amp;#39;/^PasswordAuthentication.*yes$/s/yes/no/g&amp;#39; \ -e &amp;#39;/^PermitRootLogin.*no$/s/no/yes/g&amp;#39; \ -e &amp;#39;/^#PermitRoot.*yes$/s/#PermitRoot/PermitRoot/g&amp;#39; \ -e &amp;#39;/#ClientAliveInterval/s/#ClientAliveInterval 0/ClientAliveInterval 30/g&amp;#39; \ -e &amp;#39;/#MaxSessions/s/#MaxSessions 10/MaxSessions 100/g&amp;#39; \ /etc/ssh/sshd_config awk 从文件</description></item><item><title>Shell脚本应用（长期更新）</title><link>https://www.haipengv.com/posts/shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</guid><description>批量免密登录 no_pass.sh:只需要运行脚本，输入目标端服务器用户名和密码即可。ip根据目标端网段修改。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/bin/bash read -p &amp;#39;input user: &amp;#39; USER echo &amp;#34;$USER&amp;#34;</description></item><item><title>Sqlite3使用</title><link>https://www.haipengv.com/posts/sqlite3%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/sqlite3%E4%BD%BF%E7%94%A8/</guid><description>sqlite3使用 连接数据库 1 2 3 4 5 6 7 8 9 10 import sqlite3 conn = sqlite3.connect(&amp;#34;test.db&amp;#34;) # 打开或创建数据库文件 print(&amp;#34;Opened database successfully&amp;#34;) c = conn.cursor() # 获取游标 sql = &amp;#34;&amp;#34; c.execute(sql) # 执行sql语句 conn.commit() # 提交数据库操作 conn.close() # 关闭数据库连</description></item><item><title>SSH相关说明</title><link>https://www.haipengv.com/posts/ssh%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ssh%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/</guid><description>SSH服务 SSH服务协议说明 SSH 是 Secure Shell Protocol 的简写，由 IETF 网络工作小组（Network Working Group )制定；在进行数据传输之前，SSH先对联机数据包通过加密技术进行加密处理，加密</description></item><item><title>Ubuntu20.04安装docker</title><link>https://www.haipengv.com/posts/ubuntu20.04%E5%AE%89%E8%A3%85docker/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ubuntu20.04%E5%AE%89%E8%A3%85docker/</guid><description>ubuntu20.04安装docker 操作系统要求 Docker只支持64位版本的 Ubuntu 18.04 LTS、20.04 LTS、21.04、21.10 操作系统，更旧的 Ubuntu 操作系统如</description></item><item><title>Ubuntu使用上篇</title><link>https://www.haipengv.com/posts/ubuntu%E4%BD%BF%E7%94%A8%E4%B8%8A%E7%AF%87/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ubuntu%E4%BD%BF%E7%94%A8%E4%B8%8A%E7%AF%87/</guid><description>一、Ubuntu20.10 server LTS安装 LTS（长期支持版） 支持以下处理器 1 2 3 4 amd64 (Intel/AMD 64-bit) arm64 (64-bit ARM) ppc64el (POWER8 and POWER9) s390x (IBM Z and LinuxONE) 最低配置 1 2 3 CPU: 1g或者更高 RAM: 1g或者更高 Disk: 不小于</description></item><item><title>Ubuntu使用下篇</title><link>https://www.haipengv.com/posts/ubuntu%E4%BD%BF%E7%94%A8%E4%B8%8B%E7%AF%87/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ubuntu%E4%BD%BF%E7%94%A8%E4%B8%8B%E7%AF%87/</guid><description>一、证书 Ubuntu server 20.04.3 给apache2创建自签名证书 介绍 TLS（传输层安全）及其前身SSL是用于将正常流量包装在受保护的加密包装器中的协议。使用这项技术，服务器可以安全</description></item><item><title>Urllib库的基本使用</title><link>https://www.haipengv.com/posts/urllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/urllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid><description>网页各种测试 1 http://httpbin.org 获取一个get请求 1 2 3 import urllib.request res = urllib.request.urlopen(&amp;#34;http://www.baidu.com&amp;#34;) print(res.read().decode(&amp;#39;utf-8&amp;#39;)) # 对获取到的网页源码进行utf-8解码 获取一个post请求.（模拟用户登录） 1 2 3 4 import urllib.parse # 引入解析库 data = bytes(urllib.parse.urlencode({&amp;#34;hello&amp;#34;:&amp;#34;world&amp;#34;}),encoding=&amp;#39;utf-8&amp;#39;) res1</description></item><item><title>Vsftpd相关配置</title><link>https://www.haipengv.com/posts/vsftpd%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/vsftpd%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</guid><description>ftp基本配置 系统：centos7 安装vsftpd 、ftp客户端 1 2 3 4 5 6 yum install vsftpd -y yum install ftp -y [root@localhost vsftpd]# rpm -qa | grep ftp vsftpd-sysvinit-3.0.2-29.el7_9.x86_64 vsftpd-3.0.2-29.el7_9.x86_64 ftp-0.17-67.el7.x86_64 防火墙设置 1 2 3 4 5 6 7 8 9 10 11 12 13 firewall-cmd --list-services //查看</description></item><item><title>Vsftp不同用户拥有不同权限</title><link>https://www.haipengv.com/posts/vsftp%E4%B8%8D%E5%90%8C%E7%94%A8%E6%88%B7%E6%8B%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/vsftp%E4%B8%8D%E5%90%8C%E7%94%A8%E6%88%B7%E6%8B%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90/</guid><description>VSFTP不同用户拥有不同权限 安装篇 操作系统环境 1 centos 7.9 mini 安装vsftp服务 1 2 3 4 5 6 yum install –y vsftpd ftp –安装 systemctl start vsftpd.service –启动 systemctl enable vsftpd.service –开机自启 vi /etc/selinux/conf SELINUX=enforce 改成 SELINUX=disabled getenforce - 查看是否为D</description></item><item><title>Windows下mysql和python3安装过程</title><link>https://www.haipengv.com/posts/windows%E4%B8%8Bmysql%E5%92%8Cpython3%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/windows%E4%B8%8Bmysql%E5%92%8Cpython3%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</guid><description>mysql8.0安装过程 过程 开启远程访问 1 2 3 4 5 6 7 8 9 use mysql; update user set host = &amp;#39;%&amp;#39; where host = &amp;#39;localhost&amp;#39; and user = &amp;#39;root&amp;#39;; flush privileges; # 修改密码 ALTER USER &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED WITH mysql_native_password BY &amp;#39;root&amp;#39;; flush privileges; #设置允许远程访问 GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39;WITH GRANT OPTION;</description></item><item><title>Windows平台安装oracle</title><link>https://www.haipengv.com/posts/windows%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85oracle/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/windows%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85oracle/</guid><description>安装版本 Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production 下载链接 安装向导参考 创建用户（fidas）及密码(sa),并授予用户增、删、改权限。 CREATE USER fidas IDENTIFIED BY sa; GRANT create session TO fidas; ALTER USER fidas DEFAULT TABLESPACE users QUOTA UNLIMITED ON users; GRANT SELECT ANY</description></item><item><title>Windows结束进程</title><link>https://www.haipengv.com/posts/windows%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/windows%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B/</guid><description>所有的端口使用情况 1 netstat -ano 查看占用端口应用 1 netstat -ano | findstr &amp;#34;端口号&amp;#34; 通过id查找对应的进程名称 1 2 tasklist | findstr &amp;#34;进程id号&amp;#34; #列出进程名称 taskkill /f</description></item><item><title>WSL2中Portainer容器可视化管理工具的安装与使用</title><link>https://www.haipengv.com/posts/wsl2%E4%B8%ADportainer%E5%AE%B9%E5%99%A8%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/wsl2%E4%B8%ADportainer%E5%AE%B9%E5%99%A8%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>前言 Portainer是一款轻量级的Docker图形化管理的方案，相比k8s和k3s，只需要创建一个容器！ 功能点： 多平台支持：Linux/Windows/OSX</description></item><item><title>WSl2搭建过程</title><link>https://www.haipengv.com/posts/wsl2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/wsl2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</guid><description>什么是 WSL WSL 的全称叫做：Windows Subsystem for Linux，即「适用于 Linux 的 Windows 子系统」。WSL 的诞生让 Windows 用户（开发人员）按原样运行 GNU/Linux 环境 —— 包括大多数命令行工具、实用工具</description></item><item><title>不同架构平台下Docker官方镜像包查找说明</title><link>https://www.haipengv.com/posts/%E4%B8%8D%E5%90%8C%E6%9E%B6%E6%9E%84%E5%B9%B3%E5%8F%B0%E4%B8%8Bdocker%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E5%8C%85%E6%9F%A5%E6%89%BE%E8%AF%B4%E6%98%8E/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%B8%8D%E5%90%8C%E6%9E%B6%E6%9E%84%E5%B9%B3%E5%8F%B0%E4%B8%8Bdocker%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E5%8C%85%E6%9F%A5%E6%89%BE%E8%AF%B4%E6%98%8E/</guid><description>问题出现的原因 我的服务器的平台架构是IBM-Z无法拉取默认的x86平台的镜像，所以需要到docker-hub上找到IBM-Z对应的镜像才能使用。 首先进入Dock</description></item><item><title>个人博客建站全过程（已过时）</title><link>https://www.haipengv.com/posts/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99%E5%85%A8%E8%BF%87%E7%A8%8B%E5%B7%B2%E8%BF%87%E6%97%B6/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99%E5%85%A8%E8%BF%87%E7%A8%8B%E5%B7%B2%E8%BF%87%E6%97%B6/</guid><description>技术选型 使用Hexo+keep+Github Actions+jsdelivr这一套技术实现blog搭建及自动化部署 开始搭建 安装node 下载地址：node下载 .安</description></item><item><title>个人域名注册购买教程</title><link>https://www.haipengv.com/posts/%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%B4%AD%E4%B9%B0%E6%95%99%E7%A8%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%B4%AD%E4%B9%B0%E6%95%99%E7%A8%8B/</guid><description>简介 namesilo是国外的域名服务商，首次购买和续费价格都很实惠，不用翻墙也可以打开，此外还赠送隐私保护，支付方式支持支付宝、Paypal、Visa 等多种付款</description></item><item><title>二级域名创建与部署</title><link>https://www.haipengv.com/posts/%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/</guid><description>二级域名创建与部署 首先你需要拥有一个顶级域名 我是在namesoli购买的域名。可以查看该顶级域名能够创建二级域名最大数量。 登录账户，点击account Domai</description></item><item><title>使用docker搭建openvpn</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAopenvpn/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAopenvpn/</guid><description>需求 通过vpn直接访问内网容器ip可以直接登录，不再需要先登入公网IP再跳转到内网容器内部。 访问示意图 互联网（openvpn client）--&amp;gt;（公网ip</description></item><item><title>使用logrotate进行日志切割</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/</guid><description>简介 logrotate 程序是一个日志文件管理工具。用于分割日志文件，删除旧的日志文件，并创建新的日志文件，起到“转储”作用。可以节省磁盘空间。下面就对 logrotate 日志轮转操作做一梳理记录</description></item><item><title>使用python实现unix时间戳转换</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0unix%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0unix%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/</guid><description>将时间戳转换为指定格式 1 2 3 4 import time print(time.time()) # 生成当前日期的时间戳 1662602249.6098158 print(time.actime(1662602249.6098158)) #将时间戳转换成指定格式显示 其他转换参考 https://www.cnblogs.com/pal-duan/p/10568829.html</description></item><item><title>使用sed批量修改网址</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8sed%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E7%BD%91%E5%9D%80/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8sed%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E7%BD%91%E5%9D%80/</guid><description>将时间戳转换为指定格式 文本如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article1.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article2.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article3.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article4.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article5.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article6.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article7.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article8.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article9.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article10.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article11.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article12.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article13.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/animal.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/blue.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/cat.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/coffee.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/finch.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/lighthouse.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/nature.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/soda-water.jpg https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/swan.jpg 将https://fastly.jsdel</description></item><item><title>使用浏览器登录linux服务器</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BB%E5%BD%95linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BB%E5%BD%95linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>使用浏览器登录linux服务器 项目地址 https://github.com/huashengdun/webssh/releases/tag/v1.6.1 在这里我选在下载的版本是：v1.6.1 上传到服务器上 开始安装 创建解压目录 1 mkdir -p /tmpdisk/webssh 解压离线webssh安装包 1 2 cd /tmpdisk/webssh unzip webssh-1.6.1.zip .</description></item><item><title>使用脚本获取本机IP并复制到registry配置文件中</title><link>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAip%E5%B9%B6%E5%A4%8D%E5%88%B6%E5%88%B0registry%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAip%E5%B9%B6%E5%A4%8D%E5%88%B6%E5%88%B0registry%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD/</guid><description>前言 由于wsl2每次启动IP都会改变，查阅微软官方文档后发现wsl2无法设置静态IP。然而dockers私有仓库registry中IP配置是固定的。所以需要自定</description></item><item><title>前端框架</title><link>https://www.haipengv.com/posts/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</guid><description>nvm管理node.js 环境： centos 7.9 nvm 安装 新创建一个名为myapp的桥接网卡 1 2 3 4 cd /root wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz mkdir -p /root/.nvm tar -zxvf nvm-0.39.3.tar.gz -C /root/.nvm 配置环境 1 vim ~/.bashrc 在~/.bashrc的末尾，添加如下语句</description></item><item><title>功能强大的硬件信息获取工具-Inxi</title><link>https://www.haipengv.com/posts/%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7-inxi/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7-inxi/</guid><description>安装inxi $ sudo apt-get install inxi [On Debian/Ubuntu/Linux Mint] $ sudo yum install inxi [On CentOs/RHEL/Fedora] $ sudo dnf install inxi [On Fedora 22+] 查看 Inxi 所有依赖和推荐的应用，以及各种目录，并显示需要安装哪些包来支持给定的功能。 $ inxi --recommends 输出如下 1 2 3 4</description></item><item><title>压缩与解压</title><link>https://www.haipengv.com/posts/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</guid><description>全文件压缩与解压 压缩 1 tar -zcvf 文件名.tgz 源文件 解压 先创建解压目录 1 mkdir -p /root/a 再将文件指定压缩到该目录内 1 tar -zxvf 文件名.tgz -C /root/a 排除日志文件的压缩与解压 压缩 注意--e</description></item><item><title>基于TCP的简单套接字通信</title><link>https://www.haipengv.com/posts/%E5%9F%BA%E4%BA%8Etcp%E7%9A%84%E7%AE%80%E5%8D%95%E5%A5%97%E6%8E%A5%E5%AD%97%E9%80%9A%E4%BF%A1/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%9F%BA%E4%BA%8Etcp%E7%9A%84%E7%AE%80%E5%8D%95%E5%A5%97%E6%8E%A5%E5%AD%97%E9%80%9A%E4%BF%A1/</guid><description>简单套接字通信 服务端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import socket #买手机 phone = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #tcp协议 #绑定手机 # phone.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1) phone.bind((&amp;#39;127.0.0.1&amp;#39;, 9000)) #0-65535 #开机 phone.listen(5) #等待电话连接 print(&amp;#39;staring....&amp;#39;) conn, client_addr=phone.accept() #(conn,client_addr) .acce</description></item><item><title>如何筛选指定时间段内的日志</title><link>https://www.haipengv.com/posts/%E5%A6%82%E4%BD%95%E7%AD%9B%E9%80%89%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%AE%B5%E5%86%85%E7%9A%84%E6%97%A5%E5%BF%97/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%A6%82%E4%BD%95%E7%AD%9B%E9%80%89%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%AE%B5%E5%86%85%E7%9A%84%E6%97%A5%E5%BF%97/</guid><description>grep/sed/awk命令查看指定时间段的日志 例如查询2020-02-19 14:10到2020-02-19 14:15区间的日志 1 grep &amp;#34;2020-02-19 14:1[0-5]&amp;#34; dubbo-elastic-job.log</description></item><item><title>安装任意版本Python</title><link>https://www.haipengv.com/posts/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACpython/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACpython/</guid><description>基于centos7/8安装任意版本python 编译安装python 安装python依赖环境 1 2 sudo yum -y install epel-release sudo yum -y update 重启(可选) 1 reboot 安装编译环境 1 2 sudo yum -y groupinstall &amp;#34;Development Tools&amp;#34; sudo yum</description></item><item><title>局域网中其他主机访问本机wsl2中的服务</title><link>https://www.haipengv.com/posts/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%AC%E6%9C%BAwsl2%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%AC%E6%9C%BAwsl2%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1/</guid><description>前言 由于我使用的ubuntu20.04中docker所启动的服务除了本机能访问，局域网中其他设备都无法访问。容器端口和windows本机端口不相通，需要wind</description></item><item><title>常见问题总结</title><link>https://www.haipengv.com/posts/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>描述Linux下软链接和硬链接的区别 实践：当前所在路径/root 准备工作 echo 123 &amp;gt; /tmpdisk/a.txt echo 123 &amp;gt; /tmpdisk/b.txt mkdir -p /tmpdisk/ylink mkdir -p /tmpdisk/rlink 分别创建软链接和硬链接 ln -s /tmpdisk/a.txt ra.txt ln /tmpdisk/b.txt yb.txt ln /tmpdisk/ylink ylink #创建失败，硬链接</description></item><item><title>序列化与反序列化</title><link>https://www.haipengv.com/posts/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>什么是序列化？ 我们把对象（变量）从内存中变成可存储或传输的过程称之为序列化。在Python中叫pickling，在其他语言中也被称之为serialization</description></item><item><title>异常</title><link>https://www.haipengv.com/posts/%E5%BC%82%E5%B8%B8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%BC%82%E5%B8%B8/</guid><description>异常 什么是异常？ 异常是错误发生的信号，一旦程序出错，就会产生一个异常，应用程序未处理该异常，异常便会抛出，程序随之终止。 常见异常类型 语法错误应该在程序运行之前就</description></item><item><title>搭建rss订阅器</title><link>https://www.haipengv.com/posts/%E6%90%AD%E5%BB%BArss%E8%AE%A2%E9%98%85%E5%99%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%90%AD%E5%BB%BArss%E8%AE%A2%E9%98%85%E5%99%A8/</guid><description>搭建rss订阅器 1 2 3 mkdir -p /data/freshrss docker run -d --name=freshrss -e PUID=1000 -e PGID=1000 -e TZ=Asia/Shanghai -p 8000:80 -v /data/freshrss:/config --restart unless-stopped freshrss/freshrss:latest</description></item><item><title>文章中图片优化</title><link>https://www.haipengv.com/posts/%E6%96%87%E7%AB%A0%E4%B8%AD%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%96%87%E7%AB%A0%E4%B8%AD%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96/</guid><description>一、需求 由于文章中图片比较大，所以迫切需要将原图片压缩但质量又不会丢失太多。google发现可以将png、jpeg等格式的图片转换成webp格式。体积缩小的同时</description></item><item><title>查看系统安装时间</title><link>https://www.haipengv.com/posts/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%97%B6%E9%97%B4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%97%B6%E9%97%B4/</guid><description>参考 1 rpm -qi basesystem | grep -i &amp;#34;install date&amp;#34;</description></item><item><title>模块与包</title><link>https://www.haipengv.com/posts/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/</guid><description>什么是模块？ 最常见的场景，一个模块就是包含了一组功能的python文件，例如module.py,模块名是module。可以使用import module。 四个通用</description></item><item><title>模拟ssh执行远程命令</title><link>https://www.haipengv.com/posts/%E6%A8%A1%E6%8B%9Fssh%E6%89%A7%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E6%A8%A1%E6%8B%9Fssh%E6%89%A7%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/</guid><description>模拟ssh执行远程命令 服务端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from socket import * import subprocess server = socket(AF_INET, SOCK_STREAM) server.bind((&amp;#39;127.0.0.1&amp;#39;, 8090)) server.listen(5) while True: conn, client_addr = server.accept() print(client_addr) while True: try: cmd = conn.recv(1024) if not cmd:break obj = subprocess.Popen(cmd.decode(&amp;#39;utf-8&amp;#39;), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE ) stdout</description></item><item><title>烟花2025</title><link>https://www.haipengv.com/posts/%E7%83%9F%E8%8A%B12025/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E7%83%9F%E8%8A%B12025/</guid><description>满天星 点我!</description></item><item><title>生成器 可迭代对象 迭代器 迭代</title><link>https://www.haipengv.com/posts/%E7%94%9F%E6%88%90%E5%99%A8-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1-%E8%BF%AD%E4%BB%A3%E5%99%A8-%E8%BF%AD%E4%BB%A3/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E7%94%9F%E6%88%90%E5%99%A8-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1-%E8%BF%AD%E4%BB%A3%E5%99%A8-%E8%BF%AD%E4%BB%A3/</guid><description>可迭代对象（Iterable） python中任意对象，只要它定义了可以返回一个迭代器的__iter__方法，或者定义了可以支持下标索引的__getitem__方</description></item><item><title>类和对象</title><link>https://www.haipengv.com/posts/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</guid><description>面向过程与面向对象 面向过程 核心就是过程二字，过程即解决问题的步骤，就是先干什么再干什么 基于该思想写程序就好比在设计一条流水线，是一种机械式的思维方式 优点：复杂的</description></item><item><title>给博客加个后台（已过时）</title><link>https://www.haipengv.com/posts/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%AA%E5%90%8E%E5%8F%B0%E5%B7%B2%E8%BF%87%E6%97%B6/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%AA%E5%90%8E%E5%8F%B0%E5%B7%B2%E8%BF%87%E6%97%B6/</guid><description>之前写文章的流程： 进入笔记本中博客源码的文件夹 右键打开git bash，使用&amp;rsquo;git pull origin master&amp;rsquo; 将本地与线上进行同步。 创建新文章（hugo new posts/新文</description></item><item><title>网站访客统计搭建</title><link>https://www.haipengv.com/posts/%E7%BD%91%E7%AB%99%E8%AE%BF%E5%AE%A2%E7%BB%9F%E8%AE%A1%E6%90%AD%E5%BB%BA/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E7%BD%91%E7%AB%99%E8%AE%BF%E5%AE%A2%E7%BB%9F%E8%AE%A1%E6%90%AD%E5%BB%BA/</guid><description>一、使用zeabur平台搭建umami zeabur官方部署说明 根据官方说明，首先需要部署PostageSQL数据库，用来存储umami的数据。需要注意的是，部署</description></item><item><title>记一次由于kswapd0进程导致系统异常</title><link>https://www.haipengv.com/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%B1%E4%BA%8Ekswapd0%E8%BF%9B%E7%A8%8B%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%B1%E4%BA%8Ekswapd0%E8%BF%9B%E7%A8%8B%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/</guid><description>前言 服务器安装pve后发现cpu占用率过高有点不正常，于是查其原因。 参考这个博主的文章。发现现象一致。 https://blog.csdn.net/jzz601264258/article/details/105850816 top查看cpu占用率 1 2 3 4 5 6 7 8 9 10 root@www:~# top top - 09:58:10 up 35</description></item><item><title>豆瓣展示页</title><link>https://www.haipengv.com/posts/%E8%B1%86%E7%93%A3%E5%B1%95%E7%A4%BA%E9%A1%B5/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%B1%86%E7%93%A3%E5%B1%95%E7%A4%BA%E9%A1%B5/</guid><description>豆瓣展示页 新建flask项目 使用pycharm新建flask项目，项目名为：douban_flask。 将之前的爬取的movie.db文件放到该项目的根目录下。准</description></item><item><title>豆瓣电影爬虫</title><link>https://www.haipengv.com/posts/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/</guid><description>爬虫分析步骤 准备工作 获取数据 解析内容 保存数据 url分析 页面包括250条电影数据，分10页，每页25条。每页的url的不同之处：最后的数值= （页数-1）*25 1 2</description></item><item><title>集合的相关特性</title><link>https://www.haipengv.com/posts/%E9%9B%86%E5%90%88%E7%9A%84%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E9%9B%86%E5%90%88%E7%9A%84%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</guid><description>集合的相关特性 去重 1 2 s = {1,2,2,2,2,2,3,3,3,4,4,4,5} print(s) #{1,2,3,4,5} 确保不要将集合与字典混淆，字典也用花括号括起来。 1 2 my_set = {1,2,3} my_dict = {&amp;#34;term&amp;#34;: &amp;#34;definition&amp;#34;, &amp;#34;term2&amp;#34;: &amp;#34;definition2&amp;#34;} set() 将其他数据类型转换成集合类型 1 2 3 l = [1,2,3,4] s = set(l) print(s) #{1,2,3,4} 并集(</description></item><item><title>Ansible部署（基于ubuntu）</title><link>https://www.haipengv.com/posts/ansible%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Eubuntu/</link><pubDate>Sat, 15 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/ansible%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Eubuntu/</guid><description>一、Ansible 是如何运作的？ 一台机器充当主控端（Control Machine），其他机器充当被控节点（node Machine）。 二、如何安装Ansible?</description></item></channel></rss>