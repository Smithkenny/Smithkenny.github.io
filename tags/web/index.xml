<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web on TechOps</title><link>https://www.haipengv.com/tags/web/</link><description>Recent content in Web on TechOps</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 16 Mar 2025 00:00:00 +0800</lastBuildDate><atom:link href="https://www.haipengv.com/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Caddy开源web服务器</title><link>https://www.haipengv.com/posts/caddy%E5%BC%80%E6%BA%90web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/caddy%E5%BC%80%E6%BA%90web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>偶然看见一款开源的web服务器搭建软件，基于go 语言的，很好用，记录一下。 详细介绍：链接</description></item><item><title>Django</title><link>https://www.haipengv.com/posts/django/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/django/</guid><description>安装及查看版本 1 2 3 4 5 6 pip3 install Django==4.0.6 # 进入python python import django print(django.get_version()) windows安装路径 1 C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Lib\site-packages\django 创建第一个django 项目 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 新建一个文件夹 E:\code2022\django\demo</description></item><item><title>Flask入门</title><link>https://www.haipengv.com/posts/flask%E5%85%A5%E9%97%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/flask%E5%85%A5%E9%97%A8/</guid><description>数据可视化 关于Flask Flask作为web框架，它的作用主要是开发web应用程序。 Flask基础的操作 浏览器打印hello world! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import</description></item><item><title>Nginx安装与使用</title><link>https://www.haipengv.com/posts/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>nginx 1.16.1 安装使用说明 1.创建目录 mkdir -p /var/temp/nginx 下载： https://nginx.org/en/download.html 解压 tar -zxvf nginx-1.16.1.tar.gz 安装编译依赖包： yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel 2.进入nginx-1.16.1 编译参数 1 2 3 4 5 6 7 8 9 10 11 12 ./configure \ --prefix=/usr/local/nginx</description></item><item><title>SeaTunnel及SeaTunnelWeb部署指南</title><link>https://www.haipengv.com/posts/seatunnel%E5%8F%8Aseatunnel-web%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/seatunnel%E5%8F%8Aseatunnel-web%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</guid><description>网上看到的适合新手的部署教程，特此记录下。 教程 遇到的问题 1.启动web进程后，浏览器访问404。 1.1 一定要在bin的上级目录执行启动脚本。 比如：web项目的启动脚</description></item><item><title>前端框架</title><link>https://www.haipengv.com/posts/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0800</pubDate><guid>https://www.haipengv.com/posts/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</guid><description>nvm管理node.js 环境： centos 7.9 nvm 安装 新创建一个名为myapp的桥接网卡 1 2 3 4 cd /root wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz mkdir -p /root/.nvm tar -zxvf nvm-0.39.3.tar.gz -C /root/.nvm 配置环境 1 vim ~/.bashrc 在~/.bashrc的末尾，添加如下语句</description></item></channel></rss>