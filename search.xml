<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端框架</title>
      <link href="/2023/05/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/05/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="nvm管理node-js"><a href="#nvm管理node-js" class="headerlink" title="nvm管理node.js"></a>nvm管理node.js</h2><h3 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h3><ul><li><strong>centos 7.9</strong></li></ul><h3 id="nvm-安装"><a href="#nvm-安装" class="headerlink" title="nvm 安装"></a>nvm 安装</h3><p><strong>新创建一个名为<code>myapp</code>的桥接网卡</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> -p /root/.nvm</span><br><span class="line">tar -zxvf nvm-0.39.3.tar.gz -C /root/.nvm</span><br></pre></td></tr></table></figure><p><strong>配置环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>在~&#x2F;.bashrc的末尾，添加如下语句：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm/nvm-0.39.3&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><p><strong>启用环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>安装node.js，测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8.16.0</span><br></pre></td></tr></table></figure><p><strong>切换版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 8.16.0</span><br></pre></td></tr></table></figure><p><strong>查看已安装的版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker创建专有网卡</title>
      <link href="/2023/02/22/docker%E5%88%9B%E5%BB%BA%E4%B8%93%E6%9C%89%E7%BD%91%E5%8D%A1/"/>
      <url>/2023/02/22/docker%E5%88%9B%E5%BB%BA%E4%B8%93%E6%9C%89%E7%BD%91%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="docker创建专有网卡"><a href="#docker创建专有网卡" class="headerlink" title="docker创建专有网卡"></a>docker创建专有网卡</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p><code>tomcat</code>容器需要通过<code>jdbc模块</code>连接数据库<code>mysql</code>，配置文件如果指定<code>IP地址</code>，<code>mysql</code>容器一旦损坏，<code>IP地址</code>就会更改，需要将<code>mysql容器</code>的<code>IP</code>固定。这样就不用每次更改<code>tomcat</code>配置文件了。</p><h3 id="专有网卡创建"><a href="#专有网卡创建" class="headerlink" title="专有网卡创建"></a>专有网卡创建</h3><p><strong>新创建一个名为<code>myapp</code>的桥接网卡</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create myapp</span><br></pre></td></tr></table></figure><p><strong>使用<code>--network-alias</code>参数给网卡起别名，启动<code>MySQL</code>容器。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">     --network myapp --network-alias mysql1 \</span><br><span class="line">     --name=mysql57-test \</span><br><span class="line">     -p 33306:3306 \</span><br><span class="line">     -v /tmpdisk/test2:/var/lib/mysql \</span><br><span class="line">     -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">     -e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">     -e MYSQL_DATABASE=todos \</span><br><span class="line">     mysql:5.7</span><br></pre></td></tr></table></figure><p><strong>注意：这里创建的<code>mysql</code>容器使用<code>myapp 网卡</code>，分配的<code>IP</code>自动和<code>mysql1 网卡别名</code>绑定，后面创建的容器只要使用同一个网卡创建的，都可以和<code>mysql</code>容器互通。</strong></p><p>如何证明呢？</p><p><strong>使用<code>nicolaka/netshoot</code>镜像创建一个测试容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name <span class="built_in">test</span> --network myapp nicolaka/netshoot</span><br></pre></td></tr></table></figure><p>可以直接和<code>mysql</code>容器通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">62337a7ad7f1<span class="comment"># ping mysql1 </span></span><br><span class="line">PING mysql1 (172.20.0.5) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql57-test.myapp (172.20.0.5): icmp_seq=1 ttl=64 time=0.042 ms</span><br><span class="line">64 bytes from mysql57-test.myapp (172.20.0.5): icmp_seq=2 ttl=64 time=0.020 ms</span><br></pre></td></tr></table></figure><p><strong>查看解析，发现一条A记录。正是这条记录将<code>myapp</code>网卡自动分配的<code>ip</code>和网卡别名<code>mysql1</code>绑定。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">62337a7ad7f1<span class="comment"># dig mysql1 </span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.11 &lt;&lt;&gt;&gt; mysql1</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- <span class="string">opcode: QUERY, status: NOERROR, id: 10768</span></span><br><span class="line"><span class="string">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; QUESTION SECTION:</span></span><br><span class="line"><span class="string">;mysql1.INA</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; ANSWER SECTION:</span></span><br><span class="line"><span class="string">mysql1.600INA172.20.0.5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; Query time: 0 msec</span></span><br><span class="line"><span class="string">;; SERVER: 127.0.0.11#53(127.0.0.11) (UDP)</span></span><br><span class="line"><span class="string">;; WHEN: Wed Feb 22 01:36:59 UTC 2023</span></span><br><span class="line"><span class="string">;; MSG SIZE  rcvd: 46</span></span><br></pre></td></tr></table></figure><p><strong>创建<code>tomcat</code>容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd \</span><br><span class="line">    -p 28080:8080 \</span><br><span class="line">    --restart=always \ </span><br><span class="line">    --name tomcat-test \ </span><br><span class="line">    --network myapp \</span><br><span class="line">    -v /tmpdisk/tomcat-test2/webapps:/usr/local/tomcat/webapps \</span><br><span class="line">    -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">    tomcat:9.0.56</span><br></pre></td></tr></table></figure><p><strong>更改<code>jdbc</code>连接配置，将<code>localhost</code>改成<code>mysql1</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">旧：</span><br><span class="line">jdbc:mysql://localhost:3306/jt_ow_dbsync_src?useUnicode=<span class="literal">true</span>&amp;amp;characterEncoding=UTF-8&amp;amp;useSSL=<span class="literal">false</span></span><br><span class="line">新：</span><br><span class="line">jdbc:mysql://mysql1:3306/jt_ow_dbsync_src?useUnicode=<span class="literal">true</span>&amp;amp;characterEncoding=UTF-8&amp;amp;useSSL=<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><strong>测试内容：<code>mysql</code>容器<code>IP</code>更改后，会不会影响业务访问。</strong></p><p>**查看当前<code>mysql</code> 容器<code>IP**</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@HZ ~]$ docker inspect mysql57-test | grep -i ipaddress</span><br><span class="line">            <span class="string">&quot;SecondaryIPAddresses&quot;</span>: null,</span><br><span class="line">            <span class="string">&quot;IPAddress&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;IPAddress&quot;</span>: <span class="string">&quot;172.20.0.5&quot;</span>,</span><br></pre></td></tr></table></figure><p><strong>删除容器</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f mysql57-test</span><br></pre></td></tr></table></figure><p><strong>重新创建新容器</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name test2 --network myapp busybox</span><br></pre></td></tr></table></figure><p><strong>再创建<code>mysql</code>容器</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">     --network myapp --network-alias mysql1 \</span><br><span class="line">     --name=mysql57-test \</span><br><span class="line">     -p 33306:3306 \</span><br><span class="line">     -v /tmpdisk/test2:/var/lib/mysql \</span><br><span class="line">     -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">     -e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">     -e MYSQL_DATABASE=todos \</span><br><span class="line">     mysql:5.7</span><br></pre></td></tr></table></figure><p><strong>再次查看<code>mysql</code>容器<code>IP</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@HZ ~]$ docker inspect mysql57-test | grep -i ipaddress</span><br><span class="line">            <span class="string">&quot;SecondaryIPAddresses&quot;</span>: null,</span><br><span class="line">            <span class="string">&quot;IPAddress&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;IPAddress&quot;</span>: <span class="string">&quot;172.20.0.6&quot;</span>,</span><br></pre></td></tr></table></figure><p><strong>访问业务，发现业务访问正常。所以完美实现了<code>mysql</code>容器<code>内部IP</code>变更后不会影响业务。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker使用tab自动补全命令</title>
      <link href="/2023/02/21/docker%E9%85%8D%E7%BD%AEtab%E8%A1%A5%E5%85%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/02/21/docker%E9%85%8D%E7%BD%AEtab%E8%A1%A5%E5%85%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="docker使用tab自动补全命令"><a href="#docker使用tab自动补全命令" class="headerlink" title="docker使用tab自动补全命令"></a>docker使用tab自动补全命令</h2><h3 id="On-RHEL-based-systems"><a href="#On-RHEL-based-systems" class="headerlink" title="On RHEL-based systems"></a>On RHEL-based systems</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install bash-completion -y</span><br><span class="line">yum install bash-completion -y</span><br></pre></td></tr></table></figure><h3 id="On-Debian-based-systems"><a href="#On-Debian-based-systems" class="headerlink" title="On Debian-based systems"></a>On Debian-based systems</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install bash-completion -y</span><br></pre></td></tr></table></figure><h3 id="下载命令补全文件"><a href="#下载命令补全文件" class="headerlink" title="下载命令补全文件"></a>下载命令补全文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker -o /etc/bash_completion.d/docker.sh</span><br></pre></td></tr></table></figure><h3 id="如果下载失败最后附上文件内容。"><a href="#如果下载失败最后附上文件内容。" class="headerlink" title="如果下载失败最后附上文件内容。"></a>如果下载失败最后附上文件内容。</h3><h3 id="重新登录终端"><a href="#重新登录终端" class="headerlink" title="重新登录终端"></a>重新登录终端</h3><h3 id="测试命令补全"><a href="#测试命令补全" class="headerlink" title="测试命令补全"></a>测试命令补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker p </span><br><span class="line">两次tab ,命令自动补全</span><br><span class="line">pause   plugin  port    ps      pull    push </span><br></pre></td></tr></table></figure><h3 id="整理"><a href="#整理" class="headerlink" title="整理"></a>整理</h3><p>先安装补全软件<code>bash-completion</code>，然后在<code>/etc/bash_completion.d</code>目录下创建文件，写入补全命令，重新登录终端，自动生效。</p><p><code>docker.sh</code>文件内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br><span class="line">4786</span><br><span class="line">4787</span><br><span class="line">4788</span><br><span class="line">4789</span><br><span class="line">4790</span><br><span class="line">4791</span><br><span class="line">4792</span><br><span class="line">4793</span><br><span class="line">4794</span><br><span class="line">4795</span><br><span class="line">4796</span><br><span class="line">4797</span><br><span class="line">4798</span><br><span class="line">4799</span><br><span class="line">4800</span><br><span class="line">4801</span><br><span class="line">4802</span><br><span class="line">4803</span><br><span class="line">4804</span><br><span class="line">4805</span><br><span class="line">4806</span><br><span class="line">4807</span><br><span class="line">4808</span><br><span class="line">4809</span><br><span class="line">4810</span><br><span class="line">4811</span><br><span class="line">4812</span><br><span class="line">4813</span><br><span class="line">4814</span><br><span class="line">4815</span><br><span class="line">4816</span><br><span class="line">4817</span><br><span class="line">4818</span><br><span class="line">4819</span><br><span class="line">4820</span><br><span class="line">4821</span><br><span class="line">4822</span><br><span class="line">4823</span><br><span class="line">4824</span><br><span class="line">4825</span><br><span class="line">4826</span><br><span class="line">4827</span><br><span class="line">4828</span><br><span class="line">4829</span><br><span class="line">4830</span><br><span class="line">4831</span><br><span class="line">4832</span><br><span class="line">4833</span><br><span class="line">4834</span><br><span class="line">4835</span><br><span class="line">4836</span><br><span class="line">4837</span><br><span class="line">4838</span><br><span class="line">4839</span><br><span class="line">4840</span><br><span class="line">4841</span><br><span class="line">4842</span><br><span class="line">4843</span><br><span class="line">4844</span><br><span class="line">4845</span><br><span class="line">4846</span><br><span class="line">4847</span><br><span class="line">4848</span><br><span class="line">4849</span><br><span class="line">4850</span><br><span class="line">4851</span><br><span class="line">4852</span><br><span class="line">4853</span><br><span class="line">4854</span><br><span class="line">4855</span><br><span class="line">4856</span><br><span class="line">4857</span><br><span class="line">4858</span><br><span class="line">4859</span><br><span class="line">4860</span><br><span class="line">4861</span><br><span class="line">4862</span><br><span class="line">4863</span><br><span class="line">4864</span><br><span class="line">4865</span><br><span class="line">4866</span><br><span class="line">4867</span><br><span class="line">4868</span><br><span class="line">4869</span><br><span class="line">4870</span><br><span class="line">4871</span><br><span class="line">4872</span><br><span class="line">4873</span><br><span class="line">4874</span><br><span class="line">4875</span><br><span class="line">4876</span><br><span class="line">4877</span><br><span class="line">4878</span><br><span class="line">4879</span><br><span class="line">4880</span><br><span class="line">4881</span><br><span class="line">4882</span><br><span class="line">4883</span><br><span class="line">4884</span><br><span class="line">4885</span><br><span class="line">4886</span><br><span class="line">4887</span><br><span class="line">4888</span><br><span class="line">4889</span><br><span class="line">4890</span><br><span class="line">4891</span><br><span class="line">4892</span><br><span class="line">4893</span><br><span class="line">4894</span><br><span class="line">4895</span><br><span class="line">4896</span><br><span class="line">4897</span><br><span class="line">4898</span><br><span class="line">4899</span><br><span class="line">4900</span><br><span class="line">4901</span><br><span class="line">4902</span><br><span class="line">4903</span><br><span class="line">4904</span><br><span class="line">4905</span><br><span class="line">4906</span><br><span class="line">4907</span><br><span class="line">4908</span><br><span class="line">4909</span><br><span class="line">4910</span><br><span class="line">4911</span><br><span class="line">4912</span><br><span class="line">4913</span><br><span class="line">4914</span><br><span class="line">4915</span><br><span class="line">4916</span><br><span class="line">4917</span><br><span class="line">4918</span><br><span class="line">4919</span><br><span class="line">4920</span><br><span class="line">4921</span><br><span class="line">4922</span><br><span class="line">4923</span><br><span class="line">4924</span><br><span class="line">4925</span><br><span class="line">4926</span><br><span class="line">4927</span><br><span class="line">4928</span><br><span class="line">4929</span><br><span class="line">4930</span><br><span class="line">4931</span><br><span class="line">4932</span><br><span class="line">4933</span><br><span class="line">4934</span><br><span class="line">4935</span><br><span class="line">4936</span><br><span class="line">4937</span><br><span class="line">4938</span><br><span class="line">4939</span><br><span class="line">4940</span><br><span class="line">4941</span><br><span class="line">4942</span><br><span class="line">4943</span><br><span class="line">4944</span><br><span class="line">4945</span><br><span class="line">4946</span><br><span class="line">4947</span><br><span class="line">4948</span><br><span class="line">4949</span><br><span class="line">4950</span><br><span class="line">4951</span><br><span class="line">4952</span><br><span class="line">4953</span><br><span class="line">4954</span><br><span class="line">4955</span><br><span class="line">4956</span><br><span class="line">4957</span><br><span class="line">4958</span><br><span class="line">4959</span><br><span class="line">4960</span><br><span class="line">4961</span><br><span class="line">4962</span><br><span class="line">4963</span><br><span class="line">4964</span><br><span class="line">4965</span><br><span class="line">4966</span><br><span class="line">4967</span><br><span class="line">4968</span><br><span class="line">4969</span><br><span class="line">4970</span><br><span class="line">4971</span><br><span class="line">4972</span><br><span class="line">4973</span><br><span class="line">4974</span><br><span class="line">4975</span><br><span class="line">4976</span><br><span class="line">4977</span><br><span class="line">4978</span><br><span class="line">4979</span><br><span class="line">4980</span><br><span class="line">4981</span><br><span class="line">4982</span><br><span class="line">4983</span><br><span class="line">4984</span><br><span class="line">4985</span><br><span class="line">4986</span><br><span class="line">4987</span><br><span class="line">4988</span><br><span class="line">4989</span><br><span class="line">4990</span><br><span class="line">4991</span><br><span class="line">4992</span><br><span class="line">4993</span><br><span class="line">4994</span><br><span class="line">4995</span><br><span class="line">4996</span><br><span class="line">4997</span><br><span class="line">4998</span><br><span class="line">4999</span><br><span class="line">5000</span><br><span class="line">5001</span><br><span class="line">5002</span><br><span class="line">5003</span><br><span class="line">5004</span><br><span class="line">5005</span><br><span class="line">5006</span><br><span class="line">5007</span><br><span class="line">5008</span><br><span class="line">5009</span><br><span class="line">5010</span><br><span class="line">5011</span><br><span class="line">5012</span><br><span class="line">5013</span><br><span class="line">5014</span><br><span class="line">5015</span><br><span class="line">5016</span><br><span class="line">5017</span><br><span class="line">5018</span><br><span class="line">5019</span><br><span class="line">5020</span><br><span class="line">5021</span><br><span class="line">5022</span><br><span class="line">5023</span><br><span class="line">5024</span><br><span class="line">5025</span><br><span class="line">5026</span><br><span class="line">5027</span><br><span class="line">5028</span><br><span class="line">5029</span><br><span class="line">5030</span><br><span class="line">5031</span><br><span class="line">5032</span><br><span class="line">5033</span><br><span class="line">5034</span><br><span class="line">5035</span><br><span class="line">5036</span><br><span class="line">5037</span><br><span class="line">5038</span><br><span class="line">5039</span><br><span class="line">5040</span><br><span class="line">5041</span><br><span class="line">5042</span><br><span class="line">5043</span><br><span class="line">5044</span><br><span class="line">5045</span><br><span class="line">5046</span><br><span class="line">5047</span><br><span class="line">5048</span><br><span class="line">5049</span><br><span class="line">5050</span><br><span class="line">5051</span><br><span class="line">5052</span><br><span class="line">5053</span><br><span class="line">5054</span><br><span class="line">5055</span><br><span class="line">5056</span><br><span class="line">5057</span><br><span class="line">5058</span><br><span class="line">5059</span><br><span class="line">5060</span><br><span class="line">5061</span><br><span class="line">5062</span><br><span class="line">5063</span><br><span class="line">5064</span><br><span class="line">5065</span><br><span class="line">5066</span><br><span class="line">5067</span><br><span class="line">5068</span><br><span class="line">5069</span><br><span class="line">5070</span><br><span class="line">5071</span><br><span class="line">5072</span><br><span class="line">5073</span><br><span class="line">5074</span><br><span class="line">5075</span><br><span class="line">5076</span><br><span class="line">5077</span><br><span class="line">5078</span><br><span class="line">5079</span><br><span class="line">5080</span><br><span class="line">5081</span><br><span class="line">5082</span><br><span class="line">5083</span><br><span class="line">5084</span><br><span class="line">5085</span><br><span class="line">5086</span><br><span class="line">5087</span><br><span class="line">5088</span><br><span class="line">5089</span><br><span class="line">5090</span><br><span class="line">5091</span><br><span class="line">5092</span><br><span class="line">5093</span><br><span class="line">5094</span><br><span class="line">5095</span><br><span class="line">5096</span><br><span class="line">5097</span><br><span class="line">5098</span><br><span class="line">5099</span><br><span class="line">5100</span><br><span class="line">5101</span><br><span class="line">5102</span><br><span class="line">5103</span><br><span class="line">5104</span><br><span class="line">5105</span><br><span class="line">5106</span><br><span class="line">5107</span><br><span class="line">5108</span><br><span class="line">5109</span><br><span class="line">5110</span><br><span class="line">5111</span><br><span class="line">5112</span><br><span class="line">5113</span><br><span class="line">5114</span><br><span class="line">5115</span><br><span class="line">5116</span><br><span class="line">5117</span><br><span class="line">5118</span><br><span class="line">5119</span><br><span class="line">5120</span><br><span class="line">5121</span><br><span class="line">5122</span><br><span class="line">5123</span><br><span class="line">5124</span><br><span class="line">5125</span><br><span class="line">5126</span><br><span class="line">5127</span><br><span class="line">5128</span><br><span class="line">5129</span><br><span class="line">5130</span><br><span class="line">5131</span><br><span class="line">5132</span><br><span class="line">5133</span><br><span class="line">5134</span><br><span class="line">5135</span><br><span class="line">5136</span><br><span class="line">5137</span><br><span class="line">5138</span><br><span class="line">5139</span><br><span class="line">5140</span><br><span class="line">5141</span><br><span class="line">5142</span><br><span class="line">5143</span><br><span class="line">5144</span><br><span class="line">5145</span><br><span class="line">5146</span><br><span class="line">5147</span><br><span class="line">5148</span><br><span class="line">5149</span><br><span class="line">5150</span><br><span class="line">5151</span><br><span class="line">5152</span><br><span class="line">5153</span><br><span class="line">5154</span><br><span class="line">5155</span><br><span class="line">5156</span><br><span class="line">5157</span><br><span class="line">5158</span><br><span class="line">5159</span><br><span class="line">5160</span><br><span class="line">5161</span><br><span class="line">5162</span><br><span class="line">5163</span><br><span class="line">5164</span><br><span class="line">5165</span><br><span class="line">5166</span><br><span class="line">5167</span><br><span class="line">5168</span><br><span class="line">5169</span><br><span class="line">5170</span><br><span class="line">5171</span><br><span class="line">5172</span><br><span class="line">5173</span><br><span class="line">5174</span><br><span class="line">5175</span><br><span class="line">5176</span><br><span class="line">5177</span><br><span class="line">5178</span><br><span class="line">5179</span><br><span class="line">5180</span><br><span class="line">5181</span><br><span class="line">5182</span><br><span class="line">5183</span><br><span class="line">5184</span><br><span class="line">5185</span><br><span class="line">5186</span><br><span class="line">5187</span><br><span class="line">5188</span><br><span class="line">5189</span><br><span class="line">5190</span><br><span class="line">5191</span><br><span class="line">5192</span><br><span class="line">5193</span><br><span class="line">5194</span><br><span class="line">5195</span><br><span class="line">5196</span><br><span class="line">5197</span><br><span class="line">5198</span><br><span class="line">5199</span><br><span class="line">5200</span><br><span class="line">5201</span><br><span class="line">5202</span><br><span class="line">5203</span><br><span class="line">5204</span><br><span class="line">5205</span><br><span class="line">5206</span><br><span class="line">5207</span><br><span class="line">5208</span><br><span class="line">5209</span><br><span class="line">5210</span><br><span class="line">5211</span><br><span class="line">5212</span><br><span class="line">5213</span><br><span class="line">5214</span><br><span class="line">5215</span><br><span class="line">5216</span><br><span class="line">5217</span><br><span class="line">5218</span><br><span class="line">5219</span><br><span class="line">5220</span><br><span class="line">5221</span><br><span class="line">5222</span><br><span class="line">5223</span><br><span class="line">5224</span><br><span class="line">5225</span><br><span class="line">5226</span><br><span class="line">5227</span><br><span class="line">5228</span><br><span class="line">5229</span><br><span class="line">5230</span><br><span class="line">5231</span><br><span class="line">5232</span><br><span class="line">5233</span><br><span class="line">5234</span><br><span class="line">5235</span><br><span class="line">5236</span><br><span class="line">5237</span><br><span class="line">5238</span><br><span class="line">5239</span><br><span class="line">5240</span><br><span class="line">5241</span><br><span class="line">5242</span><br><span class="line">5243</span><br><span class="line">5244</span><br><span class="line">5245</span><br><span class="line">5246</span><br><span class="line">5247</span><br><span class="line">5248</span><br><span class="line">5249</span><br><span class="line">5250</span><br><span class="line">5251</span><br><span class="line">5252</span><br><span class="line">5253</span><br><span class="line">5254</span><br><span class="line">5255</span><br><span class="line">5256</span><br><span class="line">5257</span><br><span class="line">5258</span><br><span class="line">5259</span><br><span class="line">5260</span><br><span class="line">5261</span><br><span class="line">5262</span><br><span class="line">5263</span><br><span class="line">5264</span><br><span class="line">5265</span><br><span class="line">5266</span><br><span class="line">5267</span><br><span class="line">5268</span><br><span class="line">5269</span><br><span class="line">5270</span><br><span class="line">5271</span><br><span class="line">5272</span><br><span class="line">5273</span><br><span class="line">5274</span><br><span class="line">5275</span><br><span class="line">5276</span><br><span class="line">5277</span><br><span class="line">5278</span><br><span class="line">5279</span><br><span class="line">5280</span><br><span class="line">5281</span><br><span class="line">5282</span><br><span class="line">5283</span><br><span class="line">5284</span><br><span class="line">5285</span><br><span class="line">5286</span><br><span class="line">5287</span><br><span class="line">5288</span><br><span class="line">5289</span><br><span class="line">5290</span><br><span class="line">5291</span><br><span class="line">5292</span><br><span class="line">5293</span><br><span class="line">5294</span><br><span class="line">5295</span><br><span class="line">5296</span><br><span class="line">5297</span><br><span class="line">5298</span><br><span class="line">5299</span><br><span class="line">5300</span><br><span class="line">5301</span><br><span class="line">5302</span><br><span class="line">5303</span><br><span class="line">5304</span><br><span class="line">5305</span><br><span class="line">5306</span><br><span class="line">5307</span><br><span class="line">5308</span><br><span class="line">5309</span><br><span class="line">5310</span><br><span class="line">5311</span><br><span class="line">5312</span><br><span class="line">5313</span><br><span class="line">5314</span><br><span class="line">5315</span><br><span class="line">5316</span><br><span class="line">5317</span><br><span class="line">5318</span><br><span class="line">5319</span><br><span class="line">5320</span><br><span class="line">5321</span><br><span class="line">5322</span><br><span class="line">5323</span><br><span class="line">5324</span><br><span class="line">5325</span><br><span class="line">5326</span><br><span class="line">5327</span><br><span class="line">5328</span><br><span class="line">5329</span><br><span class="line">5330</span><br><span class="line">5331</span><br><span class="line">5332</span><br><span class="line">5333</span><br><span class="line">5334</span><br><span class="line">5335</span><br><span class="line">5336</span><br><span class="line">5337</span><br><span class="line">5338</span><br><span class="line">5339</span><br><span class="line">5340</span><br><span class="line">5341</span><br><span class="line">5342</span><br><span class="line">5343</span><br><span class="line">5344</span><br><span class="line">5345</span><br><span class="line">5346</span><br><span class="line">5347</span><br><span class="line">5348</span><br><span class="line">5349</span><br><span class="line">5350</span><br><span class="line">5351</span><br><span class="line">5352</span><br><span class="line">5353</span><br><span class="line">5354</span><br><span class="line">5355</span><br><span class="line">5356</span><br><span class="line">5357</span><br><span class="line">5358</span><br><span class="line">5359</span><br><span class="line">5360</span><br><span class="line">5361</span><br><span class="line">5362</span><br><span class="line">5363</span><br><span class="line">5364</span><br><span class="line">5365</span><br><span class="line">5366</span><br><span class="line">5367</span><br><span class="line">5368</span><br><span class="line">5369</span><br><span class="line">5370</span><br><span class="line">5371</span><br><span class="line">5372</span><br><span class="line">5373</span><br><span class="line">5374</span><br><span class="line">5375</span><br><span class="line">5376</span><br><span class="line">5377</span><br><span class="line">5378</span><br><span class="line">5379</span><br><span class="line">5380</span><br><span class="line">5381</span><br><span class="line">5382</span><br><span class="line">5383</span><br><span class="line">5384</span><br><span class="line">5385</span><br><span class="line">5386</span><br><span class="line">5387</span><br><span class="line">5388</span><br><span class="line">5389</span><br><span class="line">5390</span><br><span class="line">5391</span><br><span class="line">5392</span><br><span class="line">5393</span><br><span class="line">5394</span><br><span class="line">5395</span><br><span class="line">5396</span><br><span class="line">5397</span><br><span class="line">5398</span><br><span class="line">5399</span><br><span class="line">5400</span><br><span class="line">5401</span><br><span class="line">5402</span><br><span class="line">5403</span><br><span class="line">5404</span><br><span class="line">5405</span><br><span class="line">5406</span><br><span class="line">5407</span><br><span class="line">5408</span><br><span class="line">5409</span><br><span class="line">5410</span><br><span class="line">5411</span><br><span class="line">5412</span><br><span class="line">5413</span><br><span class="line">5414</span><br><span class="line">5415</span><br><span class="line">5416</span><br><span class="line">5417</span><br><span class="line">5418</span><br><span class="line">5419</span><br><span class="line">5420</span><br><span class="line">5421</span><br><span class="line">5422</span><br><span class="line">5423</span><br><span class="line">5424</span><br><span class="line">5425</span><br><span class="line">5426</span><br><span class="line">5427</span><br><span class="line">5428</span><br><span class="line">5429</span><br><span class="line">5430</span><br><span class="line">5431</span><br><span class="line">5432</span><br><span class="line">5433</span><br><span class="line">5434</span><br><span class="line">5435</span><br><span class="line">5436</span><br><span class="line">5437</span><br><span class="line">5438</span><br><span class="line">5439</span><br><span class="line">5440</span><br><span class="line">5441</span><br><span class="line">5442</span><br><span class="line">5443</span><br><span class="line">5444</span><br><span class="line">5445</span><br><span class="line">5446</span><br><span class="line">5447</span><br><span class="line">5448</span><br><span class="line">5449</span><br><span class="line">5450</span><br><span class="line">5451</span><br><span class="line">5452</span><br><span class="line">5453</span><br><span class="line">5454</span><br><span class="line">5455</span><br><span class="line">5456</span><br><span class="line">5457</span><br><span class="line">5458</span><br><span class="line">5459</span><br><span class="line">5460</span><br><span class="line">5461</span><br><span class="line">5462</span><br><span class="line">5463</span><br><span class="line">5464</span><br><span class="line">5465</span><br><span class="line">5466</span><br><span class="line">5467</span><br><span class="line">5468</span><br><span class="line">5469</span><br><span class="line">5470</span><br><span class="line">5471</span><br><span class="line">5472</span><br><span class="line">5473</span><br><span class="line">5474</span><br><span class="line">5475</span><br><span class="line">5476</span><br><span class="line">5477</span><br><span class="line">5478</span><br><span class="line">5479</span><br><span class="line">5480</span><br><span class="line">5481</span><br><span class="line">5482</span><br><span class="line">5483</span><br><span class="line">5484</span><br><span class="line">5485</span><br><span class="line">5486</span><br><span class="line">5487</span><br><span class="line">5488</span><br><span class="line">5489</span><br><span class="line">5490</span><br><span class="line">5491</span><br><span class="line">5492</span><br><span class="line">5493</span><br><span class="line">5494</span><br><span class="line">5495</span><br><span class="line">5496</span><br><span class="line">5497</span><br><span class="line">5498</span><br><span class="line">5499</span><br><span class="line">5500</span><br><span class="line">5501</span><br><span class="line">5502</span><br><span class="line">5503</span><br><span class="line">5504</span><br><span class="line">5505</span><br><span class="line">5506</span><br><span class="line">5507</span><br><span class="line">5508</span><br><span class="line">5509</span><br><span class="line">5510</span><br><span class="line">5511</span><br><span class="line">5512</span><br><span class="line">5513</span><br><span class="line">5514</span><br><span class="line">5515</span><br><span class="line">5516</span><br><span class="line">5517</span><br><span class="line">5518</span><br><span class="line">5519</span><br><span class="line">5520</span><br><span class="line">5521</span><br><span class="line">5522</span><br><span class="line">5523</span><br><span class="line">5524</span><br><span class="line">5525</span><br><span class="line">5526</span><br><span class="line">5527</span><br><span class="line">5528</span><br><span class="line">5529</span><br><span class="line">5530</span><br><span class="line">5531</span><br><span class="line">5532</span><br><span class="line">5533</span><br><span class="line">5534</span><br><span class="line">5535</span><br><span class="line">5536</span><br><span class="line">5537</span><br><span class="line">5538</span><br><span class="line">5539</span><br><span class="line">5540</span><br><span class="line">5541</span><br><span class="line">5542</span><br><span class="line">5543</span><br><span class="line">5544</span><br><span class="line">5545</span><br><span class="line">5546</span><br><span class="line">5547</span><br><span class="line">5548</span><br><span class="line">5549</span><br><span class="line">5550</span><br><span class="line">5551</span><br><span class="line">5552</span><br><span class="line">5553</span><br><span class="line">5554</span><br><span class="line">5555</span><br><span class="line">5556</span><br><span class="line">5557</span><br><span class="line">5558</span><br><span class="line">5559</span><br><span class="line">5560</span><br><span class="line">5561</span><br><span class="line">5562</span><br><span class="line">5563</span><br><span class="line">5564</span><br><span class="line">5565</span><br><span class="line">5566</span><br><span class="line">5567</span><br><span class="line">5568</span><br><span class="line">5569</span><br><span class="line">5570</span><br><span class="line">5571</span><br><span class="line">5572</span><br><span class="line">5573</span><br><span class="line">5574</span><br><span class="line">5575</span><br><span class="line">5576</span><br><span class="line">5577</span><br><span class="line">5578</span><br><span class="line">5579</span><br><span class="line">5580</span><br><span class="line">5581</span><br><span class="line">5582</span><br><span class="line">5583</span><br><span class="line">5584</span><br><span class="line">5585</span><br><span class="line">5586</span><br><span class="line">5587</span><br><span class="line">5588</span><br><span class="line">5589</span><br><span class="line">5590</span><br><span class="line">5591</span><br><span class="line">5592</span><br><span class="line">5593</span><br><span class="line">5594</span><br><span class="line">5595</span><br><span class="line">5596</span><br><span class="line">5597</span><br><span class="line">5598</span><br><span class="line">5599</span><br><span class="line">5600</span><br><span class="line">5601</span><br><span class="line">5602</span><br><span class="line">5603</span><br><span class="line">5604</span><br><span class="line">5605</span><br><span class="line">5606</span><br><span class="line">5607</span><br><span class="line">5608</span><br><span class="line">5609</span><br><span class="line">5610</span><br><span class="line">5611</span><br><span class="line">5612</span><br><span class="line">5613</span><br><span class="line">5614</span><br><span class="line">5615</span><br><span class="line">5616</span><br><span class="line">5617</span><br><span class="line">5618</span><br><span class="line">5619</span><br><span class="line">5620</span><br><span class="line">5621</span><br><span class="line">5622</span><br><span class="line">5623</span><br><span class="line">5624</span><br><span class="line">5625</span><br><span class="line">5626</span><br><span class="line">5627</span><br><span class="line">5628</span><br><span class="line">5629</span><br><span class="line">5630</span><br><span class="line">5631</span><br><span class="line">5632</span><br><span class="line">5633</span><br><span class="line">5634</span><br><span class="line">5635</span><br><span class="line">5636</span><br><span class="line">5637</span><br><span class="line">5638</span><br><span class="line">5639</span><br><span class="line">5640</span><br><span class="line">5641</span><br><span class="line">5642</span><br><span class="line">5643</span><br><span class="line">5644</span><br><span class="line">5645</span><br><span class="line">5646</span><br><span class="line">5647</span><br><span class="line">5648</span><br><span class="line">5649</span><br><span class="line">5650</span><br><span class="line">5651</span><br><span class="line">5652</span><br><span class="line">5653</span><br><span class="line">5654</span><br><span class="line">5655</span><br><span class="line">5656</span><br><span class="line">5657</span><br><span class="line">5658</span><br><span class="line">5659</span><br><span class="line">5660</span><br><span class="line">5661</span><br><span class="line">5662</span><br><span class="line">5663</span><br><span class="line">5664</span><br><span class="line">5665</span><br><span class="line">5666</span><br><span class="line">5667</span><br><span class="line">5668</span><br><span class="line">5669</span><br><span class="line">5670</span><br><span class="line">5671</span><br><span class="line">5672</span><br><span class="line">5673</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># shellcheck disable=SC2016,SC2119,SC2155,SC2206,SC2207,SC2254</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Shellcheck ignore list:</span></span><br><span class="line"><span class="comment">#  - SC2016: Expressions don&#x27;t expand in single quotes, use double quotes for that.</span></span><br><span class="line"><span class="comment">#  - SC2119: Use foo &quot;$@&quot; if function&#x27;s $1 should mean script&#x27;s $1.</span></span><br><span class="line"><span class="comment">#  - SC2155: Declare and assign separately to avoid masking return values.</span></span><br><span class="line"><span class="comment">#  - SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.</span></span><br><span class="line"><span class="comment">#  - SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).</span></span><br><span class="line"><span class="comment">#  - SC2254: Quote expansions in case patterns to match literally rather than as a glob.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can find more details for each warning at the following page:</span></span><br><span class="line"><span class="comment">#    https://github.com/koalaman/shellcheck/wiki/&lt;SCXXXX&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bash completion file for core docker commands</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This script provides completion of:</span></span><br><span class="line"><span class="comment">#  - commands and their options</span></span><br><span class="line"><span class="comment">#  - container ids and names</span></span><br><span class="line"><span class="comment">#  - image repos and tags</span></span><br><span class="line"><span class="comment">#  - filepaths</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To enable the completions either:</span></span><br><span class="line"><span class="comment">#  - place this file in /etc/bash_completion.d</span></span><br><span class="line"><span class="comment">#  or</span></span><br><span class="line"><span class="comment">#  - copy this file to e.g. ~/.docker-completion.sh and add the line</span></span><br><span class="line"><span class="comment">#    below to your .bashrc after bash completion features are loaded</span></span><br><span class="line"><span class="comment">#    . ~/.docker-completion.sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Configuration:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For several commands, the amount of completions can be configured by</span></span><br><span class="line"><span class="comment"># setting environment variables.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_CONFIG_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_CONTAINER_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_NETWORK_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_NODE_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_PLUGIN_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_SECRET_IDS</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_SERVICE_IDS</span></span><br><span class="line"><span class="comment">#   &quot;no&quot;  - Show names only (default)</span></span><br><span class="line"><span class="comment">#   &quot;yes&quot; - Show names and ids</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can tailor completion for the &quot;events&quot;, &quot;history&quot;, &quot;inspect&quot;, &quot;run&quot;,</span></span><br><span class="line"><span class="comment"># &quot;rmi&quot; and &quot;save&quot; commands by settings the following environment</span></span><br><span class="line"><span class="comment"># variables:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_IMAGE_IDS</span></span><br><span class="line"><span class="comment">#   &quot;none&quot; - Show names only (default)</span></span><br><span class="line"><span class="comment">#   &quot;non-intermediate&quot; - Show names and ids, but omit intermediate image IDs</span></span><br><span class="line"><span class="comment">#   &quot;all&quot; - Show names and ids, including intermediate image IDs</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DOCKER_COMPLETION_SHOW_TAGS</span></span><br><span class="line"><span class="comment">#   &quot;yes&quot; - include tags in completion options (default)</span></span><br><span class="line"><span class="comment">#   &quot;no&quot;  - don&#x27;t include tags in completion options</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note:</span></span><br><span class="line"><span class="comment"># Currently, the completions will not work if the docker daemon is not</span></span><br><span class="line"><span class="comment"># bound to the default communication port/socket</span></span><br><span class="line"><span class="comment"># If the docker daemon is using a unix socket for communication your user</span></span><br><span class="line"><span class="comment"># must have access to the socket for the completions to function correctly</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note for developers:</span></span><br><span class="line"><span class="comment"># Please arrange options sorted alphabetically by long name with the short</span></span><br><span class="line"><span class="comment"># options immediately following their corresponding long form.</span></span><br><span class="line"><span class="comment"># This order should be applied to lists, alternatives and code blocks.</span></span><br><span class="line"></span><br><span class="line">__docker_previous_extglob_setting=$(<span class="built_in">shopt</span> -p extglob)</span><br><span class="line"><span class="built_in">shopt</span> -s extglob</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_q</span></span>() &#123;</span><br><span class="line">docker <span class="variable">$&#123;host:+--host &quot;$host&quot;&#125;</span> <span class="variable">$&#123;config:+--config &quot;$config&quot;&#125;</span> <span class="variable">$&#123;context:+--context &quot;$context&quot;&#125;</span> 2&gt;/dev/null <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_configs returns a list of configs. Additional options to</span></span><br><span class="line"><span class="comment"># `docker config ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_configs --filter label=stage=production`.</span></span><br><span class="line"><span class="comment"># By default, only names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_CONFIG_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="function"><span class="title">__docker_configs</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--id&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--name&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$DOCKER_COMPLETION_SHOW_CONFIG_IDS</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">__docker_q config <span class="built_in">ls</span> --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_configs applies completion of configs based on the current value</span></span><br><span class="line"><span class="comment"># of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_configs</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_configs <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_containers returns a list of containers. Additional options to</span></span><br><span class="line"><span class="comment"># `docker ps` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_containers --filter status=running`</span></span><br><span class="line"><span class="comment"># By default, only names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_CONTAINER_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="function"><span class="title">__docker_containers</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--id&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--name&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Names&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;DOCKER_COMPLETION_SHOW_CONTAINER_IDS&#125;</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Names&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Names&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">__docker_q ps --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_containers applies completion of containers based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_containers`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_all</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --all</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcheck disable=SC2120</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_removable</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter status=created --filter status=exited</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_running</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter status=running</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcheck disable=SC2120</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_stoppable</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter status=running --filter status=paused</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcheck disable=SC2120</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_stopped</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter status=exited</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcheck disable=SC2120</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_unpauseable</span></span>() &#123;</span><br><span class="line">__docker_complete_containers <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter status=paused</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_container_names</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> containers=( $(__docker_q ps -aq --no-trunc) )</span><br><span class="line"><span class="built_in">local</span> names=( $(__docker_q inspect --format <span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span> <span class="string">&quot;<span class="variable">$&#123;containers[@]&#125;</span>&quot;</span>) )</span><br><span class="line">names=( <span class="string">&quot;<span class="variable">$&#123;names[@]#/&#125;</span>&quot;</span> ) <span class="comment"># trim off the leading &quot;/&quot; from the container names</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;names[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_container_ids</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> containers=( $(__docker_q ps -aq) )</span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;containers[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_contexts returns a list of contexts without the special &quot;default&quot; context.</span></span><br><span class="line"><span class="comment"># Completions may be added with `--add`, e.g. `--add default`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_contexts</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> add=()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--add)</span><br><span class="line">add+=(<span class="string">&quot;<span class="variable">$2</span>&quot;</span>)</span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">__docker_q context <span class="built_in">ls</span> -q</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;add[@]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_contexts</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> contexts=( $(__docker_contexts <span class="string">&quot;<span class="variable">$@</span>&quot;</span>) )</span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;contexts[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_images returns a list of images. For each image, up to three representations</span></span><br><span class="line"><span class="comment"># can be generated: the repository (e.g. busybox), repository:tag (e.g. busybox:latest)</span></span><br><span class="line"><span class="comment"># and the ID (e.g. sha256:ee22cbbd4ea3dff63c86ba60c7691287c321e93adfc1009604eb1dde7ec88645).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The optional arguments `--repo`, `--tag` and `--id` select the representations that</span></span><br><span class="line"><span class="comment"># may be returned. Whether or not a particular representation is actually returned</span></span><br><span class="line"><span class="comment"># depends on the user&#x27;s customization through several environment variables:</span></span><br><span class="line"><span class="comment"># - image IDs are only shown if DOCKER_COMPLETION_SHOW_IMAGE_IDS=all|non-intermediate.</span></span><br><span class="line"><span class="comment"># - tags can be excluded by setting DOCKER_COMPLETION_SHOW_TAGS=no.</span></span><br><span class="line"><span class="comment"># - repositories are always shown.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In cases where an exact image specification is needed, `--force-tag` can be used.</span></span><br><span class="line"><span class="comment"># It ignores DOCKER_COMPLETION_SHOW_TAGS and only lists valid repository:tag combinations,</span></span><br><span class="line"><span class="comment"># avoiding repository names that would default to a potentially missing default tag.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Additional arguments to `docker image ls` may be specified in order to filter the list,</span></span><br><span class="line"><span class="comment"># e.g. `__docker_images --filter dangling=true`.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="function"><span class="title">__docker_images</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> repo_format=<span class="string">&#x27;&#123;&#123;.Repository&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">local</span> tag_format=<span class="string">&#x27;&#123;&#123;.Repository&#125;&#125;:&#123;&#123;.Tag&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">local</span> id_format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">local</span> all</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$DOCKER_COMPLETION_SHOW_IMAGE_IDS</span>&quot;</span> = <span class="string">&quot;all&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">all=<span class="string">&#x27;--all&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--repo)</span><br><span class="line">format+=<span class="string">&quot;<span class="variable">$repo_format</span>\n&quot;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">--tag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;DOCKER_COMPLETION_SHOW_TAGS:-yes&#125;</span>&quot;</span> = <span class="string">&quot;yes&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">format+=<span class="string">&quot;<span class="variable">$tag_format</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">id</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$DOCKER_COMPLETION_SHOW_IMAGE_IDS</span> =~ ^(all|non-intermediate)$ ]] ; <span class="keyword">then</span></span><br><span class="line">format+=<span class="string">&quot;<span class="variable">$id_format</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">--force-tag)</span><br><span class="line"><span class="comment"># like `--tag` but ignores environment setting</span></span><br><span class="line">format+=<span class="string">&quot;<span class="variable">$tag_format</span>\n&quot;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">__docker_q image <span class="built_in">ls</span> --no-trunc --format <span class="string">&quot;<span class="variable">$&#123;format%\\n&#125;</span>&quot;</span> <span class="variable">$all</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> | grep -v <span class="string">&#x27;&lt;none&gt;$&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_images applies completion of images based on the current value of `$cur` or</span></span><br><span class="line"><span class="comment"># the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># See __docker_images for customization of the returned items.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_images</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_images <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">__ltrim_colon_completions <span class="string">&quot;<span class="variable">$current</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_networks returns a list of all networks. Additional options to</span></span><br><span class="line"><span class="comment"># `docker network ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_networks --filter type=custom`</span></span><br><span class="line"><span class="comment"># By default, only names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_NETWORK_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="function"><span class="title">__docker_networks</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--id&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--name&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;DOCKER_COMPLETION_SHOW_NETWORK_IDS&#125;</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">__docker_q network <span class="built_in">ls</span> --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_networks applies completion of networks based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_networks`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_networks</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_networks <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_containers_in_network</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> containers=($(__docker_q network inspect -f <span class="string">&#x27;&#123;&#123;range $i, $c := .Containers&#125;&#125;&#123;&#123;$i&#125;&#125; &#123;&#123;$c.Name&#125;&#125; &#123;&#123;end&#125;&#125;&#x27;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span>))</span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;containers[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_volumes returns a list of all volumes. Additional options to</span></span><br><span class="line"><span class="comment"># `docker volume ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_volumes --filter dangling=true`</span></span><br><span class="line"><span class="comment"># Because volumes do not have IDs, this function does not distinguish between</span></span><br><span class="line"><span class="comment"># IDs and names.</span></span><br><span class="line"><span class="function"><span class="title">__docker_volumes</span></span>() &#123;</span><br><span class="line">__docker_q volume <span class="built_in">ls</span> -q <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_volumes applies completion of volumes based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_volumes`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_volumes</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_volumes <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_plugins_bundled returns a list of all plugins of a given type.</span></span><br><span class="line"><span class="comment"># The type has to be specified with the mandatory option `--type`.</span></span><br><span class="line"><span class="comment"># Valid types are: Network, Volume, Authorization.</span></span><br><span class="line"><span class="comment"># Completions may be added or removed with `--add` and `--remove`</span></span><br><span class="line"><span class="comment"># This function only deals with plugins that come bundled with Docker.</span></span><br><span class="line"><span class="comment"># For plugins managed by `docker plugin`, see `__docker_plugins_installed`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_plugins_bundled</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> <span class="built_in">type</span> add=() remove=()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">type</span>)</span><br><span class="line"><span class="built_in">type</span>=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line">;;</span><br><span class="line">--add)</span><br><span class="line">add+=(<span class="string">&quot;<span class="variable">$2</span>&quot;</span>)</span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line">;;</span><br><span class="line">--remove)</span><br><span class="line">remove+=(<span class="string">&quot;<span class="variable">$2</span>&quot;</span>)</span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> plugins=($(__docker_q info --format <span class="string">&quot;&#123;&#123;range \$i, \$p := .Plugins.<span class="variable">$type</span>&#125;&#125;&#123;&#123;.&#125;&#125; &#123;&#123;end&#125;&#125;&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> del <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;remove[@]&#125;</span>&quot;</span> ; <span class="keyword">do</span></span><br><span class="line">plugins=(<span class="variable">$&#123;plugins[@]/$del/&#125;</span>)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;plugins[@]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;add[@]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_plugins_bundled applies completion of plugins based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># The plugin type has to be specified with the next option `--type`.</span></span><br><span class="line"><span class="comment"># This function only deals with plugins that come bundled with Docker.</span></span><br><span class="line"><span class="comment"># For completion of plugins managed by `docker plugin`, see</span></span><br><span class="line"><span class="comment"># `__docker_complete_plugins_installed`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_plugins_bundled</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_plugins_bundled <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_plugins_installed returns a list of all plugins that were installed with</span></span><br><span class="line"><span class="comment"># the Docker plugin API.</span></span><br><span class="line"><span class="comment"># By default, only names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_PLUGIN_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># Additional options to `docker plugin ls` may be specified in order to filter the list,</span></span><br><span class="line"><span class="comment"># e.g. `__docker_plugins_installed --filter enabled=true`</span></span><br><span class="line"><span class="comment"># For built-in pugins, see `__docker_plugins_bundled`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_plugins_installed</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$DOCKER_COMPLETION_SHOW_PLUGIN_IDS</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">__docker_q plugin <span class="built_in">ls</span> --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_plugins_installed applies completion of plugins that were installed</span></span><br><span class="line"><span class="comment"># with the Docker plugin API, based on the current value of `$cur` or the value of</span></span><br><span class="line"><span class="comment"># the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_plugins_installed`.</span></span><br><span class="line"><span class="comment"># For completion of built-in pugins, see `__docker_complete_plugins_bundled`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_plugins_installed</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_plugins_installed <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_runtimes</span></span>() &#123;</span><br><span class="line">__docker_q info | sed -n <span class="string">&#x27;s/^Runtimes: \(.*\)/\1/p&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_runtimes</span></span>() &#123;</span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_runtimes)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_secrets returns a list of secrets. Additional options to</span></span><br><span class="line"><span class="comment"># `docker secret ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_secrets --filter label=stage=production`</span></span><br><span class="line"><span class="comment"># By default, only names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_SECRET_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="function"><span class="title">__docker_secrets</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--id&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--name&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$DOCKER_COMPLETION_SHOW_SECRET_IDS</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">__docker_q secret <span class="built_in">ls</span> --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_secrets applies completion of secrets based on the current value</span></span><br><span class="line"><span class="comment"># of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_secrets</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_secrets <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_stacks returns a list of all stacks.</span></span><br><span class="line"><span class="function"><span class="title">__docker_stacks</span></span>() &#123;</span><br><span class="line">__docker_q stack <span class="built_in">ls</span> | awk <span class="string">&#x27;NR&gt;1 &#123;print $1&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_stacks applies completion of stacks based on the current value</span></span><br><span class="line"><span class="comment"># of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_stacks</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_stacks <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_nodes returns a list of all nodes. Additional options to</span></span><br><span class="line"><span class="comment"># `docker node ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_nodes --filter role=manager`</span></span><br><span class="line"><span class="comment"># By default, only node names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_NODE_IDS=yes to also complete node IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="comment"># Completions may be added with `--add`, e.g. `--add self`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_nodes</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$DOCKER_COMPLETION_SHOW_NODE_IDS</span>&quot;</span> = <span class="built_in">yes</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Hostname&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Hostname&#125;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> add=()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">id</span>)</span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">--name)</span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Hostname&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">--add)</span><br><span class="line">add+=(<span class="string">&quot;<span class="variable">$2</span>&quot;</span>)</span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(__docker_q node ls --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;add[@]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_nodes applies completion of nodes based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_nodes`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_nodes</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_nodes <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_services returns a list of all services. Additional options to</span></span><br><span class="line"><span class="comment"># `docker service ls` may be specified in order to filter the list, e.g.</span></span><br><span class="line"><span class="comment"># `__docker_services --filter name=xxx`</span></span><br><span class="line"><span class="comment"># By default, only node names are returned.</span></span><br><span class="line"><span class="comment"># Set DOCKER_COMPLETION_SHOW_SERVICE_IDS=yes to also complete IDs.</span></span><br><span class="line"><span class="comment"># An optional first option `--id|--name` may be used to limit the</span></span><br><span class="line"><span class="comment"># output to the IDs or names of matching items. This setting takes</span></span><br><span class="line"><span class="comment"># precedence over the environment setting.</span></span><br><span class="line"><span class="function"><span class="title">__docker_services</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span>  <span class="comment"># default: service name only</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$&#123;DOCKER_COMPLETION_SHOW_SERVICE_IDS&#125;</span>&quot;</span> = <span class="built_in">yes</span> ] &amp;&amp; format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125; &#123;&#123;.Name&#125;&#125;&#x27;</span> <span class="comment"># ID &amp; name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--id&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span> <span class="comment"># IDs only</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--name&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span> <span class="comment"># names only</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">__docker_q service <span class="built_in">ls</span> --quiet --format <span class="string">&quot;<span class="variable">$format</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_services applies completion of services based on the current</span></span><br><span class="line"><span class="comment"># value of `$cur` or the value of the optional first option `--cur`, if given.</span></span><br><span class="line"><span class="comment"># Additional filters may be appended, see `__docker_services`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_services</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> current=<span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--cur&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">current=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $(__docker_services <span class="string">&quot;<span class="variable">$@</span>&quot;</span> --filter <span class="string">&quot;name=<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_tasks returns a list of all task IDs.</span></span><br><span class="line"><span class="function"><span class="title">__docker_tasks</span></span>() &#123;</span><br><span class="line">__docker_q service ps --format <span class="string">&#x27;&#123;&#123;.ID&#125;&#125;&#x27;</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_services_and_tasks applies completion of services and task IDs.</span></span><br><span class="line"><span class="comment"># shellcheck disable=SC2120</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_services_and_tasks</span></span>() &#123;</span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="subst">$(__docker_services <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span> <span class="subst">$(__docker_tasks)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_append_to_completions appends the word passed as an argument to every</span></span><br><span class="line"><span class="comment"># word in `$COMPREPLY`.</span></span><br><span class="line"><span class="comment"># Normally you do this with `compgen -S` while generating the completions.</span></span><br><span class="line"><span class="comment"># This function allows you to append a suffix later. It allows you to use</span></span><br><span class="line"><span class="comment"># the __docker_complete_XXX functions in cases where you need a suffix.</span></span><br><span class="line"><span class="function"><span class="title">__docker_append_to_completions</span></span>() &#123;</span><br><span class="line">COMPREPLY=( <span class="variable">$&#123;COMPREPLY[@]/%/&quot;$1&quot;&#125;</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_fetch_info fetches information about the configured Docker server and updates</span></span><br><span class="line"><span class="comment"># several variables with the results.</span></span><br><span class="line"><span class="comment"># The result is cached for the duration of one invocation of bash completion.</span></span><br><span class="line"><span class="function"><span class="title">__docker_fetch_info</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$info_fetched</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -r server_experimental server_os &lt;&lt;&lt; <span class="string">&quot;<span class="subst">$(__docker_q version -f &#x27;&#123;&#123;.Server.Experimental&#125;&#125; &#123;&#123;.Server.Os&#125;&#125;&#x27;)</span>&quot;</span></span><br><span class="line">info_fetched=<span class="literal">true</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_server_is_experimental tests whether the currently configured Docker</span></span><br><span class="line"><span class="comment"># server runs in experimental mode. If so, the function exits with 0 (true).</span></span><br><span class="line"><span class="comment"># Otherwise, or if the result cannot be determined, the exit value is 1 (false).</span></span><br><span class="line"><span class="function"><span class="title">__docker_server_is_experimental</span></span>() &#123;</span><br><span class="line">__docker_fetch_info</span><br><span class="line">[ <span class="string">&quot;<span class="variable">$server_experimental</span>&quot;</span> = <span class="string">&quot;true&quot;</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_server_os_is tests whether the currently configured Docker server runs</span></span><br><span class="line"><span class="comment"># on the operating system passed in as the first argument.</span></span><br><span class="line"><span class="comment"># Known operating systems: linux, windows.</span></span><br><span class="line"><span class="function"><span class="title">__docker_server_os_is</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> expected_os=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">__docker_fetch_info</span><br><span class="line">[ <span class="string">&quot;<span class="variable">$server_os</span>&quot;</span> = <span class="string">&quot;<span class="variable">$expected_os</span>&quot;</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_stack_orchestrator_is tests whether the client is configured to use</span></span><br><span class="line"><span class="comment"># the orchestrator that is passed in as the first argument.</span></span><br><span class="line"><span class="function"><span class="title">__docker_stack_orchestrator_is</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">kubernetes)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$stack_orchestrator_is_kubernetes</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">__docker_q stack <span class="built_in">ls</span> --<span class="built_in">help</span> | grep -qe --namespace</span><br><span class="line">stack_orchestrator_is_kubernetes=$?</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span> <span class="variable">$stack_orchestrator_is_kubernetes</span></span><br><span class="line">;;</span><br><span class="line">swarm)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$stack_orchestrator_is_swarm</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">__docker_q stack deploy --<span class="built_in">help</span> | grep -qe <span class="string">&quot;with-registry-auth&quot;</span></span><br><span class="line">stack_orchestrator_is_swarm=$?</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span> <span class="variable">$stack_orchestrator_is_swarm</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_pos_first_nonflag finds the position of the first word that is neither</span></span><br><span class="line"><span class="comment"># option nor an option&#x27;s argument. If there are options that require arguments,</span></span><br><span class="line"><span class="comment"># you should pass a glob describing those options, e.g. &quot;--option1|-o|--option2&quot;</span></span><br><span class="line"><span class="comment"># Use this function to restrict completions to exact positions after the argument list.</span></span><br><span class="line"><span class="function"><span class="title">__docker_pos_first_nonflag</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> argument_flags=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> counter=$((<span class="variable">$&#123;subcommand_pos:-<span class="variable">$&#123;command_pos&#125;</span>&#125;</span> + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> -le <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$argument_flags</span>&quot;</span> ] &amp;&amp; <span class="built_in">eval</span> <span class="string">&quot;case &#x27;<span class="variable">$&#123;words[$counter]&#125;</span>&#x27; in <span class="variable">$argument_flags</span>) true ;; *) false ;; esac&quot;</span>; <span class="keyword">then</span></span><br><span class="line">(( counter++ ))</span><br><span class="line"><span class="comment"># eat &quot;=&quot; in case of --option=arg syntax</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span> = <span class="string">&quot;=&quot;</span> ] &amp;&amp; (( counter++ ))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bash splits words at &quot;=&quot;, retaining &quot;=&quot; as a word, examples:</span></span><br><span class="line"><span class="comment"># &quot;--debug=false&quot; =&gt; 3 words, &quot;--log-opt syslog-facility=daemon&quot; =&gt; 4 words</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;words[$counter + 1]&#125;</span>&quot;</span> = <span class="string">&quot;=&quot;</span> ] ; <span class="keyword">do</span></span><br><span class="line">counter=$(( counter + <span class="number">2</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">(( counter++ ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$counter</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_map_key_of_current_option returns `key` if we are currently completing the</span></span><br><span class="line"><span class="comment"># value of a map option (`key=value`) which matches the extglob given as an argument.</span></span><br><span class="line"><span class="comment"># This function is needed for key-specific completions.</span></span><br><span class="line"><span class="function"><span class="title">__docker_map_key_of_current_option</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> glob=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> key glob_pos</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> = <span class="string">&quot;=&quot;</span> ] ; <span class="keyword">then</span>        <span class="comment"># key= case</span></span><br><span class="line">key=<span class="string">&quot;<span class="variable">$prev</span>&quot;</span></span><br><span class="line">glob_pos=$((cword - <span class="number">2</span>))</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$cur</span> == *=* ]] ; <span class="keyword">then</span>     <span class="comment"># key=value case (OSX)</span></span><br><span class="line">key=<span class="variable">$&#123;cur%=*&#125;</span></span><br><span class="line">glob_pos=$((cword - <span class="number">1</span>))</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> = <span class="string">&quot;=&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">key=<span class="variable">$&#123;words[$cword - 2]&#125;</span>  <span class="comment"># key=value case</span></span><br><span class="line">glob_pos=$((cword - <span class="number">3</span>))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$&#123;words[$glob_pos]&#125;</span>&quot;</span> = <span class="string">&quot;=&quot;</span> ] &amp;&amp; ((glob_pos--))  <span class="comment"># --option=key=value syntax</span></span><br><span class="line"></span><br><span class="line">[[ <span class="variable">$&#123;words[$glob_pos]&#125;</span> == @(<span class="variable">$glob</span>) ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_value_of_option returns the value of the first option matching `option_glob`.</span></span><br><span class="line"><span class="comment"># Valid values for `option_glob` are option names like `--log-level` and globs like</span></span><br><span class="line"><span class="comment"># `--log-level|-l`</span></span><br><span class="line"><span class="comment"># Only positions between the command and the current word are considered.</span></span><br><span class="line"><span class="function"><span class="title">__docker_value_of_option</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> option_extglob=$(__docker_to_extglob <span class="string">&quot;<span class="variable">$1</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> counter=$((command_pos + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;words[$counter]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="variable">$option_extglob</span> )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;words[$counter + 1]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">(( counter++ ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_to_alternatives transforms a multiline list of strings into a single line</span></span><br><span class="line"><span class="comment"># string with the words separated by `|`.</span></span><br><span class="line"><span class="comment"># This is used to prepare arguments to __docker_pos_first_nonflag().</span></span><br><span class="line"><span class="function"><span class="title">__docker_to_alternatives</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> parts=( <span class="variable">$1</span> )</span><br><span class="line"><span class="built_in">local</span> IFS=<span class="string">&#x27;|&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;parts[*]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_to_extglob transforms a multiline list of options into an extglob pattern</span></span><br><span class="line"><span class="comment"># suitable for use in case statements.</span></span><br><span class="line"><span class="function"><span class="title">__docker_to_extglob</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> extglob=$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$1</span>&quot;</span> )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;@(<span class="variable">$extglob</span>)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_subcommands processes subcommands</span></span><br><span class="line"><span class="comment"># Locates the first occurrence of any of the subcommands contained in the</span></span><br><span class="line"><span class="comment"># first argument. In case of a match, calls the corresponding completion</span></span><br><span class="line"><span class="comment"># function and returns 0.</span></span><br><span class="line"><span class="comment"># If no match is found, 1 is returned. The calling function can then</span></span><br><span class="line"><span class="comment"># continue processing its completion.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># TODO if the preceding command has options that accept arguments and an</span></span><br><span class="line"><span class="comment"># argument is equal ot one of the subcommands, this is falsely detected as</span></span><br><span class="line"><span class="comment"># a match.</span></span><br><span class="line"><span class="function"><span class="title">__docker_subcommands</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> counter=$((command_pos + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span>) )</span><br><span class="line">subcommand_pos=<span class="variable">$counter</span></span><br><span class="line"><span class="built_in">local</span> subcommand=<span class="variable">$&#123;words[$counter]&#125;</span></span><br><span class="line"><span class="built_in">local</span> completions_func=_docker_<span class="variable">$&#123;command&#125;</span>_<span class="variable">$&#123;subcommand//-/_&#125;</span></span><br><span class="line"><span class="built_in">declare</span> -F <span class="string">&quot;<span class="variable">$completions_func</span>&quot;</span> &gt;/dev/null &amp;&amp; <span class="string">&quot;<span class="variable">$completions_func</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">(( counter++ ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_nospace suppresses trailing whitespace</span></span><br><span class="line"><span class="function"><span class="title">__docker_nospace</span></span>() &#123;</span><br><span class="line"><span class="comment"># compopt is not available in ancient bash versions</span></span><br><span class="line"><span class="built_in">type</span> compopt &amp;&gt;/dev/null &amp;&amp; compopt -o nospace</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_resolved_hostname</span></span>() &#123;</span><br><span class="line"><span class="built_in">command</span> -v host &gt;/dev/null 2&gt;&amp;1 || <span class="built_in">return</span></span><br><span class="line">COMPREPLY=( $(host 2&gt;/dev/null <span class="string">&quot;<span class="variable">$&#123;cur%:&#125;</span>&quot;</span> | awk <span class="string">&#x27;/has address/ &#123;print $4&#125;&#x27;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_local_interfaces returns a list of the names and addresses of all</span></span><br><span class="line"><span class="comment"># local network interfaces.</span></span><br><span class="line"><span class="comment"># If `--ip-only` is passed as a first argument, only addresses are returned.</span></span><br><span class="line"><span class="function"><span class="title">__docker_local_interfaces</span></span>() &#123;</span><br><span class="line"><span class="built_in">command</span> -v ip &gt;/dev/null 2&gt;&amp;1 || <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> format</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--ip-only&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">format=<span class="string">&#x27;\1&#x27;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> format=<span class="string">&#x27;\1 \2&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ip addr show scope global 2&gt;/dev/null | sed -n <span class="string">&quot;s| \+inet \([0-9.]\+\).* \([^ ]\+\)|<span class="variable">$format</span>|p&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_local_interfaces applies completion of the names and addresses of all</span></span><br><span class="line"><span class="comment"># local network interfaces based on the current value of `$cur`.</span></span><br><span class="line"><span class="comment"># An additional value can be added to the possible completions with an `--add` argument.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_local_interfaces</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> additional_interface</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--add&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">additional_interface=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="subst">$(__docker_local_interfaces <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span> <span class="variable">$additional_interface</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_local_ips applies completion of the addresses of all local network</span></span><br><span class="line"><span class="comment"># interfaces based on the current value of `$cur`.</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_local_ips</span></span>() &#123;</span><br><span class="line">__docker_complete_local_interfaces --ip-only</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_capabilities_addable completes Linux capabilities which are</span></span><br><span class="line"><span class="comment"># not granted by default and may be added.</span></span><br><span class="line"><span class="comment"># see https://docs.docker.com/engine/reference/run/#/runtime-privilege-and-linux-capabilities</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_capabilities_addable</span></span>() &#123;</span><br><span class="line">  <span class="built_in">local</span> capabilities=(</span><br><span class="line">ALL</span><br><span class="line">CAP_AUDIT_CONTROL</span><br><span class="line">CAP_AUDIT_READ</span><br><span class="line">CAP_BLOCK_SUSPEND</span><br><span class="line">CAP_BPF</span><br><span class="line">CAP_CHECKPOINT_RESTORE</span><br><span class="line">CAP_DAC_READ_SEARCH</span><br><span class="line">CAP_IPC_LOCK</span><br><span class="line">CAP_IPC_OWNER</span><br><span class="line">CAP_LEASE</span><br><span class="line">CAP_LINUX_IMMUTABLE</span><br><span class="line">CAP_MAC_ADMIN</span><br><span class="line">CAP_MAC_OVERRIDE</span><br><span class="line">CAP_NET_ADMIN</span><br><span class="line">CAP_NET_BROADCAST</span><br><span class="line">CAP_PERFMON</span><br><span class="line">CAP_SYS_ADMIN</span><br><span class="line">CAP_SYS_BOOT</span><br><span class="line">CAP_SYSLOG</span><br><span class="line">CAP_SYS_MODULE</span><br><span class="line">CAP_SYS_NICE</span><br><span class="line">CAP_SYS_PACCT</span><br><span class="line">CAP_SYS_PTRACE</span><br><span class="line">CAP_SYS_RAWIO</span><br><span class="line">CAP_SYS_RESOURCE</span><br><span class="line">CAP_SYS_TIME</span><br><span class="line">CAP_SYS_TTY_CONFIG</span><br><span class="line">CAP_WAKE_ALARM</span><br><span class="line">RESET</span><br><span class="line">  )</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;capabilities[*]&#125;</span> <span class="variable">$&#123;capabilities[*]#CAP_&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_capabilities_droppable completes Linux capability options which are</span></span><br><span class="line"><span class="comment"># allowed by default and can be dropped.</span></span><br><span class="line"><span class="comment"># see https://docs.docker.com/engine/reference/run/#/runtime-privilege-and-linux-capabilities</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_capabilities_droppable</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> capabilities=(</span><br><span class="line">ALL</span><br><span class="line">CAP_AUDIT_WRITE</span><br><span class="line">CAP_CHOWN</span><br><span class="line">CAP_DAC_OVERRIDE</span><br><span class="line">CAP_FOWNER</span><br><span class="line">CAP_FSETID</span><br><span class="line">CAP_KILL</span><br><span class="line">CAP_MKNOD</span><br><span class="line">CAP_NET_BIND_SERVICE</span><br><span class="line">CAP_NET_RAW</span><br><span class="line">CAP_SETFCAP</span><br><span class="line">CAP_SETGID</span><br><span class="line">CAP_SETPCAP</span><br><span class="line">CAP_SETUID</span><br><span class="line">CAP_SYS_CHROOT</span><br><span class="line">RESET</span><br><span class="line">)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;capabilities[*]&#125;</span> <span class="variable">$&#123;capabilities[*]#CAP_&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_detach_keys</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--detach-keys)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*,)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;cur&#125;</span>ctrl-&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;ctrl-&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_isolation</span></span>() &#123;</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;default hyperv process&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_log_drivers</span></span>() &#123;</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string">awslogs</span></span><br><span class="line"><span class="string">etwlogs</span></span><br><span class="line"><span class="string">fluentd</span></span><br><span class="line"><span class="string">gcplogs</span></span><br><span class="line"><span class="string">gelf</span></span><br><span class="line"><span class="string">journald</span></span><br><span class="line"><span class="string">json-file</span></span><br><span class="line"><span class="string">local</span></span><br><span class="line"><span class="string">logentries</span></span><br><span class="line"><span class="string">none</span></span><br><span class="line"><span class="string">splunk</span></span><br><span class="line"><span class="string">syslog</span></span><br><span class="line"><span class="string">&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_log_options</span></span>() &#123;</span><br><span class="line"><span class="comment"># see repository docker/docker.github.io/engine/admin/logging/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># really global options, defined in https://github.com/moby/moby/blob/master/daemon/logger/factory.go</span></span><br><span class="line"><span class="built_in">local</span> common_options1=<span class="string">&quot;max-buffer-size mode&quot;</span></span><br><span class="line"><span class="comment"># common options defined in https://github.com/moby/moby/blob/master/daemon/logger/loginfo.go</span></span><br><span class="line"><span class="comment"># but not implemented in all log drivers</span></span><br><span class="line"><span class="built_in">local</span> common_options2=<span class="string">&quot;env env-regex labels&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awslogs does not implement the $common_options2.</span></span><br><span class="line"><span class="built_in">local</span> awslogs_options=<span class="string">&quot;<span class="variable">$common_options1</span> awslogs-create-group awslogs-credentials-endpoint awslogs-datetime-format awslogs-group awslogs-multiline-pattern awslogs-region awslogs-stream tag&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> fluentd_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> fluentd-address fluentd-async fluentd-buffer-limit fluentd-request-ack fluentd-retry-wait fluentd-max-retries fluentd-sub-second-precision tag&quot;</span></span><br><span class="line"><span class="built_in">local</span> gcplogs_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> gcp-log-cmd gcp-meta-id gcp-meta-name gcp-meta-zone gcp-project&quot;</span></span><br><span class="line"><span class="built_in">local</span> gelf_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> gelf-address gelf-compression-level gelf-compression-type gelf-tcp-max-reconnect gelf-tcp-reconnect-delay tag&quot;</span></span><br><span class="line"><span class="built_in">local</span> journald_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> tag&quot;</span></span><br><span class="line"><span class="built_in">local</span> json_file_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> compress max-file max-size&quot;</span></span><br><span class="line"><span class="built_in">local</span> local_options=<span class="string">&quot;<span class="variable">$common_options1</span> compress max-file max-size&quot;</span></span><br><span class="line"><span class="built_in">local</span> logentries_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> line-only logentries-token tag&quot;</span></span><br><span class="line"><span class="built_in">local</span> splunk_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> splunk-caname splunk-capath splunk-format splunk-gzip splunk-gzip-level splunk-index splunk-insecureskipverify splunk-source splunk-sourcetype splunk-token splunk-url splunk-verify-connection tag&quot;</span></span><br><span class="line"><span class="built_in">local</span> syslog_options=<span class="string">&quot;<span class="variable">$common_options1</span> <span class="variable">$common_options2</span> syslog-address syslog-facility syslog-format syslog-tls-ca-cert syslog-tls-cert syslog-tls-key syslog-tls-skip-verify tag&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> all_options=<span class="string">&quot;<span class="variable">$fluentd_options</span> <span class="variable">$gcplogs_options</span> <span class="variable">$gelf_options</span> <span class="variable">$journald_options</span> <span class="variable">$logentries_options</span> <span class="variable">$json_file_options</span> <span class="variable">$syslog_options</span> <span class="variable">$splunk_options</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $(__docker_value_of_option --log-driver) <span class="keyword">in</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$all_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">awslogs)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$awslogs_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">fluentd)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$fluentd_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">gcplogs)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$gcplogs_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">gelf)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$gelf_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">journald)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$journald_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">json-file)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$json_file_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="built_in">local</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$local_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">logentries)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$logentries_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">syslog)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$syslog_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">splunk)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$splunk_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">__docker_nospace</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_log_driver_options</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--log-opt&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">awslogs-create-group)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">awslogs-credentials-endpoint)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;/&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">compress|fluentd-async-connect)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">fluentd-sub-second-precision)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">gelf-address)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;tcp udp&quot;</span> -S <span class="string">&quot;://&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">gelf-compression-level)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;1 2 3 4 5 6 7 8 9&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">gelf-compression-type)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;gzip none zlib&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">line-only)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">mode)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;blocking non-blocking&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">syslog-address)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;tcp:// tcp+tls:// udp:// unix://&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line">__ltrim_colon_completions <span class="string">&quot;<span class="variable">$&#123;cur&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">syslog-facility)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string">auth</span></span><br><span class="line"><span class="string">authpriv</span></span><br><span class="line"><span class="string">cron</span></span><br><span class="line"><span class="string">daemon</span></span><br><span class="line"><span class="string">ftp</span></span><br><span class="line"><span class="string">kern</span></span><br><span class="line"><span class="string">local0</span></span><br><span class="line"><span class="string">local1</span></span><br><span class="line"><span class="string">local2</span></span><br><span class="line"><span class="string">local3</span></span><br><span class="line"><span class="string">local4</span></span><br><span class="line"><span class="string">local5</span></span><br><span class="line"><span class="string">local6</span></span><br><span class="line"><span class="string">local7</span></span><br><span class="line"><span class="string">lpr</span></span><br><span class="line"><span class="string">mail</span></span><br><span class="line"><span class="string">news</span></span><br><span class="line"><span class="string">syslog</span></span><br><span class="line"><span class="string">user</span></span><br><span class="line"><span class="string">uucp</span></span><br><span class="line"><span class="string">&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">syslog-format)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;rfc3164 rfc5424 rfc5424micro&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">syslog-tls-ca-cert|syslog-tls-cert|syslog-tls-key)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">syslog-tls-skip-verify)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">splunk-url)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;http:// https://&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line">__ltrim_colon_completions <span class="string">&quot;<span class="variable">$&#123;cur&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">splunk-gzip|splunk-insecureskipverify|splunk-verify-connection)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">splunk-format)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;inline json raw&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_log_levels</span></span>() &#123;</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;debug info warn error fatal&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_restart</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--restart)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">on-failure:*)</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;always no on-failure on-failure: unless-stopped&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># __docker_complete_signals returns a subset of the available signals that is most likely</span></span><br><span class="line"><span class="comment"># relevant in the context of docker containers</span></span><br><span class="line"><span class="function"><span class="title">__docker_complete_signals</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> signals=(</span><br><span class="line">SIGCONT</span><br><span class="line">SIGHUP</span><br><span class="line">SIGINT</span><br><span class="line">SIGKILL</span><br><span class="line">SIGQUIT</span><br><span class="line">SIGSTOP</span><br><span class="line">SIGTERM</span><br><span class="line">SIGUSR1</span><br><span class="line">SIGUSR2</span><br><span class="line">)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;signals[*]&#125;</span> <span class="variable">$&#123;signals[*]#SIG&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="subst">$( echo <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> | tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27;)</span>&quot;</span> ) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_stack_orchestrator_options</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--kubeconfig)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">;;</span><br><span class="line">--namespace)</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">;;</span><br><span class="line">--orchestrator)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;all kubernetes swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_ulimits</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> limits=<span class="string">&quot;</span></span><br><span class="line"><span class="string">as</span></span><br><span class="line"><span class="string">chroot</span></span><br><span class="line"><span class="string">core</span></span><br><span class="line"><span class="string">cpu</span></span><br><span class="line"><span class="string">data</span></span><br><span class="line"><span class="string">fsize</span></span><br><span class="line"><span class="string">locks</span></span><br><span class="line"><span class="string">maxlogins</span></span><br><span class="line"><span class="string">maxsyslogins</span></span><br><span class="line"><span class="string">memlock</span></span><br><span class="line"><span class="string">msgqueue</span></span><br><span class="line"><span class="string">nice</span></span><br><span class="line"><span class="string">nofile</span></span><br><span class="line"><span class="string">nproc</span></span><br><span class="line"><span class="string">priority</span></span><br><span class="line"><span class="string">rss</span></span><br><span class="line"><span class="string">rtprio</span></span><br><span class="line"><span class="string">sigpending</span></span><br><span class="line"><span class="string">stack</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--rm&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$limits</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$limits</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__docker_complete_user_group</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$cur</span> == *:* ]] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $(compgen -g -- <span class="string">&quot;<span class="variable">$&#123;cur#*:&#125;</span>&quot;</span>) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">COMPREPLY=( $(compgen -u -S : -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_docker</span></span>() &#123;</span><br><span class="line"><span class="comment"># global options that may appear after the docker command</span></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="variable">$global_boolean_options</span></span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">--version -v</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--config)</span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--context|-c)</span><br><span class="line">__docker_complete_contexts</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-level|-l)</span><br><span class="line">__docker_complete_log_levels</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$global_options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$boolean_options</span> <span class="variable">$global_options_with_args</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$global_options_with_args</span>&quot;</span>)</span>&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_server_is_experimental &amp;&amp; commands+=(<span class="variable">$&#123;experimental_server_commands[*]&#125;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;commands[*]&#125;</span> help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_attach</span></span>() &#123;</span><br><span class="line">_docker_container_attach</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_build</span></span>() &#123;</span><br><span class="line">_docker_image_build</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_builder</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">build</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_builder_build</span></span>() &#123;</span><br><span class="line">_docker_image_build</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_builder_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;description id inuse parent private shared type until unused-for&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--keep-storage)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --filter --force -f --help --keep-storage&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_checkpoint</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_checkpoint_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--checkpoint-dir)</span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--checkpoint-dir --help --leave-running&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--checkpoint-dir&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_running</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_checkpoint_ls</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--checkpoint-dir)</span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--checkpoint-dir --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--checkpoint-dir&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_checkpoint_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--checkpoint-dir)</span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--checkpoint-dir --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--checkpoint-dir&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="subst">$(__docker_q checkpoint ls <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> | sed 1d)</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--label|-l)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--template-driver)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;golang&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --label -l --template-driver&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--label|-l|--template-driver&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --pretty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_configs</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_list</span></span>() &#123;</span><br><span class="line">_docker_config_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_configs --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_configs --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;id label name&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format --filter -f --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_remove</span></span>() &#123;</span><br><span class="line">_docker_config_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_config_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_configs</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">attach</span></span><br><span class="line"><span class="string">commit</span></span><br><span class="line"><span class="string">cp</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">diff</span></span><br><span class="line"><span class="string">exec</span></span><br><span class="line"><span class="string">export</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">kill</span></span><br><span class="line"><span class="string">logs</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">pause</span></span><br><span class="line"><span class="string">port</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">rename</span></span><br><span class="line"><span class="string">restart</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">run</span></span><br><span class="line"><span class="string">start</span></span><br><span class="line"><span class="string">stats</span></span><br><span class="line"><span class="string">stop</span></span><br><span class="line"><span class="string">top</span></span><br><span class="line"><span class="string">unpause</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">wait</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">ps</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_attach</span></span>() &#123;</span><br><span class="line">__docker_complete_detach_keys &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--detach-keys --help --no-stdin --sig-proxy=false&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--detach-keys&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_running</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_commit</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--author|-a|--change|-c|--message|-m)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--author -a --change -c --help --message -m --pause=false -p=false&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--author|-a|--change|-c|--message|-m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_cp</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--archive -a --follow-link -L --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="comment"># combined container and filename completion</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">local</span> files=( <span class="variable">$&#123;COMPREPLY[@]&#125;</span> )</span><br><span class="line"></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> -S <span class="string">&#x27;:&#x27;</span> ) )</span><br><span class="line"><span class="built_in">local</span> containers=( <span class="variable">$&#123;COMPREPLY[@]&#125;</span> )</span><br><span class="line"></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;files[*]&#125;</span> <span class="variable">$&#123;containers[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> = *: ]]; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">(( counter++ ))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> -S <span class="string">&#x27;:&#x27;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_create</span></span>() &#123;</span><br><span class="line">_docker_container_run_and_create</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_diff</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_exec</span></span>() &#123;</span><br><span class="line">__docker_complete_detach_keys &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">env</span>|-e)</span><br><span class="line"><span class="comment"># we do not append a &quot;=&quot; here because &quot;-e VARNAME&quot; is legal syntax, too</span></span><br><span class="line">COMPREPLY=( $( compgen -e -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--env-file)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--user|-u)</span><br><span class="line">__docker_complete_user_group</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--workdir|-w)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--detach -d --detach-keys --env -e --env-file --help --interactive -i --privileged -t --tty -u --user --workdir -w&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_export</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--output|-o)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --output -o&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_inspect</span></span>() &#123;</span><br><span class="line">_docker_inspect --<span class="built_in">type</span> container</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_kill</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--signal|-s)</span><br><span class="line">__docker_complete_signals</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --signal -s&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_logs</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--since|--<span class="built_in">tail</span>|-n|--until)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--details --follow -f --help --since --tail -n --timestamps -t --until&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--since|--tail|-n|--until&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_list</span></span>() &#123;</span><br><span class="line">_docker_container_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">ancestor)</span><br><span class="line">__docker_complete_images --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --repo --tag --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">before)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">expose|publish)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">health)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;healthy starting none unhealthy&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">is-task)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;true false&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">network)</span><br><span class="line">__docker_complete_networks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">since)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">status)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;created dead exited paused restarting running removing&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">volume)</span><br><span class="line">__docker_complete_volumes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;ancestor before exited expose health id is-task label name network publish since status volume&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format|--last|-n)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --filter -f --format --help --last -n --latest -l --no-trunc --quiet -q --size -s&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_pause</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_port</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;label label! until&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --filter --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_ps</span></span>() &#123;</span><br><span class="line">_docker_container_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_rename</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_restart</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--time|-t)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --time -t&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help --link -l --volumes -v&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;COMP_WORDS[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$arg</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--force|-f)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">__docker_complete_containers_removable</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_run</span></span>() &#123;</span><br><span class="line">_docker_container_run_and_create</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># _docker_container_run_and_create is the combined completion for `_docker_container_run`</span></span><br><span class="line"><span class="comment"># and `_docker_container_create`</span></span><br><span class="line"><span class="function"><span class="title">_docker_container_run_and_create</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--add-host</span></span><br><span class="line"><span class="string">--attach -a</span></span><br><span class="line"><span class="string">--blkio-weight</span></span><br><span class="line"><span class="string">--blkio-weight-device</span></span><br><span class="line"><span class="string">--cap-add</span></span><br><span class="line"><span class="string">--cap-drop</span></span><br><span class="line"><span class="string">--cgroupns</span></span><br><span class="line"><span class="string">--cgroup-parent</span></span><br><span class="line"><span class="string">--cidfile</span></span><br><span class="line"><span class="string">--cpu-period</span></span><br><span class="line"><span class="string">--cpu-quota</span></span><br><span class="line"><span class="string">--cpu-rt-period</span></span><br><span class="line"><span class="string">--cpu-rt-runtime</span></span><br><span class="line"><span class="string">--cpuset-cpus</span></span><br><span class="line"><span class="string">--cpus</span></span><br><span class="line"><span class="string">--cpuset-mems</span></span><br><span class="line"><span class="string">--cpu-shares -c</span></span><br><span class="line"><span class="string">--device</span></span><br><span class="line"><span class="string">--device-cgroup-rule</span></span><br><span class="line"><span class="string">--device-read-bps</span></span><br><span class="line"><span class="string">--device-read-iops</span></span><br><span class="line"><span class="string">--device-write-bps</span></span><br><span class="line"><span class="string">--device-write-iops</span></span><br><span class="line"><span class="string">--dns</span></span><br><span class="line"><span class="string">--dns-option</span></span><br><span class="line"><span class="string">--dns-search</span></span><br><span class="line"><span class="string">--domainname</span></span><br><span class="line"><span class="string">--entrypoint</span></span><br><span class="line"><span class="string">--env -e</span></span><br><span class="line"><span class="string">--env-file</span></span><br><span class="line"><span class="string">--expose</span></span><br><span class="line"><span class="string">--gpus</span></span><br><span class="line"><span class="string">--group-add</span></span><br><span class="line"><span class="string">--health-cmd</span></span><br><span class="line"><span class="string">--health-interval</span></span><br><span class="line"><span class="string">--health-retries</span></span><br><span class="line"><span class="string">--health-start-period</span></span><br><span class="line"><span class="string">--health-timeout</span></span><br><span class="line"><span class="string">--hostname -h</span></span><br><span class="line"><span class="string">--ip</span></span><br><span class="line"><span class="string">--ip6</span></span><br><span class="line"><span class="string">--ipc</span></span><br><span class="line"><span class="string">--kernel-memory</span></span><br><span class="line"><span class="string">--label-file</span></span><br><span class="line"><span class="string">--label -l</span></span><br><span class="line"><span class="string">--link</span></span><br><span class="line"><span class="string">--link-local-ip</span></span><br><span class="line"><span class="string">--log-driver</span></span><br><span class="line"><span class="string">--log-opt</span></span><br><span class="line"><span class="string">--mac-address</span></span><br><span class="line"><span class="string">--memory -m</span></span><br><span class="line"><span class="string">--memory-swap</span></span><br><span class="line"><span class="string">--memory-swappiness</span></span><br><span class="line"><span class="string">--memory-reservation</span></span><br><span class="line"><span class="string">--mount</span></span><br><span class="line"><span class="string">--name</span></span><br><span class="line"><span class="string">--network</span></span><br><span class="line"><span class="string">--network-alias</span></span><br><span class="line"><span class="string">--oom-score-adj</span></span><br><span class="line"><span class="string">--pid</span></span><br><span class="line"><span class="string">--pids-limit</span></span><br><span class="line"><span class="string">--publish -p</span></span><br><span class="line"><span class="string">--pull</span></span><br><span class="line"><span class="string">--restart</span></span><br><span class="line"><span class="string">--runtime</span></span><br><span class="line"><span class="string">--security-opt</span></span><br><span class="line"><span class="string">--shm-size</span></span><br><span class="line"><span class="string">--stop-signal</span></span><br><span class="line"><span class="string">--stop-timeout</span></span><br><span class="line"><span class="string">--storage-opt</span></span><br><span class="line"><span class="string">--tmpfs</span></span><br><span class="line"><span class="string">--sysctl</span></span><br><span class="line"><span class="string">--ulimit</span></span><br><span class="line"><span class="string">--user -u</span></span><br><span class="line"><span class="string">--userns</span></span><br><span class="line"><span class="string">--uts</span></span><br><span class="line"><span class="string">--volume-driver</span></span><br><span class="line"><span class="string">--volumes-from</span></span><br><span class="line"><span class="string">--volume -v</span></span><br><span class="line"><span class="string">--workdir -w</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_server_os_is windows &amp;&amp; options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--cpu-count</span></span><br><span class="line"><span class="string">--cpu-percent</span></span><br><span class="line"><span class="string">--io-maxbandwidth</span></span><br><span class="line"><span class="string">--io-maxiops</span></span><br><span class="line"><span class="string">--isolation</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_server_is_experimental &amp;&amp; options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--platform</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--disable-content-trust=false</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">--init</span></span><br><span class="line"><span class="string">--interactive -i</span></span><br><span class="line"><span class="string">--no-healthcheck</span></span><br><span class="line"><span class="string">--oom-kill-disable</span></span><br><span class="line"><span class="string">--privileged</span></span><br><span class="line"><span class="string">--publish-all -P</span></span><br><span class="line"><span class="string">--read-only</span></span><br><span class="line"><span class="string">--tty -t</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$command</span>&quot;</span> = <span class="string">&quot;run&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$subcommand</span>&quot;</span> = <span class="string">&quot;run&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">options_with_args=<span class="string">&quot;<span class="variable">$options_with_args</span></span></span><br><span class="line"><span class="string">--detach-keys</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">boolean_options=<span class="string">&quot;<span class="variable">$boolean_options</span></span></span><br><span class="line"><span class="string">--detach -d</span></span><br><span class="line"><span class="string">--rm</span></span><br><span class="line"><span class="string">--sig-proxy=false</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_complete_detach_keys &amp;&amp; <span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> all_options=<span class="string">&quot;<span class="variable">$options_with_args</span> <span class="variable">$boolean_options</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__docker_complete_log_driver_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line">__docker_complete_restart &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--security-opt&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">label)</span><br><span class="line">[[ <span class="variable">$cur</span> == *: ]] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;user: role: type: level: disable&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span>) )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> != <span class="string">&quot;disable&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">seccomp)</span><br><span class="line"><span class="built_in">local</span> cur=<span class="variable">$&#123;cur##*=&#125;</span></span><br><span class="line">_filedir</span><br><span class="line">COMPREPLY+=( $( compgen -W <span class="string">&quot;unconfined&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--add-host)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:)</span><br><span class="line">__docker_complete_resolved_hostname</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">;;</span><br><span class="line">--attach|-a)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&#x27;stdin stdout stderr&#x27;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cap-add)</span><br><span class="line">__docker_complete_capabilities_addable</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cap-drop)</span><br><span class="line">__docker_complete_capabilities_droppable</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cidfile|--env-file|--label-file)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cgroupns)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;host private&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--device|--tmpfs|--volume|-v)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:*)</span><br><span class="line"><span class="comment"># TODO somehow do _filedir for stuff inside the image, if it&#x27;s already specified (which is also somewhat difficult to determine)</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&#x27;/&#x27;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line">;;</span><br><span class="line">/*)</span><br><span class="line">_filedir</span><br><span class="line">__docker_nospace</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">env</span>|-e)</span><br><span class="line"><span class="comment"># we do not append a &quot;=&quot; here because &quot;-e VARNAME&quot; is legal syntax, too</span></span><br><span class="line">COMPREPLY=( $( compgen -e -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--ipc)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:*)</span><br><span class="line">cur=<span class="string">&quot;<span class="variable">$&#123;cur#*:&#125;</span>&quot;</span></span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&#x27;none host private shareable container:&#x27;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> = <span class="string">&quot;container:&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--isolation)</span><br><span class="line"><span class="keyword">if</span> __docker_server_os_is windows ; <span class="keyword">then</span></span><br><span class="line">__docker_complete_isolation</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">link</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:*)</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> -S <span class="string">&#x27;:&#x27;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-driver)</span><br><span class="line">__docker_complete_log_drivers</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-opt)</span><br><span class="line">__docker_complete_log_options</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--network)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">container:*)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur#*:&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="subst">$(__docker_plugins_bundled --type Network)</span> <span class="subst">$(__docker_networks)</span> container:&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> = <span class="string">&quot;container:&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--pid)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:*)</span><br><span class="line">__docker_complete_containers_running --cur <span class="string">&quot;<span class="variable">$&#123;cur#*:&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&#x27;host container:&#x27;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> = <span class="string">&quot;container:&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--pull)</span><br><span class="line">  COMPREPLY=( $( compgen -W <span class="string">&#x27;always missing never&#x27;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">  <span class="built_in">return</span></span><br><span class="line">  ;;</span><br><span class="line">--runtime)</span><br><span class="line">__docker_complete_runtimes</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--security-opt)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;apparmor= label= no-new-privileges seccomp= systempaths=unconfined&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;COMPREPLY[*]&#125;</span> = *= ]] ; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--stop-signal)</span><br><span class="line">__docker_complete_signals</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--storage-opt)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;size&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">ulimit</span>)</span><br><span class="line">__docker_complete_ulimits</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--user|-u)</span><br><span class="line">__docker_complete_user_group</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--userns)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;host&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--volume-driver)</span><br><span class="line">__docker_complete_plugins_bundled --<span class="built_in">type</span> Volume</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--volumes-from)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$all_options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span> )</span>&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_start</span></span>() &#123;</span><br><span class="line">__docker_complete_detach_keys &amp;&amp; <span class="built_in">return</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--checkpoint)</span><br><span class="line"><span class="keyword">if</span> __docker_server_is_experimental ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">--checkpoint-dir)</span><br><span class="line"><span class="keyword">if</span> __docker_server_is_experimental ; <span class="keyword">then</span></span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--attach -a --detach-keys --help --interactive -i&quot;</span></span><br><span class="line">__docker_server_is_experimental &amp;&amp; options+=<span class="string">&quot; --checkpoint --checkpoint-dir&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_stopped</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_stats</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --format --help --no-stream --no-trunc&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_stop</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--time|-t)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --time -t&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_stoppable</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_top</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_running</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_unpause</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_unpauseable</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_update</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--blkio-weight</span></span><br><span class="line"><span class="string">--cpu-period</span></span><br><span class="line"><span class="string">--cpu-quota</span></span><br><span class="line"><span class="string">--cpu-rt-period</span></span><br><span class="line"><span class="string">--cpu-rt-runtime</span></span><br><span class="line"><span class="string">--cpus</span></span><br><span class="line"><span class="string">--cpuset-cpus</span></span><br><span class="line"><span class="string">--cpuset-mems</span></span><br><span class="line"><span class="string">--cpu-shares -c</span></span><br><span class="line"><span class="string">--kernel-memory</span></span><br><span class="line"><span class="string">--memory -m</span></span><br><span class="line"><span class="string">--memory-reservation</span></span><br><span class="line"><span class="string">--memory-swap</span></span><br><span class="line"><span class="string">--pids-limit</span></span><br><span class="line"><span class="string">--restart</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> all_options=<span class="string">&quot;<span class="variable">$options_with_args</span> <span class="variable">$boolean_options</span>&quot;</span></span><br><span class="line"></span><br><span class="line">__docker_complete_restart &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$all_options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_container_wait</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">export</span></span><br><span class="line"><span class="string">import</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">use</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--default-stack-orchestrator)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;all kubernetes swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--description|--docker|--kubernetes)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--from)</span><br><span class="line">__docker_complete_contexts</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--default-stack-orchestrator --description --docker --from --help --kubernetes&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_export</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --kubeconfig&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_contexts</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_import</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_contexts</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_list</span></span>() &#123;</span><br><span class="line">_docker_context_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_ls</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_remove</span></span>() &#123;</span><br><span class="line">_docker_context_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_contexts</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_update</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--default-stack-orchestrator)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;all kubernetes swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--description|--docker|--kubernetes)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--default-stack-orchestrator --description --docker --help --kubernetes&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_contexts</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_context_use</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_contexts --add default</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_commit</span></span>() &#123;</span><br><span class="line">_docker_container_commit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_cp</span></span>() &#123;</span><br><span class="line">_docker_container_cp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_create</span></span>() &#123;</span><br><span class="line">_docker_container_create</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_daemon</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="variable">$global_boolean_options</span></span></span><br><span class="line"><span class="string">--experimental</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">--icc=false</span></span><br><span class="line"><span class="string">--init</span></span><br><span class="line"><span class="string">--ip-forward=false</span></span><br><span class="line"><span class="string">--ip-masq=false</span></span><br><span class="line"><span class="string">--iptables=false</span></span><br><span class="line"><span class="string">--ip6tables</span></span><br><span class="line"><span class="string">--ipv6</span></span><br><span class="line"><span class="string">--live-restore</span></span><br><span class="line"><span class="string">--no-new-privileges</span></span><br><span class="line"><span class="string">--raw-logs</span></span><br><span class="line"><span class="string">--selinux-enabled</span></span><br><span class="line"><span class="string">--userland-proxy=false</span></span><br><span class="line"><span class="string">--validate</span></span><br><span class="line"><span class="string">--version -v</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="variable">$global_options_with_args</span></span></span><br><span class="line"><span class="string">--add-runtime</span></span><br><span class="line"><span class="string">--allow-nondistributable-artifacts</span></span><br><span class="line"><span class="string">--api-cors-header</span></span><br><span class="line"><span class="string">--authorization-plugin</span></span><br><span class="line"><span class="string">--bip</span></span><br><span class="line"><span class="string">--bridge -b</span></span><br><span class="line"><span class="string">--cgroup-parent</span></span><br><span class="line"><span class="string">--cluster-advertise</span></span><br><span class="line"><span class="string">--cluster-store</span></span><br><span class="line"><span class="string">--cluster-store-opt</span></span><br><span class="line"><span class="string">--config-file</span></span><br><span class="line"><span class="string">--containerd</span></span><br><span class="line"><span class="string">--containerd-namespace</span></span><br><span class="line"><span class="string">--containerd-plugins-namespace</span></span><br><span class="line"><span class="string">--cpu-rt-period</span></span><br><span class="line"><span class="string">--cpu-rt-runtime</span></span><br><span class="line"><span class="string">--data-root</span></span><br><span class="line"><span class="string">--default-address-pool</span></span><br><span class="line"><span class="string">--default-gateway</span></span><br><span class="line"><span class="string">--default-gateway-v6</span></span><br><span class="line"><span class="string">--default-runtime</span></span><br><span class="line"><span class="string">--default-shm-size</span></span><br><span class="line"><span class="string">--default-ulimit</span></span><br><span class="line"><span class="string">--dns</span></span><br><span class="line"><span class="string">--dns-search</span></span><br><span class="line"><span class="string">--dns-opt</span></span><br><span class="line"><span class="string">--exec-opt</span></span><br><span class="line"><span class="string">--exec-root</span></span><br><span class="line"><span class="string">--fixed-cidr</span></span><br><span class="line"><span class="string">--fixed-cidr-v6</span></span><br><span class="line"><span class="string">--group -G</span></span><br><span class="line"><span class="string">--init-path</span></span><br><span class="line"><span class="string">--insecure-registry</span></span><br><span class="line"><span class="string">--ip</span></span><br><span class="line"><span class="string">--label</span></span><br><span class="line"><span class="string">--log-driver</span></span><br><span class="line"><span class="string">--log-opt</span></span><br><span class="line"><span class="string">--max-concurrent-downloads</span></span><br><span class="line"><span class="string">--max-concurrent-uploads</span></span><br><span class="line"><span class="string">--max-download-attempts</span></span><br><span class="line"><span class="string">--metrics-addr</span></span><br><span class="line"><span class="string">--mtu</span></span><br><span class="line"><span class="string">--network-control-plane-mtu</span></span><br><span class="line"><span class="string">--node-generic-resource</span></span><br><span class="line"><span class="string">--oom-score-adjust</span></span><br><span class="line"><span class="string">--pidfile -p</span></span><br><span class="line"><span class="string">--registry-mirror</span></span><br><span class="line"><span class="string">--seccomp-profile</span></span><br><span class="line"><span class="string">--shutdown-timeout</span></span><br><span class="line"><span class="string">--storage-driver -s</span></span><br><span class="line"><span class="string">--storage-opt</span></span><br><span class="line"><span class="string">--swarm-default-advertise-addr</span></span><br><span class="line"><span class="string">--userland-proxy-path</span></span><br><span class="line"><span class="string">--userns-remap</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">__docker_complete_log_driver_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--cluster-store-opt&#x27;</span>)</span><br><span class="line"> <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"> kv.*file)</span><br><span class="line">cur=<span class="variable">$&#123;cur##*=&#125;</span></span><br><span class="line"> _filedir</span><br><span class="line"> <span class="built_in">return</span></span><br><span class="line"> ;;</span><br><span class="line"> <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--storage-opt&#x27;</span>)</span><br><span class="line"> <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"> dm.blkdiscard|dm.override_udev_sync_check|dm.use_deferred_removal|dm.use_deferred_deletion)</span><br><span class="line"> COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"> <span class="built_in">return</span></span><br><span class="line"> ;;</span><br><span class="line">dm.directlvm_device|dm.thinpooldev)</span><br><span class="line">cur=<span class="variable">$&#123;cur##*=&#125;</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">dm.fs)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;ext4 xfs&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">dm.libdm_log_level)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2 3 4 5 6 7&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"> <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--authorization-plugin)</span><br><span class="line">__docker_complete_plugins_bundled --<span class="built_in">type</span> Authorization</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cluster-store)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;consul etcd zk&quot;</span> -S <span class="string">&quot;://&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cluster-store-opt)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;discovery.heartbeat discovery.ttl kv.cacertfile kv.certfile kv.keyfile kv.path&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--config-file|--containerd|--init-path|--pidfile|-p|--tlscacert|--tlscert|--tlskey|--userland-proxy-path)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--default-ulimit)</span><br><span class="line">__docker_complete_ulimits</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--exec-root|--data-root)</span><br><span class="line">_filedir -d</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-driver)</span><br><span class="line">__docker_complete_log_drivers</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--storage-driver|-s)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;aufs btrfs overlay2 vfs zfs&quot;</span> -- <span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> | tr &#x27;[:upper:]&#x27; &#x27;[:lower:]&#x27;)</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--storage-opt)</span><br><span class="line"><span class="built_in">local</span> btrfs_options=<span class="string">&quot;btrfs.min_space&quot;</span></span><br><span class="line"><span class="built_in">local</span> overlay2_options=<span class="string">&quot;overlay2.size&quot;</span></span><br><span class="line"><span class="built_in">local</span> zfs_options=<span class="string">&quot;zfs.fsname&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> all_options=<span class="string">&quot;<span class="variable">$btrfs_options</span> <span class="variable">$overlay2_options</span> <span class="variable">$zfs_options</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $(__docker_value_of_option <span class="string">&#x27;--storage-driver|-s&#x27;</span>) <span class="keyword">in</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$all_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">btrfs)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$btrfs_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">overlay2)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$overlay2_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">zfs)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$zfs_options</span>&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-level|-l)</span><br><span class="line">__docker_complete_log_levels</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-opt)</span><br><span class="line">__docker_complete_log_options</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--metrics-addr)</span><br><span class="line">__docker_complete_local_ips</span><br><span class="line">__docker_append_to_completions <span class="string">&quot;:&quot;</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--seccomp-profile)</span><br><span class="line">_filedir json</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--swarm-default-advertise-addr)</span><br><span class="line">__docker_complete_local_interfaces</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--userns-remap)</span><br><span class="line">__docker_complete_user_group</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$boolean_options</span> <span class="variable">$options_with_args</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_diff</span></span>() &#123;</span><br><span class="line">_docker_container_diff</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_events</span></span>() &#123;</span><br><span class="line">_docker_system_events</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_exec</span></span>() &#123;</span><br><span class="line">_docker_container_exec</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_export</span></span>() &#123;</span><br><span class="line">_docker_container_export</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_help</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;commands[*]&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_history</span></span>() &#123;</span><br><span class="line">_docker_image_history</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">build</span></span><br><span class="line"><span class="string">history</span></span><br><span class="line"><span class="string">import</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">load</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">pull</span></span><br><span class="line"><span class="string">push</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">save</span></span><br><span class="line"><span class="string">tag</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">images</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">rmi</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_build</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--add-host</span></span><br><span class="line"><span class="string">--build-arg</span></span><br><span class="line"><span class="string">--cache-from</span></span><br><span class="line"><span class="string">--cgroup-parent</span></span><br><span class="line"><span class="string">--cpuset-cpus</span></span><br><span class="line"><span class="string">--cpuset-mems</span></span><br><span class="line"><span class="string">--cpu-shares -c</span></span><br><span class="line"><span class="string">--cpu-period</span></span><br><span class="line"><span class="string">--cpu-quota</span></span><br><span class="line"><span class="string">--file -f</span></span><br><span class="line"><span class="string">--iidfile</span></span><br><span class="line"><span class="string">--label</span></span><br><span class="line"><span class="string">--memory -m</span></span><br><span class="line"><span class="string">--memory-swap</span></span><br><span class="line"><span class="string">--network</span></span><br><span class="line"><span class="string">--shm-size</span></span><br><span class="line"><span class="string">--tag -t</span></span><br><span class="line"><span class="string">--target</span></span><br><span class="line"><span class="string">--ulimit</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_server_os_is windows &amp;&amp; options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--isolation</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--disable-content-trust=false</span></span><br><span class="line"><span class="string">--force-rm</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">--no-cache</span></span><br><span class="line"><span class="string">--pull</span></span><br><span class="line"><span class="string">--quiet -q</span></span><br><span class="line"><span class="string">--rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __docker_server_is_experimental ; <span class="keyword">then</span></span><br><span class="line">options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--platform</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">boolean_options+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--squash</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$DOCKER_BUILDKIT</span>&quot;</span> = <span class="string">&quot;1&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--output -o</span></span><br><span class="line"><span class="string">--platform</span></span><br><span class="line"><span class="string">--progress</span></span><br><span class="line"><span class="string">--secret</span></span><br><span class="line"><span class="string">--ssh</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">boolean_options+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--compress</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> all_options=<span class="string">&quot;<span class="variable">$options_with_args</span> <span class="variable">$boolean_options</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--add-host)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:)</span><br><span class="line">__docker_complete_resolved_hostname</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">;;</span><br><span class="line">--build-arg)</span><br><span class="line">COMPREPLY=( $( compgen -e -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cache-from)</span><br><span class="line">__docker_complete_images --repo --tag --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--file|-f|--iidfile)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--isolation)</span><br><span class="line"><span class="keyword">if</span> __docker_server_os_is windows ; <span class="keyword">then</span></span><br><span class="line">__docker_complete_isolation</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">--network)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">container:*)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur#*:&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="subst">$(__docker_plugins_bundled --type Network)</span> <span class="subst">$(__docker_networks)</span> container:&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> = <span class="string">&quot;container:&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--progress)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;auto plain tty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--tag|-t)</span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--target)</span><br><span class="line"><span class="built_in">local</span> context_pos=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span> )</span>&quot;</span> )</span><br><span class="line"><span class="built_in">local</span> context=<span class="string">&quot;<span class="variable">$&#123;words[$context_pos]&#125;</span>&quot;</span></span><br><span class="line">context=<span class="string">&quot;<span class="variable">$&#123;context:-.&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> file=<span class="string">&quot;<span class="subst">$( __docker_value_of_option &#x27;--file|f&#x27; )</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> default_file=<span class="string">&quot;<span class="variable">$&#123;context%/&#125;</span>/Dockerfile&quot;</span></span><br><span class="line"><span class="built_in">local</span> dockerfile=<span class="string">&quot;<span class="variable">$&#123;file:-<span class="variable">$default_file</span>&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> targets=<span class="string">&quot;<span class="subst">$( sed -n &#x27;s/^FROM .\+ AS \(.\+\)/\1/p&#x27; <span class="string">&quot;<span class="variable">$dockerfile</span>&quot;</span> 2&gt;/dev/null )</span>&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$targets</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">ulimit</span>)</span><br><span class="line">__docker_complete_ulimits</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$all_options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span> )</span>&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir -d</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_history</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format --help --human=false -H=false --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--format&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_images</span></span>() &#123;</span><br><span class="line">_docker_image_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_import</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--change|-c|--message|-m|--platform)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--change -c --help --message -m&quot;</span></span><br><span class="line">__docker_server_is_experimental &amp;&amp; options+=<span class="string">&quot; --platform&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--change|-c|--message|-m&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_inspect</span></span>() &#123;</span><br><span class="line">_docker_inspect --<span class="built_in">type</span> image</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_load</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--input|-i|<span class="string">&quot;&lt;&quot;</span>)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --input -i --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_list</span></span>() &#123;</span><br><span class="line">_docker_image_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">before|since)</span><br><span class="line">__docker_complete_images --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">dangling)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">label)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">reference)</span><br><span class="line">__docker_complete_images --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;before dangling label reference since&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">                --format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --digests --filter -f --format --help --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">=)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;label label! until&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --force -f --filter --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_pull</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--platform)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--all-tags -a --disable-content-trust=false --help --quiet -q&quot;</span></span><br><span class="line">__docker_server_is_experimental &amp;&amp; options+=<span class="string">&quot; --platform&quot;</span></span><br><span class="line"></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag --platform)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;COMP_WORDS[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$arg</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--all-tags|-a)</span><br><span class="line">__docker_complete_images --repo</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_push</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all-tags -a --disable-content-trust=false --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_remove</span></span>() &#123;</span><br><span class="line">_docker_image_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help --no-prune&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_rmi</span></span>() &#123;</span><br><span class="line">_docker_image_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_save</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--output|-o|<span class="string">&quot;&gt;&quot;</span>)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --output -o&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_images --repo --tag --<span class="built_in">id</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_image_tag</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_images</span></span>() &#123;</span><br><span class="line">_docker_image_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_import</span></span>() &#123;</span><br><span class="line">_docker_image_import</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_info</span></span>() &#123;</span><br><span class="line">_docker_system_info</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_inspect</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> preselected_type</span><br><span class="line"><span class="built_in">local</span> <span class="built_in">type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;--type&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">preselected_type=<span class="built_in">yes</span></span><br><span class="line"><span class="built_in">type</span>=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">type</span>=$(__docker_value_of_option --<span class="built_in">type</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">type</span>)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$preselected_type</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;container image network node plugin secret service volume&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--format -f --help --size -s&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$preselected_type</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">options+=<span class="string">&quot; --type&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$type</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_containers --all)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_images --force-tag --id)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_networks)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_nodes)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_plugins_installed)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_secrets)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_services)</span></span></span><br><span class="line"><span class="string"><span class="subst">$(__docker_volumes)</span></span></span><br><span class="line"><span class="string">&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__ltrim_colon_completions <span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">container)</span><br><span class="line">__docker_complete_containers_all</span><br><span class="line">;;</span><br><span class="line">image)</span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line">;;</span><br><span class="line">network)</span><br><span class="line">__docker_complete_networks</span><br><span class="line">;;</span><br><span class="line">node)</span><br><span class="line">__docker_complete_nodes</span><br><span class="line">;;</span><br><span class="line">plugin)</span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line">;;</span><br><span class="line">secret)</span><br><span class="line">__docker_complete_secrets</span><br><span class="line">;;</span><br><span class="line">service)</span><br><span class="line">__docker_complete_services</span><br><span class="line">;;</span><br><span class="line">volume)</span><br><span class="line">__docker_complete_volumes</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_kill</span></span>() &#123;</span><br><span class="line">_docker_container_kill</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_load</span></span>() &#123;</span><br><span class="line">_docker_image_load</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_login</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--password|-p|--username|-u)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --password -p --password-stdin --username -u&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_logout</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_logs</span></span>() &#123;</span><br><span class="line">_docker_container_logs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_connect</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--alias</span></span><br><span class="line"><span class="string">--ip</span></span><br><span class="line"><span class="string">--ip6</span></span><br><span class="line"><span class="string">--link</span></span><br><span class="line"><span class="string">--link-local-ip</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">link</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:*)</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_containers_running</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$&#123;COMPREPLY[*]&#125;</span>&quot;</span> -S <span class="string">&#x27;:&#x27;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$boolean_options</span> <span class="variable">$options_with_args</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span> )</span>&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_networks</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_all</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--aux-address|--gateway|--ip-range|--ipam-opt|--ipv6|--opt|-o|--subnet)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--config-from)</span><br><span class="line">__docker_complete_networks</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--driver|-d)</span><br><span class="line"><span class="comment"># remove drivers that allow one instance only, add drivers missing in `docker info`</span></span><br><span class="line">__docker_complete_plugins_bundled --<span class="built_in">type</span> Network --remove host --remove null --add macvlan</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--ipam-driver)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;default&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--label)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--scope)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;local swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--attachable --aux-address --config-from --config-only --driver -d --gateway --help --ingress --internal --ip-range --ipam-driver --ipam-opt --ipv6 --label --opt -o --scope --subnet&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_disconnect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_networks</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_containers_in_network <span class="string">&quot;<span class="variable">$prev</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --verbose&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_networks</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">dangling)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">driver)</span><br><span class="line">__docker_complete_plugins_bundled --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">type</span> Network --add macvlan</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_networks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_networks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">scope)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;global local swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">type</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;builtin custom&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;dangling driver id label name scope type&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;label label! until&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --filter --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_networks --filter <span class="built_in">type</span>=custom</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_network</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">connect</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">disconnect</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">logs</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">rollback</span></span><br><span class="line"><span class="string">scale</span></span><br><span class="line"><span class="string">ps</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_create</span></span>() &#123;</span><br><span class="line">_docker_service_update_and_create</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --pretty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_services</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_logs</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--since|--<span class="built_in">tail</span>|-n)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--details --follow -f --help --no-resolve --no-task-ids --no-trunc --raw --since --tail -n --timestamps -t&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--since|--tail|-n&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_services_and_tasks</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_list</span></span>() &#123;</span><br><span class="line">_docker_service_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">mode)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;global global-job replicated replicated-job&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;id label mode name&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_remove</span></span>() &#123;</span><br><span class="line">_docker_service_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_services</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_rollback</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--detach -d --help --quit -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_services</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_scale</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--detach -d --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_services</span><br><span class="line">__docker_append_to_completions <span class="string">&quot;=&quot;</span></span><br><span class="line">__docker_nospace</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_ps</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">desired-state)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;accepted running shutdown&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">node)</span><br><span class="line">__docker_complete_nodes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --add self</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;desired-state id name node&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --no-resolve --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_services</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_service_update</span></span>() &#123;</span><br><span class="line">_docker_service_update_and_create</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># _docker_service_update_and_create is the combined completion for `docker service create`</span></span><br><span class="line"><span class="comment"># and `docker service update`</span></span><br><span class="line"><span class="function"><span class="title">_docker_service_update_and_create</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--cap-add</span></span><br><span class="line"><span class="string">--cap-drop</span></span><br><span class="line"><span class="string">--endpoint-mode</span></span><br><span class="line"><span class="string">--entrypoint</span></span><br><span class="line"><span class="string">--health-cmd</span></span><br><span class="line"><span class="string">--health-interval</span></span><br><span class="line"><span class="string">--health-retries</span></span><br><span class="line"><span class="string">--health-start-period</span></span><br><span class="line"><span class="string">--health-timeout</span></span><br><span class="line"><span class="string">--hostname</span></span><br><span class="line"><span class="string">--isolation</span></span><br><span class="line"><span class="string">--limit-cpu</span></span><br><span class="line"><span class="string">--limit-memory</span></span><br><span class="line"><span class="string">--limit-pids</span></span><br><span class="line"><span class="string">--log-driver</span></span><br><span class="line"><span class="string">--log-opt</span></span><br><span class="line"><span class="string">--max-replicas</span></span><br><span class="line"><span class="string">--replicas</span></span><br><span class="line"><span class="string">--replicas-max-per-node</span></span><br><span class="line"><span class="string">--reserve-cpu</span></span><br><span class="line"><span class="string">--reserve-memory</span></span><br><span class="line"><span class="string">--restart-condition</span></span><br><span class="line"><span class="string">--restart-delay</span></span><br><span class="line"><span class="string">--restart-max-attempts</span></span><br><span class="line"><span class="string">--restart-window</span></span><br><span class="line"><span class="string">--rollback-delay</span></span><br><span class="line"><span class="string">--rollback-failure-action</span></span><br><span class="line"><span class="string">--rollback-max-failure-ratio</span></span><br><span class="line"><span class="string">--rollback-monitor</span></span><br><span class="line"><span class="string">--rollback-order</span></span><br><span class="line"><span class="string">--rollback-parallelism</span></span><br><span class="line"><span class="string">--stop-grace-period</span></span><br><span class="line"><span class="string">--stop-signal</span></span><br><span class="line"><span class="string">--update-delay</span></span><br><span class="line"><span class="string">--update-failure-action</span></span><br><span class="line"><span class="string">--update-max-failure-ratio</span></span><br><span class="line"><span class="string">--update-monitor</span></span><br><span class="line"><span class="string">--update-order</span></span><br><span class="line"><span class="string">--update-parallelism</span></span><br><span class="line"><span class="string">--user -u</span></span><br><span class="line"><span class="string">--workdir -w</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_server_os_is windows &amp;&amp; options_with_args+=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--credential-spec</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--detach -d</span></span><br><span class="line"><span class="string">--help</span></span><br><span class="line"><span class="string">--init</span></span><br><span class="line"><span class="string">--no-healthcheck</span></span><br><span class="line"><span class="string">--no-resolve-image</span></span><br><span class="line"><span class="string">--read-only</span></span><br><span class="line"><span class="string">--tty -t</span></span><br><span class="line"><span class="string">--with-registry-auth</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">__docker_complete_log_driver_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$subcommand</span>&quot;</span> = <span class="string">&quot;create&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">options_with_args=<span class="string">&quot;<span class="variable">$options_with_args</span></span></span><br><span class="line"><span class="string">--config</span></span><br><span class="line"><span class="string">--constraint</span></span><br><span class="line"><span class="string">--container-label</span></span><br><span class="line"><span class="string">--dns</span></span><br><span class="line"><span class="string">--dns-option</span></span><br><span class="line"><span class="string">--dns-search</span></span><br><span class="line"><span class="string">--env -e</span></span><br><span class="line"><span class="string">--env-file</span></span><br><span class="line"><span class="string">--generic-resource</span></span><br><span class="line"><span class="string">--group</span></span><br><span class="line"><span class="string">--host</span></span><br><span class="line"><span class="string">--label -l</span></span><br><span class="line"><span class="string">--mode</span></span><br><span class="line"><span class="string">--mount</span></span><br><span class="line"><span class="string">--name</span></span><br><span class="line"><span class="string">--network</span></span><br><span class="line"><span class="string">--placement-pref</span></span><br><span class="line"><span class="string">--publish -p</span></span><br><span class="line"><span class="string">--secret</span></span><br><span class="line"><span class="string">--sysctl</span></span><br><span class="line"><span class="string">--ulimit</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--env-file)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--mode)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;global global-job replicated replicated-job&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$subcommand</span>&quot;</span> = <span class="string">&quot;update&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">options_with_args=<span class="string">&quot;<span class="variable">$options_with_args</span></span></span><br><span class="line"><span class="string">--args</span></span><br><span class="line"><span class="string">--config-add</span></span><br><span class="line"><span class="string">--config-rm</span></span><br><span class="line"><span class="string">--constraint-add</span></span><br><span class="line"><span class="string">--constraint-rm</span></span><br><span class="line"><span class="string">--container-label-add</span></span><br><span class="line"><span class="string">--container-label-rm</span></span><br><span class="line"><span class="string">--dns-add</span></span><br><span class="line"><span class="string">--dns-option-add</span></span><br><span class="line"><span class="string">--dns-option-rm</span></span><br><span class="line"><span class="string">--dns-rm</span></span><br><span class="line"><span class="string">--dns-search-add</span></span><br><span class="line"><span class="string">--dns-search-rm</span></span><br><span class="line"><span class="string">--env-add</span></span><br><span class="line"><span class="string">--env-rm</span></span><br><span class="line"><span class="string">--generic-resource-add</span></span><br><span class="line"><span class="string">--generic-resource-rm</span></span><br><span class="line"><span class="string">--group-add</span></span><br><span class="line"><span class="string">--group-rm</span></span><br><span class="line"><span class="string">--host-add</span></span><br><span class="line"><span class="string">--host-rm</span></span><br><span class="line"><span class="string">--image</span></span><br><span class="line"><span class="string">--label-add</span></span><br><span class="line"><span class="string">--label-rm</span></span><br><span class="line"><span class="string">--mount-add</span></span><br><span class="line"><span class="string">--mount-rm</span></span><br><span class="line"><span class="string">--network-add</span></span><br><span class="line"><span class="string">--network-rm</span></span><br><span class="line"><span class="string">--placement-pref-add</span></span><br><span class="line"><span class="string">--placement-pref-rm</span></span><br><span class="line"><span class="string">--publish-add</span></span><br><span class="line"><span class="string">--publish-rm</span></span><br><span class="line"><span class="string">--rollback</span></span><br><span class="line"><span class="string">--secret-add</span></span><br><span class="line"><span class="string">--secret-rm</span></span><br><span class="line"><span class="string">--sysctl-add</span></span><br><span class="line"><span class="string">--sysctl-rm</span></span><br><span class="line"><span class="string">--ulimit-add</span></span><br><span class="line"><span class="string">--ulimit-rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">boolean_options=<span class="string">&quot;<span class="variable">$boolean_options</span></span></span><br><span class="line"><span class="string">--force</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--env-rm)</span><br><span class="line">COMPREPLY=( $( compgen -e -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--image)</span><br><span class="line">__docker_complete_images --repo --tag --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> strategy=$(__docker_map_key_of_current_option <span class="string">&#x27;--placement-pref|--placement-pref-add|--placement-pref-rm&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$strategy</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">spread)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;engine.labels node.labels&quot;</span> -S . -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--cap-add)</span><br><span class="line">__docker_complete_capabilities_addable</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cap-drop)</span><br><span class="line">__docker_complete_capabilities_droppable</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--config|--config-add|--config-rm)</span><br><span class="line">__docker_complete_configs</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--endpoint-mode)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;dnsrr vip&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">env</span>|-e|--env-add)</span><br><span class="line"><span class="comment"># we do not append a &quot;=&quot; here because &quot;-e VARNAME&quot; is legal systax, too</span></span><br><span class="line">COMPREPLY=( $( compgen -e -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--group|--group-add|--group-rm)</span><br><span class="line">COMPREPLY=( $(compgen -g -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--host|--host-add|--host-rm)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">*:)</span><br><span class="line">__docker_complete_resolved_hostname</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">;;</span><br><span class="line">--isolation)</span><br><span class="line">__docker_complete_isolation</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-driver)</span><br><span class="line">__docker_complete_log_drivers</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--log-opt)</span><br><span class="line">__docker_complete_log_options</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--network|--network-add|--network-rm)</span><br><span class="line">__docker_complete_networks</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--placement-pref|--placement-pref-add|--placement-pref-rm)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;spread&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--restart-condition)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;any none on-failure&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--rollback-failure-action)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;continue pause&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--secret|--secret-add|--secret-rm)</span><br><span class="line">__docker_complete_secrets</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--stop-signal)</span><br><span class="line">__docker_complete_signals</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--update-failure-action)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;continue pause rollback&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--<span class="built_in">ulimit</span>|--ulimit-add)</span><br><span class="line">__docker_complete_ulimits</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--ulimit-rm)</span><br><span class="line">__docker_complete_ulimits --<span class="built_in">rm</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--update-order|--rollback-order)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;start-first stop-first&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--user|-u)</span><br><span class="line">__docker_complete_user_group</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span>) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$boolean_options</span> <span class="variable">$options_with_args</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;<span class="subst">$( __docker_to_alternatives <span class="string">&quot;<span class="variable">$options_with_args</span>&quot;</span> )</span>&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$subcommand</span>&quot;</span> = <span class="string">&quot;update&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_services</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">ca</span></span><br><span class="line"><span class="string">init</span></span><br><span class="line"><span class="string">join</span></span><br><span class="line"><span class="string">join-token</span></span><br><span class="line"><span class="string">leave</span></span><br><span class="line"><span class="string">unlock</span></span><br><span class="line"><span class="string">unlock-key</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_ca</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--ca-cert|--ca-key)</span><br><span class="line">_filedir</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cert-expiry|--external-ca)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--ca-cert --ca-key --cert-expiry --detach -d --external-ca --help --quiet -q --rotate&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_init</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--advertise-addr)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$cur</span> == *: ]] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2377&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*:&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">__docker_complete_local_interfaces</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--availability)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;active drain pause&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--cert-expiry|--data-path-port|--default-addr-pool|--default-addr-pool-mask-length|--dispatcher-heartbeat|--external-ca|--max-snapshots|--snapshot-interval|--task-history-limit )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--data-path-addr)</span><br><span class="line">__docker_complete_local_interfaces</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--listen-addr)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$cur</span> == *: ]] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2377&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*:&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">__docker_complete_local_interfaces --add 0.0.0.0</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--advertise-addr --autolock --availability --cert-expiry --data-path-addr --data-path-port --default-addr-pool --default-addr-pool-mask-length --dispatcher-heartbeat --external-ca --force-new-cluster --help --listen-addr --max-snapshots --snapshot-interval --task-history-limit &quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_join</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--advertise-addr)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$cur</span> == *: ]] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2377&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*:&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">__docker_complete_local_interfaces</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--availability)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;active drain pause&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--data-path-addr)</span><br><span class="line">__docker_complete_local_interfaces</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--listen-addr)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$cur</span> == *: ]] ; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2377&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*:&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">__docker_complete_local_interfaces --add 0.0.0.0</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--token)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--advertise-addr --availability --data-path-addr --help --listen-addr --token&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*:)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;2377&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*:&#125;</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_join_token</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --quiet -q --rotate&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;manager worker&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_leave</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_unlock</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_unlock_key</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --quiet -q --rotate&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_swarm_update</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--cert-expiry|--dispatcher-heartbeat|--external-ca|--max-snapshots|--snapshot-interval|--task-history-limit)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--autolock --cert-expiry --dispatcher-heartbeat --external-ca --help --max-snapshots --snapshot-interval --task-history-limit&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">annotate</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">push</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest_annotate</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">arch</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string">386</span></span><br><span class="line"><span class="string">amd64</span></span><br><span class="line"><span class="string">arm</span></span><br><span class="line"><span class="string">arm64</span></span><br><span class="line"><span class="string">mips64</span></span><br><span class="line"><span class="string">mips64le</span></span><br><span class="line"><span class="string">ppc64le</span></span><br><span class="line"><span class="string">riscv64</span></span><br><span class="line"><span class="string">s390x&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--os)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string">darwin</span></span><br><span class="line"><span class="string">dragonfly</span></span><br><span class="line"><span class="string">freebsd</span></span><br><span class="line"><span class="string">linux</span></span><br><span class="line"><span class="string">netbsd</span></span><br><span class="line"><span class="string">openbsd</span></span><br><span class="line"><span class="string">plan9</span></span><br><span class="line"><span class="string">solaris</span></span><br><span class="line"><span class="string">windows&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--os-features|--variant)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--arch --help --os --os-features --variant&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag <span class="string">&quot;--arch|--os|--os-features|--variant&quot;</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--amend -a --help --insecure&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --insecure --verbose -v&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest_push</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --insecure --purge -p&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$( __docker_pos_first_nonflag )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_manifest_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">demote</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">promote</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">ps</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_demote</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_nodes --filter role=manager</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --pretty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_nodes --add self</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_list</span></span>() &#123;</span><br><span class="line">_docker_node_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_nodes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">label|node.label)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">membership)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;accepted pending&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_nodes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">role)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;manager worker&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;id label membership name node.label role&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_promote</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_nodes --filter role=worker</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_remove</span></span>() &#123;</span><br><span class="line">_docker_node_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_nodes</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_ps</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">desired-state)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;accepted running shutdown&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;desired-state id label name&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --no-resolve --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_nodes --add self</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_node_update</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--availability)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;active drain pause&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--role)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;manager worker&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--label-add|--label-rm)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--availability --help --label-add --label-rm --role&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--availability|--label-add|--label-rm|--role&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_nodes</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_pause</span></span>() &#123;</span><br><span class="line">_docker_container_pause</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">disable</span></span><br><span class="line"><span class="string">enable</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">install</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">push</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">set</span></span><br><span class="line"><span class="string">upgrade</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--compress --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># reponame</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq  <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir -d</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_disable</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_plugins_installed --filter enabled=<span class="literal">true</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_enable</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">timeout</span>)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --timeout&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--timeout&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_plugins_installed --filter enabled=<span class="literal">false</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_install</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--<span class="built_in">alias</span>)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--alias --disable --disable-content-trust=false --grant-all-permissions --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_list</span></span>() &#123;</span><br><span class="line">_docker_plugin_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">capability)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;authz ipamdriver logdriver metricscollector networkdriver volumedriver&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">enabled)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;capability enabled&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --no-trunc --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_push</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_remove</span></span>() &#123;</span><br><span class="line">_docker_plugin_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_set</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_plugin_upgrade</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--disable-content-trust --grant-all-permissions --help --skip-remote-check&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_plugins_installed</span><br><span class="line">__ltrim_colon_completions <span class="string">&quot;<span class="variable">$cur</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq  <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> plugin_images=<span class="string">&quot;<span class="subst">$(__docker_plugins_installed)</span>&quot;</span></span><br><span class="line">COMPREPLY=( $(compgen -S : -W <span class="string">&quot;<span class="variable">$&#123;plugin_images%:*&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span>) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_port</span></span>() &#123;</span><br><span class="line">_docker_container_port</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_ps</span></span>() &#123;</span><br><span class="line">_docker_container_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_pull</span></span>() &#123;</span><br><span class="line">_docker_image_pull</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_push</span></span>() &#123;</span><br><span class="line">_docker_image_push</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_rename</span></span>() &#123;</span><br><span class="line">_docker_container_rename</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_restart</span></span>() &#123;</span><br><span class="line">_docker_container_restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_rm</span></span>() &#123;</span><br><span class="line">_docker_container_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_rmi</span></span>() &#123;</span><br><span class="line">_docker_image_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_run</span></span>() &#123;</span><br><span class="line">_docker_container_run</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_save</span></span>() &#123;</span><br><span class="line">_docker_image_save</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--driver|-d|--label|-l)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--template-driver)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;golang&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--driver -d --help --label -l --template-driver&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--driver|-d|--label|-l|--template-driver&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="subst">$((counter + 1)</span>)&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">_filedir</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help --pretty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_secrets</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_list</span></span>() &#123;</span><br><span class="line">_docker_secret_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_secrets --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_secrets --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;id label name&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format --filter -f --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_remove</span></span>() &#123;</span><br><span class="line">_docker_secret_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_secret_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_secrets</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_search</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">is-automated)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">is-official)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;false true&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;is-automated is-official stars&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format|--<span class="built_in">limit</span>)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --limit --no-trunc&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">deploy</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">ps</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">services</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">down</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">up</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--help --orchestrator&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --kubeconfig&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_deploy</span></span>() &#123;</span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--compose-file|-c)</span><br><span class="line">_filedir yml</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--resolve-image)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;always changed never&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--compose-file -c --help --orchestrator&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --kubeconfig --namespace&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is swarm &amp;&amp; options+=<span class="string">&quot; --prune --resolve-image --with-registry-auth&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--compose-file|-c|--kubeconfig|--namespace|--orchestrator|--resolve-image&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_stacks</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_down</span></span>() &#123;</span><br><span class="line">_docker_stack_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_list</span></span>() &#123;</span><br><span class="line">_docker_stack_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_ls</span></span>() &#123;</span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--format --help --orchestrator&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --all-namespaces --kubeconfig --namespace&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_ps</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">desired-state)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;accepted running shutdown&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_stacks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_stacks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;id name desired-state&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--filter -f --format --help --no-resolve --no-trunc --orchestrator --quiet -q&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --all-namespaces --kubeconfig --namespace&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--all-namespaces|--filter|-f|--format|--kubeconfig|--namespace&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_stacks</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_remove</span></span>() &#123;</span><br><span class="line">_docker_stack_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_rm</span></span>() &#123;</span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--help --orchestrator&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --kubeconfig --namespace&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_stacks</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_services</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">id</span>)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">id</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">label)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_services --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --name</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;id label name&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--filter -f --format --help --orchestrator --quiet -q&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --kubeconfig --namespace&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag <span class="string">&#x27;--filter|-f|--format|--kubeconfig|--namespace|--orchestrator&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_stacks</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stack_up</span></span>() &#123;</span><br><span class="line">_docker_stack_deploy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_start</span></span>() &#123;</span><br><span class="line">_docker_container_start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stats</span></span>() &#123;</span><br><span class="line">_docker_container_stats</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_stop</span></span>() &#123;</span><br><span class="line">_docker_container_stop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_system</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">df</span></span><br><span class="line"><span class="string">events</span></span><br><span class="line"><span class="string">info</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_system_df</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format --help --verbose -v&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_system_events</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;-f|--filter&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">container)</span><br><span class="line">__docker_complete_containers_all --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">daemon)</span><br><span class="line"><span class="built_in">local</span> name=$(__docker_q info | sed -n <span class="string">&#x27;s/^\(ID\|Name\): //p&#x27;</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$name</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">event)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;</span></span><br><span class="line"><span class="string">attach</span></span><br><span class="line"><span class="string">commit</span></span><br><span class="line"><span class="string">connect</span></span><br><span class="line"><span class="string">copy</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">delete</span></span><br><span class="line"><span class="string">destroy</span></span><br><span class="line"><span class="string">detach</span></span><br><span class="line"><span class="string">die</span></span><br><span class="line"><span class="string">disable</span></span><br><span class="line"><span class="string">disconnect</span></span><br><span class="line"><span class="string">enable</span></span><br><span class="line"><span class="string">exec_create</span></span><br><span class="line"><span class="string">exec_detach</span></span><br><span class="line"><span class="string">exec_die</span></span><br><span class="line"><span class="string">exec_start</span></span><br><span class="line"><span class="string">export</span></span><br><span class="line"><span class="string">health_status</span></span><br><span class="line"><span class="string">import</span></span><br><span class="line"><span class="string">install</span></span><br><span class="line"><span class="string">kill</span></span><br><span class="line"><span class="string">load</span></span><br><span class="line"><span class="string">mount</span></span><br><span class="line"><span class="string">oom</span></span><br><span class="line"><span class="string">pause</span></span><br><span class="line"><span class="string">pull</span></span><br><span class="line"><span class="string">push</span></span><br><span class="line"><span class="string">reload</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">rename</span></span><br><span class="line"><span class="string">resize</span></span><br><span class="line"><span class="string">restart</span></span><br><span class="line"><span class="string">save</span></span><br><span class="line"><span class="string">start</span></span><br><span class="line"><span class="string">stop</span></span><br><span class="line"><span class="string">tag</span></span><br><span class="line"><span class="string">top</span></span><br><span class="line"><span class="string">unmount</span></span><br><span class="line"><span class="string">unpause</span></span><br><span class="line"><span class="string">untag</span></span><br><span class="line"><span class="string">update</span></span><br><span class="line"><span class="string">&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">image)</span><br><span class="line">__docker_complete_images --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --repo --tag</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">network)</span><br><span class="line">__docker_complete_networks --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">node)</span><br><span class="line">__docker_complete_nodes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">scope)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;local swarm&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">type</span>)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;config container daemon image network node plugin secret service volume&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">volume)</span><br><span class="line">__docker_complete_volumes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;container daemon event image label network node scope type volume&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--since|--until)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --help --since --until --format&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_system_info</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_system_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;label label! until&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--all -a --force -f --filter --help --volumes&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_tag</span></span>() &#123;</span><br><span class="line">_docker_image_tag</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_trust</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">revoke</span></span><br><span class="line"><span class="string">sign</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_trust_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --pretty&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_trust_revoke</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --yes -y&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --repo --tag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_trust_sign</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help --local&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">local</span> counter=$(__docker_pos_first_nonflag)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">__docker_complete_images --force-tag --<span class="built_in">id</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_unpause</span></span>() &#123;</span><br><span class="line">_docker_container_unpause</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_update</span></span>() &#123;</span><br><span class="line">_docker_container_update</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_top</span></span>() &#123;</span><br><span class="line">_docker_container_top</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_version</span></span>() &#123;</span><br><span class="line">__docker_complete_stack_orchestrator_options &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line"><span class="built_in">local</span> options=<span class="string">&quot;--format -f --help&quot;</span></span><br><span class="line">__docker_stack_orchestrator_is kubernetes &amp;&amp; options+=<span class="string">&quot; --kubeconfig&quot;</span></span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$options</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_create</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--driver|-d)</span><br><span class="line">__docker_complete_plugins_bundled --<span class="built_in">type</span> Volume</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--label|--opt|-o)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--driver -d --help --label --opt -o&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_inspect</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--format|-f)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--format -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_volumes</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_list</span></span>() &#123;</span><br><span class="line">_docker_volume_ls</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_ls</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> key=$(__docker_map_key_of_current_option <span class="string">&#x27;--filter|-f&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$key</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">dangling)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;true false&quot;</span> -- <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> ) )</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">driver)</span><br><span class="line">__docker_complete_plugins_bundled --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span> --<span class="built_in">type</span> Volume</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">name)</span><br><span class="line">__docker_complete_volumes --cur <span class="string">&quot;<span class="variable">$&#123;cur##*=&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter|-f)</span><br><span class="line">COMPREPLY=( $( compgen -S = -W <span class="string">&quot;dangling driver label name&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line">--format)</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter -f --format --help --quiet -q&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_prune</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$prev</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">--filter)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;label label!&quot;</span> -S = -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">__docker_nospace</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--filter --force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_remove</span></span>() &#123;</span><br><span class="line">_docker_volume_rm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume_rm</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--force -f --help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">__docker_complete_volumes</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_volume</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> subcommands=<span class="string">&quot;</span></span><br><span class="line"><span class="string">create</span></span><br><span class="line"><span class="string">inspect</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">prune</span></span><br><span class="line"><span class="string">rm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> aliases=<span class="string">&quot;</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">remove</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">__docker_subcommands <span class="string">&quot;<span class="variable">$subcommands</span> <span class="variable">$aliases</span>&quot;</span> &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">-*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;--help&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">COMPREPLY=( $( compgen -W <span class="string">&quot;<span class="variable">$subcommands</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$cur</span>&quot;</span> ) )</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_wait</span></span>() &#123;</span><br><span class="line">_docker_container_wait</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">COMPOSE_PLUGIN_PATH=$(docker info --format <span class="string">&#x27;&#123;&#123;json .ClientInfo.Plugins&#125;&#125;&#x27;</span> | sed -n <span class="string">&#x27;s/.*&quot;Path&quot;:&quot;\([^&quot;]\+docker-compose\)&quot;.*/\1/p&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker_compose</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> completionCommand=<span class="string">&quot;__completeNoDesc&quot;</span></span><br><span class="line"><span class="built_in">local</span> resultArray=(<span class="variable">$COMPOSE_PLUGIN_PATH</span> <span class="variable">$completionCommand</span> compose)</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;words[@]:2&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$value</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">resultArray+=( <span class="string">&quot;&#x27;&#x27;&quot;</span> )</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">resultArray+=( <span class="string">&quot;<span class="variable">$value</span>&quot;</span> )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">local</span> result=$(<span class="built_in">eval</span> <span class="string">&quot;<span class="variable">$&#123;resultArray[*]&#125;</span>&quot;</span> 2&gt; /dev/null | grep -v <span class="string">&#x27;^:[0-9]*$&#x27;</span>)</span><br><span class="line"></span><br><span class="line">COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;result&#125;</span>&quot;</span> -- <span class="string">&quot;<span class="variable">$current</span>&quot;</span>) )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_docker</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> previous_extglob_setting=$(<span class="built_in">shopt</span> -p extglob)</span><br><span class="line"><span class="built_in">shopt</span> -s extglob</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> management_commands=(</span><br><span class="line">builder</span><br><span class="line">config</span><br><span class="line">container</span><br><span class="line">context</span><br><span class="line">image</span><br><span class="line">manifest</span><br><span class="line">network</span><br><span class="line">node</span><br><span class="line">plugin</span><br><span class="line">secret</span><br><span class="line">service</span><br><span class="line">stack</span><br><span class="line">swarm</span><br><span class="line">system</span><br><span class="line">trust</span><br><span class="line">volume</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> top_level_commands=(</span><br><span class="line">build</span><br><span class="line">login</span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line">run</span><br><span class="line">search</span><br><span class="line">version</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> legacy_commands=(</span><br><span class="line">attach</span><br><span class="line">commit</span><br><span class="line"><span class="built_in">cp</span></span><br><span class="line">create</span><br><span class="line">diff</span><br><span class="line">events</span><br><span class="line"><span class="built_in">exec</span></span><br><span class="line"><span class="built_in">export</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line">images</span><br><span class="line">import</span><br><span class="line">info</span><br><span class="line">inspect</span><br><span class="line"><span class="built_in">kill</span></span><br><span class="line">load</span><br><span class="line">logs</span><br><span class="line">pause</span><br><span class="line">port</span><br><span class="line">ps</span><br><span class="line">pull</span><br><span class="line">push</span><br><span class="line">rename</span><br><span class="line">restart</span><br><span class="line"><span class="built_in">rm</span></span><br><span class="line">rmi</span><br><span class="line">save</span><br><span class="line">start</span><br><span class="line">stats</span><br><span class="line">stop</span><br><span class="line">tag</span><br><span class="line">top</span><br><span class="line">unpause</span><br><span class="line">update</span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> known_plugin_commands=()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$COMPOSE_PLUGIN_PATH</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">known_plugin_commands+=(<span class="string">&quot;compose&quot;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> experimental_server_commands=(</span><br><span class="line">checkpoint</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> commands=(<span class="variable">$&#123;management_commands[*]&#125;</span> <span class="variable">$&#123;top_level_commands[*]&#125;</span> <span class="variable">$&#123;known_plugin_commands[*]&#125;</span>)</span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$DOCKER_HIDE_LEGACY_COMMANDS</span>&quot;</span> ] &amp;&amp; commands+=(<span class="variable">$&#123;legacy_commands[*]&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># These options are valid as global options for all client commands</span></span><br><span class="line"><span class="comment"># and valid as command options for `docker daemon`</span></span><br><span class="line"><span class="built_in">local</span> global_boolean_options=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--debug -D</span></span><br><span class="line"><span class="string">--tls</span></span><br><span class="line"><span class="string">--tlsverify</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">local</span> global_options_with_args=<span class="string">&quot;</span></span><br><span class="line"><span class="string">--config</span></span><br><span class="line"><span class="string">--context -c</span></span><br><span class="line"><span class="string">--host -H</span></span><br><span class="line"><span class="string">--log-level -l</span></span><br><span class="line"><span class="string">--tlscacert</span></span><br><span class="line"><span class="string">--tlscert</span></span><br><span class="line"><span class="string">--tlskey</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># variables to cache server info, populated on demand for performance reasons</span></span><br><span class="line"><span class="built_in">local</span> info_fetched server_experimental server_os</span><br><span class="line"><span class="comment"># variables to cache client info, populated on demand for performance reasons</span></span><br><span class="line"><span class="built_in">local</span> stack_orchestrator_is_kubernetes stack_orchestrator_is_swarm</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> host config context</span><br><span class="line"></span><br><span class="line">COMPREPLY=()</span><br><span class="line"><span class="built_in">local</span> cur prev words cword</span><br><span class="line">_get_comp_words_by_ref -n : cur prev words cword</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> <span class="built_in">command</span>=<span class="string">&#x27;docker&#x27;</span> command_pos=0 subcommand_pos</span><br><span class="line"><span class="built_in">local</span> counter=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$counter</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$cword</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">docker)</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">;;</span><br><span class="line"><span class="comment"># save host so that completion can use custom daemon</span></span><br><span class="line">--host|-H)</span><br><span class="line">(( counter++ ))</span><br><span class="line">host=<span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="comment"># save config so that completion can use custom configuration directories</span></span><br><span class="line">--config)</span><br><span class="line">(( counter++ ))</span><br><span class="line">config=<span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="comment"># save context so that completion can use custom daemon</span></span><br><span class="line">--context|-c)</span><br><span class="line">(( counter++ ))</span><br><span class="line">context=<span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">$(__docker_to_extglob <span class="string">&quot;<span class="variable">$global_options_with_args</span>&quot;</span>) )</span><br><span class="line">(( counter++ ))</span><br><span class="line">;;</span><br><span class="line">-*)</span><br><span class="line">;;</span><br><span class="line">=)</span><br><span class="line">(( counter++ ))</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">command</span>=<span class="string">&quot;<span class="variable">$&#123;words[$counter]&#125;</span>&quot;</span></span><br><span class="line">command_pos=<span class="variable">$counter</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">(( counter++ ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> binary=<span class="string">&quot;<span class="variable">$&#123;words[0]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$binary</span> == ?(*/)dockerd ]] ; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># for the dockerd binary, we reuse completion of `docker daemon`.</span></span><br><span class="line"><span class="comment"># dockerd does not have subcommands and global options.</span></span><br><span class="line"><span class="built_in">command</span>=daemon</span><br><span class="line">command_pos=0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> completions_func=_docker_<span class="variable">$&#123;command//-/_&#125;</span></span><br><span class="line"><span class="built_in">declare</span> -F <span class="variable">$completions_func</span> &gt;/dev/null &amp;&amp; <span class="variable">$completions_func</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="variable">$previous_extglob_setting</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="variable">$__docker_previous_extglob_setting</span>&quot;</span></span><br><span class="line"><span class="built_in">unset</span> __docker_previous_extglob_setting</span><br><span class="line"></span><br><span class="line">complete -F _docker docker docker.exe dockerd dockerd.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用浏览器登录linux服务器</title>
      <link href="/2023/02/20/%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BB%E5%BD%95linux%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/02/20/%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BB%E5%BD%95linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="使用浏览器登录linux服务器"><a href="#使用浏览器登录linux服务器" class="headerlink" title="使用浏览器登录linux服务器"></a>使用浏览器登录linux服务器</h2><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/huashengdun/webssh/releases/tag/v1.6.1</span><br><span class="line">在这里我选在下载的版本是：v1.6.1</span><br></pre></td></tr></table></figure><p><strong>上传到服务器上</strong></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><h3 id="创建解压目录"><a href="#创建解压目录" class="headerlink" title="创建解压目录"></a>创建解压目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /tmpdisk/webssh</span><br></pre></td></tr></table></figure><h3 id="解压离线webssh安装包"><a href="#解压离线webssh安装包" class="headerlink" title="解压离线webssh安装包"></a>解压离线webssh安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmpdisk/webssh</span><br><span class="line">unzip webssh-1.6.1.zip .</span><br></pre></td></tr></table></figure><h3 id="进入解压目录"><a href="#进入解压目录" class="headerlink" title="进入解压目录"></a>进入解压目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> webssh-1.6.1</span><br></pre></td></tr></table></figure><h3 id="使用docker-compose一键启动"><a href="#使用docker-compose一键启动" class="headerlink" title="使用docker-compose一键启动"></a>使用docker-compose一键启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up </span><br></pre></td></tr></table></figure><h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/docker/compose/releases/download/1.24.0/docker-compose-Linux-x86_64</span><br></pre></td></tr></table></figure><h3 id="赋予文件执行权限"><a href="#赋予文件执行权限" class="headerlink" title="赋予文件执行权限"></a>赋予文件执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x docker-compose-Linux-x86_64</span><br></pre></td></tr></table></figure><h3 id="拷贝到目录"><a href="#拷贝到目录" class="headerlink" title="拷贝到目录"></a>拷贝到目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> docker-compose-Linux-x86_64 /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="添加软链接"><a href="#添加软链接" class="headerlink" title="添加软链接"></a>添加软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="最后查看版本"><a href="#最后查看版本" class="headerlink" title="最后查看版本"></a>最后查看版本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="webssh使用"><a href="#webssh使用" class="headerlink" title="webssh使用"></a>webssh使用</h3><p>使用docker-compose 启动后默认将容器内的8888 端口映射到宿主机8888.通过访问宿主机的8888端口，打开webssh页面，登录Linux服务器。</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.3离线安装docker</title>
      <link href="/2023/02/17/centos7.3%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/"/>
      <url>/2023/02/17/centos7.3%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</url>
      
        <content type="html"><![CDATA[<h2 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@HZ ~]$ <span class="built_in">uname</span> -a </span><br><span class="line">Linux HZ 3.10.0-514.el7.centos.x86_64 <span class="comment">#1 SMP Fri Jan 13 15:16:57 CST 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">CentOS Linux release 7.3.1611 (Core)</span><br></pre></td></tr></table></figure><h3 id="离线包下载"><a href="#离线包下载" class="headerlink" title="离线包下载"></a>离线包下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://download.docker.com/linux/static/stable/x86_64/</span><br><span class="line">在这里我选在下载的版本是：docker-20.10.9.tgz </span><br></pre></td></tr></table></figure><p><strong>上传到服务器上</strong></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>创建数据存储目录，如果不创建默认是<code>/var/lib/docker</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /tmpdisk/docker</span><br></pre></td></tr></table></figure><h3 id="创建解压目录"><a href="#创建解压目录" class="headerlink" title="创建解压目录"></a>创建解压目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /tmpdisk/docker20.10.9</span><br></pre></td></tr></table></figure><h3 id="解压离线docker安装包"><a href="#解压离线docker安装包" class="headerlink" title="解压离线docker安装包"></a>解压离线docker安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf docker-20.10.9.tgz -C /tmpdisk/docker20.10.9</span><br></pre></td></tr></table></figure><h3 id="进入解压目录"><a href="#进入解压目录" class="headerlink" title="进入解压目录"></a>进入解压目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmpdisk/docker20.10.9/docker/bin</span><br><span class="line"><span class="built_in">cp</span> * /usr/bin</span><br></pre></td></tr></table></figure><h3 id="创建开机自启文件"><a href="#创建开机自启文件" class="headerlink" title="创建开机自启文件"></a>创建开机自启文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/docker.service</span><br></pre></td></tr></table></figure><h3 id="输入以下内容"><a href="#输入以下内容" class="headerlink" title="输入以下内容"></a>输入以下内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/bin/dockerd --selinux-enabled=<span class="literal">false</span> --insecure-registry=127.0.0.1</span><br><span class="line">ExecReload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">Delegate=<span class="built_in">yes</span></span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="赋予文件执行权限"><a href="#赋予文件执行权限" class="headerlink" title="赋予文件执行权限"></a>赋予文件执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/systemd/system/docker.service</span><br></pre></td></tr></table></figure><h3 id="重新加载配置"><a href="#重新加载配置" class="headerlink" title="重新加载配置"></a>重新加载配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="设为开机启动"><a href="#设为开机启动" class="headerlink" title="设为开机启动"></a>设为开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure><h3 id="更改docker默认存储路径，新建文件daemon-json"><a href="#更改docker默认存储路径，新建文件daemon-json" class="headerlink" title="更改docker默认存储路径，新建文件daemon.json"></a>更改docker默认存储路径，新建文件<code>daemon.json</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;vfs&quot;</span>,</span><br><span class="line"><span class="string">&quot;graph&quot;</span>: <span class="string">&quot;/tmpdisk/docker&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 755 /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>重启docker服务,如果多次启动失败，检查<code>daemon.json</code>配置文件是否有多余字符。可以使用<code>systemctl reset-failed docker.service</code>重置失败。</p><h2 id="错误排查"><a href="#错误排查" class="headerlink" title="错误排查"></a>错误排查</h2><h3 id="安装mysql57容器"><a href="#安装mysql57容器" class="headerlink" title="安装mysql57容器"></a>安装mysql57容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line">docker run -itd --name mysql2 --restart=always  -p 13306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /etc/localtime:/etc/localtime:ro -v /tmpdisk/mysqldata:/var/lib/mysql  mysql:5.7</span><br></pre></td></tr></table></figure><h3 id="启动时报错"><a href="#启动时报错" class="headerlink" title="启动时报错"></a>启动时报错</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">failed to register layer: ApplyLayer <span class="built_in">exit</span> status 1 stdout:  stderr: open /etc/.pwd.lock: no such device or address</span><br></pre></td></tr></table></figure><p><strong>更改存储驱动,重启docker</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;vfs&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>报错2</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write /var/lib/docker/vfs/dir/3bf1a7e9505dff94e1c4ba0293a90e1d17c1b5b4318ec7a355f74185f421c240/usr/sbin/mysqld: no space left on device</span><br></pre></td></tr></table></figure><p><strong>更改docker默认存储路径</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;vfs&quot;</span>,</span><br><span class="line"><span class="string">&quot;graph&quot;</span>: <span class="string">&quot;/tmpdisk/mysql5.7&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="安装tomcat9-0容器"><a href="#安装tomcat9-0容器" class="headerlink" title="安装tomcat9.0容器"></a>安装tomcat9.0容器</h3><p><strong>创建项目路径，将容器内部路径映射进来。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull tomcat9.0</span><br><span class="line">docker run -itd -p 18080:8080 --restart=always --name tomcat04 -v /tmpdisk/tomcat9.0.56/webapps:/usr/local/tomcat/webapps -v /etc/localtime:/etc/localtime:ro  tomcat:9.0.56</span><br></pre></td></tr></table></figure><p><strong>进入容器，启动项目时报错</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Cannot create worker GC thread. Out of system resources.</span></span><br><span class="line"><span class="comment"># An error report file with more information is saved as:</span></span><br><span class="line"><span class="comment"># /usr/local/tomcat/bin/hs_err_pid46.log</span></span><br><span class="line">NOTE: Picked up JDK_JAVA_OPTIONS:  --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED</span><br><span class="line">[0.002s][warning][os,thread] Failed to start thread <span class="string">&quot;GC Thread#0&quot;</span> - pthread_create failed (EPERM) <span class="keyword">for</span> attributes: stacksize: 1024k, guardsize: 4k, detached.</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># There is insufficient memory for the Java Runtime Environment to continue.</span></span><br><span class="line"><span class="comment"># Cannot create worker GC thread. Out of system resources.</span></span><br><span class="line"><span class="comment"># An error report file with more information is saved as:</span></span><br><span class="line"><span class="comment"># /usr/local/tomcat/bin/hs_err_pid68.log</span></span><br></pre></td></tr></table></figure><p><strong>解决方法，更换tomcat镜像。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull tomcat9.0.56</span><br><span class="line">重新创建容器</span><br><span class="line">docker run -itd -p 18080:8080 --name tomcat05 -v /tmpdisk/tomcat9.0.56/webapps:/usr/local/tomcat/webapps tomcat:9.0.56</span><br></pre></td></tr></table></figure><p>后续可以添加tomcat项目的war包到宿主机目录下，包会自动加载。</p><h2 id="整体访问流程"><a href="#整体访问流程" class="headerlink" title="整体访问流程"></a>整体访问流程</h2><p>tomcat项目访问mysql数据库</p><h2 id="容器内时区同步"><a href="#容器内时区同步" class="headerlink" title="容器内时区同步"></a>容器内时区同步</h2><p>启动容器时添加以下参数，会和宿主机保持一致。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v /etc/localtime:/etc/localtime:ro </span><br></pre></td></tr></table></figure><p><strong>查看所有在线的容器IP</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125; &#123;&#123;.NetworkSettings.IPAddress&#125;&#125; &#123;&#123;.HostConfig.PortBindings&#125;&#125;&#x27;</span> $(docker ps -aq)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos搭建内网邮件服务</title>
      <link href="/2023/02/10/centos%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/02/10/centos%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul><li><strong>centos7.9</strong> </li><li><strong>postfix2.10.1</strong></li><li><strong>dovecot2.2.36</strong></li><li><strong>foxmail(windows版)</strong></li></ul><h3 id="功能概括"><a href="#功能概括" class="headerlink" title="功能概括"></a>功能概括</h3><p>使用foxmail软件登录邮件服务器（192.168.1.89）能够成功发送和接收邮件。</p><h3 id="具体实现配置步骤"><a href="#具体实现配置步骤" class="headerlink" title="具体实现配置步骤"></a>具体实现配置步骤</h3><p>搭建邮件服务器</p><p>配置服务器主机名称，服务器主机名称与发信域名要一致。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mail ~]<span class="comment"># vi /etc/hostname</span></span><br><span class="line">mail.lee.com</span><br><span class="line">[root@mail ~]<span class="comment"># hostname </span></span><br><span class="line">mail.lee.com</span><br></pre></td></tr></table></figure><p>配置postfix服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postfix</span><br></pre></td></tr></table></figure><p>如果系统自带postfix，建议先卸载旧程序，然后再安装新程序。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e postfix</span><br></pre></td></tr></table></figure><p>编辑postfix 程序主配置文件<code>/etc/postfix/main.cf</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 75myhostname = mail.lee.com</span><br><span class="line"> 83mydomain = lee.com</span><br><span class="line"> 99 myorigin = <span class="variable">$mydomain</span></span><br><span class="line">113inet_interfaces = all</span><br><span class="line">119inet_protocols = ipv4</span><br><span class="line">164mydestination = <span class="variable">$myhostname</span>, <span class="variable">$mydomain</span></span><br><span class="line">264mynetworks = 192.168.1.0/24, 127.0.0.0/8</span><br></pre></td></tr></table></figure><p>启动postfix并加入开机自启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postfix</span><br><span class="line">systemctl <span class="built_in">enable</span> postfix</span><br></pre></td></tr></table></figure><p>配置dovecot服务程序</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install dovecot</span><br></pre></td></tr></table></figure><p>配置dovecot主配置文件<code>/etc/dovecot/dovecot.conf</code></p><p>vi &#x2F;etc&#x2F;dovecot&#x2F;dovecot.conf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">24 protocols = pop3 lmtp imap</span><br><span class="line">48 login_trusted_networks = 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>配置邮件格式与存储路径</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/dovecot/conf.d/10-mail.conf</span><br><span class="line">mail_location = mbox:~/mail:INBOX=/var/mail/%u</span><br></pre></td></tr></table></figure><p>重启dovecot服务并开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart dovecot</span><br><span class="line">systemctl <span class="built_in">enable</span> dovecot</span><br></pre></td></tr></table></figure><p>创建电子邮件系统的登录账户（本地系统的账户和密码，因此在本地系统创建常规账户即可）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.发送邮件用户</span><br><span class="line">useradd <span class="built_in">test</span></span><br><span class="line">passwd <span class="built_in">test</span></span><br><span class="line">2.接收文件用户</span><br><span class="line">useradd recv</span><br><span class="line">passwd <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><strong>关键！！！！</strong>分别进入test 用户和 recv用户，默认家目录在&#x2F;home&#x2F;test 和&#x2F;home&#x2F;recv下。创建用于保存邮件的目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">test</span>@mail ~]$ <span class="built_in">mkdir</span> -p mail/.imap/INBOX</span><br><span class="line">[recv@mail ~]$ <span class="built_in">mkdir</span> -p mail/.imap/INBOX</span><br></pre></td></tr></table></figure><p>最后重启postfix和dovacot服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postfix</span><br><span class="line">systemctl restart dovacot</span><br></pre></td></tr></table></figure><p>邮件发送和接收测试</p><p>windows 上安装foxmail。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、发送用户配置</span><br><span class="line">邮件类型：pop3</span><br><span class="line">账号：<span class="built_in">test</span>@lee.com</span><br><span class="line">收件服务器： 192.168.1.89端口110 ssl不勾选</span><br><span class="line">发送服务器： 192.168.1.89端口25  ssl不勾选</span><br><span class="line">2.接收用户配置</span><br><span class="line">邮件类型：pop3</span><br><span class="line">账号：recv@lee.com</span><br><span class="line">收件服务器： 192.168.1.89端口110 ssl不勾选</span><br><span class="line">发送服务器： 192.168.1.89端口25  ssl不勾选</span><br></pre></td></tr></table></figure><p>最后使用test 用户发送邮件，用recv用户接收邮件。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 邮件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二级域名创建与部署</title>
      <link href="/2023/01/24/%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/01/24/%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="二级域名创建与部署"><a href="#二级域名创建与部署" class="headerlink" title="二级域名创建与部署"></a>二级域名创建与部署</h2><h3 id="首先你需要拥有一个顶级域名"><a href="#首先你需要拥有一个顶级域名" class="headerlink" title="首先你需要拥有一个顶级域名"></a>首先你需要拥有一个顶级域名</h3><p>我是在<a href="https://www.namesilo.com/">namesoli</a>购买的域名。可以查看该顶级域名能够创建二级域名最大数量。</p><p>登录账户，点击account Domains。</p><p><img src="/img/postimages/accountdomains.webp" alt="accountdomains"></p><p>可以看到我们购买的域名，然后点击域名，进入域名控制台。</p><p><img src="/img/postimages/mydomain.webp" alt="mydomain"></p><p>可以看到子域名转发选项，点击它。进入子域名配置界面。</p><p><img src="/img/postimages/sub-domain-forwarding.webp" alt="sub-domain-forwarding"></p><p>点击help按钮，可以看到当前我们购买的顶级域名最多能够创建50个子域名。</p><p><img src="/img/postimages/max-sub-domains.webp" alt="max-sub-domains"></p><h4 id="二级域名（子域名）的格式"><a href="#二级域名（子域名）的格式" class="headerlink" title="二级域名（子域名）的格式"></a>二级域名（子域名）的格式</h4><p>比如我的网站是<code>www.haipengv.com</code>,可以通过访问<code>blog.haipengv.com</code>查看我的博客。在<code>haipengv.com</code>前面用<code>.</code>隔开加任意字符就是二级域名的格式。</p><h3 id="部署烟花网站"><a href="#部署烟花网站" class="headerlink" title="部署烟花网站"></a>部署烟花网站</h3><p>首先在github上部署项目</p><p>登录<a href="https://github.com/">github</a>，创建一个公开的新仓库。</p><p><img src="/img/postimages/new-repository.webp" alt="new-repository"></p><p>复制仓库的ssh地址，一会连接库时需要。</p><p><img src="/img/postimages/ssh-repository.webp" alt="ssh-repository"></p><p>准备上传烟花代码，在本地创建一个文件夹<code>E:\fireworkshow</code>。需要确保本地已经搭建好git环境。将烟花代码复制到<code>E:\fireworkshow</code>内。创建一个新文件夹<code>test</code>并进入<code>test</code>文件夹。此时所在位置<code>E:\fireworkshow\test</code>。</p><p>将仓库代码同步到本地test目录内</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:Smithkenny/fireworkshow.git</span><br></pre></td></tr></table></figure><p>将<code>E:\fireworkshow\test\fireworkshow</code>文件夹内的所有文件复制到<code>E:\fireworkshow</code>。然后删除空文件夹<code>test</code>和<code>fireworkshow</code>。</p><p>运行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">&quot;上传代码测试&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><p><strong>这里注意我们默认创建的仓库主分支是<code>main</code>。</strong></p><p>代码上传完毕后，此时还不能访问。</p><p>我这里使用<code>cloudflare</code>做一条域名解析。</p><p>登录<a href="https://dash.cloudflare.com/">cloudflare</a>，找到DNS选项，添加一条<code>A</code>记录。指向一个ipv4地址。这里的地址是ping 仓库域名得来的。</p><p><code>2023.haipengv.com</code>–&gt;<code>ipv4地址</code></p><p><img src="/img/postimages/A-record.webp" alt="A-record"></p><p>添加好<code>A</code>记录后，回到仓库，点击settings，找到pages选项，配置我们二级域名。稍等十分钟左右，就可以通过二级域名<code>2023.haipengv.com</code>访问我们的网站了。</p><p><img src="/img/postimages/pages-index.webp" alt="pages-index"></p><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>网站中音乐文件很大，超过2M，音乐加载超时，如何提升加载速度？</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>将大文件上传到网盘，复制网盘对应的文件路径，将该路径添加到<code>index.html</code>文件中。我这里用的是<a href="http://yesjohn.ysepan.com/">永硕网盘</a>。</p><p>最后访问<code>2023.haipengv.com</code>欣赏烟花吧！</p><p>相关参考</p><ul><li><a href="https://blog.wangriyu.wang/2018/01-githubpage.html">https://blog.wangriyu.wang/2018/01-githubpage.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二级域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7使用systemd管理程序</title>
      <link href="/2023/01/03/centos7%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F/"/>
      <url>/2023/01/03/centos7%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="centos7使用systemd管理程序"><a href="#centos7使用systemd管理程序" class="headerlink" title="centos7使用systemd管理程序"></a>centos7使用systemd管理程序</h2><p>systemd的配置文件主要放在<code>/usr/lib/systemd/system</code>目录，也可能在<code>/etc/systemd/system</code>目录。</p><p>学习下sshd的系统配置文件写法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cat</span> sshd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=OpenSSH server daemon</span><br><span class="line">Documentation=man:sshd(8) man:sshd_config(5)</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/var/run/sshd.pid</span><br><span class="line">EnvironmentFile=/etc/sysconfig/sshd</span><br><span class="line">ExecStart=/usr/sbin/sshd <span class="variable">$OPTIONS</span></span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>简单解释下：</p><ul><li><p>[Unit] 区块：启动顺序与依赖关系。</p><ul><li>Description：当前配置文件的描述信息。</li><li>Documentation：帮助信息。</li><li>After：表示当前服务是在那个服务后面启动，一般定义为网络服务启动后启动</li><li>Wants：表示 sshd.service 与 sshd-keygen.service 之间存在” 弱依赖” 关系，即如果”sshd-keygen.service” 启动失败或停止运行，不影响 sshd.service 继续执行。</li></ul></li><li><p>[Service] 区块：启动行为</p><ul><li>Type：定义启动类型。详细<a href="https://wiki.archlinux.org/index.php/systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%9C%8D%E5%8A%A1%E7%B1%BB%E5%9E%8B">了解点此</a>。</li><li>PIDFile：服务的 pid 文件路径。</li><li>EnvironmentFile：指定当前服务依赖的环境参数文件。</li><li>ExecStart：定义启动进程时执行的命令。</li><li>ExecReload：重启服务时执行的命令</li><li>KillMode：定义 Systemd 如何停止 sshd 服务。</li><li>Restart：定义了 sshd 退出后，Systemd 的重启方式。</li><li>RestartSec：表示 Systemd 重启服务之前，需要等待的秒数。上面的例子设为等待 42 秒。</li></ul></li><li><p>[Install] 区块：定义如何安装这个配置文件，即怎样做到开机启动。</p><ul><li>WantedBy：表示该服务所在的 Target。multi-user.target 表明当系统以多用户方式（默认的运行级别）启动时，这个服务需要被自动运行。</li></ul></li></ul><p>配置一个自己的系统服务</p><p>日常启动程序方式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./etc/test/sipholeWatchDog/sipholeWatchDog</span><br></pre></td></tr></table></figure><p>现在添加配置通过<code>systemd</code>来管理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/sipholeWatchDog.service</span><br><span class="line"></span><br><span class="line">添加如下配置：</span><br><span class="line">[Unit]</span><br><span class="line">Description=sipholeWatchDog</span><br><span class="line">After= syslog.target network.target jtsec-firstrun.service</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/test/sipholeWatchDog/sipholeWatchDog</span><br><span class="line"></span><br><span class="line">UMask=0007</span><br><span class="line">RestartSec=10</span><br><span class="line">Restart=always</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>加载单元</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>启动服务并查看服务状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sipholeWatchDog</span><br><span class="line">systemctl status sipholeWatchDog</span><br><span class="line">● sipholeWatchDog.service - sipholeWatchDog</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/sipholeWatchDog.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 二 2023-01-03 11:10:57 CST; 14min ago</span><br><span class="line"> Main PID: 22088 (sipholeWatchDog)</span><br><span class="line">   CGroup: /system.slice/sipholeWatchDog.service</span><br><span class="line">           ├─22088 /etc/test/sipholeWatchDog/sipholeWatchDog</span><br><span class="line">           ├─22269 /etc/siphole/siphole_back -c /etc/siphole/siphole_back_5.conf</span><br><span class="line">           └─22281 journalctl _PID=22269 -f</span><br><span class="line"></span><br><span class="line">1月 03 11:24:59 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:RUN: MESSAGE: CmdType: RecordInfo Devices: 3301...001389</span><br><span class="line">1月 03 11:25:03 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:Find Route ...</span><br><span class="line">1月 03 11:25:03 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:RUN: MESSAGE: CmdType: RecordInfo Devices: 3301...001389</span><br><span class="line">1月 03 11:25:11 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:Find Route ...</span><br><span class="line">1月 03 11:25:11 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:RUN: MESSAGE: CmdType: RecordInfo Devices: 3301...001391</span><br><span class="line">1月 03 11:25:12 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:Find Route ...</span><br><span class="line">1月 03 11:25:12 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:RUN: MESSAGE: CmdType: RecordInfo Devices: 3301...001391</span><br><span class="line">1月 03 11:25:13 video_back siphole_back[22269]: RUN:plugin/p28181.c 636:videoSrvId:00:Total devices flow: 20 bytes. 0 medias.</span><br><span class="line">1月 03 11:25:14 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:Find Route ...</span><br><span class="line">1月 03 11:25:14 video_back siphole_back[22269]: msp-P28181: 0:videoSrvId:00:RUN: MESSAGE: CmdType: RecordInfo Devices: 3301...001391</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以加入开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sipholeWatchDog</span><br></pre></td></tr></table></figure><h4 id="systemctl命令整理"><a href="#systemctl命令整理" class="headerlink" title="systemctl命令整理"></a><code>systemctl</code>命令整理</h4><ul><li>显示所有单元状态</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl 或 systemctl list-units</span><br></pre></td></tr></table></figure><ul><li>只显示服务单元的状态</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><ul><li>验证 sshd 服务当前是否活动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl is-active sshd</span><br></pre></td></tr></table></figure><ul><li>启动，停止和重启 sshd 服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd.service</span><br><span class="line">systemctl stop sshd.service</span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><ul><li>重新加载配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload sshd.service</span><br></pre></td></tr></table></figure><ul><li>列出活动状态的所有服务单元</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><ul><li>列出所有服务单元</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service --all</span><br></pre></td></tr></table></figure><ul><li>查看所有的服务单元是否为开机自启</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service </span><br></pre></td></tr></table></figure><ul><li>列出依赖的单元</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-dependencies sshd</span><br></pre></td></tr></table></figure><ul><li>验证 sshd 服务是否开机启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl is-enabled sshd</span><br></pre></td></tr></table></figure><ul><li>关闭开机自启</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> network</span><br></pre></td></tr></table></figure><ul><li>启用 network 开机自启。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> network</span><br></pre></td></tr></table></figure><h4 id="systemd日志管理"><a href="#systemd日志管理" class="headerlink" title="systemd日志管理"></a>systemd日志管理</h4><p>systemd 提供了自己日志系统（logging system），称为 journal. 使用 systemd 日志，无需额外安装日志服务（syslog）。读取日志的命令：</p><ul><li>查看所有日志 (默认显示本次启动的所有日志)</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl</span><br></pre></td></tr></table></figure><ul><li>查看本次启动的所有日志也可以使用</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -b</span><br></pre></td></tr></table></figure><ul><li>查看内核日志</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -k</span><br></pre></td></tr></table></figure><ul><li>根据服务筛选</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u sshd</span><br></pre></td></tr></table></figure><ul><li>根据进程 ID 查询</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl _PID=1</span><br></pre></td></tr></table></figure><ul><li>查看日志占用的磁盘空间</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --disk-usage</span><br></pre></td></tr></table></figure><ul><li>设置日志占用的空间</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --vacuum-size=500M</span><br></pre></td></tr></table></figure><h4 id="Linux-log日志占用过大清理方法"><a href="#Linux-log日志占用过大清理方法" class="headerlink" title="Linux log日志占用过大清理方法"></a>Linux log日志占用过大清理方法</h4><p><a href="https://www.uedbox.com/post/tag/linux/">Linux</a>使用<code>df -h</code>检查磁盘文件，可以看到<code>/run</code>目录下有日志目录<code>/run/log/journal</code>，占用了数G空间。</p><p>或者直接在相应目录下执行<code>du --max-depth=1 -h</code></p><h4 id="Linux-log-日志清理"><a href="#Linux-log-日志清理" class="headerlink" title="Linux log 日志清理"></a>Linux log 日志清理</h4><p>检查当前journal磁盘占用量</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --disk-usage</span><br></pre></td></tr></table></figure><p>清理方法可以采用按照日期清理，或者按照允许保留的容量清理，只保存7天的日志，最大500M。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">journalctl --vacuum-time=7d</span><br><span class="line">journalctl --vacuum-size=500M</span><br></pre></td></tr></table></figure><p>如果要手工删除日志文件，则在删除前需要先轮转一次journal日志。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">kill</span> --kill-who=main --signal=SIGUSR2 systemd-journald.service</span><br></pre></td></tr></table></figure><p>要启用日志限制持久化配置，可以修改 <code>/etc/systemd/journald.conf</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SystemMaxUse=16M</span><br><span class="line">ForwardToSyslog=no</span><br></pre></td></tr></table></figure><p>然后重启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-journald.service</span><br></pre></td></tr></table></figure><p>检查journal是否运行正常以及日志文件是否完整无损坏</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --verify</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux根分区满了处理方法</title>
      <link href="/2022/12/28/linux%E6%A0%B9%E5%88%86%E5%8C%BA%E6%BB%A1%E4%BA%86%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>/2022/12/28/linux%E6%A0%B9%E5%88%86%E5%8C%BA%E6%BB%A1%E4%BA%86%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="linux根分区满了处理方法"><a href="#linux根分区满了处理方法" class="headerlink" title="linux根分区满了处理方法"></a>linux根分区满了处理方法</h2><h4 id="通过命令查看根分区内的大文件"><a href="#通过命令查看根分区内的大文件" class="headerlink" title="通过命令查看根分区内的大文件"></a>通过命令查看根分区内的大文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -sh /* 2&gt;/dev/null | <span class="built_in">sort</span> -hr | <span class="built_in">head</span> -3</span><br><span class="line">如果上述命令执行后发现/var/占空间最大，那么在查找/var分区内的大文件，如：</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span> -sh /var/* 2&gt;/dev/null | <span class="built_in">sort</span> -hr | <span class="built_in">head</span> -3</span><br><span class="line">以此类推，最后找到那个大文件，删除或者采取其他措施（移动到替他路径）即可！</span><br></pre></td></tr></table></figure><p>注意：接业务报障，一般是因为应用程序配置错误，导致在<code>/var/log</code>目录下会生成很大的日志文件，进而导致&#x2F;var分区使用了达到100%，这个可以临时将之前的log日志大文件移动到其他路径下，但后期还需要业务侧对应用配置进行优化才行。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建rss订阅器</title>
      <link href="/2022/12/02/%E6%90%AD%E5%BB%BArss%E8%AE%A2%E9%98%85%E5%99%A8/"/>
      <url>/2022/12/02/%E6%90%AD%E5%BB%BArss%E8%AE%A2%E9%98%85%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建rss订阅器"><a href="#搭建rss订阅器" class="headerlink" title="搭建rss订阅器"></a>搭建rss订阅器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/freshrss</span><br><span class="line"></span><br><span class="line">docker run -d   --name=freshrss   -e PUID=1000   -e PGID=1000   -e TZ=Asia/Shanghai   -p 8000:80   -v /data/freshrss:/config   --restart unless-stopped   freshrss/freshrss:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dmesg命令时间显示问题</title>
      <link href="/2022/12/02/dmesg%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/02/dmesg%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="dmesg时间显示问题"><a href="#dmesg时间显示问题" class="headerlink" title="dmesg时间显示问题"></a>dmesg时间显示问题</h2><p>默认显示时间戳</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dmesg</span></span><br><span class="line">[24241362.110367] rmlog.sh (14746): drop_caches: 1</span><br><span class="line">[24241362.120529] rmlog.sh (14746): drop_caches: 2</span><br><span class="line">[24241362.218306] rmlog.sh (14746): drop_caches: 3</span><br><span class="line">[24846165.362560] rmlog.sh (7364): drop_caches: 1</span><br><span class="line">[24846165.371097] rmlog.sh (7364): drop_caches: 2</span><br><span class="line">[24846165.463682] rmlog.sh (7364): drop_caches: 3</span><br></pre></td></tr></table></figure><p>添加 <code>-T</code>参数，显示人类可以读懂的时间戳。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dmesg -T </span></span><br><span class="line">[四 10月 20 00:01:10 2022] rmlog.sh (14746): drop_caches: 1</span><br><span class="line">[四 10月 20 00:01:10 2022] rmlog.sh (14746): drop_caches: 2</span><br><span class="line">[四 10月 20 00:01:10 2022] rmlog.sh (14746): drop_caches: 3</span><br><span class="line">[四 10月 27 00:01:13 2022] rmlog.sh (7364): drop_caches: 1</span><br><span class="line">[四 10月 27 00:01:13 2022] rmlog.sh (7364): drop_caches: 2</span><br><span class="line">[四 10月 27 00:01:13 2022] rmlog.sh (7364): drop_caches: 3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次由于kswapd0进程导致cpu占满</title>
      <link href="/2022/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%B1%E4%BA%8Ekswapd0%E8%BF%9B%E7%A8%8B%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/"/>
      <url>/2022/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%B1%E4%BA%8Ekswapd0%E8%BF%9B%E7%A8%8B%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>服务器安装pve后发现cpu占用率过高有点不正常，于是查其原因。</p><p>参考这个博主的文章。发现现象一致。</p><p><code>https://blog.csdn.net/jzz601264258/article/details/105850816</code></p><p>top查看cpu占用率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># top</span></span><br><span class="line">top - 09:58:10 up 35 min,  2 <span class="built_in">users</span>,  load average: 8.00, 8.00, 7.09</span><br><span class="line">Tasks: 220 total,   1 running, 219 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s): 99.2 us,  0.8 sy,  0.0 ni,  0.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :  15651.4 total,   8695.9 free,   6572.6 used,    382.9 buff/cache</span><br><span class="line">MiB Swap:   8192.0 total,   8192.0 free,      0.0 used.   8748.4 avail Mem </span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                                                                     </span><br><span class="line">   1334 root      20   0 3375880   5092      4 S 800.0   0.0 255:49.67 kswapd0                                                                                     </span><br><span class="line">      1 root      20   0  166460  10756   7720 S   0.0   0.1   0:01.27 systemd                   </span><br></pre></td></tr></table></figure><p>发现<code>kswapd0</code>进程cpu使用率高达<code>800%</code>。我的服务器配置是8核16G。</p><p>详细查看该进程下的所有线程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># top -Hp 1334 </span></span><br><span class="line">top - 09:58:39 up 35 min,  2 <span class="built_in">users</span>,  load average: 8.05, 8.01, 7.13</span><br><span class="line">Threads:  14 total,   8 running,   6 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s): 99.6 us,  0.4 sy,  0.0 ni,  0.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :  15651.4 total,   8697.7 free,   6570.8 used,    382.9 buff/cache</span><br><span class="line">MiB Swap:   8192.0 total,   8192.0 free,      0.0 used.   8750.2 avail Mem </span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                                                                     </span><br><span class="line">   1431 root      20   0 3375880   5092      4 R  99.9   0.0  32:23.46 kswapd0                                                                                     </span><br><span class="line">   1429 root      20   0 3375880   5092      4 R  99.7   0.0  32:21.50 kswapd0                                                                                     </span><br><span class="line">   1433 root      20   0 3375880   5092      4 R  99.7   0.0  32:23.20 kswapd0                                                                                     </span><br><span class="line">   1434 root      20   0 3375880   5092      4 R  99.7   0.0  32:22.80 kswapd0                                                                                     </span><br><span class="line">   1432 root      20   0 3375880   5092      4 R  99.3   0.0  32:22.95 kswapd0                                                                                     </span><br><span class="line">   1430 root      20   0 3375880   5092      4 R  99.0   0.0  32:21.44 kswapd0                                                                                     </span><br><span class="line">   1435 root      20   0 3375880   5092      4 R  99.0   0.0  32:23.55 kswapd0                                                                                     </span><br><span class="line">   1436 root      20   0 3375880   5092      4 R  99.0   0.0  32:23.23 kswapd0                                                                                     </span><br><span class="line">   1334 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.15 kswapd0                                                                                     </span><br><span class="line">   1335 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.84 kswapd0                                                                                     </span><br><span class="line">   1336 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.00 kswapd0                                                                                     </span><br><span class="line">   1337 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.00 kswapd0                                                                                     </span><br><span class="line">   1338 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.00 kswapd0                                                                                     </span><br><span class="line">   1339 root      20   0 3375880   5092      4 S   0.0   0.0   0:00.00 kswapd0   </span><br></pre></td></tr></table></figure><p>于是查看系统外部链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># netstat -aplt</span></span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*               LISTEN      1/init              </span><br><span class="line">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN      1273/sshd: /usr/sbi </span><br><span class="line">tcp        0      0 localhost.localdom:smtp 0.0.0.0:*               LISTEN      1129/master         </span><br><span class="line">tcp        0      0 localhost.localdomai:85 0.0.0.0:*               LISTEN      1280/pvedaemon      </span><br><span class="line">tcp        0      1 www.pve.com:34882       45.9.148.99:https       SYN_SENT    1305/rsync          </span><br><span class="line">tcp        0    280 www.pve.com:ssh         192.168.1.110:49909     ESTABLISHED 2629/sshd: root@pts </span><br><span class="line">tcp        0      0 www.pve.com:54690       45.9.148.125:http       ESTABLISHED 1334/./kswapd0              </span><br><span class="line">tcp        0      0 www.pve.com:ssh         192.168.1.182:3219      ESTABLISHED 1314/sshd: root@pts </span><br><span class="line">tcp6       0      0 [::]:sunrpc             [::]:*                  LISTEN      1/init              </span><br><span class="line">tcp6       0      0 [::]:ssh                [::]:*                  LISTEN      1273/sshd: /usr/sbi </span><br><span class="line">tcp6       0      0 [::]:3128               [::]:*                  LISTEN      1295/spiceproxy     </span><br><span class="line">tcp6       0      0 ip6-localhost:smtp      [::]:*                  LISTEN      1129/master         </span><br><span class="line">tcp6       0      0 [::]:8006               [::]:*                  LISTEN      1284/pveproxy      </span><br></pre></td></tr></table></figure><p>发现有两个外部IP正在和本机通信。</p><p>使用<code>www.ip138.com</code>查看45.9.148.125 、45.9.148.99IP，归属地是荷兰。如此便确定了是挖矿程序。</p><p>查看kswapd0 和 rsync 进程对应的文件路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># ls -l /proc/1334/exe</span></span><br><span class="line">lrwxrwxrwx 1 root root 0 Nov 16 10:00 /proc/1334/exe -&gt; /root/.configrc/a/kswapd0</span><br><span class="line">root@www:~<span class="comment"># ls -l /proc/1305/exe</span></span><br><span class="line">lrwxrwxrwx 1 root root 0 Nov 16 10:01 /proc/1305/exe -&gt; /usr/bin/perl</span><br></pre></td></tr></table></figure><p>先把&#x2F;root&#x2F;.configrc 重命名为&#x2F;root&#x2F;configrc,并压缩一份拷贝到本机。然后删除该文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /root/.configrc /root/configrc</span><br><span class="line">tar -zcvf /root/configrc.tgz /root/configrc</span><br><span class="line"><span class="built_in">rm</span> -rf /root/configrc</span><br></pre></td></tr></table></figure><p>发现有定时任务定期执行该程序，即时服务器重启也会立即执行对应脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># crontab -l </span></span><br><span class="line">1 1 */2 * * /root/.configrc/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">@reboot /root/.configrc/a/upd&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">5 8 * * 0 /root/.configrc/b/sync&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">@reboot /root/.configrc/b/sync&gt;/dev/null 2&gt;&amp;1  </span><br><span class="line">0 0 */3 * * /tmp/.X25-unix/.rsync/c/aptitude&gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>清除定时任务。</p><p>回想现象发生的原因：</p><ul><li>root密码设置过于简单</li><li>参考了一篇文章<code>https://www.cpci.dev/pve-cloud-init-and-cloud-image/</code>下载了网上的云镜像虚拟机模板然后就中招了。</li></ul><p>处理方式：</p><p>设置较复杂的root密码，追踪到挖矿进程对应的配置文件所在的文件夹，删除掉。重启服务器。</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pve优化</title>
      <link href="/2022/11/11/pve%E4%BC%98%E5%8C%96/"/>
      <url>/2022/11/11/pve%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h3 id="pve优化"><a href="#pve优化" class="headerlink" title="pve优化"></a>pve优化</h3><h3 id="1-Proxmox-VE-PVE-系统移除《无有效订阅》弹窗提示通知"><a href="#1-Proxmox-VE-PVE-系统移除《无有效订阅》弹窗提示通知" class="headerlink" title="1.Proxmox VE(PVE)系统移除《无有效订阅》弹窗提示通知"></a>1.Proxmox VE(PVE)系统移除《无有效订阅》弹窗提示通知</h3><p>Proxmox VE(PVE)系统安装完成后，输入账号密码登录系统后会有提示：无有效订阅，本文主要介绍如何去除此弹窗提示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提示：无有效订阅</span><br><span class="line"></span><br><span class="line">You do not have a valid subscription for this server. Please visit www.proxmox.com to get a list of available options.</span><br></pre></td></tr></table></figure><p>形成此问题的主要原因是因为我们使用的是免费版Proxmox VE系统，所以每次登录后都会提示这个《无有效订阅》弹窗。</p><p>此教程演示系统环境为：Proxmox Virtual Environment 7.2 ，更新日期为：2022年11月10日，其他版本请参考本教程.</p><p>需要修改文件路径为：&#x2F;usr&#x2F;share&#x2F;javascript&#x2F;proxmox-widget-toolkit&#x2F;proxmoxlib.js 修改之前请做好文件备份，防止误操作造成不可预知的错误。</p><p>解决方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">搜索关键词：Ext.Msg.show</span><br><span class="line">将：Ext.Msg.show(&#123;修改为：Ext.Msg.noshow(&#123;</span><br><span class="line"></span><br><span class="line">文件修改后保存上传，执行 systemctl restart pveproxy 命令重启网页服务</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@pve:~# systemctl restart pveproxy</span><br></pre></td></tr></table></figure><p>注销后登陆，使用 CTRL+F5 快捷键强制重新加载网页页面，或清理浏览器缓存（很多修改后没有反应的童学记得清缓存）</p><p>再次打开登陆 Proxmox VE系统控制台主界面，就没有弹窗提示了。</p><p>注意：此方法可能在升级 pve 后失效，失效后再修改即可。</p><h3 id="2-Proxmox-VE更换apt源并更新软件包数据库"><a href="#2-Proxmox-VE更换apt源并更新软件包数据库" class="headerlink" title="2.Proxmox VE更换apt源并更新软件包数据库"></a>2.Proxmox VE更换apt源并更新软件包数据库</h3><p>1、查看当前镜像源配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>2、查看当前pve版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pveversion -v</span><br></pre></td></tr></table></figure><p>3、注释默认配置，修改为中科大镜像源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian bullseye main contrib</span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian bullseye-updates main contrib</span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian-security bullseye-security main contrib</span><br></pre></td></tr></table></figure><p>4、注释proxmox企业版更新源<br>因为我们安装的是社区版，没有订阅企业版的服务，这个默认启用，所以会报错，使用时我们可以注释掉它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/apt/sources.list.d/pve-enterprise.list</span><br></pre></td></tr></table></figure><p>5、运行 <code>apt update</code> 更新索引以生效</p><p>6、查看可以更新的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --upgradable</span><br></pre></td></tr></table></figure><p>7、执行软件包数据库更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure><p>8、也可以在页面更新</p><p><strong>pve-更新-刷新</strong></p><h3 id="3-PVE更改安装时绑定的网卡"><a href="#3-PVE更改安装时绑定的网卡" class="headerlink" title="3.PVE更改安装时绑定的网卡"></a>3.PVE更改安装时绑定的网卡</h3><p>当服务器有多个网卡时，安装pve后，绑定的网卡非管理口网卡导致局域网中机器无法连接pve。此时需要更改pve安装时绑定的网卡。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment">#  ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eno1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 3c:ec:ef:90:ea:96 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    altname enp181s0f0</span><br><span class="line">3: enp101s0f0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 58:53:c0:64:19:94 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: eno2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq master vmbr0 state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 3c:ec:ef:90:ea:97 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    altname enp181s0f1</span><br><span class="line">5: enp23s0f0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 68:91:d0:6a:66:a6 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">6: enp101s0f1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 58:53:c0:64:19:95 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">7: enp23s0f1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 68:91:d0:6a:66:a7 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">8: enp182s0f0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 68:91:d0:6a:66:a0 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">9: enp182s0f1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 68:91:d0:6a:66:a1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">10: vmbr0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 3c:ec:ef:90:ea:97 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.191/24 scope global vmbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::3eec:efff:fe90:ea97/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">12: tap100i0: &lt;BROADCAST,MULTICAST,PROMISC,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master vmbr0 state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 2e:<span class="built_in">dd</span>:9f:18:5d:41 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure><p>由以上信息可知pve的虚拟网卡vmbr0是桥接到mac为3c:ec:ef:90:ea:97的网卡即eno2上，需要将vmbr0更改桥接到eno1上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/network/interfaces</span><br></pre></td></tr></table></figure><p>原内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">iface eno2 inet manual</span><br><span class="line"></span><br><span class="line">auto vmbr0</span><br><span class="line">iface vmbr0 inet static</span><br><span class="line">        address 192.168.1.191/24</span><br><span class="line">        gateway 192.168.1.254</span><br><span class="line">        bridge-ports eno2</span><br><span class="line">        bridge-stp off</span><br><span class="line">        bridge-fd 0</span><br><span class="line"></span><br><span class="line">iface enp101s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp101s0f1 inet manual</span><br><span class="line"></span><br><span class="line">iface enp23s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp23s0f1 inet manual</span><br><span class="line"></span><br><span class="line">iface eno2 inet manual</span><br><span class="line"></span><br><span class="line">iface enp182s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp182s0f1 inet manual</span><br></pre></td></tr></table></figure><p>需要更改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">iface eno1 inet manual</span><br><span class="line"></span><br><span class="line">auto vmbr0</span><br><span class="line">iface vmbr0 inet static</span><br><span class="line">        address 192.168.1.191/24</span><br><span class="line">        gateway 192.168.1.254</span><br><span class="line">        bridge-ports eno1</span><br><span class="line">        bridge-stp off</span><br><span class="line">        bridge-fd 0</span><br><span class="line"></span><br><span class="line">iface enp101s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp101s0f1 inet manual</span><br><span class="line"></span><br><span class="line">iface enp23s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp23s0f1 inet manual</span><br><span class="line"></span><br><span class="line">iface eno2 inet manual</span><br><span class="line"></span><br><span class="line">iface enp182s0f0 inet manual</span><br><span class="line"></span><br><span class="line">iface enp182s0f1 inet manual</span><br></pre></td></tr></table></figure><p>重启机器</p><h3 id="4-pve中虚拟机无法关闭，解决方法。"><a href="#4-pve中虚拟机无法关闭，解决方法。" class="headerlink" title="4.pve中虚拟机无法关闭，解决方法。"></a>4.pve中虚拟机无法关闭，解决方法。</h3><p>删除虚拟机ID对应的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /var/lock/qemu-server/lock-102.conf    <span class="comment">#102是你的虚拟机编号</span></span><br></pre></td></tr></table></figure><p> 然后关闭虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm stop 102</span><br></pre></td></tr></table></figure><h3 id="5-centos7-9常用工具一键安装"><a href="#5-centos7-9常用工具一键安装" class="headerlink" title="5.centos7.9常用工具一键安装"></a>5.centos7.9常用工具一键安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget gcc gcc-c++ pcre pcre-devel zlib zlib-devel ruby openssl openssl-devel patch lsof unzip zip lrzsz bash-completion net-tools nmap-ncat</span><br></pre></td></tr></table></figure><h3 id="6-Proxmox-VE-7-2-iso-镜像重置-pve-root密码"><a href="#6-Proxmox-VE-7-2-iso-镜像重置-pve-root密码" class="headerlink" title="6.Proxmox VE 7.2 iso 镜像重置 pve root密码"></a>6.Proxmox VE 7.2 iso 镜像重置 pve root密码</h3><ul><li><p>u盘引导进入pve安装界面，选择Advanced Options。</p></li><li><p>选择 Debug mode</p></li><li><p>进入后发现默认在&#x2F;路径下，继续按CTRL D，进入root@proxmox:&#x2F; </p></li><li><p>验证LVM并挂载</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看VG，输出应该是有VG PVE</span></span><br><span class="line">vgs</span><br><span class="line"> </span><br><span class="line"><span class="comment">#查看LV，可以看到 data root </span></span><br><span class="line">lvs</span><br></pre></td></tr></table></figure><ul><li>激活VG</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgchange -a y </span><br></pre></td></tr></table></figure><ul><li>挂载lvm</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/mapper/pve-root /mnt</span><br></pre></td></tr></table></figure><ul><li>chroot</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chroot</span> /mnt</span><br></pre></td></tr></table></figure><ul><li>修改root密码，更改完成密码重启服务器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h3 id="7-Proxmox集群部分节点出现问号"><a href="#7-Proxmox集群部分节点出现问号" class="headerlink" title="7.Proxmox集群部分节点出现问号"></a>7.Proxmox集群部分节点出现问号</h3><p>决定pve上状态的服务是pvestat daemon，也就是<code>pvestatd</code>，因此查看它的运行状况，果然有问题！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># service pvestatd status</span></span><br><span class="line">● pvestatd.service - PVE Status Daemon</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/pvestatd.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: failed (Result: signal) since Wed 2022-11-16 09:23:04 CST; 10min ago</span><br><span class="line">    Process: 1146 ExecStart=/usr/bin/pvestatd start (code=killed, signal=KILL)</span><br><span class="line">        CPU: 286ms</span><br><span class="line"></span><br><span class="line">Nov 16 09:23:03 www systemd[1]: Starting PVE Status Daemon...</span><br><span class="line">Nov 16 09:23:04 www systemd[1]: pvestatd.service: Control process exited, code=killed, status=9/KILL</span><br><span class="line">Nov 16 09:23:04 www systemd[1]: pvestatd.service: Failed with result <span class="string">&#x27;signal&#x27;</span>.</span><br><span class="line">Nov 16 09:23:04 www systemd[1]: Failed to start PVE Status Daemon.</span><br></pre></td></tr></table></figure><p>重启该服务状态恢复正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@www:~<span class="comment"># service pvestatd restart </span></span><br><span class="line">root@www:~<span class="comment"># service pvestatd status</span></span><br><span class="line">● pvestatd.service - PVE Status Daemon</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/pvestatd.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Wed 2022-11-16 09:34:06 CST; 1s ago</span><br><span class="line">    Process: 1510 ExecStart=/usr/bin/pvestatd start (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 1511 (pvestatd)</span><br><span class="line">      Tasks: 1 (<span class="built_in">limit</span>: 18701)</span><br><span class="line">     Memory: 79.2M</span><br><span class="line">        CPU: 851ms</span><br><span class="line">     CGroup: /system.slice/pvestatd.service</span><br><span class="line">             └─1511 pvestatd</span><br><span class="line"></span><br><span class="line">Nov 16 09:34:05 www systemd[1]: Starting PVE Status Daemon...</span><br><span class="line">Nov 16 09:34:06 www pvestatd[1511]: starting server</span><br><span class="line">Nov 16 09:34:06 www systemd[1]: Started PVE Status Daemon.</span><br></pre></td></tr></table></figure><h3 id="8-解决pve创建的虚拟机无法复制粘贴"><a href="#8-解决pve创建的虚拟机无法复制粘贴" class="headerlink" title="8.解决pve创建的虚拟机无法复制粘贴"></a>8.解决pve创建的虚拟机无法复制粘贴</h3><p><strong>配置xterm.js</strong></p><p>PVE创建虚拟机后默认只有novnc方法连接虚拟机，无法复制粘贴，很不方便，因此可以打开xterm.js的方式弥补此缺陷。</p><p>关闭 VM，并且新增 serial port 给 VM 在PVE Host 中用 qm 命令建立 serial port，假设我的 VM ID 是 100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm set 100 -serial0 socket</span><br></pre></td></tr></table></figure><p>重新开启 VM，用 dmesg 验证是否有 ttyS 出现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep ttyS</span><br></pre></td></tr></table></figure><p>如果出现如下代表有了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[    3.521757] 00:04: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A</span><br></pre></td></tr></table></figure><p>接下来配置VM的grub，进入VM的ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/default/</span><br><span class="line">vi grub</span><br></pre></td></tr></table></figure><p>修改grub中的GRUB_CMDLINE_LINUX值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX=&quot;quiet console=tty0 console=ttyS0,115200”</span><br></pre></td></tr></table></figure><p>更新grub</p><p>debian based</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure><p>redhat based</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig --output=/boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><p>在虚拟机添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init/ttyS0.conf</span><br></pre></td></tr></table></figure><p>并添加如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># ttyS0 - getty</span><br><span class="line">#</span><br><span class="line"># This service maintains a getty on ttyS0 from the point the system is</span><br><span class="line"># started until it is shut down again.</span><br><span class="line">start on stopped rc RUNLEVEL=[12345]</span><br><span class="line">stop on runlevel [!12345]</span><br><span class="line">respawn</span><br><span class="line">exec /sbin/getty -L 115200 ttyS0 vt102</span><br></pre></td></tr></table></figure><p>设置自启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable serial-getty@ttyS0.service</span><br><span class="line">systemctl start serial-getty@ttyS0.service</span><br></pre></td></tr></table></figure><p>重启VM，测试xterm，已经可以用。</p><p>官方文档如下：<a href="https://pve.proxmox.com/wiki/Serial_Terminal">https://pve.proxmox.com/wiki/Serial_Terminal</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.9更换网卡名称</title>
      <link href="/2022/11/01/centos7.9%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0/"/>
      <url>/2022/11/01/centos7.9%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="centos7-9恢复旧网卡名称显示及网口乱序解决方法"><a href="#centos7-9恢复旧网卡名称显示及网口乱序解决方法" class="headerlink" title="centos7.9恢复旧网卡名称显示及网口乱序解决方法"></a>centos7.9恢复旧网卡名称显示及网口乱序解决方法</h1><h4 id="换回旧版网卡名称"><a href="#换回旧版网卡名称" class="headerlink" title="换回旧版网卡名称"></a>换回旧版网卡名称</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grubby --update-kernel=ALL --args=&quot;net.ifnames=0 biosdevname=0&quot; </span><br></pre></td></tr></table></figure><h4 id="修改-etc-sysconfig-network-scripts-中的网卡配置文件"><a href="#修改-etc-sysconfig-network-scripts-中的网卡配置文件" class="headerlink" title="修改/etc/sysconfig/network-scripts/中的网卡配置文件"></a>修改<code>/etc/sysconfig/network-scripts/</code>中的网卡配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ network-scripts]# cat ifcfg-lan0 </span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">NAME=&quot;lan0&quot;</span><br><span class="line">DEVICE=&quot;lan0&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=192.168.242.130</span><br><span class="line">NETWORK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.242.1</span><br><span class="line">[root@QZ network-scripts]# cat ifcfg-lan1</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">NAME=&quot;lan1&quot;</span><br><span class="line">DEVICE=&quot;lan1&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=192.168.35.130</span><br><span class="line">NETWORK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.35.2</span><br><span class="line">DNS1=192.168.35.2</span><br><span class="line">[root@QZ network-scripts]# cat ifcfg-lan2</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">NAME=&quot;lan2&quot;</span><br><span class="line">DEVICE=&quot;lan2&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=192.168.242.131</span><br><span class="line">NETWORK=255.255.255.0</span><br></pre></td></tr></table></figure><h4 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="带有光口的物理服务器经常会遇到网口乱序现象。解决方法："><a href="#带有光口的物理服务器经常会遇到网口乱序现象。解决方法：" class="headerlink" title="带有光口的物理服务器经常会遇到网口乱序现象。解决方法："></a>带有光口的物理服务器经常会遇到网口乱序现象。解决方法：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/network/10-lan0.link</span><br><span class="line">[Match]</span><br><span class="line">  MACAddress=00:0c:29:36:a6:c7</span><br><span class="line"></span><br><span class="line">[Link]</span><br><span class="line">  Name=lan0</span><br><span class="line"></span><br><span class="line">vi /etc/systemd/network/11-lan1.link</span><br><span class="line">[Match]</span><br><span class="line">  MACAddress=00:0c:29:36:a6:b3</span><br><span class="line"></span><br><span class="line">[Link]</span><br><span class="line">  Name=lan1</span><br><span class="line"></span><br><span class="line">[Match]</span><br><span class="line">  MACAddress=00:0c:29:36:a6:bd</span><br><span class="line">  </span><br><span class="line">vi /etc/systemd/network/12-lan2.link</span><br><span class="line">[Link]</span><br><span class="line">  Name=lan2</span><br></pre></td></tr></table></figure><h4 id="最后创建对应名称的网卡配置文件，重启设备。"><a href="#最后创建对应名称的网卡配置文件，重启设备。" class="headerlink" title="最后创建对应名称的网卡配置文件，重启设备。"></a>最后创建对应名称的网卡配置文件，重启设备。</h4>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7网卡改回eth0显示</title>
      <link href="/2022/10/26/centos7%E7%BD%91%E5%8D%A1%E6%94%B9%E5%9B%9Eeth0%E6%98%BE%E7%A4%BA/"/>
      <url>/2022/10/26/centos7%E7%BD%91%E5%8D%A1%E6%94%B9%E5%9B%9Eeth0%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="将centos7网卡改回eth0显示"><a href="#将centos7网卡改回eth0显示" class="headerlink" title="将centos7网卡改回eth0显示"></a>将centos7网卡改回eth0显示</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grubby --update-kernel=ALL --args=<span class="string">&quot;net.ifnames=0 biosdevname=0&quot;</span></span><br></pre></td></tr></table></figure><p>实验环境–&gt;net.ifnames&#x3D;0</p><p>物理环境dell—&gt;biosdevname&#x3D;0 net.ifnames&#x3D;0   </p><p>云环境——&gt;   默认都是eth0 eth1</p><h4 id="修改网卡配置文件的名称"><a href="#修改网卡配置文件的名称" class="headerlink" title="修改网卡配置文件的名称"></a>修改网卡配置文件的名称</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/sysconfig/network-scripts/ifcfg-ens32  /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><h4 id="修改网卡配置文件中设备的名字"><a href="#修改网卡配置文件中设备的名字" class="headerlink" title="修改网卡配置文件中设备的名字"></a>修改网卡配置文件中设备的名字</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s#ens32#eth0#g&#x27;</span> /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><h4 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h4><h4 id="网卡配置实例"><a href="#网卡配置实例" class="headerlink" title="网卡配置实例"></a>网卡配置实例</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NAME=eth<span class="number">0</span></span><br><span class="line">DEVICE=eth<span class="number">0</span></span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=<span class="number">192.168</span>.<span class="number">1.192</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span>.<span class="number">1.254</span></span><br><span class="line">DNS1=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line">TYPE=Ethernet</span><br></pre></td></tr></table></figure><h4 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/net/dev</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsyslog日志服务器搭建</title>
      <link href="/2022/10/25/rsyslog%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/10/25/rsyslog%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="rsyslog日志服务器搭建"><a href="#rsyslog日志服务器搭建" class="headerlink" title="rsyslog日志服务器搭建"></a>rsyslog日志服务器搭建</h2><p>rsyslog客户端：负责发送日志到远程日志服务器，支持udp,tcp,relp协议。</p><p>rsyslog服务端：负责接收客户端发来的日志并存储在本地，支持文件存储和数据库存储方式。</p><p>保存日志的路径格式为：源IP地址&#x2F;设施名（日志类别）&#x2F;年月.log。</p><h4 id="安装rsyslog软件"><a href="#安装rsyslog软件" class="headerlink" title="安装rsyslog软件"></a>安装rsyslog软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install rsyslog -y </span><br></pre></td></tr></table></figure><h4 id="配置rsyslog-conf文件"><a href="#配置rsyslog-conf文件" class="headerlink" title="配置rsyslog.conf文件"></a>配置rsyslog.conf文件</h4><h4 id="开放514-tcp-和-udp-监听"><a href="#开放514-tcp-和-udp-监听" class="headerlink" title="开放514 tcp 和 udp 监听"></a>开放514 tcp 和 udp 监听</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides TCP syslog reception</span></span><br><span class="line"><span class="variable">$ModLoad</span> imtcp</span><br><span class="line"><span class="variable">$InputTCPServerRun</span> 514</span><br></pre></td></tr></table></figure><h4 id="服务端核心配置"><a href="#服务端核心配置" class="headerlink" title="服务端核心配置"></a>服务端核心配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### GLOBAL DIRECTIVES ####</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where to place auxiliary files</span></span><br><span class="line"><span class="variable">$WorkDirectory</span> /var/lib/rsyslog</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use default timestamp format</span></span><br><span class="line"><span class="variable">$ActionFileDefaultTemplate</span> RSYSLOG_TraditionalFileFormat</span><br><span class="line"><span class="comment">##这里是服务端添加的配置 begin</span></span><br><span class="line"><span class="comment"># 使用 RemoteLogs 模板接收客户端的日志，保存到本地的/var/log/remote目录下，每台客户端的ip_年份_月份_日期的log</span></span><br><span class="line"><span class="variable">$template</span> RemoteLogs,<span class="string">&quot;/var/log/remote/%fromhost-ip%/%fromhost-ip%_%<span class="variable">$YEAR</span>%-%<span class="variable">$MONTH</span>%-%<span class="variable">$DAY</span>%.log&quot;</span></span><br><span class="line"><span class="comment"># 所有服务所有级别的日志都记录</span></span><br><span class="line">*.* ?RemoteLogs</span><br><span class="line"><span class="comment">#服务端本机的日志不记录</span></span><br><span class="line">:fromhost-ip, !isequal, <span class="string">&quot;127.0.0.1&quot;</span> ?Remote</span><br><span class="line"></span><br><span class="line"><span class="comment">#指示rsyslog在将消息写入文件后停止处理消息，如果不包含&quot;&amp; ~&quot;,则消息将被写入本地文件，导致消息被记录2次。</span></span><br><span class="line">&amp; ~</span><br><span class="line"><span class="comment">## 这里是服务端添加的配置 end</span></span><br></pre></td></tr></table></figure><h4 id="重启rsyslog服务"><a href="#重启rsyslog服务" class="headerlink" title="重启rsyslog服务"></a>重启rsyslog服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="最后到配置目录下查看是否有日志生成"><a href="#最后到配置目录下查看是否有日志生成" class="headerlink" title="最后到配置目录下查看是否有日志生成"></a>最后到配置目录下查看是否有日志生成</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost 127.0.0.1]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw------- 1 root root 1639 Oct 25 10:01 127.0.0.1_2022-10-25.log</span><br><span class="line">[root@localhost 127.0.0.1]# pwd </span><br><span class="line">/var/log/remote/127.0.0.1</span><br></pre></td></tr></table></figure><h4 id="rsyslog客户端配置"><a href="#rsyslog客户端配置" class="headerlink" title="rsyslog客户端配置"></a>rsyslog客户端配置</h4><p>表示将用户登录日志和定时任务日志发送到192.168.1.74的514端口，默认采用TCP进行发送。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rsyslog.conf</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">##rule for 192.168.1.74 ###</span></span></span><br><span class="line">auth.*;authpriv.*;cron.*  @@192.168.1.74:514</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>功能强大的硬件信息获取工具-inxi</title>
      <link href="/2022/10/21/%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7-inxi/"/>
      <url>/2022/10/21/%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7-inxi/</url>
      
        <content type="html"><![CDATA[<h2 id="安装inxi"><a href="#安装inxi" class="headerlink" title="安装inxi"></a>安装inxi</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install inxi   [On Debian/Ubuntu/Linux Mint] </span><br><span class="line">$ sudo yum install inxi       [On CentOs/RHEL/Fedora] </span><br><span class="line">$ sudo dnf install inxi       [On Fedora 22+] </span><br></pre></td></tr></table></figure><p><strong>查看 Inxi 所有依赖和推荐的应用，以及各种目录，并显示需要安装哪些包来支持给定的功能。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ inxi --recommends </span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">inxi will now begin checking <span class="keyword">for</span> the programs it needs to operate.</span><br><span class="line"></span><br><span class="line">Check inxi --<span class="built_in">help</span> or the man page (man inxi) to see what options are </span><br><span class="line">available. </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: core tools:</span><br><span class="line"></span><br><span class="line">Perl version:  5.016003</span><br><span class="line">Current shell: </span><br><span class="line">Default shell: bash</span><br><span class="line">sh links to: /usr/bin/bash</span><br><span class="line">Package manager: rpm</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: required system directories:</span><br><span class="line"> </span><br><span class="line">/proc: ........................................................... Present</span><br><span class="line">/sys: ............................................................ Present</span><br><span class="line"> </span><br><span class="line">All required system directories are present</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended system programs:</span><br><span class="line"> </span><br><span class="line">Note: IPMI sensors are generally only found on servers. To access that data, </span><br><span class="line">you only need one of the ipmi items. </span><br><span class="line"> </span><br><span class="line">blockdev: --admin -p/-P (filesystem blocksize).................... Present</span><br><span class="line">bt-adapter: -E bluetooth data (<span class="keyword">if</span> no hciconfig)................... Missing</span><br><span class="line">dig: -i wlan IP................................................... Present</span><br><span class="line">dmidecode: -M <span class="keyword">if</span> no sys machine data; -m.......................... Present</span><br><span class="line">doas: -Dx hddtemp-user; -o file-user (alt <span class="keyword">for</span> sudo)............... Missing</span><br><span class="line">fdisk: -D partition scheme (fallback)............................. Present</span><br><span class="line">file: -o unmounted file system (<span class="keyword">if</span> no lsblk)...................... Present</span><br><span class="line">fruid_print: -M machine data, Elbrus only......................... Missing</span><br><span class="line">hciconfig: -E bluetooth data (deprecated, good report)............ Present</span><br><span class="line">hddtemp: -Dx show hdd temp, <span class="keyword">if</span> no drivetemp module................ Present</span><br><span class="line">ifconfig: -i ip LAN (deprecated).................................. Present</span><br><span class="line">ip: -i ip LAN..................................................... Present</span><br><span class="line">ipmitool: -s IPMI sensors (servers)............................... Present</span><br><span class="line">ipmi-sensors: -s IPMI sensors (servers)........................... Present</span><br><span class="line">lsblk: -L LUKS/bcache; -o unmounted file system (best option)..... Present</span><br><span class="line">lsusb: -A usb audio; -J (optional); -N usb networking............. Present</span><br><span class="line">lvs: -L LVM data.................................................. Missing</span><br><span class="line">mdadm: -Ra advanced mdraid data................................... Missing</span><br><span class="line">modinfo: Ax; -Nx module version................................... Present</span><br><span class="line">runlevel: -I fallback to Perl..................................... Present</span><br><span class="line">sensors: -s sensors output........................................ Present</span><br><span class="line">smartctl: -Da advanced data....................................... Missing</span><br><span class="line">strings: -I sysvinit version...................................... Present</span><br><span class="line">sudo: -Dx hddtemp-user; -o file-user (try doas!).................. Present</span><br><span class="line">tree: --debugger 20,21 /sys tree.................................. Missing</span><br><span class="line">upower: -sx attached device battery info.......................... Present</span><br><span class="line"><span class="built_in">uptime</span>: -I <span class="built_in">uptime</span>................................................. Present</span><br><span class="line"> </span><br><span class="line">The following recommended system programs are missing:</span><br><span class="line">Program: bt-adapter ~ Install package: bluez-tools</span><br><span class="line">Program: doas ~ Install package: doas</span><br><span class="line">Program: fruid_print ~ Install package: N/A</span><br><span class="line">Program: lvs ~ Install package: lvm2</span><br><span class="line">Program: mdadm ~ Install package: mdadm</span><br><span class="line">Program: smartctl ~ Install package: smartmontools</span><br><span class="line">Program: tree ~ Install package: tree</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended display information programs:</span><br><span class="line"> </span><br><span class="line">glxinfo: -G (X) glx info.......................................... Present</span><br><span class="line">wmctrl: -S active window manager (fallback)....................... Present</span><br><span class="line">xdpyinfo: -G (X) Screen resolution, dpi; -Ga Screen size.......... Present</span><br><span class="line">xprop: -S (X) desktop data........................................ Present</span><br><span class="line">xrandr: -G (X) monitors(s) resolution; -Ga monitor data........... Present</span><br><span class="line"> </span><br><span class="line">All recommended display information programs are present</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended downloader programs (You only need one of these):</span><br><span class="line"> </span><br><span class="line">Perl HTTP::Tiny is the default downloader tool <span class="keyword">if</span> IO::Socket::SSL is present. </span><br><span class="line">See --<span class="built_in">help</span> --alt 40-44 options <span class="keyword">for</span> how to override default downloader(s) <span class="keyword">in</span> </span><br><span class="line"><span class="keyword">case</span> of issues. </span><br><span class="line"> </span><br><span class="line">If dig is installed, it is the default <span class="keyword">for</span> WAN IP data. Strongly recommended. </span><br><span class="line">Dig is fast and accurate. </span><br><span class="line"> </span><br><span class="line">curl: -i (<span class="keyword">if</span> no dig); -w,-W; -U................................... Present</span><br><span class="line">dig: -i wlan IP................................................... Present</span><br><span class="line">wget: -i (<span class="keyword">if</span> no dig); -w,-W; -U................................... Missing</span><br><span class="line"> </span><br><span class="line">The following recommended downloader programs are missing. However, you really </span><br><span class="line">only need dig <span class="keyword">in</span> most cases. All systems should have at least one of the </span><br><span class="line">downloader options present.: </span><br><span class="line">Program: wget ~ Install package: wget</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended kernel modules:</span><br><span class="line"> </span><br><span class="line">GPU modules are only needed <span class="keyword">if</span> applicable. NVMe drives <span class="keyword">do</span> not need drivetemp </span><br><span class="line">but other types <span class="keyword">do</span>. </span><br><span class="line"> </span><br><span class="line">To load a module: modprobe &lt;module-name&gt; - To permanently load add to </span><br><span class="line">/etc/modules or /etc/modules-load.d/modules.conf (check your system paths <span class="keyword">for</span> </span><br><span class="line">exact file/directory names). </span><br><span class="line"> </span><br><span class="line">amdgpu: -s AMD GPU sensor data (newer AMD GPUs)................... Missing</span><br><span class="line">drivetemp: -Dx drive temperature (kernel &gt;= 5.6).................. Missing</span><br><span class="line">nouveau: -s Nvidia GPU sensor data (<span class="keyword">if</span> using free driver)......... Missing</span><br><span class="line"> </span><br><span class="line">The following recommended kernel modules are missing:</span><br><span class="line">Kernel Module: amdgpu</span><br><span class="line">Kernel Module: drivetemp</span><br><span class="line">Kernel Module: nouveau</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended Perl modules (Optional):</span><br><span class="line"> </span><br><span class="line">None of these are strictly required, but <span class="keyword">if</span> you have them all, you can </span><br><span class="line">eliminate some recommended non Perl programs from the install. </span><br><span class="line"> </span><br><span class="line">HTTP::Tiny and IO::Socket::SSL must both be present to use as a downloader </span><br><span class="line">option. For json <span class="built_in">export</span> Cpanel::JSON::XS is preferred over JSON::XS, but </span><br><span class="line">JSON::PP is <span class="keyword">in</span> core modules. To run --debug 20-22 File::Copy, File::Find, and </span><br><span class="line">File::Spec::Functions must be present (most distros have these <span class="keyword">in</span> Core </span><br><span class="line">Modules). </span><br><span class="line"> </span><br><span class="line">File::Copy: --debug 20-22 - required to run debugger.............. Present</span><br><span class="line">File::Find: --debug 20-22 - required to run debugger.............. Present</span><br><span class="line">File::Spec::Functions: --debug 20-22 - required to run debugger... Present</span><br><span class="line">HTTP::Tiny: -U; -w,-W; -i (<span class="keyword">if</span> dig not installed).................. Present</span><br><span class="line">IO::Socket::SSL: -U; -w,-W; -i (<span class="keyword">if</span> dig not installed)............. Missing</span><br><span class="line">Time::HiRes: -C cpu <span class="built_in">sleep</span> (not required); --debug timers.......... Present</span><br><span class="line">JSON::PP: --output json (<span class="keyword">in</span> CoreModules, but slower).............. Missing</span><br><span class="line">Cpanel::JSON::XS: --output json (faster than JSON::PP)............ Present</span><br><span class="line">JSON::XS: --output json (legacy).................................. Present</span><br><span class="line">XML::Dumper: --output xml - Crude and raw......................... Present</span><br><span class="line">Net::FTP: --debug 21,22........................................... Present</span><br><span class="line"> </span><br><span class="line">The following recommended Perl modules are missing:</span><br><span class="line">Perl Module: IO::Socket::SSL ~ Install package: perl-IO-Socket-SSL</span><br><span class="line">Perl Module: JSON::PP ~ Install package: perl-JSON-PP</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended directories:</span><br><span class="line"> </span><br><span class="line">/dev: -l,-u,-o,-p,-P,-D disk partition data....................... Present</span><br><span class="line">/dev/disk/by-id: -D serial numbers................................ Present</span><br><span class="line">/dev/disk/by-label: -l,-o,-p,-P partition labels.................. Missing</span><br><span class="line">/dev/disk/by-path: -D extra data.................................. Present</span><br><span class="line">/dev/disk/by-uuid: -u,-o,-p,-P partition uuid..................... Present</span><br><span class="line">/sys/class/dmi/id: -M system, motherboard, bios................... Present</span><br><span class="line"> </span><br><span class="line">The following recommended directories are missing:</span><br><span class="line">Directory: /dev/disk/by-label</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Test: recommended files:</span><br><span class="line"> </span><br><span class="line">Note that not all of these are used by every system, so <span class="keyword">if</span> one is missing it<span class="string">&#x27;s </span></span><br><span class="line"><span class="string">usually not a big deal. </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">/etc/lsb-release: -S distro version data (older version).......... Missing</span></span><br><span class="line"><span class="string">/etc/os-release: -S distro version data (newer version)........... Present</span></span><br><span class="line"><span class="string">/proc/asound/cards: -A sound card data............................ Missing</span></span><br><span class="line"><span class="string">/proc/asound/version: -A ALSA data................................ Missing</span></span><br><span class="line"><span class="string">/proc/cpuinfo: -C cpu data........................................ Present</span></span><br><span class="line"><span class="string">/proc/mdstat: -R mdraid data (if you use dm-raid)................. Present</span></span><br><span class="line"><span class="string">/proc/meminfo: -I,-tm, -m memory data............................. Present</span></span><br><span class="line"><span class="string">/proc/modules: -G module data (sometimes)......................... Present</span></span><br><span class="line"><span class="string">/proc/mounts: -P,-p partition advanced data....................... Present</span></span><br><span class="line"><span class="string">/proc/scsi/scsi: -D Advanced hard disk data (used rarely)......... Present</span></span><br><span class="line"><span class="string">/var/log/Xorg.0.log: -G graphics driver load status............... Missing</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">The following recommended files are missing:</span></span><br><span class="line"><span class="string">File: /etc/lsb-release</span></span><br><span class="line"><span class="string">File: /proc/asound/cards</span></span><br><span class="line"><span class="string">File: /proc/asound/version</span></span><br><span class="line"><span class="string">File: /var/log/Xorg.0.log</span></span><br><span class="line"><span class="string">------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">Ok, all done with the checks. Have a nice day.</span></span><br></pre></td></tr></table></figure><p><strong>获取 Linux 系统信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi </span><br><span class="line">CPU: 8-core Intel Xeon E5-2609 v4 (-MCP-) speed/min/max: 1220/1200/1700 MHz</span><br><span class="line">Kernel: 3.10.0-1160.el7.x86_64 x86_64 Up: 13d 4h 6m Mem: 2730.4/15774.7 MiB</span><br><span class="line">(17.3%) Storage: 1.13 TiB (1.1% used) Procs: 169 Shell: Bash inxi: 3.3.21</span><br></pre></td></tr></table></figure><p><strong>获取内核和发行版本信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -S </span><br><span class="line">System:</span><br><span class="line">  Host: QZ Kernel: 3.10.0-1160.el7.x86_64 arch: x86_64 bits: 64</span><br><span class="line">    Console: pty pts/0 Distro: CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><p><strong>获取电脑机型</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -M</span><br><span class="line">Machine:</span><br><span class="line">  Type: Server Mobo: N/A model: SC612DI-8F v: 1.01 serial: ZM194S005553</span><br><span class="line">    UEFI: American Megatrends v: 3.1 date: 06/07/2018</span><br></pre></td></tr></table></figure><p><strong>获取 CPU 及主频信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -C</span><br><span class="line">CPU:</span><br><span class="line">  Info: 8-core model: Intel Xeon E5-2609 v4 bits: 64 type: MCP cache:</span><br><span class="line">    L2: 2 MiB</span><br><span class="line">  Speed (MHz): avg: 1204 min/max: 1200/1700 cores: 1: 1236 2: 1200 3: 1200</span><br><span class="line">    4: 1200 5: 1200 6: 1200 7: 1200 8: 1200</span><br></pre></td></tr></table></figure><p><strong>获取显卡信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -G</span><br><span class="line">Graphics:</span><br><span class="line">  Device-1: ASPEED Graphics Family driver: ast v: kernel</span><br><span class="line">  Display: server: No display server data found. Headless machine?</span><br><span class="line">  Message: GL data unavailable for root.</span><br></pre></td></tr></table></figure><p><strong>获取声卡信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -A</span><br><span class="line">Audio:</span><br><span class="line">  Message: No device data found.</span><br></pre></td></tr></table></figure><p><strong>获取网卡信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -N</span><br><span class="line">Network:</span><br><span class="line">  Device-1: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  Device-2: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  Device-3: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  Device-4: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  Device-5: Intel I210 Gigabit Network driver: igb</span><br><span class="line">  Device-6: Intel I210 Gigabit Network driver: igb</span><br></pre></td></tr></table></figure><p><strong>获取硬盘信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -D</span><br><span class="line">Drives:</span><br><span class="line">  Local Storage: total: 1.13 TiB used: 12.9 GiB (1.1%)</span><br><span class="line">  ID-1: /dev/sda vendor: Samsung model: MZ7LH240HAHQ-00005 size: 223.57 GiB</span><br><span class="line">  ID-2: /dev/sdb vendor: Seagate model: ST1000NM0055-1V410C</span><br><span class="line">    size: 931.51 GiB</span><br></pre></td></tr></table></figure><p><strong>获取简要的系统信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -b</span><br><span class="line">System:</span><br><span class="line">  Host: QZ Kernel: 3.10.0-1160.el7.x86_64 arch: x86_64 bits: 64</span><br><span class="line">    Console: pty pts/0 Distro: CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">Machine:</span><br><span class="line">  Type: Server Mobo: N/A model: SC612DI-8F v: 1.01 serial: ZM194S005553</span><br><span class="line">    UEFI: American Megatrends v: 3.1 date: 06/07/2018</span><br><span class="line">CPU:</span><br><span class="line">  Info: 8-core Intel Xeon E5-2609 v4 [MCP] speed (MHz): avg: 1207</span><br><span class="line">    min/max: 1200/1700</span><br><span class="line">Graphics:</span><br><span class="line">  Device-1: ASPEED Graphics Family driver: ast v: kernel</span><br><span class="line">  Display: server: No display server data found. Headless machine?</span><br><span class="line">  Message: GL data unavailable for root.</span><br><span class="line">Network:</span><br><span class="line">  Device-1: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  Device-2: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  Device-3: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  Device-4: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  Device-5: Intel I210 Gigabit Network driver: igb</span><br><span class="line">  Device-6: Intel I210 Gigabit Network driver: igb</span><br><span class="line">Drives:</span><br><span class="line">  Local Storage: total: 1.13 TiB used: 12.89 GiB (1.1%)</span><br><span class="line">Info:</span><br><span class="line">  Processes: 169 Uptime: 13d 4h 12m Memory: 15.41 GiB used: 2.56 GiB (16.6%)</span><br><span class="line">  Shell: Bash inxi: 3.3.21</span><br></pre></td></tr></table></figure><p><strong>获取硬盘分区信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -p</span><br><span class="line">Partition:</span><br><span class="line">  ID-1: / size: 49.09 GiB used: 6.32 GiB (12.9%) fs: ext4 dev: /dev/sda3</span><br><span class="line">  ID-2: /boot size: 487.9 MiB used: 101.6 MiB (20.8%) fs: ext4</span><br><span class="line">    dev: /dev/sda2</span><br><span class="line">  ID-3: /boot/efi size: 511.7 MiB used: 11.2 MiB (2.2%) fs: vfat</span><br><span class="line">    dev: /dev/sda1</span><br><span class="line">  ID-4: /home size: 49.09 GiB used: 52 MiB (0.1%) fs: ext4 dev: /dev/sda4</span><br><span class="line">  ID-5: /tmpdisk size: 424.61 GiB used: 72 MiB (0.0%) fs: ext4</span><br><span class="line">    dev: /dev/sdb2</span><br><span class="line">  ID-6: /var size: 492.03 GiB used: 6.33 GiB (1.3%) fs: ext4 dev: /dev/sdb1</span><br><span class="line">  ID-7: swap-1 size: 16 GiB used: 0 KiB (0.0%) fs: swap dev: /dev/sda5</span><br></pre></td></tr></table></figure><p><strong>获取完整的 Linux 系统信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -F</span><br></pre></td></tr></table></figure><p><strong>监控 Linux 进程的内存使用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi  -I</span><br><span class="line">Info:</span><br><span class="line">  Processes: 169 Uptime: 13d 4h 16m Memory: 15.41 GiB used: 2.81 GiB (18.3%)</span><br><span class="line">  Shell: Bash inxi: 3.3.21</span><br></pre></td></tr></table></figure><p><strong>监控进程占用的 CPU 和内存资源</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]<span class="comment"># inxi  -tc </span></span><br><span class="line">Processes:</span><br><span class="line">  CPU top: 5 of 168</span><br><span class="line">  1: cpu: 3.4% <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: cpu: 1.5% <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  3: cpu: 0.7% <span class="built_in">command</span>: node_exporter pid: 971</span><br><span class="line">  4: cpu: 0.2% <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: cpu: 0.2% <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">[root@QZ ~]<span class="comment"># inxi  -tm</span></span><br><span class="line">Processes:</span><br><span class="line">  System RAM: total: 15.41 GiB used: 2.67 GiB (17.3%)</span><br><span class="line">  Memory top: 5 ( 1 processes) of 168</span><br><span class="line">  1: mem: 917.8 MiB (5.8%) <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: mem: 424.1 MiB (2.6%) <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">  3: mem: 94.4 MiB (0.5%) <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  4: mem: 74.3 MiB (0.4%) <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: mem: 70.1 MiB (0.4%) <span class="built_in">command</span>: ysyapi-dashboard pid: 3058</span><br><span class="line">[root@QZ ~]<span class="comment"># inxi  -tcm</span></span><br><span class="line">Processes:</span><br><span class="line">  CPU top: 5 of 168</span><br><span class="line">  1: cpu: 3.4% <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: cpu: 1.5% <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  3: cpu: 0.7% <span class="built_in">command</span>: node_exporter pid: 971</span><br><span class="line">  4: cpu: 0.2% <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: cpu: 0.2% <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">  System RAM: total: 15.41 GiB used: 2.69 GiB (17.4%)</span><br><span class="line">  Memory top: 5 of 168</span><br><span class="line">  1: mem: 932.9 MiB (5.9%) <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: mem: 424.1 MiB (2.6%) <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">  3: mem: 94.4 MiB (0.5%) <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  4: mem: 74.3 MiB (0.4%) <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: mem: 70.1 MiB (0.4%) <span class="built_in">command</span>: ysyapi-dashboard pid: 3058</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以在选项 cm 后跟一个整数(在 1-20 之间)设置显示多少个进程，下面的命令显示了前 10 个最消耗 CPU 和内存的进程：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]<span class="comment"># inxi  -tcm10 </span></span><br><span class="line">Processes:</span><br><span class="line">  CPU top: 10 of 168</span><br><span class="line">  1: cpu: 3.4% <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: cpu: 1.5% <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  3: cpu: 0.7% <span class="built_in">command</span>: node_exporter pid: 971</span><br><span class="line">  4: cpu: 0.2% <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: cpu: 0.2% <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">  6: cpu: 0.1% <span class="built_in">command</span>: networkmanager pid: 711</span><br><span class="line">  7: cpu: 0.1% <span class="built_in">command</span>: ysyapi-dashboard pid: 3058</span><br><span class="line">  8: cpu: 0.0% <span class="built_in">command</span>: systemd pid: 1</span><br><span class="line">  9: cpu: 0.0% <span class="built_in">command</span>: [kthreadd] pid: 2</span><br><span class="line">  10: cpu: 0.0% <span class="built_in">command</span>: [kworker/0:0h] pid: 4</span><br><span class="line">  System RAM: total: 15.41 GiB used: 2.53 GiB (16.4%)</span><br><span class="line">  Memory top: 10 of 168</span><br><span class="line">  1: mem: 774.8 MiB (4.9%) <span class="built_in">command</span>: clickhouse-server pid: 1481</span><br><span class="line">  2: mem: 424.1 MiB (2.6%) <span class="built_in">command</span>: mysqld pid: 1562</span><br><span class="line">  3: mem: 94.4 MiB (0.5%) <span class="built_in">command</span>: etcd pid: 972</span><br><span class="line">  4: mem: 75.1 MiB (0.4%) <span class="built_in">command</span>: prometheus pid: 973</span><br><span class="line">  5: mem: 70.1 MiB (0.4%) <span class="built_in">command</span>: ysyapi-dashboard pid: 3058</span><br><span class="line">  6: mem: 64.1 MiB (0.4%) <span class="built_in">command</span>: systemd-journald pid: 449</span><br><span class="line">  7: mem: 39.2 MiB (0.2%) <span class="built_in">command</span>: rsyslogd pid: 978</span><br><span class="line">  8: mem: 38.6 MiB (0.2%) <span class="built_in">command</span>: nginx: pid: 9622</span><br><span class="line">  9: mem: 38.6 MiB (0.2%) <span class="built_in">command</span>: nginx: pid: 9625</span><br><span class="line">  10: mem: 38.3 MiB (0.2%) <span class="built_in">command</span>: nginx: pid: 9621</span><br></pre></td></tr></table></figure><p>下面的命令会列出网卡信息，包括接口信息、网络频率、mac 地址、网卡状态和网络 IP 等信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]<span class="comment"># inxi  -Nni </span></span><br><span class="line">Network:</span><br><span class="line">  Device-1: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  IF: enp2s0f0 state: down mac: 68:91:d0:6a:74:6a</span><br><span class="line">  Device-2: Intel 82599ES 10-Gigabit SFI/SFP+ Network driver: ixgbe</span><br><span class="line">  IF: enp2s0f1 state: down mac: 68:91:d0:6a:74:6b</span><br><span class="line">  Device-3: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  IF: ens1f0 state: down mac: 58:53:c0:44:0a:70</span><br><span class="line">  Device-4: Intel I350 Gigabit Network driver: igb</span><br><span class="line">  IF: ens1f1 state: down mac: 58:53:c0:44:0a:71</span><br><span class="line">  Device-5: Intel I210 Gigabit Network driver: igb</span><br><span class="line">  IF: eth0 state: up speed: 100 Mbps duplex: full mac: ac:1f:6b:d2:3f:30</span><br><span class="line">  Message: Output throttled. IPs: 1; Limit: 10; Override: --<span class="built_in">limit</span> [1-x;-1</span><br><span class="line">    all]</span><br><span class="line">  Device-6: Intel I210 Gigabit Network driver: igb</span><br><span class="line">  IF: eth1 state: up speed: 1000 Mbps duplex: full mac: ac:1f:6b:d2:3f:31</span><br><span class="line">  Message: Output throttled. IPs: 1; Limit: 10; Override: --<span class="built_in">limit</span> [1-x;-1</span><br><span class="line">    all]</span><br><span class="line">  WAN IP: 111.207.167.18</span><br></pre></td></tr></table></figure><p><strong>监控 CPU 温度和电脑风扇转速</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -s </span><br><span class="line">Sensors:</span><br><span class="line">  System Temperatures: ipmi cpu: 32 C mobo: 28 C</span><br><span class="line">  Fan Speeds (RPM): ipmi fan-1: 1200 fan-3: 1200 fan-10: 1100</span><br><span class="line">  System Temperatures: lm-sensors cpu: 24.0 C mobo: N/A</span><br><span class="line">  Fan Speeds (RPM): lm-sensors N/A</span><br></pre></td></tr></table></figure><p><strong>用 Linux 查看天气预报</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -w</span><br><span class="line">Weather:</span><br><span class="line">  Report: temperature: 20 C (68 F) conditions: Clear sky</span><br><span class="line">  Locale: Beijing, 22, CHN current time: Fri 21 Oct 2022 01:37:06 PM CST</span><br><span class="line">    (Asia/Harbin) Source: WeatherBit.io</span><br></pre></td></tr></table></figure><p><strong>查看所有的 Linux 仓库信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@QZ ~]# inxi -r </span><br><span class="line">Repos:</span><br><span class="line">  No active yum repos in: /etc/yum.conf</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-CR.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-Debuginfo.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-Media.repo</span><br><span class="line">  Active yum repos in: /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class="line">    1: centos-sclo-rh ~ http://mirrorlist.centos.org?arch=$basearch&amp;release=7&amp;repo=sclo-rh</span><br><span class="line">  Active yum repos in: /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class="line">    1: centos-sclo-sclo ~ http://mirrorlist.centos.org?arch=$basearch&amp;release=7&amp;repo=sclo-sclo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-Sources.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-Vault.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-fasttrack.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/CentOS-x86_64-kernel.repo</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/epel-testing.repo</span><br><span class="line">  Active yum repos in: /etc/yum.repos.d/epel.repo</span><br><span class="line">    1: epel ~ https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=$basearch&amp;infra=$infra&amp;content=$contentdir</span><br><span class="line">  No active yum repos in: /etc/yum.repos.d/mysql-community-source.repo</span><br><span class="line">  Active yum repos in: /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">    1: mysql-connectors-community ~ http://repo.mysql.com/yum/mysql-connectors-community/el/7/$basearch/</span><br><span class="line">    2: mysql-tools-community ~ http://repo.mysql.com/yum/mysql-tools-community/el/7/$basearch/</span><br><span class="line">    3: mysql-tools-preview ~ http://repo.mysql.com/yum/mysql-tools-preview/el/7/$basearch/</span><br></pre></td></tr></table></figure><p><strong>显示基础信息</strong> <code>-v</code>后数字1-8 简要信息到完整信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inxi -v 4 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSFTP不同用户拥有不同权限</title>
      <link href="/2022/10/15/vsftp%E4%B8%8D%E5%90%8C%E7%94%A8%E6%88%B7%E6%8B%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90/"/>
      <url>/2022/10/15/vsftp%E4%B8%8D%E5%90%8C%E7%94%A8%E6%88%B7%E6%8B%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h3 id="VSFTP不同用户拥有不同权限"><a href="#VSFTP不同用户拥有不同权限" class="headerlink" title="VSFTP不同用户拥有不同权限"></a>VSFTP不同用户拥有不同权限</h3><h2 id="安装篇"><a href="#安装篇" class="headerlink" title="安装篇"></a>安装篇</h2><h4 id="操作系统环境"><a href="#操作系统环境" class="headerlink" title="操作系统环境"></a>操作系统环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">centos 7.9 mini</span><br></pre></td></tr></table></figure><h4 id="安装vsftp服务"><a href="#安装vsftp服务" class="headerlink" title="安装vsftp服务"></a>安装vsftp服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install –y vsftpd ftp –安装</span><br><span class="line">systemctl start vsftpd.service –启动</span><br><span class="line">systemctl enable vsftpd.service –开机自启</span><br><span class="line">vi /etc/selinux/conf</span><br><span class="line">SELINUX=enforce 改成 SELINUX=disabled</span><br><span class="line">getenforce - 查看是否为Disabled</span><br></pre></td></tr></table></figure><h2 id="实现篇"><a href="#实现篇" class="headerlink" title="实现篇"></a>实现篇</h2><h3 id="1-要实现的功能"><a href="#1-要实现的功能" class="headerlink" title="1.要实现的功能"></a>1.要实现的功能</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin_root：/home/download/下的所有文件夹及文件具有上传、下载、删除权限</span><br><span class="line">admin_001：/home/download/admin_001/下的文件具有上传、下载、删除权限</span><br><span class="line"></span><br><span class="line">download_root：/home/download/下的所有文件夹及文件具有下载权限</span><br><span class="line">download_001：/home/download/admin_001/下的文件具有下载权限</span><br></pre></td></tr></table></figure><h3 id="2-首先创建一个本地系统用户abcde并指定其家目录，并建立相应的子目录"><a href="#2-首先创建一个本地系统用户abcde并指定其家目录，并建立相应的子目录" class="headerlink" title="2.首先创建一个本地系统用户abcde并指定其家目录，并建立相应的子目录"></a>2.首先创建一个本地系统用户<code>abcde</code>并指定其家目录，并建立相应的子目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /home/download abcde -s /sbin/nologin</span><br><span class="line">mkdir -p /home/download/admin_001</span><br><span class="line">chown -R abcde: /home/download</span><br><span class="line">chmod 755 /home/download</span><br><span class="line">chmod 755 /home/download/*</span><br></pre></td></tr></table></figure><h3 id="3-创建用户数据文件：（一行账号一行密码，不要有空行，不要有空格）"><a href="#3-创建用户数据文件：（一行账号一行密码，不要有空行，不要有空格）" class="headerlink" title="3.创建用户数据文件：（一行账号一行密码，不要有空行，不要有空格）"></a>3.创建用户数据文件：（一行账号一行密码，不要有空行，不要有空格）</h3><p><strong>所有密码此处示例设为123456。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/userlist.txt</span><br><span class="line">admin_root</span><br><span class="line">123456</span><br><span class="line">admin_001</span><br><span class="line">123456</span><br><span class="line">download_root</span><br><span class="line">123456</span><br><span class="line">download_001</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p><strong>然后生成数据文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db_load：一般系统都有安装，db4，db4-devel，db4-utils ，如果没有的话可以安装：</span><br><span class="line">yum -y install db4*</span><br><span class="line"></span><br><span class="line">db_load -T -t hash -f /etc/vsftpd/userlist.txt /etc/vsftpd/userlist.db</span><br></pre></td></tr></table></figure><h4 id="4、修改pam配置"><a href="#4、修改pam配置" class="headerlink" title="4、修改pam配置"></a>4、修改pam配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pam.d/vsftpd</span><br></pre></td></tr></table></figure><p><strong>将原来的全部注释掉，加入</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/userlist</span><br><span class="line">account sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/userlist</span><br></pre></td></tr></table></figure><p><strong>注意：<code>db=/etc/vsftpd/userlist</code> 后面的<code>.db</code>必须去掉，默认会自动匹配<code>*.db</code>文件，</strong><br><strong>这里只需要给数据文件名，就行了。</strong><br><strong>64位机需要使用<code>lib64</code>（这里折腾了好久，有的是<code>lib</code>有的是<code>lib64</code>）;</strong></p><h3 id="5、创建本地系统用户abcde对应的虚拟账户"><a href="#5、创建本地系统用户abcde对应的虚拟账户" class="headerlink" title="5、创建本地系统用户abcde对应的虚拟账户"></a>5、创建本地系统用户abcde对应的虚拟账户</h3><p><strong>虚拟用户需要通过本地系统用户来实现各种操作,因此要放在系统用户的同名文件夹下。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/vfstpd/abcde</span><br><span class="line">cd /etc/vfstpd/abcde</span><br></pre></td></tr></table></figure><p><strong>每一个虚拟用户都要有一个同名的文件，文件里记载其权限以及可操作的目录；</strong><br><strong>本例如下执行，两个&gt;&gt;和&lt;&lt;之间不要有空格</strong></p><p><strong>创建有上传下载权限的用户</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;admin_root&lt;&lt;EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line">local_root=/home/download</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;admin_001&lt;&lt;EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line">local_root=/home/download/admin_001</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>创建只有下载权限的用户</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;download_root&lt;&lt;EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">local_root=/home/download</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;download_001&lt;&lt;EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">local_root=/home/download/admin_001</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="6、设置配置文件vsftpd-conf"><a href="#6、设置配置文件vsftpd-conf" class="headerlink" title="6、设置配置文件vsftpd.conf"></a>6、设置配置文件vsftpd.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><p><strong>修改内容如下：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">listen=YES</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">local_enable=YES</span><br><span class="line">write_enable=NO</span><br><span class="line">anon_upload_enable=NO</span><br><span class="line">anon_mkdir_write_enable=NO</span><br><span class="line">anon_other_write_enable=NO</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">guest_enable=YES</span><br><span class="line">guest_username=abcde</span><br><span class="line">virtual_use_local_privs=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">user_config_dir=/etc/vsftpd/abcde</span><br><span class="line">local_umask=022</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">xferlog_file=/var/log/vsftpd.log</span><br><span class="line">pasv_promiscuous=YES</span><br></pre></td></tr></table></figure><p><strong>touch  &#x2F;etc&#x2F;vsftp&#x2F;chroot_list</strong><br><strong>里面啥也不写。</strong></p><h3 id="7、重新启动vsftpd"><a href="#7、重新启动vsftpd" class="headerlink" title="7、重新启动vsftpd"></a>7、重新启动vsftpd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure><h3 id="8-测试"><a href="#8-测试" class="headerlink" title="8.测试"></a>8.测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">所有用户只能进入自己家目录不能进入上一级目录；</span><br><span class="line">admin_root对于/home/download下的所有文件夹具有上传、下载、删除权限；</span><br><span class="line">admin_001对于/home/download/下的同名文件夹具有上传、删除权限，无其他权限；</span><br><span class="line">download_root对于/home/download下的所有文件夹具有下载权限，不能上传或删除任何内容，不能对其他任何文件夹操作；</span><br><span class="line">download_001对于/home/download/下的admin_001文件夹分别具有下载权限，不能上传或删除任何内容，不能对其他任何文件夹操作。</span><br></pre></td></tr></table></figure><h3 id="9-日常维护"><a href="#9-日常维护" class="headerlink" title="9.日常维护"></a>9.日常维护</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）更新帐号，先修改userlist.txt，再执行db_load</span><br><span class="line">db_load -T -t hash -f /etc/vsftpd/userlist.txt /etc/vsftpd/userlist.db</span><br><span class="line">（2）更新/etc/vsftpd/abcde/下不同用户对应的权限</span><br><span class="line">（3）重启vsftpd</span><br><span class="line"></span><br><span class="line">systemctl start  vsftpd.service</span><br></pre></td></tr></table></figure><h3 id="10-加密连接"><a href="#10-加密连接" class="headerlink" title="10.加密连接"></a>10.加密连接</h3><p><strong>生成证书</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:1024 \</span><br><span class="line"> -keyout /etc/vsftpd/vsftpd.pem \</span><br><span class="line"> -out /etc/vsftpd/vsftpd.pem</span><br></pre></td></tr></table></figure><p><strong>其中”-days 365”声明证书的有效期是一年。</strong></p><p><strong>接下来的过程需要你输入一些相关的国家，地区，位置，组织名称，common name等信息。</strong></p><p><strong>回答这些信息以后系统会将生成完的证书vsftpd.pem文件保存在&#x2F;etc&#x2F;vsftpd目录下。</strong></p><p><strong>修改<code>/etc/vsftpd/vsftpd.conf</code>文件,增加以下内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssl_enable=YES</span><br><span class="line">allow_anon_ssl=NO</span><br><span class="line">force_local_data_ssl=NO</span><br><span class="line">force_local_logins_ssl=NO</span><br><span class="line">ssl_tlsv1=YES</span><br><span class="line">ssl_sslv2=NO</span><br><span class="line">ssl_sslv3=NO</span><br><span class="line">rsa_cert_file=/etc/vsftpd/vsftpd.pem</span><br></pre></td></tr></table></figure><p><strong>如果设置force_local_logins_ssl&#x3D;YES，那么会强制用户登录时采用支持TLS&#x2F;SSL认证的ftp客户端。如果设置为NO的话，则用户可以选择使用ssl加密或者不加密。</strong></p><p><strong>此时选择不加密登录会有失败提示</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Non-anonymous sessions must use encryption.</span><br></pre></td></tr></table></figure><p><strong>重启服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure><p><strong>修改为其他端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen_port=10021</span><br></pre></td></tr></table></figure><h3 id="vsftpd-425-Security-Bad-IP-connecting解决方法"><a href="#vsftpd-425-Security-Bad-IP-connecting解决方法" class="headerlink" title="vsftpd 425 Security: Bad IP connecting解决方法"></a>vsftpd 425 Security: Bad IP connecting解决方法</h3><p><strong>问题分析:</strong><br>FTP客户端软件连接<code>vsftpd</code>服务报此错误，大概原因是在连接中变换了IP地址。</p><p><strong>问题解决</strong></p><p><strong>服务端添加：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br><span class="line">pasv_promiscuous=YES</span><br></pre></td></tr></table></figure><p><strong>重启服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure><p><strong>pasv_promiscuous选项参数说明</strong><br>此选项激活时，将关闭PASV模式的安全检查。该检查确保数据连接和控制连接是来自同一个IP地址。小心打开此选项。此选项唯一合理的用法是存在于由安全隧道方案构成的组织中。默认值为NO。<br>合理的用法是：在一些安全隧道配置环境下，或者更好地支持FXP时(才启用它)。</p><p><strong>FTP模式与数据端口</strong></p><p>FTP 分为两类，PORT FTP和PASV FTP，PORT FTP是一般形式的FTP。这两种FTP在建立控制连接时操作是一样的，都是由客户端首先和FTP服务器的控制端口(默认值为21)建立控制链接，并通过此链接进行传输操作指令。它们的区别在于使用数据传输端口(ftp- data)的方式。PORT FTP由FTP服务器指定数据传输所使用的端口，默认值为20。PASV FTP由FTP客户端决定数据传输的端口。 PASV FTP这种做法，主要是考虑到存在防火墙的环境下，由客户端与服务器进行沟通(客户端向服务器发出数据传输请求中包含了数据传输端口)，决定两者之间的数据传输端口更为方便一些。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux小技巧汇总</title>
      <link href="/2022/10/08/linux%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
      <url>/2022/10/08/linux%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux小技巧汇总"><a href="#Linux小技巧汇总" class="headerlink" title="Linux小技巧汇总"></a>Linux小技巧汇总</h3><h3 id="1-超时不操作自动退出登录TMOUT"><a href="#1-超时不操作自动退出登录TMOUT" class="headerlink" title="1.超时不操作自动退出登录TMOUT"></a>1.超时不操作自动退出登录TMOUT</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile </span><br><span class="line">最后一行加上</span><br><span class="line">TMOUT=90</span><br><span class="line">退出当前用户使配置生效</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">重新登录</span><br></pre></td></tr></table></figure><p>查看是否生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set | grep -i tmout</span><br><span class="line">TMOUT=90</span><br></pre></td></tr></table></figure><p>生效了！！！不操作等待90s会自动退出当前用户！！</p><p>如何取消呢？</p><p>只要将<code>/etc/profile</code>文件中<code>TMOUT=90</code>删除，然后退出使之生效。再次测试即可。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用sed批量修改网址</title>
      <link href="/2022/09/15/%E4%BD%BF%E7%94%A8sed%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E7%BD%91%E5%9D%80/"/>
      <url>/2022/09/15/%E4%BD%BF%E7%94%A8sed%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E7%BD%91%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h3 id="将时间戳转换为指定格式"><a href="#将时间戳转换为指定格式" class="headerlink" title="将时间戳转换为指定格式"></a>将时间戳转换为指定格式</h3><h3 id="文本如下"><a href="#文本如下" class="headerlink" title="文本如下"></a>文本如下</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article1.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article2.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article3.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article4.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article5.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article6.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article7.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article8.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article9.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article10.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article11.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article12.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/article13.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/animal.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/blue.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/cat.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/coffee.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/finch.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/lighthouse.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/nature.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/soda-water.jpg</span><br><span class="line">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/swan.jpg</span><br></pre></td></tr></table></figure><p>将<code>https://fastly.jsdelivr.net</code>都修改为<code>https://qq.com</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e &quot;s/https:\/\/fastly.jsdelivr.net/https:\/\/qq.com/&quot; img.txt</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article1.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article2.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article3.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article4.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article5.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article6.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article7.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article8.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article9.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article10.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article11.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article12.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/article13.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/animal.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/blue.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/cat.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/coffee.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/finch.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/lighthouse.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/nature.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/soda-water.jpg</span><br><span class="line">https://qq.com/gh/Smithkenny/Myimage/img/swan.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用python实现unix时间戳转换</title>
      <link href="/2022/09/08/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0unix%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/09/08/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0unix%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="将时间戳转换为指定格式"><a href="#将时间戳转换为指定格式" class="headerlink" title="将时间戳转换为指定格式"></a>将时间戳转换为指定格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="built_in">print</span>(time.time()) <span class="comment"># 生成当前日期的时间戳</span></span><br><span class="line"><span class="number">1662602249.6098158</span></span><br><span class="line"><span class="built_in">print</span>(time.actime(<span class="number">1662602249.6098158</span>)) <span class="comment">#将时间戳转换成指定格式显示</span></span><br></pre></td></tr></table></figure><h3 id="其他转换参考"><a href="#其他转换参考" class="headerlink" title="其他转换参考"></a>其他转换参考</h3><p><a href="https://www.cnblogs.com/pal-duan/p/10568829.html">https://www.cnblogs.com/pal-duan/p/10568829.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CKS初始环境搭建</title>
      <link href="/2022/08/22/CKS%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/08/22/CKS%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><table><thead><tr><th align="center">k8s主机名</th><th align="center">IP地址</th><th align="center">系统版本号</th><th align="center">k8s组件版本</th></tr></thead><tbody><tr><td align="center">CKS-master</td><td align="center">10.4.7.180</td><td align="center">ubuntu 20.04</td><td align="center">1.24.4</td></tr><tr><td align="center">CKS-node1</td><td align="center">10.4.7.181</td><td align="center">ubuntu 20.04</td><td align="center">1.24.4</td></tr><tr><td align="center">CKS-node2</td><td align="center">10.4.7.182</td><td align="center">ubuntu 20.04</td><td align="center">1.24.4</td></tr></tbody></table><h3 id="配置前准备"><a href="#配置前准备" class="headerlink" title="配置前准备"></a>配置前准备</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开root用户设置密码</span></span><br><span class="line">sudo passwd root</span><br><span class="line"><span class="comment"># 切换root用户</span></span><br><span class="line">su - root</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">apt update </span><br><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">apt install ssh -y </span><br><span class="line"><span class="comment"># 允许root用户远程登录</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">UseDNS no</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure><h3 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要对应的机器执行如下命令</span></span><br><span class="line">hostnamectl set-hostname CKS-master</span><br><span class="line">hostnamectl set-hostname CKS-node1</span><br><span class="line">hostnamectl set-hostname CKS-node2</span><br></pre></td></tr></table></figure><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;10.4.7.180 CKS-master\n10.4.7.181 CKS-node1\n10.4.7.182 CKS-node2&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝到远程集群机器</span></span><br><span class="line">scp /etc/hosts root@10.4.7.181:/etc/</span><br><span class="line">scp /etc/hosts root@10.4.7.182:/etc/</span><br></pre></td></tr></table></figure><h3 id="初始化部分"><a href="#初始化部分" class="headerlink" title="初始化部分"></a>初始化部分</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">systemctl stop ufw.service &amp;&amp; systemctl <span class="built_in">disable</span> ufw.service</span><br><span class="line">iptables -F </span><br><span class="line">iptables-save </span><br><span class="line"><span class="comment"># 关闭swap</span></span><br><span class="line">swapoff -a</span><br><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="vnc服务搭建（选做）"><a href="#vnc服务搭建（选做）" class="headerlink" title="vnc服务搭建（选做）"></a>vnc服务搭建（选做）</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装vnc远程服务</span></span><br><span class="line">apt install xfce4 xfce4-goodies -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选lightdm</span></span><br><span class="line"></span><br><span class="line">apt install tightvncserver -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置远程密码</span></span><br><span class="line">123qwe.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启远程发现空白</span></span><br><span class="line">vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改配置文件</span></span><br><span class="line"><span class="built_in">mv</span> .vnc/xstartup .vnc/xstartup.bak</span><br><span class="line">nano .vnc/xstartup</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">xrdb <span class="variable">$HOME</span>/.Xresources</span><br><span class="line">startxfce4 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x .vnc/xstartup</span><br><span class="line"><span class="comment"># 杀进程</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> :2</span><br><span class="line"><span class="comment"># 再次启动远程</span></span><br><span class="line">vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试：用vncview连接</span></span><br><span class="line">ip:2</span><br></pre></td></tr></table></figure><h2 id="安装containerd"><a href="#安装containerd" class="headerlink" title="安装containerd"></a>安装containerd</h2><h3 id="运行时Runc安装"><a href="#运行时Runc安装" class="headerlink" title="运行时Runc安装"></a>运行时Runc安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载二进制包 https://github.com/opencontainers/runc/releases/download/</span></span><br><span class="line">wget https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64</span><br><span class="line"><span class="comment"># 执行Path和权限设置</span></span><br><span class="line"><span class="built_in">mv</span> runc.amd64 /usr/local/sbin/runc </span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/sbin/runc</span><br></pre></td></tr></table></figure><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">添加加载内核模块</span></span><br><span class="line">cat &lt;&lt; EOF | sudo tee /etc/modules-load.d/containerd.conf</span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"># </span><span class="language-bash">加载内核模块</span></span><br><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"><span class="meta">#</span><span class="language-bash">设置内核参数</span></span><br><span class="line">cat &lt;&lt; EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span><br><span class="line">net.bridge.bridge-nf-call-iptables  = 1</span><br><span class="line">net.ipv4.ip_forward                 = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"># </span><span class="language-bash">应用内核参数</span></span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">下载二进制包 https://github.com/containerd/containerd/releases/</span></span><br><span class="line">wget https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf containerd-1.6.8-linux-amd64.tar.gz </span><br><span class="line"><span class="meta"># </span><span class="language-bash">执行文件放置系统Path</span></span><br><span class="line">mv ./bin/* /usr/local/bin/</span><br><span class="line"><span class="meta"># </span><span class="language-bash">systemd 服务启动脚本文件配置</span></span><br><span class="line">cat &gt; /lib/systemd/system/containerd.service &lt;&lt; EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Copyright The containerd Authors.</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">you may not use this file except <span class="keyword">in</span> compliance with the License.</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">You may obtain a copy of the License at</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">distributed under the License is distributed on an <span class="string">&quot;AS IS&quot;</span> BASIS,</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">See the License <span class="keyword">for</span> the specific language governing permissions and</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">limitations under the License.</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=containerd container runtime</span><br><span class="line">Documentation=https://containerd.io</span><br><span class="line">After=network.target local-fs.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStartPre=-/sbin/modprobe overlay</span><br><span class="line">ExecStart=/usr/local/bin/containerd</span><br><span class="line"></span><br><span class="line">Type=notify</span><br><span class="line">Delegate=yes</span><br><span class="line">KillMode=process</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line"><span class="meta"># </span><span class="language-bash">Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="keyword">in</span> the kernel. We recommend using cgroups to <span class="keyword">do</span> container-local accounting.</span></span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line"><span class="meta"># </span><span class="language-bash">Comment TasksMax <span class="keyword">if</span> your systemd version does not supports it.</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Only systemd 226 and above support this version.</span></span><br><span class="line">TasksMax=infinity</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="检测版本"><a href="#检测版本" class="headerlink" title="检测版本"></a>检测版本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">runc -v</span><br><span class="line">ctr -v</span><br></pre></td></tr></table></figure><h3 id="启动、关闭服务及查看服务状态"><a href="#启动、关闭服务及查看服务状态" class="headerlink" title="启动、关闭服务及查看服务状态"></a>启动、关闭服务及查看服务状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start containerd</span><br><span class="line">systemctl restart containerd</span><br><span class="line">systemctl status containerd</span><br><span class="line">systemctl <span class="built_in">enable</span> containerd</span><br></pre></td></tr></table></figure><h3 id="更换国内镜像仓库"><a href="#更换国内镜像仓库" class="headerlink" title="更换国内镜像仓库"></a>更换国内镜像仓库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/containerd/</span><br><span class="line">containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br><span class="line">将</span><br><span class="line">    sandbox_image = <span class="string">&quot;k8s.gcr.io/pause:3.6&quot;</span></span><br><span class="line">改为</span><br><span class="line">    sandbox_image = <span class="string">&quot;registry.aliyuncs.com/google_containers/pause:3.6&quot;</span></span><br><span class="line">将</span><br><span class="line">    systemd_cgroup = <span class="literal">false</span></span><br><span class="line">改为</span><br><span class="line">    systemd_cgroup = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">重启containerd</span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure><h3 id="安装cni插件-选做"><a href="#安装cni插件-选做" class="headerlink" title="安装cni插件(选做)"></a>安装cni插件(选做)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz</span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/cni/bin</span><br><span class="line">tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz</span><br></pre></td></tr></table></figure><h2 id="安装三件套kubectl-kubelet-kubeadm"><a href="#安装三件套kubectl-kubelet-kubeadm" class="headerlink" title="安装三件套kubectl kubelet kubeadm"></a>安装三件套kubectl kubelet kubeadm</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">apt-get update</span><br><span class="line"><span class="comment"># 查看可用版本</span></span><br><span class="line">apt-cache madison kubelet </span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># tab补全</span></span><br><span class="line">apt-get install bash-completion</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line"><span class="built_in">source</span> &lt;(kubeadm completion bash)</span><br><span class="line"><span class="comment"># 加到.bashrc 里</span></span><br><span class="line">nano .bashrc</span><br><span class="line"><span class="built_in">source</span> &lt;(kubeadm completion bash)</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给crictl添加tab补全</span></span><br><span class="line"><span class="built_in">source</span> &lt;(crictl completion bash)</span><br><span class="line"><span class="comment"># 加到.bashrc 里</span></span><br><span class="line">nano .bashrc</span><br><span class="line"><span class="built_in">source</span> &lt;(crictl completion bash)</span><br></pre></td></tr></table></figure><h3 id="运行crictl-images-时报错"><a href="#运行crictl-images-时报错" class="headerlink" title="运行crictl images 时报错"></a>运行crictl images 时报错</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WARN[0000] image connect using default endpoints: [unix:///var/run/dockershim.sock unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should <span class="built_in">set</span> the endpoint instead. </span><br><span class="line">ERRO[0000] unable to determine image API version: rpc error: code = Unavailable desc = connection error: desc = <span class="string">&quot;transport: Error while dialing dial unix /var/run/dockershim.sock: connect: no such file or directory&quot;</span> </span><br><span class="line">E0820 17:31:44.920882    5408 remote_image.go:121] <span class="string">&quot;ListImages with filter from image service failed&quot;</span> err=<span class="string">&quot;rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.ImageService&quot;</span> filter=<span class="string">&quot;&amp;ImageFilter&#123;Image:&amp;ImageSpec&#123;Image:,Annotations:map[string]string&#123;&#125;,&#125;,&#125;&quot;</span></span><br><span class="line">FATA[0000] listing images: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.ImageService </span><br></pre></td></tr></table></figure><h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ll /run/containerd/</span><br><span class="line">srw-rw----  1 root root   0 Aug 20 17:20 containerd.sock=</span><br><span class="line"></span><br><span class="line">crictl config runtime-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改配置</span></span><br><span class="line">nano /etc/crictl.yaml</span><br><span class="line"></span><br><span class="line">runtime-endpoint: <span class="string">&quot;unix:///run/containerd/containerd.sock&quot;</span></span><br><span class="line">image-endpoint: <span class="string">&quot;unix:///run/containerd/containerd.sock&quot;</span></span><br><span class="line"><span class="built_in">timeout</span>: 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 发现还是报错</span></span><br><span class="line">E0820 17:37:56.265740    5708 remote_image.go:121] <span class="string">&quot;ListImages with filter from image service failed&quot;</span> err=<span class="string">&quot;rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.ImageService&quot;</span> filter=<span class="string">&quot;&amp;ImageFilter&#123;Image:&amp;ImageSpec&#123;Image:,Annotations:map[string]string&#123;&#125;,&#125;,&#125;&quot;</span></span><br><span class="line">FATA[0000] listing images: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.ImageService </span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是因为还需要手动设置runtime_type</span></span><br><span class="line">nano /etc/containerd/config.toml</span><br><span class="line">[plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.default_runtime] 下的</span><br><span class="line">        runtime_type = <span class="string">&quot;&quot;</span></span><br><span class="line">改成</span><br><span class="line">        runtime_type = <span class="string">&quot;io.containerd.runtime.v1.linux&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启containerd </span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart containerd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正常了</span></span><br><span class="line">root@cks-master:~<span class="comment"># crictl images</span></span><br><span class="line">IMAGE               TAG                 IMAGE ID            SIZE</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="集群初始化（cks-master上操作）"><a href="#集群初始化（cks-master上操作）" class="headerlink" title="集群初始化（cks-master上操作）"></a>集群初始化（cks-master上操作）</h3><p><code>kubeadm config print init-defaults &gt; init.yaml nano init.yaml </code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  advertiseAddress: 10.4.7.180</span><br><span class="line">  name: cks-master</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kubernetesVersion: 1.24.4</span><br></pre></td></tr></table></figure><p><code>kubeadm init --config=init.yaml</code></p><h4 id="各个节点加入集群"><a href="#各个节点加入集群" class="headerlink" title="各个节点加入集群"></a>各个节点加入集群</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 10.4.7.180:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:96f4398d1e19fbaed92c0401a2d38031f89470dc1faf84669306c6d85ba8cc45</span><br></pre></td></tr></table></figure><p>master 节点上输入以下命令，用kubectl 控制集群。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h4 id="安装cni插件（calico）"><a href="#安装cni插件（calico）" class="headerlink" title="安装cni插件（calico）"></a>安装cni插件（calico）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://projectcalico.docs.tigera.io/getting-started/kubernetes/self-managed-onprem/onpremises</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小于50个node用这个连接</span></span><br><span class="line">curl https://raw.githubusercontent.com/projectcalico/calico/v3.24.0/manifests/calico.yaml -O</span><br></pre></td></tr></table></figure><h4 id="更改calico-yaml-文件"><a href="#更改calico-yaml-文件" class="headerlink" title="更改calico.yaml 文件"></a>更改calico.yaml 文件</h4><p>nano 用<code>ctrl+ w</code>搜索。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: CALICO_IPV4POOL_CIDR</span><br><span class="line">  value: <span class="string">&quot;10.96.0.0/12&quot;</span></span><br></pre></td></tr></table></figure><p>开始创建</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure><p>等待慢慢创建pod</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get po -A </span><br></pre></td></tr></table></figure><p>都running后集群搭建成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl get po -A -w</span></span><br><span class="line">NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   calico-kube-controllers-5b97f5d8cf-glx5x   1/1     Running   0          15m</span><br><span class="line">kube-system   calico-node-87vt9                          1/1     Running   0          15m</span><br><span class="line">kube-system   calico-node-dd8nk                          1/1     Running   0          15m</span><br><span class="line">kube-system   calico-node-jgmfk                          1/1     Running   0          15m</span><br><span class="line">kube-system   coredns-74586cf9b6-46xtt                   1/1     Running   0          27m</span><br><span class="line">kube-system   coredns-74586cf9b6-7jkkd                   1/1     Running   0          27m</span><br><span class="line">kube-system   etcd-cks-master                            1/1     Running   0          27m</span><br><span class="line">kube-system   kube-apiserver-cks-master                  1/1     Running   0          27m</span><br><span class="line">kube-system   kube-controller-manager-cks-master         1/1     Running   0          27m</span><br><span class="line">kube-system   kube-proxy-dhgbc                           1/1     Running   0          24m</span><br><span class="line">kube-system   kube-proxy-pvkgx                           1/1     Running   0          27m</span><br><span class="line">kube-system   kube-proxy-zckg5                           1/1     Running   0          24m</span><br><span class="line">kube-system   kube-scheduler-cks-master                  1/1     Running   0          27m</span><br></pre></td></tr></table></figure><p>由于<code>coredns</code>都在被分配在同一个节点上，没冗余，需要重新分配在不同节点上。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl get po -A -owide | grep coredns</span></span><br><span class="line">kube-system   coredns-74586cf9b6-46xtt                   1/1     Running   0          30m   10.106.109.130   cks-node2    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   coredns-74586cf9b6-7jkkd                   1/1     Running   0          30m   10.106.109.131   cks-node2    &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h4 id="重新分配coredns"><a href="#重新分配coredns" class="headerlink" title="重新分配coredns"></a>重新分配coredns</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kube-system rollout restart deployment coredns </span></span><br><span class="line">root@cks-master:~<span class="comment"># kubectl get po -A -owide -w | grep coredns </span></span><br><span class="line">kube-system   coredns-75ffbc4979-gjxjn                   1/1     Running   0          2m37s   10.106.109.132   cks-node2    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   coredns-75ffbc4979-pbfmt                   1/1     Running   0          2m37s   10.104.127.129   cks-node1    &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h4 id="延长证书有效期"><a href="#延长证书有效期" class="headerlink" title="延长证书有效期"></a>延长证书有效期</h4><p>证书默认1年后就会过期。可以通过如下方式修改为10年。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/kubernetes/pki</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前证书有效期</span></span><br><span class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">ls</span> *.crt); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;===== <span class="variable">$i</span> =====&quot;</span>; openssl x509 -<span class="keyword">in</span> <span class="variable">$i</span> -text -noout | grep -A 3 <span class="string">&#x27;Validity&#x27;</span> ; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">mkdir</span> backup_key; <span class="built_in">cp</span> -rp ./* backup_key/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/yuyicai/update-kube-cert.git</span><br><span class="line">$ <span class="built_in">cd</span> update-kube-cert/ </span><br><span class="line">$ bash update-kubeadm-cert.sh all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建管理服务</span></span><br><span class="line">$ kubectl -n kube-system delete po kube-apiserver-k8s-master kube-controller-manager-k8s-master kube-scheduler-k8s-master</span><br></pre></td></tr></table></figure><h3 id="部署dashboard（k8s-可视化页面）"><a href="#部署dashboard（k8s-可视化页面）" class="headerlink" title="部署dashboard（k8s 可视化页面）"></a>部署dashboard（k8s 可视化页面）</h3><p>github上搜索dashboard</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kubernetes/dashboard/blob/master/docs/user/installation.md</span><br></pre></td></tr></table></figure><p>下载默认配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.1/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><p>不用更改配置直接部署,等待部署完成。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure><p>默认部署后dashboard是ClusterIP 类型，只允许集群内部访问。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard get svc </span></span><br><span class="line">NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.96.205.151   &lt;none&gt;        8000/TCP   14m</span><br><span class="line">kubernetes-dashboard        ClusterIP   10.110.3.32     &lt;none&gt;        443/TCP    14m</span><br></pre></td></tr></table></figure><p>更改类型为NodePort，暴露端口，可以在集群外部访问。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard edit svc kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line">  ports:</span><br><span class="line">  - port: 443</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 8443</span><br><span class="line">    nodePort: 30003</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: Nodeport</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存退出会自动重启pod</p><p>此时可以用ip+端口号形式访问dashboard.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard get svc -w </span></span><br><span class="line">NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.96.205.151   &lt;none&gt;        8000/TCP        46m</span><br><span class="line">kubernetes-dashboard        NodePort    10.110.3.32     &lt;none&gt;        443:30003/TCP   46m</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://10.4.7.180:30003</span><br></pre></td></tr></table></figure><p>然后使用token来登录</p><h4 id="登录前根据官方文档要先创建用户"><a href="#登录前根据官方文档要先创建用户" class="headerlink" title="登录前根据官方文档要先创建用户"></a>登录前根据官方文档要先创建用户</h4><p>官网说明</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">admin.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f admin.yaml</span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard get sa</span></span><br><span class="line">NAME                   SECRETS   AGE</span><br><span class="line">admin-user             0         66s</span><br><span class="line">default                0         56m</span><br><span class="line">kubernetes-dashboard   0         56m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.24版本已经默认不支持自动创建token，需要手动创建</span></span><br><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard describe sa admin-user </span></span><br><span class="line">Name:                admin-user</span><br><span class="line">Namespace:           kubernetes-dashboard</span><br><span class="line">Labels:              &lt;none&gt;</span><br><span class="line">Annotations:         &lt;none&gt;</span><br><span class="line">Image pull secrets:  &lt;none&gt;</span><br><span class="line">Mountable secrets:   &lt;none&gt;</span><br><span class="line">Tokens:              &lt;none&gt;</span><br><span class="line">Events:              &lt;none&gt;</span><br></pre></td></tr></table></figure><p>手动创建token</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@cks-master:~<span class="comment"># kubectl -n kubernetes-dashboard create token admin-user </span></span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6ImVlLTUwa0JWcm5seXlfemJ2Ui15MnpuTXJQVXctLXVPWFBsc3IzQl92dTAifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjYxMDA4NzkzLCJpYXQiOjE2NjEwMDUxOTMsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiNmE3YWU1ODAtNDhiNi00NGVmLWFmNzUtNjY2MTQzOGUzMTcyIn19LCJuYmYiOjE2NjEwMDUxOTMsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlcm5ldGVzLWRhc2hib2FyZDphZG1pbi11c2VyIn0.kvcfZmYX_CbX6_qaV1GQrT6Z7FCjGwOvG40OZ1cMEUhNQdV9G5XuCjSMJ4FrnKsiNOcSLv6_wdwWMZpWIgvbWYbBJQQ7Q-0Djie_iPzbGbJKbEvEsaNMLqIb7liiM52nKl0TJJweQpIoUHHWf0oRiGDjSkms5QVqDmlddnr5i8z2NotwW7FyIfml1E_OZFCQ-vHnVlo8ONGflkJyAutqGxRghBOBMuInMKSXfpk3AaXf6cjtButHRVqp_jDgErVVkKqtRJrqSHoDwMBV7NRn__fqdrfCGiEVKYlucMdv78TgKPsK2313OE3Arbrf0q_prP3Cs6VAILHETGdmhNHFlA</span><br></pre></td></tr></table></figure><p>使用token登录dashboard</p><p>每次登录都需要重新创建token</p><p>k8s 不能干什么？</p><p>修改内核的应用</p><p>不建议部署数据库,很容易丢数据。</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CKS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python多线程</title>
      <link href="/2022/08/21/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2022/08/21/python%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="python多线程使用"><a href="#python多线程使用" class="headerlink" title="python多线程使用"></a>python多线程使用</h2><h4 id="创建线程，入口函数带参数"><a href="#创建线程，入口函数带参数" class="headerlink" title="创建线程，入口函数带参数"></a>创建线程，入口函数带参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程开始**********&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建线程</span></span><br><span class="line"><span class="comment"># target 指定这个先乘执行那个函数中的代码，只写函数名即可，不要写括号。</span></span><br><span class="line"><span class="comment"># args 后面指定的是一个元组，</span></span><br><span class="line">th1 = threading.Thread(target=f1, args=(<span class="number">2</span>,))</span><br><span class="line">th2 = threading.Thread(target=f2, args=(<span class="number">3</span>,))</span><br><span class="line"></span><br><span class="line">th1.start()</span><br><span class="line">th2.start()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程结束**********&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="另外一种引入包的方式"><a href="#另外一种引入包的方式" class="headerlink" title="另外一种引入包的方式"></a>另外一种引入包的方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程开始**********&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建线程</span></span><br><span class="line"><span class="comment"># target 指定这个先乘执行那个函数中的代码，只写函数名即可，不要写括号。</span></span><br><span class="line"><span class="comment"># args 后面指定的是一个元组，</span></span><br><span class="line">th1 = Thread(target=f1, args=(<span class="number">2</span>,))</span><br><span class="line">th2 = Thread(target=f2, args=(<span class="number">3</span>,))</span><br><span class="line"></span><br><span class="line">th1.start()</span><br><span class="line">th2.start()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程结束**********&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="设置等待"><a href="#设置等待" class="headerlink" title="设置等待"></a>设置等待</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置主线程等待子线程执行结束之后在执行</span></span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程开始**********&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f1end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2start***********&quot;</span>)</span><br><span class="line">    time.sleep(s)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;***********f2end***********&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建线程</span></span><br><span class="line"><span class="comment"># target 指定这个先乘执行那个函数中的代码，只写函数名即可，不要写括号。</span></span><br><span class="line"><span class="comment"># args 后面指定的是一个元组，</span></span><br><span class="line">th1 = Thread(target=f1, args=(<span class="number">2</span>,))</span><br><span class="line">th2 = Thread(target=f2, args=(<span class="number">3</span>,))</span><br><span class="line"></span><br><span class="line">th1.start()</span><br><span class="line">th2.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置等待</span></span><br><span class="line">th1.join()</span><br><span class="line">th2.join()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*******主线程结束**********&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="共享内存"><a href="#共享内存" class="headerlink" title="共享内存"></a>共享内存</h4><p>给线程上锁。</p><p>需求:用户<code>zhangsan</code>打车使用支付宝付钱，司机<code>zhangsan</code>收到钱。</p><p>分析：用户<code>zhangsan</code>付钱时，线程上锁，付完钱解锁。司机<code>zhangsan</code>账户线程上锁，收到前后解锁。 </p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储支付宝余额账号</span></span><br><span class="line">zhifubao = &#123;</span><br><span class="line">    <span class="string">&#x27;zhangsan&#x27;</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="string">&#x27;liming&#x27;</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="string">&#x27;wanghong&#x27;</span>: <span class="number">3000</span>,</span><br><span class="line">    <span class="string">&#x27;zhaolei&#x27;</span>: <span class="number">5000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 申请一把锁</span></span><br><span class="line">zhifu_lock = Lock()</span><br><span class="line"><span class="comment"># 线程1 ：嘀嘀打车处理，参数是用户账户和扣款金额</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">thread1_didi_pay</span>(<span class="params">account, amount</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t1: 即将开始操作&#x27;</span>)</span><br><span class="line">    <span class="comment"># 上锁</span></span><br><span class="line">    zhifu_lock.acquire()</span><br><span class="line">    balance = zhifubao[account]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下面的sleep(2)表示一些处理过程需要花上2秒钟</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t1: 完成交易需要2s钟&#x27;</span>)</span><br><span class="line">    sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t1: deduct&#x27;</span>)</span><br><span class="line">    zhifubao[account] = balance - amount</span><br><span class="line">    <span class="comment"># 释放锁</span></span><br><span class="line">    zhifu_lock.release()</span><br><span class="line"><span class="comment"># 线程2： 余额宝可以专区利息，参数是用户账户和扣款金额</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">thread2_yue_pay</span>(<span class="params">account,amount</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t2: 即将开始操作&#x27;</span>)</span><br><span class="line">    <span class="comment"># 上锁</span></span><br><span class="line">    zhifu_lock.acquire()</span><br><span class="line">    balance = zhifubao[account]</span><br><span class="line">    <span class="comment"># 下面的sleep(2)表示一些处理过程需要花上2秒钟</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t2: 完成交易需要2s钟&#x27;</span>)</span><br><span class="line">    sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;* t2: deduct&#x27;</span>)</span><br><span class="line">    zhifubao[account] = balance + amount</span><br><span class="line">    <span class="comment"># 释放锁</span></span><br><span class="line">    zhifu_lock.release()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别创建两个线程</span></span><br><span class="line">t1 = Thread(target=thread1_didi_pay, args=(<span class="string">&#x27;zhangsan&#x27;</span>, <span class="number">2000</span>))</span><br><span class="line">t2 = Thread(target=thread2_yue_pay, args=(<span class="string">&#x27;zhangsan&#x27;</span>, <span class="number">2000</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始线程</span></span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置等待</span></span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出账户余额</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;__________________________&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(zhifubao[<span class="string">&quot;zhangsan&quot;</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux中的隔离技术</title>
      <link href="/2022/08/11/linux%E4%B8%AD%E7%9A%84%E9%9A%94%E7%A6%BB/"/>
      <url>/2022/08/11/linux%E4%B8%AD%E7%9A%84%E9%9A%94%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="linux中的隔离技术"><a href="#linux中的隔离技术" class="headerlink" title="linux中的隔离技术"></a>linux中的隔离技术</h1><p>隔离的意义在于处于不同命名空间下的进程不能看到对方的信息。命名空间在Liunx内核中，不是一块分配，你可以定制隔离程度，比如只隔离网络，但不隔离进程ID空间。下面是命名空间可以隔离的七种类型。</p><table><thead><tr><th>名称</th><th>内核版本</th><th>隔离内容</th></tr></thead><tbody><tr><td>UTS</td><td>3.0</td><td>主机名和域名</td></tr><tr><td>MNT</td><td>3.8</td><td>挂载点（文件系统）</td></tr><tr><td>IPC</td><td>3.0</td><td>信号量、消息队列和共享内存</td></tr><tr><td>PID</td><td>3.8</td><td>进程编号</td></tr><tr><td>NET</td><td>3.0</td><td>网络设备、网络栈、端口等</td></tr><tr><td>USER</td><td>3.8</td><td>用户和用户组</td></tr><tr><td>Cgroup</td><td>4.6</td><td>以根的形式呈现出来</td></tr></tbody></table><p><code>3.10.0</code>内核支持6种类型的<code>namespace</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /proc/$$/ns</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 ipc -&gt; ipc:[4026531839]</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 mnt -&gt; mnt:[4026531840]</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 net -&gt; net:[4026531956]</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 pid -&gt; pid:[4026531836]</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 user -&gt; user:[4026531837]</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 12:50 uts -&gt; uts:[4026531838]</span><br></pre></td></tr></table></figure><p><strong><code>$$</code>代表Shell本身的PID（ProcessID），即当前进程的PID。</strong></p><p>而<code>ubuntu 5.4.0</code>内核的支持7种类型的<code>namespace</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 cgroup -&gt; &#x27;cgroup:[4026531835]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 ipc -&gt; &#x27;ipc:[4026531839]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 mnt -&gt; &#x27;mnt:[4026531840]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 net -&gt; &#x27;net:[4026531992]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 pid -&gt; &#x27;pid:[4026531836]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:51 pid_for_children -&gt; &#x27;pid:[4026531836]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 user -&gt; &#x27;user:[4026531837]&#x27;</span><br><span class="line">lrwxrwxrwx 1 root root 0 Oct 16 13:03 uts -&gt; &#x27;uts:[4026531838]&#x27;</span><br></pre></td></tr></table></figure><ul><li>上述六个文件分别代表对应namespace的文件描述符，中括号内对应其inode number</li><li>如果两个进程的inode number一致，说明这两个进程属于同一个namespace</li></ul><p><strong>如何创建一个PID namespace</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">--mount-proc 如何不带这个参数，ps aux 依然会读取主机其他进程</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">-f --fork 让/bin/bash命令成为unshare的子进程</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">-p --pid 代表pid命名空间</span></span><br><span class="line">[root@bogon ~]# unshare --mount-proc -fp /bin/bash</span><br><span class="line">[root@bogon ~]# ps aux</span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root          1  0.0  0.0 115544  1992 pts/1    S    06:59   0:00 /bin/bash</span><br><span class="line">root         10  0.0  0.0 155472  1844 pts/1    R+   06:59   0:00 ps aux</span><br></pre></td></tr></table></figure><p><strong>REF</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/chenleiking/article/details/87915185</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell中的EOF用法</title>
      <link href="/2022/08/11/shell%E4%B8%AD%E7%9A%84EOF%E7%94%A8%E6%B3%95/"/>
      <url>/2022/08/11/shell%E4%B8%AD%E7%9A%84EOF%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="shell中的EOF用法"><a href="#shell中的EOF用法" class="headerlink" title="shell中的EOF用法"></a>shell中的EOF用法</h1><h4 id="EOF"><a href="#EOF" class="headerlink" title="EOF"></a>EOF</h4><p>Shell中通常将EOF与&lt;&lt;结合使用，表示后续的输入作为子命令或子shell的输入,直到遇到EOF为止，再返回到主shell。可以把EOF换成其他东西，意思是把内容当作标准输入传给程序。</p><p>当shell看到&lt;&lt;的时候，他就会知道下一个词是一个芬姐符。在该分界符以后的内容都会被当作输入，直到shell又看到该分界符（位于单独的一行）。这个分界符可以是你所定义的任何字符串。</p><p>例子：自动登录mysql,查询mysql库中user表的所有内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p1qaz9ol. &lt;&lt;EoF</span><br><span class="line">use mysql;</span><br><span class="line">select * from user \G;</span><br><span class="line">exit</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>特殊用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;COMMENTBLOCK</span><br><span class="line">shell 脚本代码段</span><br><span class="line">COMMENTBLOCK</span><br><span class="line">用来注释整段脚本代码。:是shell中的空语句。其中COMMENTBLOCK 可以换成任何字符。</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo start</span><br><span class="line">:&lt;&lt;COMMENTBLOCK</span><br><span class="line">echo</span><br><span class="line">echo &quot;this is a test&quot;</span><br><span class="line">echo</span><br><span class="line">COMMENTBLOCK</span><br><span class="line">echo end</span><br></pre></td></tr></table></figure><p>执行结果，中间部分不会执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="cat-和eof结合使用具有追加功能"><a href="#cat-和eof结合使用具有追加功能" class="headerlink" title="cat 和eof结合使用具有追加功能"></a>cat 和eof结合使用具有追加功能</h4><p>使用cat 和EOF多行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /root/test.txt &lt;&lt;EOF</span><br><span class="line">123123123</span><br><span class="line">hello world!</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>以上的脚本命令是，在test.txt文件后面加上三行代码。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux中环境变量</title>
      <link href="/2022/08/10/linux%E4%B8%AD%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2022/08/10/linux%E4%B8%AD%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="linux中环境变量"><a href="#linux中环境变量" class="headerlink" title="linux中环境变量"></a>linux中环境变量</h1><h4 id="针对当前会话（重启失效）"><a href="#针对当前会话（重启失效）" class="headerlink" title="针对当前会话（重启失效）"></a>针对当前会话（重启失效）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=$PATH:/home/test/mysql/<span class="built_in">bin</span></span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><h4 id="针对当前用户有效（重启失效）"><a href="#针对当前用户有效（重启失效）" class="headerlink" title="针对当前用户有效（重启失效）"></a>针对当前用户有效（重启失效）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">更改，原行 PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin， 改为下面的</span></span><br><span class="line">PATH=$PATH:$HOME/bin:/home/test/mysql/bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash">保存退出</span></span><br><span class="line">source ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">或者</span></span><br><span class="line">. ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">使之生效</span></span><br></pre></td></tr></table></figure><h4 id="x2F-etc-x2F-profile-x2F-永久生效"><a href="#x2F-etc-x2F-profile-x2F-永久生效" class="headerlink" title="&#x2F;etc&#x2F;profile&#x2F;(永久生效)"></a>&#x2F;etc&#x2F;profile&#x2F;(永久生效)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">在文档最后新增</span></span><br><span class="line">MYSQL_HOME=/home/test/mysql</span><br><span class="line">export PATH=$PATH:$MYSQL_HOME/bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash">保存退出</span></span><br><span class="line">source ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">或者</span></span><br><span class="line">. ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">使之生效</span></span><br></pre></td></tr></table></figure><h4 id="x2F-etc-x2F-profile-d-x2F-永久生效-推荐"><a href="#x2F-etc-x2F-profile-d-x2F-永久生效-推荐" class="headerlink" title="&#x2F;etc&#x2F;profile.d&#x2F; (永久生效)(推荐)"></a>&#x2F;etc&#x2F;profile.d&#x2F; (永久生效)(推荐)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/mysql.sh</span><br><span class="line"><span class="meta">#</span><span class="language-bash">添加如下内容</span></span><br><span class="line">MYSQL_HOME=/home/test/mysql</span><br><span class="line">export PATH=$PATH:$MYSQL_HOME/bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash">保存退出</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">或者</span></span><br><span class="line">. /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">使之生效</span></span><br></pre></td></tr></table></figure><p><strong>Tips:</strong></p><p><strong>推荐原因：只需要更改自己的脚本，增加或删除就可以使环境变量发生改变，不影响系统文件。</strong></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell小练习</title>
      <link href="/2022/08/09/shell%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
      <url>/2022/08/09/shell%E5%B0%8F%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="shell小练习"><a href="#shell小练习" class="headerlink" title="shell小练习"></a>shell小练习</h1><p>job1:检索本机的IP、NETMASK、MAC地址、广播地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IP: <span class="number">172.20</span><span class="number">.10</span><span class="number">.3</span></span><br><span class="line">NetMask: <span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br><span class="line">Broadcast: <span class="number">172.20</span><span class="number">.10</span><span class="number">.15</span></span><br><span class="line">MAC Address: <span class="number">00</span>:0c:<span class="number">29</span>:8d:<span class="number">49</span>:ea</span><br></pre></td></tr></table></figure><p>job2:将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab分隔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ayitula x /<span class="built_in">bin</span>/bash</span><br></pre></td></tr></table></figure><p>job3: 虚拟机中添加一块硬盘，盘号为sdb。主分区sdb3，543M，ext4格式。其他空间都分给拓展分区sdb4。逻辑分区sdb5，2G，逻辑分区sdb6，3G。 创建一个卷组，PE为16M，创建逻辑卷大小为2.5G，格式为xfs。</p><p>主分区sdb3自动挂载到&#x2F;data&#x2F;data1上，逻辑卷挂载到&#x2F;data&#x2F;data2上。</p><p>最后分别验证并输出挂载结果。</p><p>job4:编写脚本，清空job3内的所有配置，包括还原&#x2F;etc&#x2F;fstab文件。</p><p>job5:模拟登录系统。输入用户名、密码登录系统。</p><p>终端提示信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Centos Linux 8 (Core)</span><br><span class="line">Kernal 5.4.0-113-generic on an x86_64</span><br><span class="line"></span><br><span class="line">588c34fafcd5 login: smith</span><br><span class="line">Password: </span><br></pre></td></tr></table></figure><p>job6：</p><p>内存使用率统计，要求打印内存使用率。</p><p>内存使用率公式： 使用量&#x2F;总量*100%</p><p>job7:</p><p>实现一个四则运算计算器。要求用户传输三个参数，num1 算数运算符 num2 。运算输出结果。</p><p>job8:</p><p>写一个监控CPU 平均负载值的脚本。收集cpu load 平均负载值到数组，打印输出对应的负载值。</p><p>输出样式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CPU 1min平均负载为:  0.10</span><br><span class="line">CPU 5min平均负载为:  0.16</span><br><span class="line">CPU 15min平均负载为:  0.08</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell小练习答案</title>
      <link href="/2022/08/09/shell%E5%B0%8F%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88/"/>
      <url>/2022/08/09/shell%E5%B0%8F%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="shell小练习答案"><a href="#shell小练习答案" class="headerlink" title="shell小练习答案"></a>shell小练习答案</h1><p>job1:检索本机的IP、NETMASK、MAC地址、广播地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IP: <span class="number">172.20</span><span class="number">.10</span><span class="number">.3</span></span><br><span class="line">NetMask: <span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br><span class="line">Broadcast: <span class="number">172.20</span><span class="number">.10</span><span class="number">.15</span></span><br><span class="line">MAC Address: <span class="number">00</span>:0c:<span class="number">29</span>:8d:<span class="number">49</span>:ea</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 | grep inet | tr -s &quot; &quot; | cut -d &quot; &quot; -f 3 | xargs echo &quot;IP: &quot;</span><br><span class="line">ifconfig eth0 | grep inet | tr -s &quot; &quot; | cut -d &quot; &quot; -f 5 | xargs echo &quot;NetMask: &quot;</span><br><span class="line">ifconfig eth0 | grep inet | tr -s &quot; &quot; | cut -d &quot; &quot; -f 7 | xargs echo &quot;Broadcast: &quot;</span><br><span class="line">ifconfig eth0 | grep ether | tr -s &quot; &quot; | cut -d &quot; &quot; -f 3 | xargs echo &quot;MAC Address: &quot;</span><br></pre></td></tr></table></figure><p>job2:将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab分隔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ayitula x /<span class="built_in">bin</span>/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt | grep -i bash | grep -v &quot;root&quot; | cut -d &quot;:&quot; -f 1,2,7 | tr -s &quot;:&quot; &quot;\t&quot; &gt; res      </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">1.txt 文本</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">systemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin</span><br><span class="line">systemd-resolve:x:193:193:systemd Resolver:/:/sbin/nologin</span><br><span class="line">hello:x:1500:1000:this is a test user:/home/hello:/bin/bash</span><br></pre></td></tr></table></figure><p>job3</p><p><code>disk_partition.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">fdisk /dev/sdb &lt;&lt;EOF</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">+543M</span><br><span class="line"></span><br><span class="line">n</span><br><span class="line">e</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n</span><br><span class="line">l</span><br><span class="line"></span><br><span class="line">+2G</span><br><span class="line"></span><br><span class="line">n</span><br><span class="line">l</span><br><span class="line"></span><br><span class="line">+3G</span><br><span class="line"></span><br><span class="line">w</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2、创建逻辑卷</span></span><br><span class="line"><span class="meta">   #</span><span class="language-bash">2.1 创建物理卷</span></span><br><span class="line">    pvcreate /dev/sdb5 /dev/sdb6</span><br><span class="line"><span class="meta">   #</span><span class="language-bash">2.2 创建卷组</span></span><br><span class="line">    vgcreate -s 16M vg100 /dev/sdb&#123;5..6&#125; &lt;&lt;EOF</span><br><span class="line">y</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">   #</span><span class="language-bash">2.3 创建逻辑卷</span></span><br><span class="line">    lvcreate -L 2.5G -n lv100 vg100 &lt;&lt;EOF</span><br><span class="line">y</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">3、格式化</span></span><br><span class="line">mkfs.ext4 /dev/sdb3</span><br><span class="line">mkfs.xfs /dev/vg100/lv100</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">4、修改/etc/fstab,实现自动挂载</span></span><br><span class="line">echo  &quot;/dev/sdb3   /data/data1 ext4  defaults   0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line">echo &quot;/dev/vg100/lv100 /data/data2  xfs   defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">5、挂载分区</span></span><br><span class="line">mkdir -p /data/data&#123;1..2&#125;</span><br><span class="line">mount -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">6、验证并输出挂载结果</span></span><br><span class="line">mount |grep &quot;/dev/sdb3&quot;</span><br><span class="line">test $? -eq 0&amp;&amp;echo &quot;/dev/sdb3 挂载成功&quot; || echo &quot;/dev/sdb3挂载失败&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">#注意检索的时候，mount输出中LV的表示方式，或者直接检索挂载点/data/data2也可以。</span></span></span><br><span class="line">mount |grep &quot;vg100-lv100&quot;</span><br><span class="line">test $? -eq 0&amp;&amp;echo &quot;/dev/vg100/lv100 挂载成功&quot; || echo &quot;/dev/vg100/lv100挂载失败&quot;</span><br></pre></td></tr></table></figure><p>job4</p><p><code>back_init.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">umount /data/data1</span><br><span class="line">umount /data/data2</span><br><span class="line"></span><br><span class="line">vgremove vg100 &lt;&lt;EOF</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">y</span><br><span class="line">EOF</span><br><span class="line">pvremove /dev/sdb5</span><br><span class="line">pvremove /dev/sdb6</span><br><span class="line"></span><br><span class="line">fdisk /dev/sdb &lt;&lt;EOF</span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">w</span><br><span class="line">EOF</span><br><span class="line">sed -i &#x27;/^\/dev\/sdb3/&#x27;d /etc/fstab</span><br><span class="line">sed -i &#x27;/^\/dev\/vg100/&#x27;d /etc/fstab</span><br></pre></td></tr></table></figure><p>Tips: </p><p>使用EOF ,表示后续的输入作为子命令或子shell的输入，直到遇到EOF为止。再返回到主shell。</p><p>job5小练习答案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#Author: Mr.Lee</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Description: 仿真登陆</span></span><br><span class="line">IP=`ifconfig eth0 | egrep -w &quot;inet&quot;| awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">清屏</span></span><br><span class="line">clear</span><br><span class="line"><span class="meta">#</span><span class="language-bash">输出提示信息</span></span><br><span class="line">echo &quot;Centos Linux 8 (Core)&quot;</span><br><span class="line">echo -e &quot;Kernal `uname -r` on an `uname -m`&quot;</span><br><span class="line">echo -e &quot;Web console: https://localhost:9000/ or https://$IP:9090/ \n&quot;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">交互输入登录名</span></span><br><span class="line">echo -n &quot;$HOSTNAME login: &quot;</span><br><span class="line">read account</span><br><span class="line"><span class="meta">#</span><span class="language-bash">交互输入密码</span></span><br><span class="line">read -s -t30 -p &quot;Password: &quot; pw</span><br><span class="line">echo</span><br></pre></td></tr></table></figure><p>job6:</p><p>分析：</p><p>1.获取内存总量</p><p>2.获取内存使用量</p><p>3.运算输出结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Author: Mr.lee</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Release</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Description: 内存使用率计算脚本</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">获取内存总量</span></span><br><span class="line">Mem_total=`free -m | grep Mem | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line"><span class="meta">#</span><span class="language-bash">获取内存使用的量</span></span><br><span class="line">Mem_used=`free -m | grep Mem | awk &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line"><span class="meta">#</span><span class="language-bash">计算输出</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">浮点运算中：同优先级的情况下，大数除以小数 尽可能保证精确。先乘后除。</span></span><br><span class="line">echo &quot;内存使用率: `echo &quot;scale=2;$Mem_used*100/$Mem_total&quot;|bc`%&quot;</span><br></pre></td></tr></table></figure><p>job7 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Author: Mr.lee</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Release</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">Description: 四则运算计算器</span></span><br><span class="line">echo &quot;$1 $2 $3&quot; |bc</span><br></pre></td></tr></table></figure><p>job8</p><p>基本思路：截取uptime命令输出结果中最后3个数字，分别代表1min、5min、15min cpu的负载。</p><p>普通方法实现</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author: Mr.Lee</span></span><br><span class="line"><span class="comment">#Release:</span></span><br><span class="line"><span class="comment">#Description: 打印cpu 1min 5min 15min的负载值</span></span><br><span class="line">one_min=`<span class="built_in">uptime</span> | <span class="built_in">tr</span> -s <span class="string">&quot; &quot;</span> | <span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f4 | <span class="built_in">cut</span> -d <span class="string">&quot;:&quot;</span> -f2`</span><br><span class="line">five_min=`<span class="built_in">uptime</span> | <span class="built_in">tr</span> -s <span class="string">&quot; &quot;</span> | <span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f5`</span><br><span class="line">fiveteen_min=`<span class="built_in">uptime</span> | <span class="built_in">tr</span> -s <span class="string">&quot; &quot;</span> | <span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f6`</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;CPU 1min平均负载为: &quot;</span><span class="variable">$one_min</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\nCPU 5min平均负载为: &quot;</span><span class="variable">$five_min</span> </span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\nCPU 15min平均负载为: &quot;</span><span class="variable">$fiveteen_min</span> </span><br><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure><p>使用数组实现</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author: Mr.Lee</span></span><br><span class="line"><span class="comment">#Release:</span></span><br><span class="line"><span class="comment">#Description: 打印cpu 1min 5min 15min的负载值</span></span><br><span class="line">cpu_load=(`<span class="built_in">uptime</span> | <span class="built_in">tr</span> -s <span class="string">&quot; &quot;</span>| <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f11-13| <span class="built_in">tr</span> <span class="string">&quot;,&quot;</span> <span class="string">&quot; &quot;</span>`)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CPU 1min平均负载: <span class="variable">$&#123;cpu_load[0]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CPU 5min平均负载: <span class="variable">$&#123;cpu_load[1]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CPU 15min平均负载: <span class="variable">$&#123;cpu_load[2]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS8配置yum源</title>
      <link href="/2022/08/08/CentOS8%E9%85%8D%E7%BD%AEyum%E6%BA%90/"/>
      <url>/2022/08/08/CentOS8%E9%85%8D%E7%BD%AEyum%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS8配置yum源"><a href="#CentOS8配置yum源" class="headerlink" title="CentOS8配置yum源"></a>CentOS8配置yum源</h1><p>将源文件备份</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/ &amp;&amp; mkdir backup &amp;&amp; mv *repo backup/</span><br></pre></td></tr></table></figure><p>下载yum源文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-<span class="number">8.</span>repo</span><br></pre></td></tr></table></figure><p>修改yum源里面的地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e <span class="string">&quot;s|mirrors.cloud.aliyuncs.com|mirrors.aliyun.com|g &quot;</span> /etc/yum.repos.d/CentOS-*</span><br><span class="line">sed -i -e <span class="string">&quot;s|releasever|releasever-stream|g&quot;</span> /etc/yum.repos.d/CentOS-*</span><br></pre></td></tr></table></figure><p>重新生成缓存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean <span class="built_in">all</span> &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣电影top250展示页</title>
      <link href="/2022/08/07/%E8%B1%86%E7%93%A3%E5%B1%95%E7%A4%BA%E9%A1%B5/"/>
      <url>/2022/08/07/%E8%B1%86%E7%93%A3%E5%B1%95%E7%A4%BA%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="豆瓣展示页"><a href="#豆瓣展示页" class="headerlink" title="豆瓣展示页"></a>豆瓣展示页</h2><h3 id="新建flask项目"><a href="#新建flask项目" class="headerlink" title="新建flask项目"></a>新建flask项目</h3><p>使用<code>pycharm</code>新建<code>flask</code>项目，项目名为：<code>douban_flask</code>。</p><p>将之前的爬取的<code>movie.db</code>文件放到该项目的根目录下。准备前端页面代码（可以到模板之家下载[<a href="http://www.cssmoban.com/cssthemes/9296.shtml]%EF%BC%89">http://www.cssmoban.com/cssthemes/9296.shtml]）</a></p><h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h3><p>下载后解压缩放到<code>static</code>目录下.<code>static</code>目录用于存放网页相关代码。</p><p>目录结构如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">douban_flask</span><br><span class="line">- static</span><br><span class="line">  - assets</span><br><span class="line">    - css</span><br><span class="line">    - img</span><br><span class="line">    - js</span><br><span class="line">    - vendor</span><br><span class="line">- templates</span><br><span class="line">  - test</span><br><span class="line">    echarts.<span class="built_in">min</span>.js</span><br><span class="line">  index.html</span><br><span class="line">  movie.html</span><br><span class="line">  score.html</span><br><span class="line">  team.html</span><br><span class="line">  temp.html</span><br><span class="line">  word.html</span><br><span class="line">- venv</span><br><span class="line">  app.py</span><br><span class="line">  movie.db</span><br><span class="line">  testCloud.py</span><br></pre></td></tr></table></figure><p>新建模板目录<code>templates</code>，在此目录下新建主页文件<code>index.html</code>.可以把<code>temp.html</code>中的内容复制一份到<code>index.html</code>。</p><h3 id="flask路由"><a href="#flask路由" class="headerlink" title="flask路由"></a>flask路由</h3><p>开始写路由<code>app.py</code></p><p>Tips:使用<code>flask</code>下<code>render_template</code>模块可以找到<code>templates</code>目录内的<code>html</code>页面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    <span class="comment"># return render_template(&quot;index.html&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> index()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/movie&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">movie</span>():</span><br><span class="line">    datalist = []</span><br><span class="line">    con = sqlite3.connect(<span class="string">&quot;movie.db&quot;</span>)</span><br><span class="line">    cur = con.cursor()</span><br><span class="line">    sql = <span class="string">&quot;select * from movie250&quot;</span></span><br><span class="line">    data = cur.execute(sql)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        datalist.append(item)</span><br><span class="line">    cur.close()</span><br><span class="line">    con.close()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;movie.html&quot;</span>, movies = datalist)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return render_template(&quot;movie.html&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/score&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">score</span>():</span><br><span class="line">    score = []  <span class="comment"># 评分</span></span><br><span class="line">    num = []    <span class="comment"># 每个评分所统计出的电影数量</span></span><br><span class="line">    con = sqlite3.connect(<span class="string">&quot;movie.db&quot;</span>)</span><br><span class="line">    cur = con.cursor()</span><br><span class="line">    sql = <span class="string">&quot;select score,count(score) from movie250 group by score&quot;</span></span><br><span class="line">    data = cur.execute(sql)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        score.append(<span class="built_in">str</span>(item[<span class="number">0</span>]))</span><br><span class="line">        num.append(item[<span class="number">1</span>])</span><br><span class="line">    cur.close()</span><br><span class="line">    con.close()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;score.html&quot;</span>, score=score, num=num)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/word&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">word</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;word.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/team&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">team</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;team.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>开始运行<code>flask</code>(可以开启Debug模式，好处是修改的代码会实时更新。关闭则需要重启运行后更改的代码才会生效。)</p><p><strong>注意：</strong></p><p><strong>如果页面只显示文字，没有<code>css</code>效果也不显示图片，查看页面源代码。(谷歌浏览器：右键-&gt;检查)查看<code>css样式</code></strong><br><strong>路径和图片路径是否正确。路径应该和我们的项目<code>douban_flask</code>目录结构一致。更改后，刷新浏览器再次查看效果。</strong></p><p>显示正常后，我们需要展示5个页面，分别是<code>首页</code>、<code>电影</code>、<code>评分</code>、<code>词云</code>、<code>团队</code>。所以将<code>index.html</code>复制4份，分别修改里面的内容，展示对应的数据。对应关系如下：</p><table><thead><tr><th align="center">首页</th><th align="center">电影</th><th align="center">评分</th><th align="center">词云</th><th align="center">团队</th></tr></thead><tbody><tr><td align="center">index.html</td><td align="center">movie.html</td><td align="center">score.html</td><td align="center">word.html</td><td align="center">team.html</td></tr></tbody></table><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><p>先做主页<code>index.html</code>，仔细观察源码发现网页的每一部分都有注释该模块的功能。由于代码太多，可以将同一种功能的代码折叠起来，使用的功能保留，不用的功能可以删除。最终<code>index.html</code>中代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣top250数据可视化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;descriptison&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Favicons --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/favicon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/apple-touch-icon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Google Fonts --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor CSS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/bootstrap/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/icofont/icofont.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/boxicons/css/boxicons.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/animate.css/animate.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/aos/aos.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main CSS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Top Bar ======= --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Header ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo float-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-light&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>豆瓣电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Uncomment below if you prefer to use an image logo --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a href=&quot;temp.html&quot;&gt;&lt;img src=&quot;static/assets/img/logo.png&quot; alt=&quot;&quot; class=&quot;img-fluid&quot;&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav-menu float-right d-none d-lg-block&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>首页 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;la la-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/movie&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/score&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/word&quot;</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/team&quot;</span>&gt;</span>团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span><span class="comment">&lt;!-- .nav-menu --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="comment">&lt;!-- End Header --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ======= Our Team Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;team&quot;</span> <span class="attr">class</span>=<span class="string">&quot;team&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>豆瓣电影top250数据分析<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>应用Python爬虫Flask框架、Echarts、WordCloud等技术实现<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- ======= Counts Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;counts section-bg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6 text-center&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">&quot;/movie&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-smile&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #20b38e;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-toggle</span>=<span class="string">&quot;counter-up&quot;</span>&gt;</span>250<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>经典电影<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6 text-center&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">&quot;/score&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-document-folder&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #c042ff;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-toggle</span>=<span class="string">&quot;counter-up&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>评分统计<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6 text-center&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">&quot;/word&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-live-support&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #46d1ff;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-toggle</span>=<span class="string">&quot;counter-up&quot;</span>&gt;</span>5693<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>词汇统计<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6 text-center&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;600&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">&quot;/team&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-users-alt-5&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #ffb459;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-toggle</span>=<span class="string">&quot;counter-up&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>团队成员<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Counts Section --&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Our Team Section --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Footer ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">        <span class="symbol">&amp;copy;</span> Copyright <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Mr.Lee<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>. All Rights Reserved</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;credits&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span><span class="comment">&lt;!-- End Footer --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor JS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery.easing/jquery.easing.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/php-email-form/validate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery-sticky/jquery.sticky.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/waypoints/jquery.waypoints.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/counterup/counterup.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/isotope-layout/isotope.pkgd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/aos/aos.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main JS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="movie"><a href="#movie" class="headerlink" title="movie"></a>movie</h3><p><code>movie.html</code>电影页面需要连接之前准备好的数据库<code>movie.db</code>，读取里面的<code>sql</code>语句，并以表格的形式显示出来。</p><p>这里使用<code>sqlite3</code>模块来连接数据库。</p><p>实现功能代码见<code>app.py</code>中<code>movie()</code>函数</p><p><code>movie.html</code>网页源码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣top250数据可视化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;descriptison&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Favicons --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/favicon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/apple-touch-icon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Google Fonts --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor CSS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/bootstrap/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/icofont/icofont.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/boxicons/css/boxicons.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/animate.css/animate.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/aos/aos.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main CSS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Top Bar ======= --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Header ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo float-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-light&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>豆瓣电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Uncomment below if you prefer to use an image logo --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a href=&quot;temp.html&quot;&gt;&lt;img src=&quot;static/assets/img/logo.png&quot; alt=&quot;&quot; class=&quot;img-fluid&quot;&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav-menu float-right d-none d-lg-block&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>首页 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;la la-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/movie&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/score&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/word&quot;</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/team&quot;</span>&gt;</span>团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span><span class="comment">&lt;!-- .nav-menu --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="comment">&lt;!-- End Header --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ======= Our Team Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;team&quot;</span> <span class="attr">class</span>=<span class="string">&quot;team&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>豆瓣电影top250电影<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- ======= Counts Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;counts section-bg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>排名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>电影名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>外国名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>评价人数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>一句话描述<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>其他信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            &#123;% for movie in movies %&#125;</span><br><span class="line">               <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[0] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; movie[1] &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">                    &#123;&#123;movie[3]&#125;&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[4] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[5] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[6] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[7] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; movie[8] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Counts Section --&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Our Team Section --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Footer ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">        <span class="symbol">&amp;copy;</span> Copyright <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Mr.Lee<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>. All Rights Reserved</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;credits&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span><span class="comment">&lt;!-- End Footer --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor JS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery.easing/jquery.easing.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/php-email-form/validate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery-sticky/jquery.sticky.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/waypoints/jquery.waypoints.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/counterup/counterup.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/isotope-layout/isotope.pkgd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/aos/aos.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main JS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="score"><a href="#score" class="headerlink" title="score"></a>score</h3><p><code>score.html</code>评分，这里获取数据和电影页面类似，也是需要读取数据库，不过最终是以柱形图的形式展示出来。使用<code>Echarts</code>技术来实现。</p><p>实现功能代码见<code>app.py</code>中<code>score()</code>函数</p><p><code>score.html</code>源码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣top250数据可视化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;descriptison&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Favicons --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/favicon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/apple-touch-icon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Google Fonts --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor CSS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/bootstrap/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/icofont/icofont.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/boxicons/css/boxicons.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/animate.css/animate.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/aos/aos.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main CSS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Top Bar ======= --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Header ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo float-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-light&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>豆瓣电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Uncomment below if you prefer to use an image logo --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a href=&quot;temp.html&quot;&gt;&lt;img src=&quot;static/assets/img/logo.png&quot; alt=&quot;&quot; class=&quot;img-fluid&quot;&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav-menu float-right d-none d-lg-block&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>首页 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;la la-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/movie&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/score&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/word&quot;</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/team&quot;</span>&gt;</span>团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span><span class="comment">&lt;!-- .nav-menu --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="comment">&lt;!-- End Header --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ======= Our Team Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;team&quot;</span> <span class="attr">class</span>=<span class="string">&quot;team&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>豆瓣电影top250评分分布图<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>应用Python爬虫Flask框架、Echarts、WordCloud等技术实现<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- ======= Counts Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;counts section-bg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 为 ECharts 准备一个定义了宽高的 DOM --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height: 300px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Counts Section --&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Our Team Section --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-----Echarts-----------&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> dom = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(dom, <span class="literal">null</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">renderer</span>: <span class="string">&#x27;canvas&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">useDirtyRect</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> option;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    option = &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">title</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>:<span class="string">&#x27;电影评分表&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">color</span>:[<span class="string">&#x27;#3398DB&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">tooltip</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">trigger</span>:<span class="string">&#x27;axis&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">axisPointer</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>:<span class="string">&#x27;shadow&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">grid</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">left</span>:<span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">right</span>:<span class="string">&#x27;4%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">bottom</span>:<span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">containLabel</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;&#123; score|tojson &#125;&#125;</span></span><br><span class="line"><span class="language-javascript">      &lt;!----[<span class="string">&#x27;mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>,<span class="string">&#x27;999&#x27;</span>]-----&gt;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;&#123; num &#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">        &lt;!---[<span class="number">120</span>, <span class="number">20</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">110</span>, <span class="number">130</span>,<span class="number">200</span>],-----&gt;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">barWidth</span>:<span class="string">&#x27;60%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  ]</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (option &amp;&amp; <span class="keyword">typeof</span> option === <span class="string">&#x27;object&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      myChart.<span class="title function_">setOption</span>(option);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, myChart.<span class="property">resize</span>);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Footer ======= --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor JS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery.easing/jquery.easing.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/php-email-form/validate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery-sticky/jquery.sticky.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/waypoints/jquery.waypoints.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/counterup/counterup.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/isotope-layout/isotope.pkgd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/aos/aos.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main JS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="word"><a href="#word" class="headerlink" title="word"></a>word</h3><p><code>word.html</code>词云。使用<code>WordCloud</code>技术，生成一张带有出现频率较高的词汇的图片。原图片是白底的树，根据它来生成词汇树。</p><p><code>word.html</code>源码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣top250数据可视化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;descriptison&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Favicons --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/favicon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/apple-touch-icon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Google Fonts --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor CSS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/bootstrap/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/icofont/icofont.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/boxicons/css/boxicons.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/animate.css/animate.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/aos/aos.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main CSS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Header ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo float-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-light&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>豆瓣电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Uncomment below if you prefer to use an image logo --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a href=&quot;temp.html&quot;&gt;&lt;img src=&quot;static/assets/img/logo.png&quot; alt=&quot;&quot; class=&quot;img-fluid&quot;&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav-menu float-right d-none d-lg-block&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>首页 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;la la-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/movie&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/score&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/word&quot;</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/team&quot;</span>&gt;</span>团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span><span class="comment">&lt;!-- .nav-menu --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="comment">&lt;!-- End Header --&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- ======= About Us Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;about&quot;</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row no-gutters&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-6 video-box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/img/word.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-6 d-flex flex-column justify-content-center about-content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h2</span>&gt;</span>词频统计<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>根据250部电影的一句话描述，提炼出词云树，可以让我们更加清晰的了解人们对于经典电影的理解<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon-box&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bx bx-gift&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>关于电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>不知道你从中领悟到了什么<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End About Us Section --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor JS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery.easing/jquery.easing.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/php-email-form/validate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery-sticky/jquery.sticky.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/waypoints/jquery.waypoints.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/counterup/counterup.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/isotope-layout/isotope.pkgd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/aos/aos.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main JS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="team"><a href="#team" class="headerlink" title="team"></a>team</h3><p><code>team.html</code>团队。介绍团队成员。</p><p><code>team.html</code>源码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣top250数据可视化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;descriptison&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Favicons --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/favicon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/img/apple-touch-icon.png&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Google Fonts --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor CSS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/bootstrap/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/icofont/icofont.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/boxicons/css/boxicons.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/animate.css/animate.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/vendor/aos/aos.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main CSS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;static/assets/css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Top Bar ======= --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ======= Header ======= --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo float-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-light&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>豆瓣电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Uncomment below if you prefer to use an image logo --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a href=&quot;temp.html&quot;&gt;&lt;img src=&quot;static/assets/img/logo.png&quot; alt=&quot;&quot; class=&quot;img-fluid&quot;&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav-menu float-right d-none d-lg-block&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>首页 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;la la-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/movie&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/score&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/word&quot;</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/team&quot;</span>&gt;</span>团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span><span class="comment">&lt;!-- .nav-menu --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="comment">&lt;!-- End Header --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ======= Our Team Section ======= --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;team&quot;</span> <span class="attr">class</span>=<span class="string">&quot;team&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Our Team<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xl-3 col-lg-4 col-md-6&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/img/team/team-1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Walter White<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Chief Executive Officer<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;social&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-facebook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-linkedin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xl-3 col-lg-4 col-md-6&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/img/team/team-2.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Sarah Jhonson<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Product Manager<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;social&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-facebook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-linkedin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xl-3 col-lg-4 col-md-6&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/img/team/team-3.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>William Anderson<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>CTO<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;social&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-facebook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-linkedin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xl-3 col-lg-4 col-md-6&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span> <span class="attr">data-aos-delay</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/img/team/team-4.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;member-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Amanda Jepson<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>Accountant<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;social&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-facebook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-linkedin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span><span class="comment">&lt;!-- End Our Team Section --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tlinks&quot;</span>&gt;</span>Collect from <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.cssmoban.com/&quot;</span>  <span class="attr">title</span>=<span class="string">&quot;网站模板&quot;</span>&gt;</span>网站模板<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span><span class="comment">&lt;!-- End #main --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icofont-simple-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Vendor JS Files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery.easing/jquery.easing.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/php-email-form/validate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/jquery-sticky/jquery.sticky.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/venobox/venobox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/waypoints/jquery.waypoints.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/counterup/counterup.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/isotope-layout/isotope.pkgd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/vendor/aos/aos.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Template Main JS File --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="关于Echarts"><a href="#关于Echarts" class="headerlink" title="关于Echarts"></a>关于Echarts</h3><p>使用前先下载源码</p><p><a href="https://github.com/apache/echarts/tree/master/dist/echarts.min.js">地址</a></p><p>只需要这一个文件（echarts.min.js）</p><p>将文件(echarts.min.js)复制到项目test目录内</p><p>Echarts官方网站: <a href="https://echarts.apache.org/examples/zh/index.html#chart-type-line">https://echarts.apache.org/examples/zh/index.html#chart-type-line</a></p><p>可以根据官方示例更改代码实现想要的结果，最后可以下载示例。</p><p>示例网址[<a href="https://echarts.apache.org/examples/zh/editor.html?c=bar-background%5D">https://echarts.apache.org/examples/zh/editor.html?c=bar-background]</a></p><p>下载后将代码复制一份到<code>score.html</code>中。</p><h3 id="关于wordcloud"><a href="#关于wordcloud" class="headerlink" title="关于wordcloud"></a>关于wordcloud</h3><p>在项目根目录内创建文件<code>testCloud.py</code>文件，实现词云页面所需要的词云树。</p><p>需要安装几个第三方的库</p><p><code>jieba</code>:    分词</p><p><code>matplotlib</code>：    绘图、数据可视化</p><p><code>wordcloud</code>：词云</p><p><code>numpy</code>：矩阵运算</p><p><code>sqlite3</code>：数据库</p><p><code>PIL</code>：图形处理库</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> jieba <span class="comment"># 分词</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt <span class="comment"># 绘图，数据可视化</span></span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud <span class="comment"># 词云</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># 矩阵运算</span></span><br><span class="line"><span class="keyword">import</span> sqlite3 <span class="comment"># 数据库</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备词云所需的文字（词）</span></span><br><span class="line">con = sqlite3.connect(<span class="string">&#x27;douban_flask\movie.db&#x27;</span>)</span><br><span class="line">cur = con.cursor()</span><br><span class="line">sql = <span class="string">&#x27;select instroduction from movie250&#x27;</span></span><br><span class="line">data = cur.execute(sql)</span><br><span class="line">text = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    text = text + item[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(item[0])</span></span><br><span class="line"><span class="comment"># print(text)</span></span><br><span class="line">cur.close()</span><br><span class="line">con.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分词</span></span><br><span class="line">cut = jieba.cut(text)</span><br><span class="line">string = <span class="string">&#x27; &#x27;</span>.join(cut)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(string))</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">r&#x27;D:\code2022\auto-work\douban_flask\static\assets\img\tree.png&#x27;</span>) <span class="comment"># 打开遮罩图片</span></span><br><span class="line">img_array = np.array(img)</span><br><span class="line">wc = WordCloud(</span><br><span class="line">    background_color = <span class="string">&#x27;white&#x27;</span>,</span><br><span class="line">    mask = img_array,</span><br><span class="line">    font_path = <span class="string">&quot;msyh.ttc&quot;</span> <span class="comment"># C:\Windows\Fonts 字体所在位置。</span></span><br><span class="line">)</span><br><span class="line">wc.generate_from_text(string)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图片</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.imshow(wc)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>) <span class="comment"># 是否显示坐标轴</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.show() # 显示生成的词云图片</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出词云图片到文件</span></span><br><span class="line">plt.savefig(<span class="string">r&#x27;D:\code2022\auto-work\douban_flask\static\assets\img\word.png&#x27;</span>,dpi=<span class="number">500</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask入门</title>
      <link href="/2022/07/21/flask%E5%85%A5%E9%97%A8/"/>
      <url>/2022/07/21/flask%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="关于Flask"><a href="#关于Flask" class="headerlink" title="关于Flask"></a>关于Flask</h3><p>Flask作为web框架，它的作用主要是开发web应用程序。</p><h3 id="Flask基础的操作"><a href="#Flask基础的操作" class="headerlink" title="Flask基础的操作"></a>Flask基础的操作</h3><h4 id="浏览器打印hello-world"><a href="#浏览器打印hello-world" class="headerlink" title="浏览器打印hello world!"></a>浏览器打印<code>hello world!</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>运行代码</p><p>访问网址：<code>http://127.0.0.1:5000</code>屏幕打印<code>hello world!</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FLASK_APP = app.py</span><br><span class="line">FLASK_ENV = development</span><br><span class="line">FLASK_DEBUG = <span class="number">0</span></span><br><span class="line">In folder D:/code2022/auto-work/demo</span><br><span class="line">D:\pccharmcode\venv\Scripts\python.exe -m flask run</span><br><span class="line"> * Running on http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span> (Press CTRL+C to quit)</span><br><span class="line"> * Serving Flask app <span class="string">&#x27;app.py&#x27;</span> (lazy loading)</span><br><span class="line"> * Environment: development</span><br><span class="line"> * Debug mode: off</span><br></pre></td></tr></table></figure><h4 id="访问-index路径"><a href="#访问-index路径" class="headerlink" title="访问/index路径"></a>访问<code>/index</code>路径</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"><span class="comment"># 装饰起的作用是将路由映射到视图函数hello</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/index&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;你好&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h4 id="通过访问路径，获取用户的字符串参数"><a href="#通过访问路径，获取用户的字符串参数" class="headerlink" title="通过访问路径，获取用户的字符串参数"></a>通过访问路径，获取用户的字符串参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/user/&lt;name&gt;&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">welcom</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;你好,%s&quot;</span>% name</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h4 id="通过访问路径，获取用户的整形参数"><a href="#通过访问路径，获取用户的整形参数" class="headerlink" title="通过访问路径，获取用户的整形参数"></a>通过访问路径，获取用户的整形参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/user/&lt;int:id&gt;&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">welcom2</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;你好,%d 号的会员&quot;</span>% <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"><span class="comment"># 路由路径不能重复，用户通过唯一路径来访问特定的函数。</span></span><br></pre></td></tr></table></figure><h4 id="返回用户渲染后的网页文件"><a href="#返回用户渲染后的网页文件" class="headerlink" title="返回用户渲染后的网页文件"></a>返回用户渲染后的网页文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"></span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index2</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"><span class="comment"># 路由路径不能重复，用户通过唯一路径来访问特定的函数。</span></span><br></pre></td></tr></table></figure><h4 id="向页面传递一些变量"><a href="#向页面传递一些变量" class="headerlink" title="向页面传递一些变量"></a>向页面传递一些变量</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index2</span>():</span><br><span class="line">    time = datetime.date.today()    <span class="comment"># 普通变量</span></span><br><span class="line">    name = [<span class="string">&quot;小张&quot;</span>, <span class="string">&quot;小王&quot;</span>, <span class="string">&quot;小赵&quot;</span>]   <span class="comment"># 列表类型</span></span><br><span class="line">    task = &#123;<span class="string">&quot;任务&quot;</span>: <span class="string">&quot;打扫卫生&quot;</span>, <span class="string">&quot;时间&quot;</span>: <span class="string">&quot;3小时&quot;</span>&#125;  <span class="comment"># 字典类型</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, var = time, <span class="built_in">list</span> = name, task = task)</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"><span class="comment"># 路由路径不能重复，用户通过唯一路径来访问特定的函数。</span></span><br></pre></td></tr></table></figure><h4 id="表单提交"><a href="#表单提交" class="headerlink" title="表单提交"></a>表单提交</h4><p><strong>至少需要2个页面，提交界面和结果界面。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/register&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;test/register.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"><span class="comment"># 路由路径不能重复，用户通过唯一路径来访问特定的函数。</span></span><br></pre></td></tr></table></figure><h4 id="接收表单提交的路由，需要指定methods为post"><a href="#接收表单提交的路由，需要指定methods为post" class="headerlink" title="接收表单提交的路由，需要指定methods为post"></a>接收表单提交的路由，需要指定methods为post</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># flask类接收一个参数__name__</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由解析，通过用户范文的路径，匹配相应的函数。</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/result&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">result</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        result = request.form</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;test/result.html&quot;</span>, result=result)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># debug模式开启,更改代码后，浏览器实时显示。</span></span><br><span class="line"><span class="comment"># Flask应用程序实例的run方法启动web服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"><span class="comment"># 路由路径不能重复，用户通过唯一路径来访问特定的函数。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite3使用</title>
      <link href="/2022/07/20/sqlite3%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/07/20/sqlite3%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="sqlite3使用"><a href="#sqlite3使用" class="headerlink" title="sqlite3使用"></a>sqlite3使用</h2><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">&quot;test.db&quot;</span>)   <span class="comment"># 打开或创建数据库文件</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Opened database successfully&quot;</span>)</span><br><span class="line">c = conn.cursor()   <span class="comment"># 获取游标</span></span><br><span class="line">sql = <span class="string">&quot;&quot;</span></span><br><span class="line">c.execute(sql)  <span class="comment"># 执行sql语句</span></span><br><span class="line">conn.commit()   <span class="comment"># 提交数据库操作</span></span><br><span class="line">conn.close()    <span class="comment"># 关闭数据库连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line">conn = sqlite3.connect(<span class="string">&quot;test.db&quot;</span>)   <span class="comment"># 打开或创建数据库文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;成功打开数据&quot;</span>)</span><br><span class="line">c = conn.cursor()   <span class="comment"># 获取游标</span></span><br><span class="line">sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    create table company</span></span><br><span class="line"><span class="string">        (id int primary key not null,</span></span><br><span class="line"><span class="string">        name text not null,</span></span><br><span class="line"><span class="string">        age int not null,</span></span><br><span class="line"><span class="string">        address char(50),</span></span><br><span class="line"><span class="string">        salary real</span></span><br><span class="line"><span class="string">        );</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">c.execute(sql)  <span class="comment"># 执行sql语句</span></span><br><span class="line">conn.commit()   <span class="comment"># 提交数据库操作</span></span><br><span class="line">conn.close()    <span class="comment"># 关闭数据库连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;建表成功&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="使用pycharm连接数据库"><a href="#使用pycharm连接数据库" class="headerlink" title="使用pycharm连接数据库"></a>使用pycharm连接数据库</h4><p><a href="https://blog.csdn.net/qq_40707462/article/details/105685933">见</a></p><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line">conn = sqlite3.connect(<span class="string">&quot;test.db&quot;</span>)   <span class="comment"># 打开或创建数据库文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;成功打开数据&quot;</span>)</span><br><span class="line">c = conn.cursor()   <span class="comment"># 获取游标</span></span><br><span class="line"></span><br><span class="line">sql1 = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    insert into company(id, name,age,address, salary)</span></span><br><span class="line"><span class="string">        values(1,&#x27;张三&#x27;,32,&quot;成都&quot;,8000);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">sql2 = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    insert into company(id, name,age,address, salary)</span></span><br><span class="line"><span class="string">        values(2,&#x27;李四&#x27;,30,&quot;重庆&quot;,15000);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">c.execute(sql1)  <span class="comment"># 执行sql语句</span></span><br><span class="line">c.execute(sql2)  <span class="comment"># 执行sql语句</span></span><br><span class="line"></span><br><span class="line">conn.commit()   <span class="comment"># 提交数据库操作</span></span><br><span class="line">conn.close()    <span class="comment"># 关闭数据库连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;插入数据完毕&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line">conn = sqlite3.connect(<span class="string">&quot;test.db&quot;</span>)   <span class="comment"># 打开或创建数据库文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;成功打开数据&quot;</span>)</span><br><span class="line">c = conn.cursor()   <span class="comment"># 获取游标</span></span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;select id, name, address, salary from company&quot;</span></span><br><span class="line"></span><br><span class="line">cursor = c.execute(sql)  <span class="comment"># 执行sql语句</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cursor:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;id = &quot;</span>, row[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;name = &quot;</span>, row[<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;address = &quot;</span>, row[<span class="number">2</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;salary = &quot;</span>, row[<span class="number">3</span>], <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">conn.close()    <span class="comment"># 关闭数据库连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;查询完毕&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bs4-正则表达式-Re模块</title>
      <link href="/2022/07/17/Bs4%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81Re%E6%A8%A1%E5%9D%97/"/>
      <url>/2022/07/17/Bs4%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81Re%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p><strong><code>BeautifulSoup4</code>将复杂的<code>HTML</code>文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为4种</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Tag</span><br><span class="line">NavigableString</span><br><span class="line">BeautifulSoup</span><br><span class="line">Comment</span><br></pre></td></tr></table></figure><h3 id="全局代码"><a href="#全局代码" class="headerlink" title="全局代码"></a>全局代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">r&quot;D:\code2022\auto-work\douban\test\baidu.html&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">html = file.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">bs = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(bs.title) <span class="comment"># &lt;title&gt;百度一下，你就知道&lt;/title&gt;</span></span><br><span class="line"><span class="built_in">print</span>(bs.a)</span><br><span class="line"><span class="built_in">print</span>(bs.head)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(bs.head)) <span class="comment"># &lt;class &#x27;bs4.element.Tag&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Tag-标签及其内容"><a href="#Tag-标签及其内容" class="headerlink" title="Tag 标签及其内容"></a>Tag 标签及其内容</h3><p>拿到它所找到的第一个内容</p><p><code>NavigableString</code> 标签里的内容（字符串）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(bs.title.string) <span class="comment"># 百度一下，你就知道</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(bs.title.string)) <span class="comment"># &lt;class &#x27;bs4.element.NavigableString&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p><code>BeautifulSoup</code> 表示整个文档</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(bs.a.attrs)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(bs)) <span class="comment"># &lt;class &#x27;bs4.BeautifulSoup&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p><code>Comment</code> 是一个特殊的<code>NavigableString</code>，输出的内容不包含注释符号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(bs.name) <span class="comment"># [document]</span></span><br><span class="line"><span class="built_in">print</span>(bs)</span><br><span class="line"><span class="built_in">print</span>(bs.a.string)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(bs.a.string))</span><br></pre></td></tr></table></figure><p>文档的遍历,遍历文档树。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(bs.head.contents)</span><br><span class="line"><span class="built_in">print</span>(bs.head.contents[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 更多内容，搜索文档。</span></span><br></pre></td></tr></table></figure><h3 id="文档的搜索"><a href="#文档的搜索" class="headerlink" title="文档的搜索"></a>文档的搜索</h3><h4 id="find-all"><a href="#find-all" class="headerlink" title="find_all()"></a><code>find_all()</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串过滤：会查找与字符串完全匹配的内容</span></span><br><span class="line">t_list = bs.find_all(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 正则表达式搜索：使用search() 方法来匹配内容</span></span><br><span class="line"></span><br><span class="line">t_list = bs.find_all(re.<span class="built_in">compile</span>(<span class="string">&quot;a&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法： 传入一个函数（方法），根据函数的要求来搜索(了解)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">name_is_exits</span>(<span class="params">tag</span>):</span><br><span class="line">    <span class="keyword">return</span> tag.has_attr(<span class="string">&quot;name&quot;</span>)</span><br><span class="line"></span><br><span class="line">t_list = bs.find_all(name_is_exits)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(t_list)</span><br></pre></td></tr></table></figure><h4 id="kwargs-参数"><a href="#kwargs-参数" class="headerlink" title="kwargs 参数"></a><code>kwargs 参数</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">t_list = bs.find_all(<span class="built_in">id</span>=<span class="string">&quot;head&quot;</span>)</span><br><span class="line"></span><br><span class="line">t_list = bs.find_all(href=<span class="string">&quot;http://news.baidu.com&quot;</span>)</span><br><span class="line">t_list = bs.find_all(class_=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><h4 id="text参数"><a href="#text参数" class="headerlink" title="text参数"></a><code>text参数</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t_list = bs.find_all(text= <span class="string">&quot;hao123&quot;</span>) </span><br><span class="line">t_list = bs.find_all(text=[<span class="string">&quot;hao123&quot;</span>,<span class="string">&quot;地图&quot;</span>,<span class="string">&quot;贴吧&quot;</span>]) </span><br><span class="line">t_list = bs.find_all(text=re.<span class="built_in">compile</span>(<span class="string">&quot;\d&quot;</span>))  <span class="comment"># 应用正则表达式来查找包含特定文本的内容（标签里的字符串）</span></span><br></pre></td></tr></table></figure><h4 id="limit-参数"><a href="#limit-参数" class="headerlink" title="limit 参数"></a><code>limit 参数</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t_list = bs.find_all(<span class="string">&quot;a&quot;</span>,limit=<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><h4 id="css-选择器"><a href="#css-选择器" class="headerlink" title="css 选择器"></a><code>css 选择器</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">t_list = bs.select(<span class="string">&#x27;title&#x27;</span>) <span class="comment"># 通过标签来查找</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line">t_list = bs.select(<span class="string">&quot;.mnav&quot;</span>) <span class="comment"># 通过类名查找</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line">t_list = bs.select(<span class="string">&quot;#u1&quot;</span>)   <span class="comment"># 通过id查找</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line">t_list = bs.select(<span class="string">&quot;a[class=&#x27;guide-info&#x27;]&quot;</span>) <span class="comment"># 通过属性来查找</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line">t_list = bs.select(<span class="string">&quot;head &gt; title&quot;</span>) <span class="comment"># 通过子标签来查找</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line"></span><br><span class="line">t_list = bs.select(<span class="string">&quot;.mnav ~ .bri&quot;</span>) <span class="comment"># 查找mnav下的bri标签</span></span><br><span class="line"><span class="built_in">print</span>(t_list[<span class="number">0</span>].get_text())</span><br></pre></td></tr></table></figure><h2 id="正则表达式与Re库"><a href="#正则表达式与Re库" class="headerlink" title="正则表达式与Re库"></a>正则表达式与Re库</h2><h3 id="正则表达式常用操作符（1）"><a href="#正则表达式常用操作符（1）" class="headerlink" title="正则表达式常用操作符（1）"></a>正则表达式常用操作符（1）</h3><table><thead><tr><th>操作符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td>.</td><td>表示任何单个字符</td><td></td></tr><tr><td>[  ]</td><td>字符集，对单个字符给出取值范围</td><td>[<code>abc</code>]表示<code>a、b、c</code>,[<code>a-z</code>]表示a到z单个字符</td></tr><tr><td>[^  ]</td><td>非字符集，对单个字符给出排除范围</td><td>[<code>^abc</code>]表示非a或b或c的单个字符</td></tr><tr><td>*</td><td>前一个字符0次或无限次扩展</td><td><code>abc*</code> 表示 <code>ab</code>、<code>abc</code>、<code>abcc</code>、<code>abccc</code>等</td></tr><tr><td>+</td><td>前一个字符1次或无限次扩展</td><td><code>abc+</code> 表示 <code>abc</code>、<code>abcc</code>、<code>abccc</code>等</td></tr><tr><td>？</td><td>前一个字符0次或1次扩展</td><td><code>abc?</code> 表示 <code>ab</code>、<code>abc</code></td></tr><tr><td>|</td><td>左右表达式任意一个</td><td>abc | def 表示 abc、 def</td></tr></tbody></table><h3 id="正则表达式常用操作符（2）"><a href="#正则表达式常用操作符（2）" class="headerlink" title="正则表达式常用操作符（2）"></a>正则表达式常用操作符（2）</h3><table><thead><tr><th>操作符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td><code>&#123;m&#125;</code></td><td>扩展前一个字符<code>m</code>次</td><td><code>ab&#123;2&#125;c</code>表示<code>abbc</code></td></tr><tr><td><code>&#123;m,n&#125;</code></td><td>扩展前一个字符<code>m至n</code>次（含<code>n</code>）</td><td><code>ab&#123;1,2&#125;c</code>表示<code>abc</code>、<code>abbc</code></td></tr><tr><td><code>^</code></td><td>匹配字符串开头</td><td><code>^abc</code> 表示<code>abc</code>且在一个字符串的开头</td></tr><tr><td><code>$</code></td><td>匹配字符串结尾</td><td><code>abc$</code>表示<code>abc</code>且在一个字符串末尾</td></tr><tr><td><code>()</code></td><td>分组标记，内部只能使用 | 操作符</td><td>(abc)表示abc，(abc|def)表示abc、def</td></tr><tr><td><code>\d</code></td><td>数字，等价于<code>[0-9]</code></td><td></td></tr><tr><td><code>\w</code></td><td>单词字符，等价于<code>[A-Za-z0-9_]</code></td><td></td></tr></tbody></table><h3 id="Re库主要功能函数"><a href="#Re库主要功能函数" class="headerlink" title="Re库主要功能函数"></a>Re库主要功能函数</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>re.search()</code></td><td>在一个字符串中搜索匹配正则表达式的第一个位置，返回<code>match</code>对象</td></tr><tr><td><code>re.match()</code></td><td>从一个字符串的开始位置起匹配正则表达式，返回<code>match</code>对象</td></tr><tr><td><code>re.findall()</code></td><td>搜索字符串，以列表类型返回全部能匹配的子串</td></tr><tr><td><code>re.split()</code></td><td>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型</td></tr><tr><td><code>re.finditer()</code></td><td>搜索字符串，返回一个匹配结果的迭代类型，每个迭代元素是match对象</td></tr><tr><td><code>re.sub()</code></td><td>在一个字符串中替换所有匹配正则表达式的字串，返回替换后的字符串。</td></tr></tbody></table><p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。多个标志可以通过按位<code>OR(|)</code>它们来指定。如<code>re.l|re.M</code>被设置成<code>|</code>和<code>M</code>标志。</p><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td><code>re.l</code></td><td>使匹配对大小写不敏感</td></tr><tr><td><code>re.L</code></td><td>做本地化识别（local-aware）</td></tr><tr><td><code>re.M</code></td><td>多行匹配，影响<code>^</code>和<code>$</code></td></tr><tr><td><code>re.S</code></td><td>使<code>.</code>匹配包括换行在内的所有字符</td></tr><tr><td><code>re.U</code></td><td>根据<code>Unicode</code>字符集解析字符。这个标志影响<code>\w</code> ，<code>\W</code>， <code>\b</code>， <code>\B</code></td></tr><tr><td><code>re.X</code></td><td>该标志通过给与你更灵活的格式以便你将正则表达式写的更易于理解。</td></tr></tbody></table><p><strong>正则表达式：字符串模式（判断字符串是否符合一定的标准）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 创建模式对象</span></span><br><span class="line"></span><br><span class="line">pat = re.<span class="built_in">compile</span>(<span class="string">&quot;AA&quot;</span>) <span class="comment"># 此处的AA 是正则表达式，用来去验证其他字符串</span></span><br><span class="line"></span><br><span class="line">m = pat.search(<span class="string">&quot;CBA&quot;</span>) <span class="comment"># search 字符串被校验的内容</span></span><br><span class="line"></span><br><span class="line">m = pat.search(<span class="string">&quot;ABCAA&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(m) <span class="comment"># &lt;re.Match object; span=(3, 5), match=&#x27;AA&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">m = pat.search(<span class="string">&quot;ABCAADDCCAAA&quot;</span>) <span class="comment"># search 方法进行比对查找</span></span><br><span class="line"><span class="built_in">print</span>(m) <span class="comment"># &lt;re.Match object; span=(3, 5), match=&#x27;AA&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有模式对象</span></span><br><span class="line"></span><br><span class="line">m = re.search(<span class="string">&quot;asd&quot;</span>,<span class="string">&quot;Aasd&quot;</span>) <span class="comment"># 前面的字符串是规则（模板），后面的字符串是被校验的对象。</span></span><br><span class="line"><span class="built_in">print</span>(m) <span class="comment"># &lt;re.Match object; span=(1, 4), match=&#x27;asd&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;ASDaDFGAa&quot;</span>))    <span class="comment"># [&#x27;a&#x27;, &#x27;a&#x27;]  前面字符串是规则（正则表达式），后面字符串是被校验的字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&quot;[A-Z]&quot;</span>,<span class="string">&quot;ASDaDFGAa&quot;</span>))  <span class="comment"># [&#x27;A&#x27;, &#x27;S&#x27;, &#x27;D&#x27;, &#x27;D&#x27;, &#x27;F&#x27;, &#x27;G&#x27;, &#x27;A&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&quot;[A-Z]+&quot;</span>,<span class="string">&quot;ASDaDFGAa&quot;</span>)) <span class="comment"># [&#x27;ASD&#x27;, &#x27;DFGA&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sub </span></span><br><span class="line"><span class="built_in">print</span>(re.sub(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;abcdcasd&quot;</span>))       <span class="comment"># 找到a用A替换，在第三个字符串种查找</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议用正则表达式中，被比较的字符串前面加上r，不用担心转义字符的问题。</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">r&quot;\aabd-\&#x27;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># \aabd-\&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>urllib库的基本使用</title>
      <link href="/2022/07/17/urllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/07/17/urllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="网页各种测试"><a href="#网页各种测试" class="headerlink" title="网页各种测试"></a>网页各种测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://httpbin.org</span><br></pre></td></tr></table></figure><h4 id="获取一个get请求"><a href="#获取一个get请求" class="headerlink" title="获取一个get请求"></a>获取一个get请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">res = urllib.request.urlopen(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(res.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment"># 对获取到的网页源码进行utf-8解码</span></span><br></pre></td></tr></table></figure><h4 id="获取一个post请求-（模拟用户登录）"><a href="#获取一个post请求-（模拟用户登录）" class="headerlink" title="获取一个post请求.（模拟用户登录）"></a>获取一个post请求.（模拟用户登录）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse <span class="comment"># 引入解析库</span></span><br><span class="line">data  = <span class="built_in">bytes</span>(urllib.parse.urlencode(&#123;<span class="string">&quot;hello&quot;</span>:<span class="string">&quot;world&quot;</span>&#125;),encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">res1 = urllib.request.urlopen(<span class="string">&quot;http://httpbin.org/post&quot;</span>,data=data)</span><br><span class="line"><span class="built_in">print</span>(res1.read().decode(<span class="string">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="超时处理"><a href="#超时处理" class="headerlink" title="超时处理"></a>超时处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res1 = urllib.request.urlopen(<span class="string">&quot;http://httpbin.org/get&quot;</span>,timeout=<span class="number">0.01</span>)</span><br><span class="line">    <span class="built_in">print</span>(res1.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;time out!&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="获取基本信息"><a href="#获取基本信息" class="headerlink" title="获取基本信息"></a>获取基本信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">res2 = urllib.request.urlopen(<span class="string">&quot;http://baidu.com&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(res2.status) <span class="comment"># 获取状态码</span></span><br><span class="line"><span class="built_in">print</span>(res2.getheaders()) <span class="comment"># 获取头部信息</span></span><br><span class="line"><span class="built_in">print</span>(res2.getheader(<span class="string">&quot;Server&quot;</span>)) <span class="comment"># Apache</span></span><br></pre></td></tr></table></figure><h4 id="直接请求豆瓣网址"><a href="#直接请求豆瓣网址" class="headerlink" title="直接请求豆瓣网址"></a>直接请求豆瓣网址</h4> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;https://douban.com&quot;</span></span><br><span class="line">req = urllib.request.Request(url=url)</span><br><span class="line">response = urllib.request.urlopen(req)</span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="报错信息如下：（说明豆瓣已经识别到是爬虫的请求）"><a href="#报错信息如下：（说明豆瓣已经识别到是爬虫的请求）" class="headerlink" title="报错信息如下：（说明豆瓣已经识别到是爬虫的请求）"></a>报错信息如下：（说明豆瓣已经识别到是爬虫的请求）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">raise</span> HTTPError(req.full_url, code, msg, hdrs, fp)</span><br><span class="line">urllib.error.HTTPError: HTTP Error <span class="number">418</span></span><br></pre></td></tr></table></figure><p>如何伪装成浏览器来请求呢？这时候需要在请求头中添加<code>user-agent</code>。<code>user-agent</code>如何获取？浏览器<code>F12</code>-》<code>NETWORK</code>-&gt;点击左侧带有<code>get</code>请求的网址，右侧拉到最下边复制<code>user-agent</code>的值。</p><h4 id="构建代码后再次请求，收到返回的数据了。"><a href="#构建代码后再次请求，收到返回的数据了。" class="headerlink" title="构建代码后再次请求，收到返回的数据了。"></a>构建代码后再次请求，收到返回的数据了。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;https://douban.com&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">&#125; </span><br><span class="line">req = urllib.request.Request(url=url,headers=headers)</span><br><span class="line">response = urllib.request.urlopen(req)</span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="UA伪装"><a href="#UA伪装" class="headerlink" title="UA伪装"></a>UA伪装</h2><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p>将常见的UserAgent用列表保存起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">ua_list = [</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; TencentTraveler 4.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; The World)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>代码演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen, Request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line"></span><br><span class="line">ua_list = [</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; TencentTraveler 4.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; The World)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># random.choice():随机从列表里取一个</span></span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: random.choice(ua_list)&#125;</span><br><span class="line"><span class="comment"># 构造请求</span></span><br><span class="line">req = Request(url, headers=headers)</span><br><span class="line"><span class="comment"># 发送请求</span></span><br><span class="line">resp = urlopen(req)</span><br><span class="line"><span class="comment"># 相应内容</span></span><br><span class="line"><span class="built_in">print</span>(resp.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>内容输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;identity&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62d7a54c-0a7c5b071d6f91e0471656ef&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;ip&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;identity&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62d7a552-6c77190d0bef3bd93ddca46d&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;ip&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a><strong>方式二</strong></h4><p>准备工作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install fake_useragent</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen, Request</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: UserAgent().random <span class="comment"># 随机选取代理。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line"><span class="comment"># 构造请求</span></span><br><span class="line">req = Request(url, headers=headers)</span><br><span class="line"><span class="comment"># 发送请求</span></span><br><span class="line">resp = urlopen(req)</span><br><span class="line"><span class="comment"># 相应内容</span></span><br><span class="line"><span class="built_in">print</span>(resp.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h2><h3 id="常用的handler对象"><a href="#常用的handler对象" class="headerlink" title="常用的handler对象"></a>常用的handler对象</h3><ul><li><strong>HTTPHandler</strong>: 普通的HTTP处理器</li><li><strong>ProxyHandler</strong>: 代理IP处理器</li><li><strong>HTTPCookieProcessor</strong>: cookie处理器</li></ul><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><h4 id="HTTPHandler"><a href="#HTTPHandler" class="headerlink" title="HTTPHandler"></a>HTTPHandler</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> Request, urlopen, build_opener, HTTPHandler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">url</span>):</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UserAgent().random</span><br><span class="line">    &#125;</span><br><span class="line">    req = Request(url, headers=headers)</span><br><span class="line">    <span class="comment"># 创建http处理器对象,debuglevel打开调试</span></span><br><span class="line">    handler = HTTPHandler(debuglevel=<span class="number">2</span>)</span><br><span class="line">    opener = build_opener(handler)</span><br><span class="line">    resp = opener.<span class="built_in">open</span>(req)</span><br><span class="line">    <span class="built_in">print</span>(resp.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">    download(url)</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">send: <span class="string">b&#x27;GET /get HTTP/1.1\r\nAccept-Encoding: identity\r\nHost: httpbin.org\r\nUser-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36\r\nConnection: close\r\n\r\n&#x27;</span></span><br><span class="line">reply: <span class="string">&#x27;HTTP/1.1 200 OK\r\n&#x27;</span></span><br><span class="line">header: Date: Wed, <span class="number">20</span> Jul <span class="number">2022</span> 08:06:06 GMT</span><br><span class="line">header: Content-<span class="type">Type</span>: application/json</span><br><span class="line">header: Content-Length: <span class="number">359</span></span><br><span class="line">header: Connection: close</span><br><span class="line">header: Server: gunicorn/<span class="number">19.9</span><span class="number">.0</span></span><br><span class="line">header: Access-Control-Allow-Origin: *</span><br><span class="line">header: Access-Control-Allow-Credentials: true</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;identity&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62d7b76e-4c99f8712c1292a55b601fa4&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;访问的ip&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ProxyHandler"><a href="#ProxyHandler" class="headerlink" title="ProxyHandler"></a>ProxyHandler</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> Request, build_opener, ProxyHandler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxy_handler</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UserAgent().random</span><br><span class="line">    &#125;</span><br><span class="line">    req = Request(url, headers=headers)</span><br><span class="line">    <span class="comment"># ProxyHandler(&#123;&quot;http&quot;: &quot;ip:port&quot;&#125;)</span></span><br><span class="line">    handler = ProxyHandler(&#123;<span class="string">&quot;http&quot;</span>: <span class="string">&quot;58.20.235.180:9091&quot;</span>&#125;)</span><br><span class="line">    opener = build_opener(handler)</span><br><span class="line">    resp = opener.<span class="built_in">open</span>(req)</span><br><span class="line">    <span class="comment"># print(resp.info())</span></span><br><span class="line">    <span class="built_in">print</span>(resp.read().decode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">    proxy_handler(url)</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62d7b7ea-05098b4c34bab12d7cc0dfe7&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;58.20.235.180&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现使用了代理IP请求的网页。</p><p>登录cookie处理<a href="https://www.jianshu.com/p/98b0334a6951?u_atoken=cf050b03-4426-4ae8-ae76-ec76a49811bb&u_asession=01F8tG1j1-6mUqPBfizMyXtOLgj1_YdpWLy6tLQTrMJKkPO4B8VGQufulZrcnb3kYsX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K8-AbenNtsISwUd_aPGR9dhPpcarp92QKzyJKyYjREPlmBkFo3NEHBv0PZUm6pbxQU&u_asig=05Y_GO1vKbHGrEmwMy-8Bd_sFNaHiYK3j6noCMVAA70lD05yk2CFL3YOsWSQgXdUg3GG7jeXvY63IgguMHqMXco8jlTjdjUZ2-AEjBbKB3fRHgP8bB5H8JlYanu-2gJ6IT3At8RY4894XQDDjc4CC6hg10-lAg9OWVEp3GNxFS9sf9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzQRCyRu4UuJTb01FQsw4RUa7a4S_mrYVXff1xSzt_uoNWPRPQyB_SKrj-61LB_f61u3h9VXwMyh6PgyDIVSG1W-bbgCpyxFT_zAiQqv6S6quGVjuvW8Mbnw36tryIj0GRovjjV_Udp6mp6xfOvuIWAyvNX7IvsygEZUv24qXCsuLmWspDxyAEEo4kbsryBKb9Q&u_aref=k8mWOuZuai/2wl2ZQb1rFJPv6AU=">见</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣电影数据分析</title>
      <link href="/2022/07/17/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/"/>
      <url>/2022/07/17/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="爬虫分析步骤"><a href="#爬虫分析步骤" class="headerlink" title="爬虫分析步骤"></a>爬虫分析步骤</h2><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><h4 id="解析内容"><a href="#解析内容" class="headerlink" title="解析内容"></a>解析内容</h4><h4 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h4><h3 id="url分析"><a href="#url分析" class="headerlink" title="url分析"></a>url分析</h3><p>页面包括250条电影数据，分10页，每页25条。每页的url的不同之处：最后的数值&#x3D; （页数-1）*25</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一页第一条</span></span><br><span class="line">https://movie.douban.com/top250?start=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>服务器通过headers鉴定客户端信息。</p><h3 id="保存到excel表格中，代码如下"><a href="#保存到excel表格中，代码如下" class="headerlink" title="保存到excel表格中，代码如下"></a>保存到excel表格中，代码如下</h3><p>注意：如果<code>ip</code>被限制可以带<code>cookie</code>请求，这样服务器会认为是同一个客户端发出的请求。</p><p>或者使用代理IP来访问。</p><p>代理IP<a href="https://free.kuaidaili.com/free/">网站</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment"># 网页解析，获取数据</span></span><br><span class="line"><span class="keyword">import</span> re <span class="comment"># 正则表达式，进行文字匹配</span></span><br><span class="line"><span class="keyword">import</span> urllib.request, urllib.error <span class="comment"># 指定url，获取网页数据</span></span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">import</span> xlwt <span class="comment"># 进行execl操作</span></span><br><span class="line"><span class="keyword">import</span> sqlite3 <span class="comment"># 进行sqlite 数据库操作</span></span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent <span class="comment"># 引入动态随机UserAgent</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> build_opener, ProxyHandler <span class="comment"># 反反爬，使用代理IP，防止被服务器封掉。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line">    <span class="comment"># 1.爬取网页</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line">    savepath = <span class="string">&quot;.\\豆瓣电影top250.xls&quot;</span></span><br><span class="line">    <span class="comment"># 3.保存数据</span></span><br><span class="line">    saveData(datalist,savepath)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># askURL(&quot;https://movie.douban.com/top250?start=0&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 影片详情的规则</span></span><br><span class="line">findLink = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)     <span class="comment"># 创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="comment"># 影片图片</span></span><br><span class="line">findImgSrc = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S)  <span class="comment"># re.S 让换行符包含在字符中      </span></span><br><span class="line"><span class="comment"># 影片片名</span></span><br><span class="line">findTitle = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 影片评分</span></span><br><span class="line">findRating = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到评价人数</span></span><br><span class="line">findJudge = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span&gt;(\d*)人评价&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到概况</span></span><br><span class="line">findInq = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到影片的相关内容</span></span><br><span class="line">findBd =re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span>,re.S)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):       <span class="comment"># 调用获取页面信息的函数,10次,正好10页内容250条。</span></span><br><span class="line">        url = baseurl + <span class="built_in">str</span>(i*<span class="number">25</span>)</span><br><span class="line">        askURL(url)</span><br><span class="line">        html = askURL(url)      <span class="comment"># 保存获取到的网页源码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2.逐一解析数据</span></span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;div&quot;</span>,class_=<span class="string">&quot;item&quot;</span>):    <span class="comment">#查找符合要求的字符串形成列表。</span></span><br><span class="line">            <span class="comment"># print(item) # 测试查看电影item全部信息</span></span><br><span class="line">            data = []   <span class="comment">#保存一部电影的所有信息</span></span><br><span class="line">            item = <span class="built_in">str</span>(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 影片详情的链接</span></span><br><span class="line">            link = re.findall(findLink,item)[<span class="number">0</span>]     <span class="comment">#re库用来通过正则表达式查找指定的字符串</span></span><br><span class="line">            <span class="comment"># print(link)</span></span><br><span class="line">            data.append(link)                   <span class="comment"># 添加链接</span></span><br><span class="line">            imgSrc= re.findall(findImgSrc,item)[<span class="number">0</span>]  <span class="comment">#添加图片</span></span><br><span class="line">            data.append(imgSrc)</span><br><span class="line">            titles = re.findall(findTitle,item)        <span class="comment"># 片名可能只有一个中文名，没有外国名</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">len</span>(titles) == <span class="number">2</span>):</span><br><span class="line">                ctitle = titles[<span class="number">0</span>]          <span class="comment"># 添加中文名</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                otitle = titles[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>)      <span class="comment"># 去掉无关的符号</span></span><br><span class="line">                data.append(otitle)                 <span class="comment"># 添加外国名</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(titles[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&#x27; &#x27;</span>)        <span class="comment"># 外国名字留空</span></span><br><span class="line">            </span><br><span class="line">            rating = re.findall(findRating,item)[<span class="number">0</span>]     <span class="comment"># 添加评分</span></span><br><span class="line">            data.append(rating)</span><br><span class="line"></span><br><span class="line">            judgeNim = re.findall(findJudge,item)[<span class="number">0</span>]</span><br><span class="line">            data.append(judgeNim)           <span class="comment"># 添加评价人数</span></span><br><span class="line"></span><br><span class="line">            inq = re.findall(findInq,item)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(inq) != <span class="number">0</span>:</span><br><span class="line">                inq = inq[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>,<span class="string">&quot;&quot;</span>)       <span class="comment"># 去掉句号</span></span><br><span class="line">                data.append(inq)                <span class="comment"># 添加概述</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)        <span class="comment"># 留空</span></span><br><span class="line"></span><br><span class="line">            bd = re.findall(findBd,item)[<span class="number">0</span>]</span><br><span class="line">            bd = re.sub(<span class="string">&#x27;&lt;br(\s+)?/&gt;(\s+)?&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)     <span class="comment"># 去掉&lt;br/&gt;</span></span><br><span class="line">            bd = re.sub(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)     <span class="comment"># 替换/</span></span><br><span class="line">            data.append(bd.strip())     <span class="comment"># 去掉前后的空格</span></span><br><span class="line"></span><br><span class="line">            datalist.append(data)       <span class="comment"># 把处理好的一部分电影信息放入datalist</span></span><br><span class="line">    <span class="comment"># print(datalist)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到一个指定的URL的网页内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askURL</span>(<span class="params">url</span>):</span><br><span class="line">    head = &#123;        <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UserAgent().random</span><br><span class="line">    &#125;</span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    handler = ProxyHandler(&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;58.20.184.187:9091&quot;</span>&#125;) <span class="comment"># 使用代理IP请求资源</span></span><br><span class="line">    opener = build_opener(handler)</span><br><span class="line">    <span class="comment"># 用户代理表示告诉豆瓣服务器，我们是什么类型的机器、浏览器(本质上是告诉浏览器，我们可以接收什么水平的文件内容)</span></span><br><span class="line">    html = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        resp = opener.<span class="built_in">open</span>(request)</span><br><span class="line">        html = resp.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.code)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.reason)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line"><span class="comment"># 3.保存数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveData</span>(<span class="params">datalist,savepath</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;save....&quot;</span>)</span><br><span class="line">    book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># 创建workbook对象</span></span><br><span class="line">    sheet = book.add_sheet(<span class="string">&#x27;豆瓣电影Top250&#x27;</span>,cell_overwrite_ok=<span class="literal">True</span>)    <span class="comment"># 创建工作表</span></span><br><span class="line">    col = (<span class="string">&quot;电影详情链接&quot;</span>,<span class="string">&quot;图片链接&quot;</span>,<span class="string">&quot;影片中文名&quot;</span>,<span class="string">&quot;影片外国名&quot;</span>,<span class="string">&quot;评分&quot;</span>,<span class="string">&quot;评价数&quot;</span>,<span class="string">&quot;概况&quot;</span>,<span class="string">&quot;相关信息&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i])     <span class="comment"># 列名</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">250</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;第%d条&quot;</span> %i)</span><br><span class="line">        data = datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])      <span class="comment"># 数据</span></span><br><span class="line">        </span><br><span class="line">    book.save(savepath)    <span class="comment"># 保存数据表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: <span class="comment"># 当程序执行时。程序入口，控制函数调用顺序。</span></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">    main()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取完毕！&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="保存到数据库中，代码如下"><a href="#保存到数据库中，代码如下" class="headerlink" title="保存到数据库中，代码如下"></a>保存到数据库中，代码如下</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment"># 网页解析，获取数据</span></span><br><span class="line"><span class="keyword">import</span> re <span class="comment"># 正则表达式，进行文字匹配</span></span><br><span class="line"><span class="keyword">import</span> urllib.request, urllib.error <span class="comment"># 指定url，获取网页数据</span></span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">import</span> xlwt <span class="comment"># 进行execl操作</span></span><br><span class="line"><span class="keyword">import</span> sqlite3 <span class="comment"># 进行sqlite 数据库操作</span></span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent <span class="comment"># 引入动态随机UserAgent</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> build_opener, ProxyHandler <span class="comment"># 反反爬，使用代理IP，防止被服务器封掉。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line">    <span class="comment"># 1.爬取网页</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line">    dbpath = <span class="string">&quot;movie.db&quot;</span></span><br><span class="line">    <span class="comment"># 3.保存数据</span></span><br><span class="line">    saveData2DB(datalist, dbpath)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># askURL(&quot;https://movie.douban.com/top250?start=0&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 影片详情的规则</span></span><br><span class="line">findLink = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)     <span class="comment"># 创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="comment"># 影片图片</span></span><br><span class="line">findImgSrc = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S)  <span class="comment"># re.S 让换行符包含在字符中      </span></span><br><span class="line"><span class="comment"># 影片片名</span></span><br><span class="line">findTitle = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 影片评分</span></span><br><span class="line">findRating = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到评价人数</span></span><br><span class="line">findJudge = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span&gt;(\d*)人评价&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到概况</span></span><br><span class="line">findInq = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 找到影片的相关内容</span></span><br><span class="line">findBd =re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span>,re.S)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):       <span class="comment"># 调用获取页面信息的函数,10次,正好10页内容250条。</span></span><br><span class="line">        url = baseurl + <span class="built_in">str</span>(i*<span class="number">25</span>)</span><br><span class="line">        askURL(url)</span><br><span class="line">        html = askURL(url)      <span class="comment"># 保存获取到的网页源码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2.逐一解析数据</span></span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;div&quot;</span>,class_=<span class="string">&quot;item&quot;</span>):    <span class="comment">#查找符合要求的字符串形成列表。</span></span><br><span class="line">            <span class="comment"># print(item) # 测试查看电影item全部信息</span></span><br><span class="line">            data = []   <span class="comment">#保存一部电影的所有信息</span></span><br><span class="line">            item = <span class="built_in">str</span>(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 影片详情的链接</span></span><br><span class="line">            link = re.findall(findLink,item)[<span class="number">0</span>]     <span class="comment">#re库用来通过正则表达式查找指定的字符串</span></span><br><span class="line">            <span class="comment"># print(link)</span></span><br><span class="line">            data.append(link)                   <span class="comment"># 添加链接</span></span><br><span class="line">            imgSrc= re.findall(findImgSrc,item)[<span class="number">0</span>]  <span class="comment">#添加图片</span></span><br><span class="line">            data.append(imgSrc)</span><br><span class="line">            titles = re.findall(findTitle,item)        <span class="comment"># 片名可能只有一个中文名，没有外国名</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">len</span>(titles) == <span class="number">2</span>):</span><br><span class="line">                ctitle = titles[<span class="number">0</span>]          <span class="comment"># 添加中文名</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                otitle = titles[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>)      <span class="comment"># 去掉无关的符号</span></span><br><span class="line">                data.append(otitle)                 <span class="comment"># 添加外国名</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(titles[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&#x27; &#x27;</span>)        <span class="comment"># 外国名字留空</span></span><br><span class="line">            </span><br><span class="line">            rating = re.findall(findRating,item)[<span class="number">0</span>]     <span class="comment"># 添加评分</span></span><br><span class="line">            data.append(rating)</span><br><span class="line"></span><br><span class="line">            judgeNim = re.findall(findJudge,item)[<span class="number">0</span>]</span><br><span class="line">            data.append(judgeNim)           <span class="comment"># 添加评价人数</span></span><br><span class="line"></span><br><span class="line">            inq = re.findall(findInq,item)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(inq) != <span class="number">0</span>:</span><br><span class="line">                inq = inq[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>,<span class="string">&quot;&quot;</span>)       <span class="comment"># 去掉句号</span></span><br><span class="line">                data.append(inq)                <span class="comment"># 添加概述</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)        <span class="comment"># 留空</span></span><br><span class="line"></span><br><span class="line">            bd = re.findall(findBd,item)[<span class="number">0</span>]</span><br><span class="line">            bd = re.sub(<span class="string">&#x27;&lt;br(\s+)?/&gt;(\s+)?&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)     <span class="comment"># 去掉&lt;br/&gt;</span></span><br><span class="line">            bd = re.sub(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)     <span class="comment"># 替换/</span></span><br><span class="line">            data.append(bd.strip())     <span class="comment"># 去掉前后的空格</span></span><br><span class="line"></span><br><span class="line">            datalist.append(data)       <span class="comment"># 把处理好的一部分电影信息放入datalist</span></span><br><span class="line">    <span class="comment"># print(datalist)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到一个指定的URL的网页内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askURL</span>(<span class="params">url</span>):</span><br><span class="line">    head = &#123;        <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UserAgent().random</span><br><span class="line">    &#125;</span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    handler = ProxyHandler(&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;58.20.184.187:9091&quot;</span>&#125;) <span class="comment"># 使用代理IP请求资源</span></span><br><span class="line">    opener = build_opener(handler)</span><br><span class="line">    <span class="comment"># 用户代理表示告诉豆瓣服务器，我们是什么类型的机器、浏览器(本质上是告诉浏览器，我们可以接收什么水平的文件内容)</span></span><br><span class="line">    html = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        resp = opener.<span class="built_in">open</span>(request)</span><br><span class="line">        html = resp.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.code)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.reason)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line"><span class="comment"># 3.保存数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveData2DB</span>(<span class="params">datalist,dbpath</span>):</span><br><span class="line">    init_db(dbpath)</span><br><span class="line">    conn = sqlite3.connect(dbpath)</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datalist:</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">            <span class="keyword">if</span> index == <span class="number">4</span> <span class="keyword">or</span> index == <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            data[index] = <span class="string">&#x27;&quot;&#x27;</span>+data[index]+<span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">        sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                insert into movie250(</span></span><br><span class="line"><span class="string">                info_link,pic_link,cname,ename,score,rated,instroduction,info</span></span><br><span class="line"><span class="string">                )</span></span><br><span class="line"><span class="string">                values(%s)&#x27;&#x27;&#x27;</span>%<span class="string">&quot;,&quot;</span>.join(data)</span><br><span class="line">        <span class="comment"># print(sql) # 打印插入语句（测试用）</span></span><br><span class="line">        cur.execute(sql)</span><br><span class="line">        conn.commit()</span><br><span class="line">    cur.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_db</span>(<span class="params">dbpath</span>):</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        create table movie250</span></span><br><span class="line"><span class="string">        (</span></span><br><span class="line"><span class="string">        id integer primary key autoincrement,</span></span><br><span class="line"><span class="string">        info_link text,</span></span><br><span class="line"><span class="string">        pic_link text,</span></span><br><span class="line"><span class="string">        cname varchar ,</span></span><br><span class="line"><span class="string">        ename varchar ,</span></span><br><span class="line"><span class="string">        score numeric ,</span></span><br><span class="line"><span class="string">        rated numeric ,</span></span><br><span class="line"><span class="string">        instroduction text ,</span></span><br><span class="line"><span class="string">        info text</span></span><br><span class="line"><span class="string">        )</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span>     <span class="comment"># 创建数据表</span></span><br><span class="line">    conn = sqlite3.connect(dbpath)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:  <span class="comment"># 当程序执行时。程序入口，控制函数调用顺序。</span></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">    main()</span><br><span class="line">    <span class="comment"># init_db(&quot;movietest.db&quot;) # 测试用，生成测试库。</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取完毕！&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动化办公之文件读写</title>
      <link href="/2022/07/11/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/"/>
      <url>/2022/07/11/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/</url>
      
        <content type="html"><![CDATA[<p>读写文件（上）–文件与文件路径</p><p>主要是<code>os.path()</code>第三方库</p><p>1.<code>Windows</code>系统中的<code>\</code>和Linux系统中的<code>/</code></p><p>以下代码在Terminal中执行更直观</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># D:\\code2022\\auto-work</span></span><br><span class="line"><span class="comment"># /code2022/auto-work</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 \ 和 / 的问题，可以使用os.path.join()</span></span><br><span class="line"><span class="comment">#  os.path.join(&#x27;D:\\&#x27;,&#x27;code2022&#x27;,&#x27;auto-work&#x27;)</span></span><br></pre></td></tr></table></figure><p>2.获取当前的目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">os.getcwd()</span><br><span class="line"><span class="comment"># 切换到指定路径下</span></span><br><span class="line">os.chdir(<span class="string">&#x27;D:\\code2022&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">&#x27;D:\\code2022\\auto-work&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">&#x27;D:\\code2022&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">&#x27;D:\\code2022&#x27;</span></span><br></pre></td></tr></table></figure><p>3.绝对路径和相对路径</p><p><strong>绝对路径总是从根文件夹开始</strong></p><p><strong>相对路径是相对程序的当前工作目录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test1.py 的绝对路径</span><br><span class="line"><span class="comment"># D:\code2022\auto-work\test1.py</span></span><br><span class="line"><span class="comment"># D:\code2022\auto-work\test2.py</span></span><br><span class="line">test2.py相对于test1.py的路径</span><br><span class="line"><span class="comment"># &#x27;.&#x27; 当前文件夹</span></span><br><span class="line"><span class="comment"># &#x27;..&#x27; 父文件夹</span></span><br><span class="line"><span class="comment"># 相对于test1.py 的路径 ../test2.py</span></span><br><span class="line"><span class="comment"># 相对于auto-work/test2.py 的路径 ../../test2.py </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回绝对路径</span></span><br><span class="line">os.path.abspath(<span class="string">&#x27;.&#x27;</span>) <span class="comment"># &#x27;D:\\code2022\\auto-work&#x27;</span></span><br><span class="line">os.path.abspath(<span class="string">&#x27;test1.py&#x27;</span>) <span class="comment"># &#x27;D:\\code2022\\auto-work\\test1.py&#x27;</span></span><br><span class="line"><span class="comment"># 返回相对路径</span></span><br><span class="line">os.path.relpath(path[, start])</span><br><span class="line"><span class="comment"># 返回最后一个斜杠前的所有内容--目录名</span></span><br><span class="line">os.path.dirname(<span class="string">&#x27;D:\\code2022\\auto-work\\test1.py&#x27;</span>) <span class="comment"># &#x27;D:\\code2022\\auto-work&#x27;</span></span><br><span class="line"><span class="comment"># 返回最后一个斜杠后的所有内容--文件名</span></span><br><span class="line">os.path.basename(<span class="string">&#x27;D:\\code2022\\auto-work\\test1.py&#x27;</span>) <span class="comment"># &#x27;test1.py&#x27;</span></span><br><span class="line"><span class="comment"># 以元组的方式同时返回目录名和文件名</span></span><br><span class="line">os.path.split(<span class="string">&#x27;D:\\code2022\\auto-work\\test1.py&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果：(&#x27;D:\\code2022\\auto-work&#x27;, &#x27;test1.py&#x27;)</span></span><br><span class="line"><span class="comment"># 按照斜杠裁剪,os.path.sep 会根据系统取不同的值</span></span><br><span class="line"><span class="string">&#x27;D:\\code2022\\auto-work\\test1.py&#x27;</span>.split(os.path.sep)</span><br><span class="line"><span class="comment"># 结果：[&#x27;D:&#x27;, &#x27;code2022&#x27;, &#x27;auto-work&#x27;, &#x27;test1.py&#x27;]</span></span><br></pre></td></tr></table></figure><p>4.创建新文件夹（<code>os.mkdir()</code>）</p><p>在<code>auto-work</code>文件夹下创建<code>test3</code>文件夹</p><p>重复创建会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.mkdir(<span class="string">&#x27;D:\\code2022\\auto-work\\test3&#x27;</span>)</span><br></pre></td></tr></table></figure><p>5.查看文件大小和文件夹内容(单位是字节)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os.path.getsize(<span class="string">&#x27;test2.py&#x27;</span>) <span class="comment"># 28</span></span><br><span class="line"></span><br><span class="line">os.listdir(<span class="string">&#x27;.&#x27;</span>) <span class="comment"># [&#x27;test1.py&#x27;, &#x27;test2.py&#x27;, &#x27;test3&#x27;]</span></span><br></pre></td></tr></table></figure><p>这里是<code>os.listdir()</code>而不是<code>os.path.list()</code></p><p>6.检查路径是否有效</p><p>如果提供的路径不存在，会使程序崩溃，以下函数可以检查路径是否存在</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">&#x27;test1.py&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isfile(<span class="string">&#x27;test1.py&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isdir(<span class="string">&#x27;test3&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>7.课后练习</p><p>把<code>test3</code>文件夹下的文件按照文件类型放到不同的文件夹下</p><p>把<code>xlsx</code>文件放到<code>test3\xlsx</code>文件夹下</p><p>把<code>jpeg</code>文件放到<code>test3\jpeg</code>文件夹下</p><p>把<code>pptx</code>文件放到<code>test3\pptx</code>文件夹下</p><p>把<code>docx</code>文件放到<code>test3\doc</code>文件夹下</p><p>把<code>txt</code>文件放到<code>test3\txt</code>文件夹下</p><p><strong><code>shutil</code>模块支持文件的复制和删除</strong></p><p><strong>windows和linux都能使用</strong></p><p><code>.py</code>文件放到整理的文件夹内执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os,shutil</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cleanDir</span>():</span><br><span class="line">    BaseDir = os.getcwd()</span><br><span class="line">    xlsxPath = os.path.join(BaseDir,<span class="string">&#x27;xlsx&#x27;</span>)</span><br><span class="line">    imgPath = os.path.join(BaseDir,<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">    pptPath = os.path.join(BaseDir,<span class="string">&#x27;ppt&#x27;</span>)</span><br><span class="line">    docPath = os.path.join(BaseDir,<span class="string">&#x27;doc&#x27;</span>)</span><br><span class="line">    txtPath = os.path.join(BaseDir,<span class="string">&#x27;txt&#x27;</span>) <span class="comment"># D:\\code2022\\auto-work\\test3\\txt</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(xlsxPath):</span><br><span class="line">        os.mkdir(xlsxPath)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(imgPath):</span><br><span class="line">        os.mkdir(imgPath)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(pptPath):</span><br><span class="line">        os.mkdir(pptPath)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(docPath):</span><br><span class="line">        os.mkdir(docPath)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(txtPath):</span><br><span class="line">        os.mkdir(txtPath)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(BaseDir):</span><br><span class="line">        baseName = os.path.basename(file) <span class="comment"># 9.txt</span></span><br><span class="line">        filePath = os.path.join(BaseDir,file) <span class="comment"># D:\\code2022\\auto-work\\test3\\9.txt</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath):</span><br><span class="line">            ex = baseName.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>] <span class="comment"># .txt</span></span><br><span class="line">            <span class="keyword">if</span> ex == <span class="string">&#x27;xlsx&#x27;</span>:</span><br><span class="line">                shutil.move(filePath,os.path.join(xlsxPath,baseName))</span><br><span class="line">            <span class="keyword">elif</span> ex == <span class="string">&#x27;jpeg&#x27;</span>:</span><br><span class="line">                shutil.move(filePath,os.path.join(imgPath,baseName))</span><br><span class="line">            <span class="keyword">elif</span> ex == <span class="string">&#x27;pptx&#x27;</span>:</span><br><span class="line">                shutil.move(filePath,os.path.join(pptPath,baseName))</span><br><span class="line">            <span class="keyword">elif</span> ex == <span class="string">&#x27;docx&#x27;</span>:</span><br><span class="line">                shutil.move(filePath,os.path.join(docPath,baseName))</span><br><span class="line">            <span class="keyword">elif</span> ex == <span class="string">&#x27;txt&#x27;</span>:</span><br><span class="line">                shutil.move(filePath,os.path.join(txtPath,baseName))</span><br><span class="line">                <span class="comment"># 把D:\\code2022\\auto-work\\test3\\9.txt 剪切到D:\\code2022\\auto-work\\test3\\txt</span></span><br><span class="line"></span><br><span class="line">cleanDir()</span><br></pre></td></tr></table></figure><h3 id="纯文本文件和二进制文件的区别"><a href="#纯文本文件和二进制文件的区别" class="headerlink" title="纯文本文件和二进制文件的区别"></a>纯文本文件和二进制文件的区别</h3><p>纯文本文件就是只包含基本文本字符，不包含字体、大小和颜色信息的，例如txt文件</p><p>二进制文件只是除了纯文本文件外的其他文件，例如pdf，图像,excel等。</p><h4 id="用程序读纯文本文件三步骤："><a href="#用程序读纯文本文件三步骤：" class="headerlink" title="用程序读纯文本文件三步骤："></a>用程序读纯文本文件三步骤：</h4><p><code>open()</code>打开，返回<code>File</code>对象</p><p>调用<code>File</code>对象的<code>read()</code>和<code>write</code>函数</p><p>调用<code>File</code>对象的<code>close()</code>函数，关闭该文件。</p><h4 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filePath = <span class="string">r&#x27;D:\code2022\auto-work\test3\txt\9.txt&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(filePath,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># read() 读取所有</span></span><br><span class="line">content = f.read()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;txt的内容:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># 按行读取</span></span><br><span class="line">f = <span class="built_in">open</span>(filePath)</span><br><span class="line">rowIndex = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;txt第&#123;0&#125;行内容:&#x27;</span>.<span class="built_in">format</span>(rowIndex))</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">    rowIndex += <span class="number">1</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># 规定读取字节数</span></span><br><span class="line">f = <span class="built_in">open</span>(filePath)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第一行内容：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(f.readline())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;读取5个字节：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(f.readline(<span class="number">5</span>))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h4><p><strong>写模式和添加模式</strong></p><p><strong>写模式会覆盖原来的内容</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">newFilePath = <span class="string">r&#x27;D:\code2022\auto-work\test3\txt\9.txt&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(newFilePath,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;你好\n&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(newFilePath, <span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;这是我用添加模式增加的内容\n&quot;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>练习：</p><p>将<code>D:\code2022\auto-work\test3\txt\10.txt</code>中的数字转换成中文数字并且保存到源文件中</p><p>文本内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我还记得我初中<span class="number">3</span>年都是在<span class="number">4</span>班的，成绩一直马马虎虎，在班级前<span class="number">5</span>名。</span><br><span class="line">然后中考就进入了县里的重点高中。</span><br><span class="line">高<span class="number">1</span>的时候是在<span class="number">8</span>班，换了<span class="number">6</span>位同桌，其中<span class="number">2</span>位是女生</span><br><span class="line">到高<span class="number">2</span>高<span class="number">3</span>，又机缘巧合分到<span class="number">4</span>班，然后就一直到了毕业。</span><br></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">convertNum</span>():</span><br><span class="line">    filePath = <span class="string">r&#x27;D:\code2022\auto-work\test3\txt\10.txt&#x27;</span></span><br><span class="line">    f = <span class="built_in">open</span>(filePath,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    newlines = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        newline = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(line)):</span><br><span class="line">            c = line[i]</span><br><span class="line">            <span class="keyword">if</span> c == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;零&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;一&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;二&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;三&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;四&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;五&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;六&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;七&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;八&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                c = <span class="string">&#x27;九&#x27;</span></span><br><span class="line">            newline = newline + c </span><br><span class="line">        newlines.append(newline)</span><br><span class="line">    f.close()</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">r&#x27;D:\code2022\auto-work\test3\txt\11.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    f.writelines(newlines)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">convertNum()</span><br></pre></td></tr></table></figure><p>解读代码：</p><p>用<code>utf-8</code>编码打开文件，最外层<code>for</code>循环打印出每行形式，每一行都是一个列表。内层<code>for</code>循环，循环每一个列表中每一个字，如果碰到（0-9）就转换成相对应的汉字。保存到newlines列表中。关闭文件。创建一个新文件<code>11.txt</code>把处理后的列表写入<code>11.txt</code>中。</p><h3 id="shelve模块"><a href="#shelve模块" class="headerlink" title="shelve模块"></a>shelve模块</h3><p>windows 保存成三个新文件 <code>.bak .dat .dir</code></p><p>mac&#x2F;Linux 保存成一个新文件 <code>.db</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line">shelfFile = shelve.<span class="built_in">open</span>(<span class="string">r&#x27;D:\code2022\auto-work\test3\txt\shelve.txt&#x27;</span>)</span><br><span class="line">datas = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;smith&#x27;</span>,<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line">shelfFile[<span class="string">&#x27;userInfo&#x27;</span>] = datas</span><br><span class="line">shelfFile.close()</span><br><span class="line"></span><br><span class="line">shelfFile = shelve.<span class="built_in">open</span>(<span class="string">r&#x27;D:\code2022\auto-work\test3\txt\shelve.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(shelfFile.keys()))</span><br><span class="line"><span class="built_in">print</span>(shelfFile[<span class="string">&#x27;userInfo&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="读写文件总结"><a href="#读写文件总结" class="headerlink" title="读写文件总结"></a>读写文件总结</h3><p>学习<code>os.path</code>的相关内容，绝对路径和相对路径，判断是否存在该路径</p><p>是否是文件或者目录，新建目录，得到该目录下所有文件等。</p><p><code>File</code>对象，纯文本文件的读取方式，<code>open()</code>打开，<code>read()/write()</code>读写，<code>close()</code>关闭</p><p><code>shelve</code>模块将数据保存到硬盘。</p><h3 id="使用python实现大批量文件简繁体转换"><a href="#使用python实现大批量文件简繁体转换" class="headerlink" title="使用python实现大批量文件简繁体转换"></a>使用python实现大批量文件简繁体转换</h3><p>需要先安装<code>zhconv</code>和<code>python-docx</code></p><p><code>ToChs</code>是繁体转换成简体，<code>ToCht</code>是简体转换成繁体</p><p><code>ToChs</code>会把该文件夹下所有的docx文件全部处理成简体，保存为新文件，同理如<code>ToCht</code>.</p><p><strong>无论是繁体转换成简体还是繁体转换成简体，都要把程序放在和文件的同级目录内。支持表格内的文字转换</strong></p><p>原文章：<code>文章.docx</code></p><p>转换后的文章：<code>文章繁体版.docx</code></p><p>简体版同理</p><p><strong>简体转繁体</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简体转繁体</span></span><br><span class="line"><span class="keyword">import</span> zhconv</span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert</span>(<span class="params">text</span>):</span><br><span class="line">    rule = <span class="string">&#x27;zh-hant&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> zhconv.convert(text,rule)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ProcessDocx</span>(<span class="params">docxName</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正在处理&#x27;</span>+docxName)</span><br><span class="line">    obj = Document(docxName)</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> obj.paragraphs:</span><br><span class="line">        p.text = convert(p.text)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> obj.tables:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> t.rows:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> r.cells:</span><br><span class="line">                c.text = convert(c.text)</span><br><span class="line">    <span class="comment"># 文章.docx</span></span><br><span class="line">    <span class="comment"># 文章繁体版.docx</span></span><br><span class="line">    fileName = docxName.split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    newDocxName = fileName[<span class="number">0</span>] + <span class="string">&quot;繁体版&quot;</span> + <span class="string">&#x27;.&#x27;</span> + fileName[<span class="number">1</span>]</span><br><span class="line">    obj.save(newDocxName)</span><br><span class="line">    <span class="built_in">print</span>(docxName+<span class="string">&#x27;已经处理完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        <span class="keyword">if</span> file.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>] == <span class="string">&#x27;docx&#x27;</span>:</span><br><span class="line">            ProcessDocx(file)</span><br></pre></td></tr></table></figure><p><strong>繁体转简体</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 繁体转换成简体</span></span><br><span class="line"><span class="keyword">import</span> zhconv</span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert</span>(<span class="params">text</span>):</span><br><span class="line">    rule = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> zhconv.convert(text,rule)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ProcessDocx</span>(<span class="params">docxName</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正在处理&#x27;</span>+docxName)</span><br><span class="line">    obj = Document(docxName)</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> obj.paragraphs:</span><br><span class="line">        p.text = convert(p.text)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> obj.tables:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> t.rows:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> r.cells:</span><br><span class="line">                c.text = convert(c.text)</span><br><span class="line">    <span class="comment"># 文章.docx</span></span><br><span class="line">    <span class="comment"># 文章简体版.docx</span></span><br><span class="line">    fileName = docxName.split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    newDocxName = fileName[<span class="number">0</span>] + <span class="string">&quot;简体版&quot;</span> + <span class="string">&#x27;.&#x27;</span> + fileName[<span class="number">1</span>]</span><br><span class="line">    obj.save(newDocxName)</span><br><span class="line">    <span class="built_in">print</span>(docxName+<span class="string">&#x27;已经处理完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        <span class="keyword">if</span> file.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>] == <span class="string">&#x27;docx&#x27;</span>:</span><br><span class="line">            ProcessDocx(file)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动化办公之excel</title>
      <link href="/2022/07/11/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC%E4%B9%8Bexcel/"/>
      <url>/2022/07/11/python%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC%E4%B9%8Bexcel/</url>
      
        <content type="html"><![CDATA[<h3 id="安装第三方模块openpyxl"><a href="#安装第三方模块openpyxl" class="headerlink" title="安装第三方模块openpyxl"></a>安装第三方模块<code>openpyxl</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install openpyxl</span><br></pre></td></tr></table></figure><p>关于<code>openpyxl</code>模块的<a href="https://openpyxl.readthedocs.io/en/stable/usage.html#read-an-existing-workbook">参考文档</a>.</p><h3 id="使用python操作excel表格，代码如下："><a href="#使用python操作excel表格，代码如下：" class="headerlink" title="使用python操作excel表格，代码如下："></a>使用<code>python</code>操作excel表格，代码如下：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引入模块</span></span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建工作簿并创建一个工作表</span></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以自定义工作表名字，默认Sheet</span></span><br><span class="line">ws.title = <span class="string">&#x27;工作表1&#x27;</span></span><br><span class="line"><span class="comment"># A1 单元格写入 520</span></span><br><span class="line">ws[<span class="string">&#x27;A1&#x27;</span>] = <span class="number">520</span></span><br><span class="line"><span class="comment"># A2 单元格写入一个列表</span></span><br><span class="line">ws.append([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="comment"># A3 单元格写入当前时间</span></span><br><span class="line">ws[<span class="string">&#x27;A3&#x27;</span>] = datetime.datetime.now()</span><br><span class="line"><span class="comment"># 保存为 demo.xlsx</span></span><br><span class="line">wb.save(<span class="string">&#x27;demo.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="打开excel表格"><a href="#打开excel表格" class="headerlink" title="打开excel表格"></a>打开excel表格</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line">wb = openpyxl.load_workbook(<span class="string">r&#x27;D:\code2022\auto-work\demo.xlsx&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(wb)) <span class="comment"># &lt;class &#x27;openpyxl.workbook.workbook.Workbook&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查看工作表"><a href="#查看工作表" class="headerlink" title="查看工作表"></a>查看工作表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(wb.sheetnames) <span class="comment"># [&#x27;Sheet&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="创建新的工作表并打印当前所有工作表"><a href="#创建新的工作表并打印当前所有工作表" class="headerlink" title="创建新的工作表并打印当前所有工作表"></a>创建新的工作表并打印当前所有工作表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nws = wb.create_chartsheet(title = <span class="string">&#x27;demo&#x27;</span>, index = <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(wb.sheetnames) <span class="comment"># [&#x27;demo&#x27;, &#x27;Sheet&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="删除一个工作表"><a href="#删除一个工作表" class="headerlink" title="删除一个工作表"></a>删除一个工作表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先查看所有工作表</span></span><br><span class="line"><span class="built_in">print</span>(wb.sheetnames) <span class="comment"># [&#x27;demo&#x27;, &#x27;Sheet&#x27;]</span></span><br><span class="line"><span class="comment"># 删除 demo 工作表</span></span><br><span class="line">rem = wb.remove(wb[<span class="string">&#x27;demo&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(wb.sheetnames) <span class="comment"># [&#x27;Sheet&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="定位单元格"><a href="#定位单元格" class="headerlink" title="定位单元格"></a>定位单元格</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ws = wb.active</span><br><span class="line">c = ws[<span class="string">&#x27;A1&#x27;</span>]</span><br><span class="line"><span class="comment"># 打印行</span></span><br><span class="line"><span class="built_in">print</span>(c.row) <span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 打印列</span></span><br><span class="line"><span class="built_in">print</span>(c.column) <span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 打印当前坐标</span></span><br><span class="line"><span class="built_in">print</span>(c.coordinate) <span class="comment"># A1</span></span><br><span class="line"><span class="comment"># 输出 A1 单元格值</span></span><br><span class="line"><span class="built_in">print</span>(ws[<span class="string">&#x27;A1&#x27;</span>].value) <span class="comment"># 520</span></span><br><span class="line"><span class="comment"># 输出 A1 单元格的值</span></span><br><span class="line"><span class="built_in">print</span>(c.value) <span class="comment"># 520</span></span><br><span class="line"><span class="comment"># 当前位置（A1）向下移动两个单元格，列不变。</span></span><br><span class="line">d = c.offset(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 输出当前坐标</span></span><br><span class="line"><span class="built_in">print</span>(d.coordinate) <span class="comment"># A3 </span></span><br><span class="line"><span class="comment"># 输出当前坐标所对应的值</span></span><br><span class="line"><span class="built_in">print</span>(d.value)</span><br></pre></td></tr></table></figure><h3 id="访问多个工作表"><a href="#访问多个工作表" class="headerlink" title="访问多个工作表"></a>访问多个工作表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从（1，1） 到（4，2）范围内所有的第一列的内容</span></span><br><span class="line"><span class="keyword">for</span> each_row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">1</span>, min_col=<span class="number">1</span>, max_row=<span class="number">4</span>, max_col=<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(each_row[<span class="number">0</span>].value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出从A1 到 C4 范围内的内容</span></span><br><span class="line"><span class="keyword">for</span> each_item <span class="keyword">in</span> ws[<span class="string">&#x27;A1&#x27;</span>:<span class="string">&#x27;C4&#x27;</span>]:</span><br><span class="line">    <span class="keyword">for</span> each_cell <span class="keyword">in</span> each_item:</span><br><span class="line">        <span class="built_in">print</span>(each_cell.value, end = <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="拷贝工作表"><a href="#拷贝工作表" class="headerlink" title="拷贝工作表"></a>拷贝工作表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ws = wb.active</span><br><span class="line">new = wb.copy_worksheet(ws)</span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\demo.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="个性化工作表"><a href="#个性化工作表" class="headerlink" title="个性化工作表"></a>个性化工作表</h3><p>更改默认工作表颜色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line">ws1 = wb.create_sheet(title= <span class="string">&#x27;001&#x27;</span>)</span><br><span class="line">ws2 = wb.create_sheet(title= <span class="string">&#x27;003&#x27;</span>)</span><br><span class="line">ws3 = wb.create_sheet(title= <span class="string">&#x27;005&#x27;</span>)</span><br><span class="line">ws4 = wb.create_sheet(title= <span class="string">&#x27;007&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ws1.sheet_properties.tabColor = <span class="string">&quot;FF0000&quot;</span></span><br><span class="line">ws2.sheet_properties.tabColor = <span class="string">&quot;00FF00&quot;</span></span><br><span class="line">ws3.sheet_properties.tabColor = <span class="string">&quot;0000FF&quot;</span></span><br><span class="line">ws4.sheet_properties.tabColor = <span class="string">&quot;880088&quot;</span></span><br><span class="line"></span><br><span class="line">wb.save(<span class="string">r&quot;D:\code2022\auto-work\工作表变颜色.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="调整行高和列宽"><a href="#调整行高和列宽" class="headerlink" title="调整行高和列宽"></a>调整行高和列宽</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ws1.row_dimensions[<span class="number">2</span>].height = <span class="number">100</span></span><br><span class="line">ws1.column_dimensions[<span class="string">&#x27;C&#x27;</span>].width = <span class="number">50</span></span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\工作表变颜色.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="合并和拆分单元格"><a href="#合并和拆分单元格" class="headerlink" title="合并和拆分单元格"></a>合并和拆分单元格</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并从 A1 到 D2 范围内的所有单元格</span></span><br><span class="line">ws2.merge_cells(<span class="string">&#x27;A1:D2&#x27;</span>)</span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\工作表变颜色.xlsx&#x27;</span>)</span><br><span class="line"><span class="comment"># 拆分单元格,要和合并的单元格范围一致</span></span><br><span class="line">ws2.unmerge_cells = <span class="literal">None</span></span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\工作表变颜色.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="冻结窗口"><a href="#冻结窗口" class="headerlink" title="冻结窗口"></a>冻结窗口</h3><p>指的是无论横向还是纵向滚动单元格，最左侧和最上侧单元格不会跟随滚动而变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 冻结窗口</span></span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line">wb = openpyxl.load_wordbook(<span class="string">r&#x27;D:\code2022\auto-work\demo.xlsx&#x27;</span>)</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.freeze_panes = <span class="string">&#x27;B8&#x27;</span></span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\demo.xlsx&#x27;</span>)</span><br><span class="line"><span class="comment"># 解冻窗口</span></span><br><span class="line">ws.freeze_panes = <span class="literal">None</span></span><br><span class="line">wb.save(<span class="string">r&#x27;D:\code2022\auto-work\demo.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> python自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django</title>
      <link href="/2022/07/09/Django/"/>
      <url>/2022/07/09/Django/</url>
      
        <content type="html"><![CDATA[<h3 id="安装及查看版本"><a href="#安装及查看版本" class="headerlink" title="安装及查看版本"></a>安装及查看版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Django==<span class="number">4.0</span><span class="number">.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入python</span></span><br><span class="line">python</span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line"><span class="built_in">print</span>(django.get_version())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>windows安装路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Lib\site-packages\django</span><br></pre></td></tr></table></figure><h3 id="创建第一个django-项目"><a href="#创建第一个django-项目" class="headerlink" title="创建第一个django 项目"></a>创建第一个django 项目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个文件夹</span></span><br><span class="line">E:\code2022\django\demo</span><br><span class="line"><span class="comment"># 进入文件夹 </span></span><br><span class="line">cd E:\code2022\django\demo</span><br><span class="line"><span class="comment"># 创建项目 mysite 是项目名称</span></span><br><span class="line">django-admin.exe startproject mysite</span><br><span class="line"><span class="comment"># 进入到mysite 然后启动项目</span></span><br><span class="line">cd mysite</span><br><span class="line">python manage.py runserver</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">July 08, 2022 - 15:34:30</span></span><br><span class="line"><span class="string">Django version 4.0.6, using settings &#x27;mysite.settings&#x27;</span></span><br><span class="line"><span class="string">Starting development server at http://127.0.0.1:8000/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 访问：http://127.0.0.1:8000/ 出现网页，项目启动成功。</span></span><br></pre></td></tr></table></figure><p>注意：启动项目可以指定端口，不指定默认是8000</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">8002</span></span><br></pre></td></tr></table></figure><p>创建网页文件<code>views.py</code></p><p><strong>在mysite文件夹内部创建</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">requets</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello world! &quot;</span>)</span><br></pre></td></tr></table></figure><p>修改url路径</p><p>编辑<code>urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;hello/&#x27;</span>, views.hello),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>测试访问：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/hello/</span><br></pre></td></tr></table></figure><p>访问过程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">浏览器访问：http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/hello/ -&gt; 先到urls.py中hello路径对应的页面 views.hello-&gt;</span><br><span class="line">        然后执行views.py中定义的hello函数-&gt;最后把结果返回给浏览器。</span><br></pre></td></tr></table></figure><p>创建第二个项目<code>mysite2</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径  E:\code2022\django\demo</span></span><br><span class="line">django-admin.exe startproject mysite2</span><br></pre></td></tr></table></figure><p>创建和<code>mysite2</code>同级的文件夹<code>templates</code>并在其内部创建<code>mytemp.html</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径  E:\code2022\django\demo\mysite2 注意要和mysite2 内部的mysite2同级。</span></span><br><span class="line"><span class="comment"># mytemp.html 内容如下</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123; hello &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>修改<code>E:\code2022\django\demo\mysite2\mysite2\settings.py</code>文件内容</p><p>找到刚刚创建的<code>templates</code>文件夹路径，修改下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR,<span class="string">&#x27;templates&#x27;</span>)],</span><br><span class="line">        </span><br><span class="line">在第一行引入os模块</span><br><span class="line">        <span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>解释<code>os.path.john(BASE_DIR,&#39;templates&#39;)</code></p><p>引入<code>os</code>模块，将<code>BASE_DIR</code>(项目绝对路径)和<code>templates</code>做路径拼接。拼接后的结果是：<code>E:\code2022\django\demo\mysite2\templates</code></p><p>在<code>E:\code2022\django\demo\mysite2\mysite2</code>中创建<code>views.py</code>文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mytemp</span>(<span class="params">request</span>):</span><br><span class="line"></span><br><span class="line">    context          = &#123;&#125;</span><br><span class="line">    context[<span class="string">&#x27;hello&#x27;</span>] = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;mytemp.html&#x27;</span>, context)</span><br></pre></td></tr></table></figure><p>修改url（<code>E:\code2022\django\demo\mysite2\mysite2\urls.py</code>）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;mytemp/&#x27;</span>, views.mytemp),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>进入项目所在文件夹，在cmd中启动项目指定端口8002</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">8002</span></span><br></pre></td></tr></table></figure><p>测试访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8002</span>/mytemp/</span><br></pre></td></tr></table></figure><p>访问过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8002</span>/mytemp</span><br><span class="line">    -&gt;urls.py中寻找/mytemp 它的映射为： views.mytemp</span><br><span class="line">    -&gt; mytemp函数在views.py中定义</span><br><span class="line">    -&gt;mytemp函数还定义了context空字典，传入键（hello）和值(Hello World!) 。键将在主页（mytemp.html）中调用。</span><br><span class="line">    -&gt; h1标签中调用键（hello）</span><br></pre></td></tr></table></figure><h3 id="django模板标签"><a href="#django模板标签" class="headerlink" title="django模板标签"></a>django模板标签</h3><p><a href="https://www.cnblogs.com/emanlee/p/15853546.html">链接</a></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h3><p>templates 中的 mytemp.html 中，可以用 . 索引下标取出对应的元素。</p><p><code>D:\code2022\Django\demo\mysite2\mysite2\urls.py</code>中修改路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;mytemp/&#x27;</span>, views.mydef),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>新建<code>D:\code2022\Django\demo\mysite2\mysite2\views.py</code>文件，定义<code>mydef</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mydef</span>(<span class="params">request</span>):</span><br><span class="line">    views_list = [<span class="string">&quot;简单示例demo1&quot;</span>,<span class="string">&quot;简单示例demo2&quot;</span>,<span class="string">&quot;简单示例demo3&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;mytemp.html&#x27;</span>, &#123;<span class="string">&quot;views_list&quot;</span>: views_list&#125;)</span><br></pre></td></tr></table></figure><p>创建模板文件夹和主页文件</p><p><code>D:\code2022\Django\demo\mysite2\templates</code>和<code>D:\code2022\Django\demo\mysite2\templates\mytemp.html</code></p><p><strong>Tip</strong>:可以用<code>!+Tab</code>键快速创建html代码，然后再添加内容。s</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mytemp.html</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; views_list &#125;&#125;&lt;/p&gt; <span class="comment"># 取出整个列表</span></span><br><span class="line">&lt;p&gt;&#123;&#123; views_list<span class="number">.0</span> &#125;&#125;&lt;/p&gt; <span class="comment"># 取出列表的第一个元素</span></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>设置主页文件(<code>mytemp.html</code>)路径</p><p><code>D:\code2022\Django\demo\mysite2\mysite2\settings.py</code></p><p>找到关于<code>templates</code>文件夹的配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR,<span class="string">&#x27;templates&#x27;</span>)],</span><br></pre></td></tr></table></figure><p>启动项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\manage.py runserver <span class="number">8003</span></span><br></pre></td></tr></table></figure><p>访问<code>127.0.0.1:8003/mytemp</code>测试。</p><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><p><code>D:\code2022\Django\demo\mysite3\mysite3\urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;mytemp/&#x27;</span>, views.mydef),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>D:\code2022\Django\demo\mysite3\mysite3\views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mydef</span>(<span class="params">request</span>):</span><br><span class="line">    views_dict = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;简单demo演示&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&#x27;mytemp.html&#x27;</span>, &#123;<span class="string">&#x27;views_dict&#x27;</span>: views_dict&#125;)</span><br></pre></td></tr></table></figure><p><code>D:\code2022\Django\demo\mysite3\templates\mytemp.html</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; views_dict &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; views_dict.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><code>D:\code2022\Django\demo\mysite3\mysite3\settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR,<span class="string">&#x27;templates&#x27;</span>)],</span><br></pre></td></tr></table></figure><p>启动项目并测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python .\manage.py runserver <span class="number">8004</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8004</span>/mytemp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生成器-可迭代对象-迭代器-迭代</title>
      <link href="/2022/07/07/%E7%94%9F%E6%88%90%E5%99%A8-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1-%E8%BF%AD%E4%BB%A3%E5%99%A8-%E8%BF%AD%E4%BB%A3/"/>
      <url>/2022/07/07/%E7%94%9F%E6%88%90%E5%99%A8-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1-%E8%BF%AD%E4%BB%A3%E5%99%A8-%E8%BF%AD%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="可迭代对象（Iterable）"><a href="#可迭代对象（Iterable）" class="headerlink" title="可迭代对象（Iterable）"></a>可迭代对象（Iterable）</h2><p>python中任意对象，只要它定义了可以返回一个迭代器的<code>__iter__</code>方法，或者定义了可以支持下标索引的<code>__getitem__</code>方法，那么他就是一个可迭代对象。可迭代对象就是能够提供迭代器的任意对象。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 = &quot;hello&quot;</span><br><span class="line">print(str1.__iter__()) # &lt;str_iterator object at 0x0000022BDAF5A040&gt;</span><br></pre></td></tr></table></figure><h2 id="迭代器-Iterator"><a href="#迭代器-Iterator" class="headerlink" title="迭代器(Iterator)"></a>迭代器(Iterator)</h2><p>任意对象，只要定义了<code>next</code>（python2）或者<code>__next__</code>方法他就是一个迭代器。</p><h2 id="迭代-Iteration"><a href="#迭代-Iteration" class="headerlink" title="迭代(Iteration)"></a>迭代(Iteration)</h2><p>从某个地方（比如一个列表）取出一个元素的过程。当我们使用一个循环来遍历某个东西时，这个过程本身叫迭代。</p><h2 id="生成器-Generators"><a href="#生成器-Generators" class="headerlink" title="生成器(Generators)"></a>生成器(Generators)</h2><p><strong>生成器也是一种迭代器，但是你只能对其迭代一次</strong>。这是因为他们并没有把所有的值都存在内存中，而是在运行时生成值。大多数时候生成器是以函数是实现的。然而，它们并不返回一个值，而是<code>yield</code>(暂且译作“生出”)一个值。</p><p>Python内置函数：<code>next()</code>。它允许我们获取一个序列的下一个元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generator_function</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line"></span><br><span class="line">gen = generator_function()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(gen))</span><br><span class="line"><span class="comment"># Output: 0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(gen))</span><br><span class="line"><span class="comment"># Output: 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(gen))</span><br><span class="line"><span class="comment"># Output: 2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(gen))</span><br><span class="line"><span class="comment"># Output: Traceback (most recent call last):</span></span><br><span class="line"><span class="comment">#            File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="comment">#         StopIteration</span></span><br></pre></td></tr></table></figure><p>在<code>yield</code>掉所有的值后，<code>next()</code>触发了一个<code>StopIteration</code>的异常。基本上这个异常告诉我们，所有的值都已经被<code>yield</code>完了。</p><p>为什么我们在使用<code>for</code>循环时没有这个异常呢?<code>for</code>循环会自动捕捉到这个异常并停止调用<code>next()</code>。</p><p>Python中一些内置数据类型也支持迭代。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">my_string = <span class="string">&quot;Yasoob&quot;</span></span><br><span class="line"><span class="built_in">next</span>(my_string)</span><br><span class="line"><span class="comment"># Output: Traceback (most recent call last):</span></span><br><span class="line"><span class="comment">#      File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="comment">#    TypeError: str object is not an iterator</span></span><br></pre></td></tr></table></figure><p>这个异常说那个<code>str</code>对象不是一个迭代器。它是一个可迭代对象，而不是一个迭代器。这意味着它支持迭代，但我们不能直接对其进行迭代操作。怎样才能对它实施迭代呢？</p><p>内置函数，<code>iter</code>。它将根据一个可迭代对象返回一个迭代器对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">my_string = <span class="string">&quot;Yasoob&quot;</span></span><br><span class="line">my_iter = <span class="built_in">iter</span>(my_string)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(my_iter))</span><br><span class="line"><span class="comment"># Output: &#x27;Y&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(my_iter)) <span class="comment"># &lt;class &#x27;str_iterator&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><p>装饰器(Decorators)是Python的一个重要部分。简单地说：他们是修改其他函数的功能的函数。</p><h2 id="嵌套函数解析"><a href="#嵌套函数解析" class="headerlink" title="嵌套函数解析"></a>嵌套函数解析</h2><h3 id="从函数中返回函数"><a href="#从函数中返回函数" class="headerlink" title="从函数中返回函数"></a>从函数中返回函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hi</span>(<span class="params">name=<span class="string">&quot;yasoob&quot;</span></span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">greet</span>():</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;now you are in the greet() function&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">welcome</span>():</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;now you are in the welcome() function&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&quot;yasoob&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> greet</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> welcome</span><br><span class="line"></span><br><span class="line">a = hi()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment">#outputs: &lt;function greet at 0x7f2143c01500&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#上面清晰地展示了`a`现在指向到hi()函数中的greet()函数</span></span><br><span class="line"><span class="comment">#现在试试这个</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a())</span><br><span class="line"><span class="comment">#outputs: now you are in the greet() function</span></span><br></pre></td></tr></table></figure><p>解析：</p><p>调用<code>hi</code>函数中创建的<code>greet</code>函数和<code>welcome</code>函数，作为结果输出出来。</p><p>问题：</p><p>在<code>if/else</code>语句中我们返回<code>greet</code>和<code>welcome</code>，而不是<code>greet()</code>和<code>welcome()</code>。为什么那样？这是因为当你把一对小括号放在后面，这个函数就会执行；然而如果你不放括号在它后面，那它可以被到处传递，并且可以赋值给别的变量而不去执行它。</p><p>当我们写下<code>a = hi()</code>，<code>hi()</code>会被执行，而由于<code>name</code>参数默认是<em>yasoob</em>，所以函数<code>greet</code>被返回了。如果我们把语句改为<code>a = hi(name = &quot;ali&quot;)</code>，那么<code>welcome</code>函数将被返回。我们还可以打印出<code>hi()()</code>，这会输出<em>now you are in the greet() function</em>。</p><h3 id="将函数作为参数传递给另一个参数"><a href="#将函数作为参数传递给另一个参数" class="headerlink" title="将函数作为参数传递给另一个参数"></a>将函数作为参数传递给另一个参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hi</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;come from hi()&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I am doing some boring work before executing hi()&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(func())</span><br><span class="line"></span><br><span class="line">hello(hi)</span><br><span class="line">    </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">I am doing some boring work before executing hi()</span></span><br><span class="line"><span class="string">come from hi()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="文件格式判断"><a href="#文件格式判断" class="headerlink" title="文件格式判断"></a>文件格式判断</h3><p>常见的文件头字节码信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://doc.chacuo.net/filehead</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;blue.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    jpgdata = f.read()</span><br><span class="line"><span class="keyword">if</span> jpgdata.startswith(<span class="string">b&#x27;\xff\xd8&#x27;</span>):</span><br><span class="line">    text = <span class="string">u&#x27;This is a jpg file(%d bytes long)\n&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    text = <span class="string">u&#x27;This is not a jpg file(%d bytes long)\n&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> io.<span class="built_in">open</span>(<span class="string">&#x27;summary.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> outf:</span><br><span class="line">    outf.write(text % <span class="built_in">len</span>(jpgdata))</span><br></pre></td></tr></table></figure><p>判断<code>blue.jpg</code>文件是不是<code>jpg</code>格式的文件。将判断结果保存到<code>summary.txt</code>.</p><p>提示：<code>.jpg</code>格式的文件头字节码为<code>ff d8</code>，注意读取<code>blue.jpg</code>文件时，要以字节方式读取。</p><p><code>u</code>以<code>unicode</code>形式存储字符串。</p><h2 id="socket-模块"><a href="#socket-模块" class="headerlink" title="socket 模块"></a>socket 模块</h2><h3 id="udp套接字"><a href="#udp套接字" class="headerlink" title="udp套接字"></a>udp套接字</h3><p>应用层的一种编程方法</p><p>创建套接字：<code>socket()</code></p><p>绑定IP端口: <code>bind()</code></p><p>发送消息： <code>sendto()</code></p><p>接受消息： <code>recvfrom()</code></p><p>关闭套接字： <code>close()</code></p><h4 id="udp-服务端代码："><a href="#udp-服务端代码：" class="headerlink" title="udp 服务端代码："></a>udp 服务端代码：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模块导入</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明服务器IP, 端口</span></span><br><span class="line">ADDR = (<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">8888</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建udp套接字 SOCK_DGRAM 表示选择的时UDP套接字</span></span><br><span class="line">udp_socket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用bind 绑定地址端口</span></span><br><span class="line">udp_socket.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环接受消息</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接收消息 1024 一次能接收的最大字节数</span></span><br><span class="line">    msg, addr = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印消息跟地址 decode() 解码</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Recv:&#x27;</span>, addr,msg.decode())</span><br><span class="line">    <span class="comment"># 回应消息</span></span><br><span class="line">    udp_socket.sendto(<span class="string">&#x27;收到！&#x27;</span>.encode(),addr)</span><br><span class="line">    <span class="comment"># 约定断开通信的</span></span><br><span class="line">    <span class="keyword">if</span> msg == <span class="string">b&#x27;bye&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭套接字</span></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><h4 id="udp客户端代码："><a href="#udp客户端代码：" class="headerlink" title="udp客户端代码："></a>udp客户端代码：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模块导入</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确定服务器的地址 127.0.0.1 跟localhost 默认时本机IP</span></span><br><span class="line"></span><br><span class="line">ADDR = (<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">8888</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建套接字</span></span><br><span class="line">udp_socket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接受消息</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    msg = <span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;:&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送给服务器</span></span><br><span class="line">    udp_socket.sendto(msg.encode(),ADDR)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接受服务器消息</span></span><br><span class="line">    data, addr = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;来自服务器的消息:&#x27;</span>,data.decode())</span><br><span class="line">    <span class="comment"># 终止客户端循环</span></span><br><span class="line">    <span class="keyword">if</span> msg == <span class="string">b&#x27;bye&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><h3 id="TCP编程流程"><a href="#TCP编程流程" class="headerlink" title="TCP编程流程"></a>TCP编程流程</h3><p>创建套接字：<code>socket</code></p><p>绑定地址：<code>bind</code></p><p>设置监听：<code>listen</code></p><p>等待处理连接：<code>accept</code></p><p>发送&#x2F;接收消息：<code>send/recv</code></p><p>关闭连接：<code>close</code></p><p><strong>粘包问题</strong></p><p><strong>产生原因</strong></p><p>为了解决数据传输中的速率不协调问题，操作系统设置了缓冲区</p><p>实际网路工作过程比较复杂，导致消息收发不一致</p><p>tcp以字节流方式进行数据传输，在接收的时候不区分消息边界</p><p><strong>带来问题</strong></p><p>如果发送的消息每次都是独立的，需要接收端去独立解析消息时回带来消息误解问题</p><p><strong>解决方式</strong></p><p>人工设置消息边界</p><p>减缓消息发送速度</p><p><strong>tcp服务端代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">phone = socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="comment">#tcp协议</span></span><br><span class="line"><span class="comment"># phone.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)</span></span><br><span class="line">phone.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>)) <span class="comment">#0-65535</span></span><br><span class="line">phone.listen(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;staring....&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#链接循环</span></span><br><span class="line">    conn, client_addr=phone.accept() <span class="comment">#(conn,client_addr)</span></span><br><span class="line">    <span class="built_in">print</span>(client_addr)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#通信循环</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = conn.recv(<span class="number">1024</span>) <span class="comment">#1024bytes?</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:<span class="keyword">break</span> <span class="comment">#针对的是Linux系统，因为linux不会抛异常。windows会抛异常。</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;客户端信息&#x27;</span>, data)</span><br><span class="line">            conn.send(data.upper())</span><br><span class="line">        <span class="keyword">except</span> ConnectionResetError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    conn.close()</span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p><strong>tcp客户端代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">phone=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">phone.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#通信循环</span></span><br><span class="line">    msg=<span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg: <span class="keyword">continue</span>  <span class="comment">#防止发送空信息</span></span><br><span class="line">    phone.send(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    data = phone.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p><strong>vscode 先运行服务端，再运行客户端。服务端和客户端分两个目录，这样可以同时运行。</strong></p><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><h4 id="文件传输服务端"><a href="#文件传输服务端" class="headerlink" title="文件传输服务端"></a>文件传输服务端</h4><p>1.建立TCP套接字</p><p>2.等待客户端内的连接</p><p>3.接收图片内容</p><p>4.保存图片</p><p>5.终止连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建套接字</span></span><br><span class="line">socket = socket()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定IP</span></span><br><span class="line"></span><br><span class="line">socket.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">8888</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置监听</span></span><br><span class="line">socket.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建connfd</span></span><br><span class="line"></span><br><span class="line">connfd, addr = socket.accept()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收客户端数据</span></span><br><span class="line">data = connfd.recv(<span class="number">1024</span>*<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">file_name = <span class="string">&#x27;%d-%d-%d.jpg&#x27;</span>%time.localtime()[:<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(file_name, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f.write(data)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">connfd.close()</span><br><span class="line">socket.close()</span><br></pre></td></tr></table></figure><h3 id="文件传输客户端"><a href="#文件传输客户端" class="headerlink" title="文件传输客户端"></a>文件传输客户端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.创建套接字</span></span><br><span class="line"><span class="string">2.连接服务端</span></span><br><span class="line"><span class="string">3.读取文件内容</span></span><br><span class="line"><span class="string">4.发送文件内容</span></span><br><span class="line"><span class="string">5.关闭连接</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建套接字</span></span><br><span class="line">socket = socket()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务端</span></span><br><span class="line">socket.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">8888</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入文件内容</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;2.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送内容</span></span><br><span class="line">socket.send(data)</span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">socket.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-元组</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%85%83%E7%BB%84/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><h3 id="元组的定义"><a href="#元组的定义" class="headerlink" title="元组的定义"></a>元组的定义</h3><p><code>tuple</code>（元组）与列表类似，不同之处在于元组的元素不能修改</p><p>元组中包含列表项，可以修改元组值（间接修改列表）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = ([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">520</span> </span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># ([520, 2], [3, 4])</span></span><br></pre></td></tr></table></figure><p>元组 表示多个元素组成的序列</p><p>元组 在<code>python</code>开发中，有特定的应用场景</p><p>用于存储 一串信息，数据之间使用 <code>,</code>分隔</p><p>元组用<code>()</code>定义</p><p>元组的索引从<code>0</code>开始</p><p>索引就是数据在元组中的位置编号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = (<span class="string">&quot;zhangsan&quot;</span>, <span class="number">18</span>, <span class="number">1.75</span>)</span><br></pre></td></tr></table></figure><p>创建空元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple()</span><br></pre></td></tr></table></figure><p>元组中只包含一个元素时，需要在元素后面添加逗号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple(<span class="number">50</span>, )</span><br></pre></td></tr></table></figure><p>​                                                    元组的索引是从0开始的</p><p>​                                                    len(元组)获取元组的长度n+1</p><p>​                                                    元组.count(数据) 数据在元组中出现的次数</p><p>元组[索引]    从列表中取值</p><p>元组.index(数据)     获得数据第一次出现的索引</p><h2 id="元组的常用操作"><a href="#元组的常用操作" class="headerlink" title="元组的常用操作"></a>元组的常用操作</h2><p>在<code>ipython3</code>中定义一个元组，例如：<code>info=()</code></p><p>输入<code>info.</code>按下<code>Tab</code>键，<code>ipython</code>会提示 元组 能够使用的函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.countinfo.index</span><br></pre></td></tr></table></figure><p>有关元组的常用操作 可以参照上图练习</p><p><strong>注意：元组只能查，增删改都不可以。</strong></p><h3 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h3><p>取值 就是从 元组中获取存储在指定位置的数据</p><p>遍历 就是从头到尾依次 从元组中获取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  for 循环内部使用的变量 in 元组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    循环内部针对元组元素进行操作</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><p>在<code>python</code>中，可以使用<code>for</code>循环遍历所有非数字类型的变量： 列表、元组、字典以及字符串</p><p>提示：在实际开发中，除非能够确认元组中数据类型，否则针对元组的循环遍历需求并不是很多。</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>尽管可以使用<code>for  in </code>遍历元组</p><p>但是在开发中，更多的应用场景是：</p><p>函数的 参数和返回值，一个函数可以接收 任意多个参数，或者 依次返回多个数据</p><p>有关 函数的参数 和返回值，在后续 函数高级 给大家介绍</p><p>格式字符串，格式化字符串后面的<code>()</code>本质尚就是一个元组</p><p>让列表不可以被修改，以保护数据安全。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">info = (<span class="string">&quot;zhangsan&quot;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%s 的年龄是 %d&quot;</span> % info)</span><br></pre></td></tr></table></figure><h3 id="元组和列表之间的转换"><a href="#元组和列表之间的转换" class="headerlink" title="元组和列表之间的转换"></a>元组和列表之间的转换</h3><p>使用<code>list</code>函数可以把元组转换成列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>(元组)</span><br></pre></td></tr></table></figure><p>使用<code>tuple</code>函数可以把列表转换成元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span>(列表)</span><br></pre></td></tr></table></figure><h3 id="元组打包和解包"><a href="#元组打包和解包" class="headerlink" title="元组打包和解包"></a>元组打包和解包</h3><p>打包：多个元素在一个元组内</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">123</span>, <span class="string">&quot;FishC&quot;</span>, <span class="number">3.14</span>)</span><br></pre></td></tr></table></figure><p>解包：将多个元素赋值给变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x,y,z = t</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br><span class="line"><span class="comment"># =左边变量数要和=右边序列中字符数量一致</span></span><br><span class="line"><span class="comment"># 若不等 a,*b = t</span></span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># 123</span></span><br><span class="line"><span class="built_in">print</span>(b) <span class="comment"># [&#x27;FishC&#x27;, 3.14]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-函数</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%87%BD%E6%95%B0/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="函数基础"><a href="#函数基础" class="headerlink" title="函数基础"></a>函数基础</h2><h3 id="函数基本使用"><a href="#函数基本使用" class="headerlink" title="函数基本使用"></a>函数基本使用</h3><h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><p>定义函数格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">函数名</span>():</span><br><span class="line">    </span><br><span class="line">    函数封装的代码</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>1.<code>def</code>是英文<code>define</code>的缩写</p><p>2.函数名称 应该能够表达 函数封装代码的功能，方便后续的调用</p><ol start="3"><li>函数名称 的名命应该 符合标识符的名命规则</li><li>可以由 字母、下划线和数字组成</li><li>不能以数字开头</li><li>不能与关键字重名</li></ol><h4 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h4><p>调用函数很简单，通过<code>函数名()</code>即可完成对函数的调用。</p><h3 id="编写第一个函数"><a href="#编写第一个函数" class="headerlink" title="编写第一个函数"></a>编写第一个函数</h3><p>需求：</p><p>1.编写一个打招呼<code>say_hello</code>的函数，封装三行打招呼代码</p><p>2.在函数下方调用打招呼代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;小明&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解释器知道这里定义了一个函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say_hello</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello 1&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello 2&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello 3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只有在调用函数时，之前定义的函数才会被执行</span></span><br><span class="line"><span class="comment"># 函数执行完成之后，会重新回到之前的程序中，继续执行后续的代码</span></span><br><span class="line">say_hello()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>用 单步执行 F8 和 F7 观察以上代码的执行过程</p><p>定义好函数后，只表示这个函数封装了一段代码而已</p><p>如果不主动调用函数，函数是不会主动执行的</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>能否将 函数调用 放在 函数定义的上方？</p><p>不能</p><p>因为在 使用函数名调用之前，必须要保证 <code>python</code>已经知道函数的存在</p><p>否则控制台会提示<code>NameError: name &#39;say_hello&#39; is not defined</code>(名称错误：say_hello这个名字没有被定义)</p><h3 id="pycharm-的调试工具"><a href="#pycharm-的调试工具" class="headerlink" title="pycharm 的调试工具"></a>pycharm 的调试工具</h3><p>F8 step over 可以单步执行代码，会把函数调用看作是一行代码直接执行</p><p>F7 step into 可以单步执行代码, 如果是函数，会进入函数内部。</p><h2 id="函数的文档注释"><a href="#函数的文档注释" class="headerlink" title="函数的文档注释"></a>函数的文档注释</h2><p>在开发中，如果希望给函数添加注释，应该在 定义函数 的下方，使用 连续的三对引号</p><p>在 连续的三对引号 之间编写对函数的说明文字</p><p>在函数调用位置，使用快捷键 <code>ctrl + Q</code>可以查看函数说明信息</p><p>注意： 因为 函数体行对比较独立，函数定义的上方，应该和其他代码（包括注释）保留两个空行。</p><h3 id="函数参数的使用"><a href="#函数参数的使用" class="headerlink" title="函数参数的使用"></a>函数参数的使用</h3><p>在函数名的后面的小括号内部填写 参数</p><p>多个参数之间使用<code>,</code>分隔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_2_num</span>(<span class="params">num1, num2</span>):</span><br><span class="line">    res = num1 + num2 </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d + %d = %d&quot;</span> % (num1, num2, res))</span><br><span class="line"></span><br><span class="line">sum_2_num(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">sum_2_num() <span class="comment"># 不传参时会报错。TypeError: sum_2_num() missing 2 required positional arguments: &#x27;num1&#x27; and &#x27;num2&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参数的作用"><a href="#参数的作用" class="headerlink" title="参数的作用"></a>参数的作用</h3><p>函数， 把 具有独立功能的代码块组织为一个小模块，在需要的时候 调用。</p><p>函数的参数，增加函数的 通用性，针对 相同的数据处理逻辑，能够使用更多的数据</p><p>1.在函数<strong>内部</strong>，把参数当作 <strong>变量</strong> 使用，进行需要的数据处理</p><p>2.函数调用时，按照函数定义的<strong>参数顺序</strong>， 把 <strong>希望在函数内部处理的数据，通过 参数</strong>传递。</p><h3 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h3><p>在程序开发中，有时候，会希望 <strong>一个函数执行结束后，告诉调用者一个结果</strong>，以便调用者针对具体的结果做后续的处理。</p><p><strong>返回值</strong> 是函数 <strong>完成工作</strong>后，<strong>最后</strong> 给调用者的一个结果。</p><p>在函数中使用<code>return</code>关键字可以返回结果。</p><p>调用函数一方，可以<strong>使用变量</strong>来<strong>接收</strong>函数的返回结果。</p><p>注意：<code>return</code>表示返回，后续代码都不会被执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_2_num</span>(<span class="params">num1, num2</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;对两个数字求和&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> num1 + num2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数，并使用 res 变量接收计算结果</span></span><br><span class="line">res = sum_2_num(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;计算结果是 %d&quot;</span> % res) <span class="comment"># 计算结果是 30</span></span><br></pre></td></tr></table></figure><h4 id="多个返回值"><a href="#多个返回值" class="headerlink" title="多个返回值"></a>多个返回值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">divid</span>(<span class="params">a,b</span>):</span><br><span class="line">    shang = a//b</span><br><span class="line">    yushu = a%b</span><br><span class="line">    <span class="keyword">return</span> shang,yushu</span><br><span class="line">sh,yu = divid(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;商: %d, 余数：%d&quot;</span>%(sh,yu))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">商: <span class="number">2</span>, 余数：<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="函数的嵌套调用"><a href="#函数的嵌套调用" class="headerlink" title="函数的嵌套调用"></a>函数的嵌套调用</h3><p>一个函数里面又调用了另外一个函数<code>test1</code></p><p>如果函数<code>test2</code>中，调用了另外一个函数<code>test1</code></p><p>那么执行到调用<code>test1</code>函数时，会先把函数<code>test1</code>中的任务都执行完</p><p>才会回到<code>test2</code>中调用函数<code>test1</code>的位置，继续执行后续的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test1</span>():</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;test 1&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test2</span>():</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;_&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;test 2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    test1()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;_&quot;</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><p>结果如下</p><p>简单说就是按从上到下的顺序执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__________________________________________________</span><br><span class="line">test <span class="number">2</span></span><br><span class="line">**************************************************</span><br><span class="line">test <span class="number">1</span></span><br><span class="line">**************************************************</span><br><span class="line">__________________________________________________</span><br></pre></td></tr></table></figure><h3 id="函数嵌套的演练–打印分割线"><a href="#函数嵌套的演练–打印分割线" class="headerlink" title="函数嵌套的演练–打印分割线"></a>函数嵌套的演练–打印分割线</h3><p>体会一下工作中 需求是多变的</p><p>需求1 </p><p>定义一个<code>print_line</code>函数能够打印<code>*</code>组成的 一条分割线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_line</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print_line()</span></span><br></pre></td></tr></table></figure><p>需求2</p><p>定义一个可以打印任意字符的分割线函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_line_1</span>(<span class="params">char</span>):</span><br><span class="line">    <span class="built_in">print</span>(char * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print_line_1(&quot;_&quot;)</span></span><br></pre></td></tr></table></figure><p>需求3</p><p>定义一个函数能够打印任意重复次数的分割线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_line_2</span>(<span class="params">char, num</span>):</span><br><span class="line">    <span class="built_in">print</span>(char * num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print_line_2(&quot;_&quot;, 50)</span></span><br></pre></td></tr></table></figure><p>需求4</p><p>定义一个函数能够打印5行分割线 分割线要求要符合需求3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_line_3</span>(<span class="params">char, num</span>):</span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> row &lt; <span class="number">5</span>:</span><br><span class="line">        print_line_2(char, num)</span><br><span class="line">        row += <span class="number">1</span></span><br><span class="line">print_line_3(<span class="string">&#x27;*&#x27;</span>, <span class="number">30</span>)</span><br></pre></td></tr></table></figure><h3 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h3><p><strong>全局变量和局部变量相同名字</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test1</span>():</span><br><span class="line">    a = <span class="number">300</span> <span class="comment"># 局部变量优先使用</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest1---------修改前: a= %d&quot;</span>%a)</span><br><span class="line">    a = <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest1---------修改后: a= %d&quot;</span>%a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest2---------a= %d&quot;</span>%a) <span class="comment"># 没有局部变量，默认使用全局变量</span></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">teest1---------修改前: a= <span class="number">300</span></span><br><span class="line">teest1---------修改后: a= <span class="number">200</span></span><br><span class="line">teest2---------a= <span class="number">100</span></span><br></pre></td></tr></table></figure><p><strong>在函数中修改全局变量</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test1</span>():</span><br><span class="line">    <span class="keyword">global</span> a <span class="comment"># 声明全局变量在函数中的标识符</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest1---------修改前: a= %d&quot;</span>%a)</span><br><span class="line">    a = <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest1---------修改后: a= %d&quot;</span>%a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;teest2---------a= %d&quot;</span>%a) <span class="comment"># 没有局部变量，默认使用全局变量</span></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">teest1---------修改前: a= <span class="number">100</span></span><br><span class="line">teest1---------修改后: a= <span class="number">200</span></span><br><span class="line">teest2---------a= <span class="number">200</span></span><br></pre></td></tr></table></figure><h2 id="使用模块中的函数"><a href="#使用模块中的函数" class="headerlink" title="使用模块中的函数"></a>使用模块中的函数</h2><p>模块是python程序架构的一个核心概念</p><p>模块好比是工具包，要想使用这个工具包中的工具，就需要 导入<strong>import</strong> 这个模块</p><p>每一个以拓展名<code>py</code>结尾 的python源代码都是一个模块</p><p>在模块中定义的 <strong>全局变量</strong>、 <strong>函数</strong> 都是模块额能够提供给外界直接使用的工具</p><h3 id="第一个模块使用"><a href="#第一个模块使用" class="headerlink" title="第一个模块使用"></a>第一个模块使用</h3><p><strong>步骤</strong></p><p>新建<code>mypython模块.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;mypython模块&quot;</span></span><br></pre></td></tr></table></figure><p>创建另一个文件<code>imp_mypython模块.py</code>来引入模块<code>mypython模块.py</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mypython模块</span><br><span class="line"><span class="built_in">print</span>(mypython模块.name)</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypython模块</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>可以在一个python文件中 定义变量 或者函数</p><p>然后在另一个文件中使用<code>import</code>导入这个模块</p><p>导入之后，就可以使用<code>模块名.变量</code>&#x2F;<code>模块名.函数</code>的方式，使用这个模块中定义的变量或者函数</p><p>模块可以让曾经编写过的代码 方便的被复用！</p><h3 id="模块名也是一个标识符"><a href="#模块名也是一个标识符" class="headerlink" title="模块名也是一个标识符"></a>模块名也是一个标识符</h3><p>标识符可以由 <strong>字母、下划线和数字组成</strong></p><p><strong>不能以数字开头</strong></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-列表</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%88%97%E8%A1%A8/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="列表常用操作"><a href="#列表常用操作" class="headerlink" title="列表常用操作"></a>列表常用操作</h2><p>在<code>ipython3</code>中定义一个列表，例如：<code>name_list = []</code></p><p>输入<code>name_list.</code>按下<code>Tab</code>键，<code>ipython</code>会提示能够使用的方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name_list.appendname_list.countname_list.insert name_list.reverse</span><br><span class="line">name_list.clearname_list.extendname_list.popname_list.sort</span><br><span class="line">name_list.copyname_list.indexname_list.remove</span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>分类</th><th>关键字&#x2F;函数&#x2F;方法</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>增加</td><td>列表.insert(索引,数据)</td><td>在指定位置插入数据</td></tr><tr><td></td><td></td><td>列表.append(数据)</td><td>在末尾追加数据</td></tr><tr><td></td><td></td><td>列表.extend(列表2)</td><td>将列表2的数据追加到列表</td></tr><tr><td>2</td><td>修改</td><td>列表[索引] &#x3D; 数据</td><td>修改指定索引的数据</td></tr><tr><td>3</td><td>删除</td><td>del 列表[索引]</td><td>删除指定索引的数据</td></tr><tr><td></td><td></td><td>列表.remove[数据]</td><td>删除第一个出现的指定数据</td></tr><tr><td></td><td></td><td>列表.pop</td><td>删除末尾 数据</td></tr><tr><td></td><td></td><td>列表.pop(索引)</td><td>删除指定索引数据</td></tr><tr><td></td><td></td><td>列表.clear</td><td>清空列表</td></tr><tr><td>4</td><td>统计</td><td>len(列表)</td><td>列表长度</td></tr><tr><td></td><td></td><td>列表.count(数据)</td><td>数据在列表中出现的次数</td></tr><tr><td>5</td><td>排序</td><td>列表.sort()</td><td>升序排序</td></tr><tr><td></td><td></td><td>列表.sort(reverse&#x3D;True)</td><td>降序排序</td></tr><tr><td></td><td></td><td>列表.reverse()</td><td>逆序、反转</td></tr></tbody></table><p>del关键字</p><p>使用<code>del</code>关键字（<code>delete</code>）同样可以删除列表元素</p><p><code>del</code>关键字本质上是用来将一个变量从内存中删除的</p><p>如果使用<code>del</code>关键字将变量从内存中删除，后续的代码就不能使用这个变量了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> name_list[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>在日常开发中，要从列表删除数据，建议用列表提供的方法。</p><p>关键字、函数和方法</p><p>关键字是<code>python</code>内置的、具有特殊意义的标识符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="built_in">print</span>(keyword.kwlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(keyword.kwlist))</span><br></pre></td></tr></table></figure><p>关键字后面不需要使用括号</p><p>函数 封装了独立功能，可以直接调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名(参数)</span><br></pre></td></tr></table></figure><p>函数需要死记硬背</p><p>方法 和函数类似，同样是封装了独立的功能</p><p>方法 需要通过 对象来调用，表示针对这个对象要做的操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.方法名（参数）</span><br></pre></td></tr></table></figure><p>在变量后面输入<code>.</code>，然后选择针对这个变量要执行的操作，记忆起来比函数要简单的多。</p><h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><p>遍历 就是 从头到尾 依次 从列表中获取数据</p><p>在 循环体内部 针对 每一个元素，执行相同操作</p><p>在 <code>python</code>中为了提高列表的遍历效率，专门提供的 <code>迭代iteration遍历</code></p><p>使用 <code>for</code>就能实现迭代遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的变量 in 列表</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> name_list:</span><br><span class="line">    循环内部针对列表元素进行操作</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="浅拷贝和深拷贝"><a href="#浅拷贝和深拷贝" class="headerlink" title="浅拷贝和深拷贝"></a>浅拷贝和深拷贝</h2><p>浅拷贝：利用列表的 copy() 方法或者切片来实现</p><p>深拷贝：利用 copy 模块的 deepcopy() 函数来实现</p><p>浅拷贝可以用于处理一维列表，对于嵌套列表的拷贝，只能拷贝第一层数据，其余仅拷贝其引用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x.copy()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">0</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">0</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br></pre></td></tr></table></figure><p>深拷贝可以用于处理多维列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> copy</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = copy.deepcopy(x)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">0</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><strong>列表浅拷贝只是外层对象拷贝，将原对象拷贝的同时，不会拷贝对象中所引用的子对象</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy()</span><br><span class="line">切片[:]</span><br><span class="line">浅拷贝，如果包含嵌套对象，那么拷贝的只是其引用</span><br></pre></td></tr></table></figure><p><strong>列表的深拷贝将原对象拷贝的同时，也将对象中所有引用的子对象一并进行拷贝。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">copy.copy() <span class="comment"># 浅拷贝</span></span><br><span class="line">copy.deepcopy()</span><br></pre></td></tr></table></figure><h3 id="查找特定下标范围的元素"><a href="#查找特定下标范围的元素" class="headerlink" title="查找特定下标范围的元素"></a>查找特定下标范围的元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mylist.index(<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="number">4</span>)) <span class="comment"># 查找特定下标范围的元素，并返回找到对应数据的下标。 范围区间，左闭右开。开区间取不到。</span></span><br></pre></td></tr></table></figure><h2 id="列表元素删除"><a href="#列表元素删除" class="headerlink" title="列表元素删除"></a>列表元素删除</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">moviename = [<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;banana&#x27;</span>,<span class="string">&#x27;糖豆人&#x27;</span>,<span class="string">&#x27;apple&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-------删除前，电影列表的数据-----&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> moviename:</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># moviename.pop()</span></span><br><span class="line"><span class="comment"># del moviename[0]</span></span><br><span class="line">moviename.remove(<span class="string">&#x27;apple&#x27;</span>) <span class="comment"># 多个重复元素只删除最近的一个</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-------删除后，电影列表的数据-----&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> moviename:</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><h3 id="列表元素反转与排序"><a href="#列表元素反转与排序" class="headerlink" title="列表元素反转与排序"></a>列表元素反转与排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">612</span>,<span class="number">29</span>]</span><br><span class="line"></span><br><span class="line">a.reverse()</span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># [29, 612, 5, 4, 3, 1]</span></span><br><span class="line"></span><br><span class="line">a.sort() <span class="comment"># 升序</span></span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># [1, 3, 4, 5, 29, 612]</span></span><br><span class="line"></span><br><span class="line">a.sort(reverse=<span class="literal">True</span>) <span class="comment"># [612, 29, 5, 4, 3, 1] 降序</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h3 id="多个列表嵌套元素取法"><a href="#多个列表嵌套元素取法" class="headerlink" title="多个列表嵌套元素取法"></a>多个列表嵌套元素取法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">schoolName = [[<span class="string">&quot;北京大学&quot;</span>,<span class="string">&quot;清华大学&quot;</span>],[<span class="string">&quot;南开大学&quot;</span>,<span class="string">&quot;天津大学&quot;</span>,<span class="string">&quot;天津师范大学&quot;</span>],[<span class="string">&quot;山东大学&quot;</span>,<span class="string">&quot;北京航空航天大学&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(schoolName[<span class="number">0</span>][<span class="number">0</span>]) <span class="comment"># 北京大学</span></span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>需求：不同的人随机分配3个办公室，一个人只属于一个办公室，可以多人在一个办公室。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># 三个空办公室</span></span><br><span class="line">offices = [[],[],[]]</span><br><span class="line"><span class="comment"># 6个待分配的人</span></span><br><span class="line">names = [<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>,<span class="string">&quot;D&quot;</span>,<span class="string">&quot;E&quot;</span>,<span class="string">&quot;F&quot;</span>]</span><br><span class="line"><span class="comment"># 给6个人随机分配到3个办公室</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    index = random.randint(<span class="number">0</span>,<span class="number">2</span>) <span class="comment"># 获得0-2范围内随机整数</span></span><br><span class="line">    offices[index].append(name) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示办公室活动人员基本信息 </span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> office <span class="keyword">in</span> offices:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;办公室%s的人数为:%d&quot;</span>%(i,<span class="built_in">len</span>(office))) <span class="comment"># office的列表长度就是办公室中的人数</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> office: <span class="comment"># 展示每个办公室中的人员信息</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s&quot;</span>%name,end=<span class="string">&quot;\t&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;_&quot;</span>*<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>程序执行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">办公室<span class="number">1</span>的人数为:<span class="number">1</span></span><br><span class="line">A</span><br><span class="line"></span><br><span class="line">____________________     </span><br><span class="line">办公室<span class="number">2</span>的人数为:<span class="number">4</span>        </span><br><span class="line">B       C       E       F</span><br><span class="line"></span><br><span class="line">____________________     </span><br><span class="line">办公室<span class="number">3</span>的人数为:<span class="number">1</span>        </span><br><span class="line">D</span><br><span class="line"></span><br><span class="line">____________________</span><br></pre></td></tr></table></figure><h3 id="列表同时取出下标和元素小技巧"><a href="#列表同时取出下标和元素小技巧" class="headerlink" title="列表同时取出下标和元素小技巧"></a>列表同时取出下标和元素小技巧</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">20</span>,<span class="number">200</span>,<span class="number">2000</span>,<span class="number">3</span>,<span class="number">90</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(mylist):</span><br><span class="line">    <span class="built_in">print</span>(i,v)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">20</span></span><br><span class="line"><span class="number">2</span> <span class="number">200</span></span><br><span class="line"><span class="number">3</span> <span class="number">2000</span></span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="number">90</span></span><br></pre></td></tr></table></figure><p>还可以从1开始计数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">20</span>,<span class="number">200</span>,<span class="number">2000</span>,<span class="number">3</span>,<span class="number">90</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(mylist):</span><br><span class="line">    <span class="built_in">print</span>(i+<span class="number">1</span>,v)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-字典</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E5%85%B8/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="字典的定义"><a href="#字典的定义" class="headerlink" title="字典的定义"></a>字典的定义</h2><p><code>dictionary</code>（字典）是 除列表意外<code>python</code>之中 最灵活的数据类型</p><p>字典同样可以用来 存储多个数据</p><p>通常用于存储 描述一个 <code>物体</code>的相关信息</p><p>和列表的区别</p><p>列表是 有序 的对象集合</p><p>字典是 无序的对象集合</p><p>字典使用 <code>键值对</code>存储数据，键值对之间使用<code>,</code>分割</p><p>键 <code>key</code>是索引</p><p>值 <code>value</code> 是数据</p><p>键 和 值 之间使用<code>:</code>分割</p><p>键必须是唯一的</p><p>值 可以取任何数据类型，但 键 只能使用 字符串、数字或元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xiaoming  = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>.</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;gender&quot;</span> : <span class="literal">True</span></span><br><span class="line">    <span class="string">&quot;height&quot;</span>: <span class="number">1.75</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​                                                    len(字典) 获取字典的 键值对数量</p><table><thead><tr><th align="center">key</th><th align="center">value</th></tr></thead><tbody><tr><td align="center">name</td><td align="center">小明</td></tr><tr><td align="center">age</td><td align="center">18</td></tr><tr><td align="center">gender</td><td align="center">true</td></tr><tr><td align="center">height</td><td align="center">1.75</td></tr></tbody></table><p>字典.keys() 所有 key 列表</p><p>字典.values() 所有value 列表</p><p>字典.items() 所有（key, value）元组列表</p><p>字典[key] 可以从字典中取值， key 不存在会报错</p><p>字典.get(key) 可以从字典中取值， key 不存在不会报错</p><p>字典[key] &#x3D; value </p><p>如果 key 存在 ，修改数据</p><p>如果 key 不存在 ，新建键值对</p><p>字典.setdefault(key, value)</p><p>如果 key 存在 ，不会修改数据</p><p>如果 key 不存在 ，新建键值对</p><p>字典.update(字典2) 将字典2 的数据合并到字典1</p><p>del 字典[key] 删除指定键值对， key 不存在会报错</p><p>字典.pop(key) 删除指定键值对， key 不存在会报错</p><p>字典.popitem() 随机删除一个键值对</p><p>字典.clear() 清空字典</p><h2 id="字典常用操作"><a href="#字典常用操作" class="headerlink" title="字典常用操作"></a>字典常用操作</h2><p>在 <code>ipython3</code>中定义一个 字典 ，例如 ：<code>xiaoing = &#123;&#125;</code></p><p>输入 <code>xiaoming.</code> 按下<code>Tab</code>键，<code>ipython</code>会提示字典 能够使用的函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xiaoming.clear()xiaoming.copy()xiaoming.get()xiaoming.items()xiaoming.keys()xiaoming.pop()</span><br><span class="line">xiaoming.popitem()xiaoming.setdefault()xiaoming.update()xiaoming.values()</span><br></pre></td></tr></table></figure><p>有关 字典的 常用操作 可以参照上图练习</p><h3 id="清空字典"><a href="#清空字典" class="headerlink" title="清空字典"></a>清空字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">info = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;john&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">18</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;清空前:%s&quot;</span> %info)</span><br><span class="line"></span><br><span class="line">info.clear()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;清空后:%s&quot;</span> %info)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">清空前:&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;</span><br><span class="line">清空后:&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="遍历循环"><a href="#遍历循环" class="headerlink" title="遍历循环"></a>遍历循环</h2><p>遍历就是 依次 从字典中获取所有键值对</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  for 循环内部使用`key的变量` in 字典 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> xiaoming.items():</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;key=%s,value=%s&quot;</span>%(k,v))</span><br></pre></td></tr></table></figure><p>提示：在实际开发中，由于字典中每一个键值对保存的数据类型是不同的，所以针对字典的循环需求并不是很多。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>尽量可以使用<code>for in</code>遍历 字典</p><p>但是在开发中，更多的应用场景是：</p><p>使用 多个键值对，存储 描述一个<code>物体</code>的相关信息 ——–描述更复杂的数据信息</p><p>将 多个字典 放在一个列表中，再进行遍历， 在循环体内部针对每一个字典进行 相同的处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">card_list = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">        <span class="string">&quot;qq&quot;</span>: <span class="string">&quot;123465&quot;</span>,</span><br><span class="line">        <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;110&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">        <span class="string">&quot;qq&quot;</span>: <span class="string">&quot;123456&quot;</span>,</span><br><span class="line">        <span class="string">&quot;phone&quot;</span>:<span class="string">&quot;120&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-字符串</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>字符串 就是一串字符，是编程语言中表示文本的数据类型</p><p>在 <code>python</code>中可以使用 一堆双引号 <code>&quot;&quot;</code>或者 一对单引号 <code>&#39;&#39;</code>定义一个字符串</p><p>虽然可以使用<code>\&quot;</code>或者<code>\&#39;</code>做字符串的转义，但是在实际开发中：</p><p>如果字符串内部需要使用<code>&quot;&quot;</code>,可以使用<code>&#39;&#39;</code>定义字符串。</p><p>如果字符串内部需要使用<code>&#39;&#39;</code>,可以使用<code>&quot;&quot;</code>定义字符串。</p><p>可以使用 索引 获取一个字符串中 指定位置的字符，索引计数从 0 开始</p><p>亦可以使用 <code>for</code>循环遍历 字符串中每一个字符</p><p>大多数编程语言都是用<code>&quot;&quot;</code>来定义字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">&#x27;Hello Python&#x27;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> string:</span><br><span class="line">    <span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><p>字符串的索引值是从0 开始的</p><table><thead><tr><th align="center">p</th><th align="center">y</th><th align="center">t</th><th align="center">h</th><th align="center">o</th><th align="center">n</th></tr></thead><tbody><tr><td align="center">↑</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>len(字符串)     获取字符串的长度</p><p>字符串.count(字符串)     小字符串在大字符串中出现的次数</p><p>字符串[索引]     从字符串中取出单个字符。</p><p>它也支持切片操作</p><p>字符串[1:4:]    # yth</p><p>字符串.index(字符串)    获得小字符串第一次出现的索引</p><h2 id="字符串的常规操作"><a href="#字符串的常规操作" class="headerlink" title="字符串的常规操作"></a>字符串的常规操作</h2><p>在 <code>ipython3</code>中定义一个 字符串 ，例如 ： <code>hello_str = &quot;&quot;</code></p><p>输入<code>hello_str</code>,按下<code>Tab</code>键，<code>ipython</code>会提示 字符串能够使用的方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hello_str.capitalizehello_str.isidentifierhello_str.rindexhello_str.casefoldhello_str.islower</span><br><span class="line">hello_str.rjusthello_str.centerhello_str.isnumerichello_str.rpartitionhello_str.count</span><br><span class="line">hello_str.isprintablehello_str.rsplithello_str.encodehello_str.isspacehello_str.rstrip</span><br><span class="line">hello_str.endswithhello_str.istitlehello_str.splithello_str.expandtabs   hello_str.isupper</span><br><span class="line">hello_str.splitlineshello_str.findhello_str.joinhello_str.startswith    hello_str.<span class="built_in">format</span></span><br><span class="line">hello_str.ljusthello_str.striphello <span class="built_in">str</span>.format_maphello_str.lower  hello_str.swapcase</span><br><span class="line">hello_str.indexhello_str.lstriphello_str.titlehello_str.isalnum hello_str.maketrans</span><br><span class="line">hello_str.translatehello_str.isalphahello_str.partitionhello_str.upper hello_str.isdecimal</span><br><span class="line">hello_str.replacehello_str.zfillhello_str.isdigithello_str.rfind</span><br></pre></td></tr></table></figure><p>提示：正是因为python 内置提供的方法足够多，才使得在开发时，能够针对字符串进行更加灵活的操作。</p><h4 id="1）判断类型-9"><a href="#1）判断类型-9" class="headerlink" title="1）判断类型-9"></a>1）判断类型-9</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.isspace()</td><td>如果 string 中只包含空格，则返回 True</td></tr><tr><td>string.isalnum()</td><td>如果 string 至少有一个字符并且所有字符都是字母或数字则返回True</td></tr><tr><td>string.isalpha()</td><td>如果 string 至少有一个字符并且所有字符都是字母则返回True</td></tr><tr><td>string.isdecimal()</td><td>如果 string 只包含数字则返回True ,全角数字</td></tr><tr><td>string.isnumeric()</td><td>如果 string 只包含数字则返回True ,全角数字，汉字数字</td></tr><tr><td>string.isdigit()</td><td>如果 string 只包含数字则返回True ,全角数字、{1}、<code>\u00b2</code></td></tr><tr><td>string.istitle()</td><td>如果 string是标题化的（每个单词首字母大写）则返回True 。</td></tr><tr><td>string.islower()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些（区分大小写的）字符都是小写，则返回True 。</td></tr><tr><td>string.upper()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些（区分大小写的）字符都是大写，则返回True 。</td></tr></tbody></table><p>2）查找和替换-7</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.startswith(str)</td><td>检查字符串是否以str开头，是则返回True。</td></tr><tr><td>string.find(str, beg&#x3D;0, end&#x3D;len(string))</td><td>检测 str 是否包含在 string 中，如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1</td></tr><tr><td>string.index(str, beg&#x3D;0, end&#x3D;len(string))</td><td>跟find()方法一样，只不过如果str不在 string中会报一个异常.</td></tr><tr><td>string.rfind(str, beg&#x3D;0,end&#x3D;len(string) )</td><td>类似于 find() 函数，返回字符串<strong>最后一次出现</strong>的位置，如果没有匹配项则返回 -1。</td></tr><tr><td>string.rindex( str, beg&#x3D;0,end&#x3D;len(string))</td><td>类似于 index()，不过是返回<strong>最后一个匹配</strong>到的子字符串的索引号。</td></tr><tr><td>string.replace(str1, str2, num&#x3D;string.count(str1))</td><td>把 string 中的 str1 替换成 str2,如果 num 指定，则替换不超过 num 次.</td></tr></tbody></table><h2 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h2><p>在python中，我们可以通过字符串类型自带的方法对字符串进行操作和处理，对于一个字符串的变量，我们可以用<code>变量名.方法名()</code>的方式来调用它的方法。所谓方法其实就是跟某个类型的变量绑定的函数，后面我们讲面向对象编程的时候还会对这一概念详加说明。</p><h3 id="大小写相关操作"><a href="#大小写相关操作" class="headerlink" title="大小写相关操作"></a>大小写相关操作</h3><p>下面的代码演示了和字符串大小写变换相关的方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用capitalize方法获得字符串首字母大写后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(s1.capitalize()) <span class="comment"># Hello, world!</span></span><br><span class="line"><span class="comment"># 使用title方法获得字符串每个单词首字母大写后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(s1.title()) <span class="comment"># Hello, World!</span></span><br><span class="line"><span class="comment"># 使用upper方法获得字符串大写后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(s1.upper()) <span class="comment"># HELLO, WORLD!</span></span><br><span class="line"></span><br><span class="line">s2 = <span class="string">&#x27;GOODBYE&#x27;</span></span><br><span class="line"><span class="comment"># 使用lower方法获得字符串小写后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(s2.lower()) <span class="comment"># goodbye</span></span><br></pre></td></tr></table></figure><h3 id="查找操作"><a href="#查找操作" class="headerlink" title="查找操作"></a>查找操作</h3><p>如果想在一个字符串中从前向后查找有没有另外一个字符串，可以使用字符串的<code>find</code>或<code>index</code>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find 方法从字符串中查找另一个字符串所在的位置</span></span><br><span class="line"><span class="comment"># 找到了返回字符串中另一个字符串首字母字符串的索引</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s.find(<span class="string">&#x27;or&#x27;</span>)) <span class="comment"># 8</span></span><br><span class="line"><span class="comment"># 找不到返回 -1 </span></span><br><span class="line"><span class="built_in">print</span>(s.find(<span class="string">&#x27;shit&#x27;</span>)) <span class="comment"># -1</span></span><br><span class="line"><span class="comment"># index方法与find方法类似</span></span><br><span class="line"><span class="comment"># 找到了返回字符串中另一个字符串首字符的索引</span></span><br><span class="line"><span class="built_in">print</span>(s.index(<span class="string">&#x27;or&#x27;</span>)) <span class="comment"># 8</span></span><br><span class="line"><span class="comment"># 找不到引发异常</span></span><br><span class="line"><span class="built_in">print</span>(s.index(<span class="string">&#x27;shit&#x27;</span>)) <span class="comment"># ValueError: substring not found</span></span><br></pre></td></tr></table></figure><p>在使用<code>find</code>和<code>index</code>方法时还可以通过方法的参数来指定查找的范围，也就是查找不必从索引0的位置开始。<code>find</code>和<code>index</code>方法还有逆向查找（从后向前查找）的版本，分别是<code>rfind</code>和<code>rindex</code> ，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello good world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从前向后查找字符o出现的位置（相当于第一次出现）</span></span><br><span class="line"><span class="built_in">print</span>(s.find(<span class="string">&#x27;o&#x27;</span>)) <span class="comment"># 4</span></span><br><span class="line"><span class="comment"># 从索引为5 的位置开始查找o出现的位置</span></span><br><span class="line"><span class="built_in">print</span>(s.find(<span class="string">&#x27;o&#x27;</span>, <span class="number">5</span>)) <span class="comment"># 7</span></span><br><span class="line"><span class="comment"># 从后向前查找字符o出现的位置（相当于最后一次出现）</span></span><br><span class="line"><span class="built_in">print</span>(s.rfind(<span class="string">&#x27;o&#x27;</span>)) <span class="comment"># 12</span></span><br></pre></td></tr></table></figure><h3 id="性质判断"><a href="#性质判断" class="headerlink" title="性质判断"></a>性质判断</h3><p>可以通过字符串的<code>startswith</code>、<code>endswith</code>俩判断字符串是否以某个字符串开头和结尾；还可以用<code>is</code>开头的方法判断字符串的特征，这些方法都返回布尔值，代码如下图所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># startwith 方法检查字符串是否以指定的字符串开头返回布尔值</span></span><br><span class="line"><span class="built_in">print</span>(s1.startswith(<span class="string">&#x27;He&#x27;</span>)) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(s1.startswith(<span class="string">&#x27;hel&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># endwith 方法检查字符串是否以指定的字符串结尾返回布尔值</span></span><br><span class="line"><span class="built_in">print</span>(s1.endswith(<span class="string">&#x27;!&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">s2 = <span class="string">&#x27;abc123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># isdigit 方法检查字符串是否由数字构成返回布尔值</span></span><br><span class="line"><span class="built_in">print</span>(s2.isdigit()) <span class="comment"># False</span></span><br><span class="line"><span class="comment"># isalpha 方法检查字符串是否由字母构成返回布尔值</span></span><br><span class="line"><span class="built_in">print</span>(s2.isalpha()) <span class="comment"># False</span></span><br><span class="line"><span class="comment"># isalnum 方法检查字符串是否以数字和字母构成返回布尔值</span></span><br><span class="line"><span class="built_in">print</span>(s2.isalnum()) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h2><p>在python中，字符串类型可以通过<code>center</code>、<code>ljust</code>、<code>rjust</code>方法做居中、左对齐和右对齐处理。如果要在字符串的左侧补零，也可以使用<code>zfill</code>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># center 方法以宽度20 将字符串居中并在两侧填充*</span></span><br><span class="line"><span class="built_in">print</span>(s.center(<span class="number">20</span>, <span class="string">&#x27;*&#x27;</span>)) <span class="comment"># ***hello, world!****</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s.rjust(<span class="number">20</span>)) <span class="comment">#        hello, world!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s.ljust(<span class="number">20</span>, <span class="string">&#x27;-&#x27;</span>)) <span class="comment"># hello, world!-------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;33&#x27;</span>.zfill(<span class="number">5</span>)) <span class="comment"># 00033</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-33&#x27;</span>.zfill(<span class="number">5</span>)) <span class="comment"># -0033</span></span><br></pre></td></tr></table></figure><p>在用<code>print</code>函数输出字符串时，可以用下面的方式对字符串进行格式化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d * %d = %d&#x27;</span>% (a, b, a * b))</span><br></pre></td></tr></table></figure><p>当然，我们也可以用字符串的方法来完成字符串的格式，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; * &#123;1&#125; = &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(a, b, a * b))</span><br></pre></td></tr></table></figure><p>从python3.6开始，格式化字符串还有更为简介的书写方式，就是在字符串前加<code>f</code>来格式化字符串，在这种以<code>f</code>打头的字符串中<code>&#123;变量名&#125;</code>是一个占位符，会被变量对应的值将其替换掉，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;a&#125;</span> * <span class="subst">&#123;b&#125;</span> = <span class="subst">&#123;a * b&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>f 表达式只支持python3.6 以上版本。。</strong></p><p>如果需要进一步控制格式化中变量值的形式，可以参照下面的表格来进行字符串格式化操作。</p><table><thead><tr><th>变量值</th><th>占位符</th><th>格式化结果</th><th>说明</th></tr></thead><tbody><tr><td><code>3.1415926</code></td><td><code>&#123;:.2f&#125;</code></td><td><code>3.14</code></td><td>保留小数点后两位</td></tr><tr><td><code>3.1415926</code></td><td><code>&#123;:+.2f&#125;</code></td><td><code>+3.14</code></td><td>带符号保留小数点后两位</td></tr><tr><td><code>-1</code></td><td><code>&#123;:+.2f&#125;</code></td><td><code>-1.00</code></td><td>带符号保留小数点后两位</td></tr><tr><td><code>3.1415926</code></td><td><code>&#123;:.0f&#125;</code></td><td><code>3</code></td><td>不带小数</td></tr><tr><td><code>123</code></td><td><code>&#123;:0&gt;10d&#125;</code></td><td><code>0000000123</code></td><td>左边补0，补够10位</td></tr><tr><td><code>123</code></td><td><code>&#123;:x&lt;10d&#125;</code></td><td><code>123xxxxxxx</code></td><td>右面补x，补够10位</td></tr><tr><td><code>123</code></td><td><code>&#123;:&gt;10d&#125;</code></td><td><code>      123</code></td><td>左补空格，补够10位</td></tr><tr><td><code>123</code></td><td><code>&#123;:&lt;10d&#125;</code></td><td><code>123       </code></td><td>右补空格，补够10位</td></tr><tr><td><code>123456789</code></td><td><code>&#123;:,&#125;</code></td><td><code>123,456,789</code></td><td>逗号分隔格式</td></tr><tr><td><code>0.123</code></td><td><code>&#123;:.2%&#125;</code></td><td><code>12.30%</code></td><td>百分比格式</td></tr><tr><td><code>123456789</code></td><td><code>&#123;:.2e&#125;</code></td><td><code>1.23e+08</code></td><td>科学计数法格式</td></tr><tr><td>11</td><td><code>&#39;&#123;:0&gt;10d&#125;&#39;.format(11)</code></td><td><code>0000000011</code></td><td>进制</td></tr></tbody></table><h3 id="修剪操作"><a href="#修剪操作" class="headerlink" title="修剪操作"></a>修剪操作</h3><p>字符串的<code>strip</code>方法可以帮我们获得将原字符串修剪左右两端空格之后的字符串。这个方法非常有实用价值，通常用来将用户输入因不小心键入的头尾空格去掉，<code>strip</code>方法还有<code>lstrip</code>和<code>rstrip</code>两个版本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;      tuling_python@163.com \t \r \n&#x27;</span></span><br><span class="line"><span class="comment"># strip 方法获得的字符串修剪左右两侧空格之后的字符串</span></span><br><span class="line"><span class="built_in">print</span>(s.strip()) <span class="comment"># tuling_python@163.com</span></span><br></pre></td></tr></table></figure><h3 id="替换操作"><a href="#替换操作" class="headerlink" title="替换操作"></a>替换操作</h3><p>如果希望用新的内容替换字符串中指定内容，可以用<code>replace</code>方法，代码如下。<code>replace</code>方法的第一个参数是被替换的内容，第二个参数是替换后的内容，还可以通过第三个参数指定替换的次数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello, world&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s1.replace(<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;@&#x27;</span>)) <span class="comment"># hell@, w@rld</span></span><br><span class="line"><span class="built_in">print</span>(s1.replace(<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="number">1</span>)) <span class="comment"># hell@, world</span></span><br></pre></td></tr></table></figure><p>拆分、合并操作</p><p>可以使用字符串的<code>split</code>方法将一个字符串拆分为多个字符串（放在一个列表中），也可以使用字符串的<code>join</code>方法将列表中的多个字符串连接成一个字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s2 = <span class="string">&#x27;I love you&#x27;</span></span><br><span class="line"></span><br><span class="line">words = s2.split()</span><br><span class="line"><span class="built_in">print</span>(words) <span class="comment"># [&#x27;I&#x27;, &#x27;love&#x27;, &#x27;you&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#&#x27;</span>.join(words)) <span class="comment"># I#love#you</span></span><br></pre></td></tr></table></figure><p>需要说明的是，<code>split</code>方法默认使用空格进行拆分，也可以指定其他的字符来拆分字符串，而且还可以指定最大拆分次数来控制拆分的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s3 = <span class="string">&#x27;I#love#you#so#much&#x27;</span></span><br><span class="line">word1 = s3.split(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(word1) <span class="comment"># [&#x27;I&#x27;, &#x27;love&#x27;, &#x27;you&#x27;, &#x27;so&#x27;, &#x27;much&#x27;]</span></span><br><span class="line">word2 = s3.split(<span class="string">&#x27;#&#x27;</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(word2) <span class="comment"># [&#x27;I&#x27;, &#x27;love&#x27;, &#x27;you&#x27;, &#x27;so#much&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="编码、解码操作"><a href="#编码、解码操作" class="headerlink" title="编码、解码操作"></a>编码、解码操作</h3><p>python中除了字符串<code>str</code>类型外，还有一种表示二进制数据的字节串类型（bytes）。所谓字节串，就是由零个或多个字节组成的有限序列。通过字符串的<code>encode</code>方法，我们可以按照某种编码方式将字符串编码为字节串，也可以使用字节串的<code>decode</code>方法，将字节串解码为字符串，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;小红&#x27;</span></span><br><span class="line">b = a.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">c = a.encode(<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b, c) <span class="comment"># b&#x27;\xe5\xb0\x8f\xe7\xba\xa2&#x27; b&#x27;\xd0\xa1\xba\xec&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b.decode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment"># 小红</span></span><br><span class="line"><span class="built_in">print</span>(c.decode(<span class="string">&#x27;gbk&#x27;</span>)) <span class="comment"># 小红</span></span><br></pre></td></tr></table></figure><p>注意：用什么方式编码 ，就用什么方式解码。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-集合</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9B%86%E5%90%88/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>特性：</p><p>1.无序性： 一个集合中，每个元素的地位都是相同的，元素之间是无序的</p><p>2.互异性： 一个集合中，任何两个元素都是不同的，即元素在集合中只能出现一次</p><p>3.确定性： 给定一个集合和一个任意元素，给袁思要么属于这个集合，要么不属于这个集合，二者必居其一，不允许有模棱两可的情况出现。</p><p>集合的成员运算在性能上要优于列表的成员 运算，这是集合的底层存储特性（哈希存储）决定的。</p><h3 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h3><p>用<code>set()</code>创建，或者用 <code>&#123;&#125;</code>定义一个空集合，但<code>&#123;&#125;</code>中至少要有一个元素，没有元素就不是空集合而是空字典了。也可以将其他序列转换成集合，例如：<code>set(&#39;hello&#39;)</code>会得到一个包含4个字符的集合（重复的<code>l</code>会被去掉）。还可以用生成式语法来创建集合，和用生成式创建列表一样。要知道集合中有多少个元素，还是使用内置函数<code>len</code>。使用<code>for</code>循环可以实现对集合元素的遍历。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建集合（重复元素不会出现在集合中，因此常用集合这一特性去重！！）</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set1) <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(set1)) <span class="comment"># 3</span></span><br><span class="line"><span class="comment"># 创建集合构造器语法</span></span><br><span class="line">set2 = <span class="built_in">set</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(set2) <span class="comment"># &#123;&#x27;o&#x27;, &#x27;l&#x27;, &#x27;e&#x27;, &#x27;h&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将列表转换成集合（可以去掉列表中重复的元素）</span></span><br><span class="line">set3 = <span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(set3) <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"><span class="comment"># 创建集合的生成式语法（将列表生成式的[] 换成&#123;&#125;）</span></span><br><span class="line">set4 = &#123;num <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>) <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span> <span class="keyword">or</span> num % <span class="number">5</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set4) <span class="comment"># &#123;3, 5, 6, 9, 10, 12, 15, 18&#125;</span></span><br><span class="line"><span class="comment"># 集合元素的循环遍历</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> set4:</span><br><span class="line">    <span class="built_in">print</span>(elem)</span><br></pre></td></tr></table></figure><p>注意：集合中的元素必须是<code>hashable</code>类型。<code>hashable</code>类型指的是能够计算出哈希码的数据类型。可以暂时将哈希码理解为和变量对应的唯一的ID值。<strong>通常不可变类型都是<code>hashable</code>类型。</strong>如整数、浮点、字符串、元组等。而可变类型都不是<code>hashable</code>类型，因为可变类型无法确定唯一的ID值，所以也就不能放到集合中。集合本身也是可变类型，所以集合不能作为集合中的元素。</p><h3 id="集合的运算"><a href="#集合的运算" class="headerlink" title="集合的运算"></a>集合的运算</h3><p>python为集合类型提供了非常丰富的运算符，主要包括:成员运算、交集运算、并集运算、差集运算、比较运算（相等性、子集、超集）等。</p><h4 id="成员运算"><a href="#成员运算" class="headerlink" title="成员运算"></a>成员运算</h4><p>通过成员运算<code>in</code>、<code>not in</code>检查元素是否在集合中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> <span class="keyword">in</span> set1) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">15</span> <span class="keyword">in</span> set1) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">set2 = &#123;<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;Go&#x27;</span>, <span class="string">&#x27;swift&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Ruby&#x27;</span> <span class="keyword">in</span> set2) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Java&#x27;</span> <span class="keyword">in</span> set2) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h4 id="交并差运算"><a href="#交并差运算" class="headerlink" title="交并差运算"></a>交并差运算</h4><p>python中的集合跟数学上的集合一样。可以进行交集、并集、差集等运算，而且可以通过运算符和方法调用方式来操作，代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交集</span></span><br><span class="line"><span class="comment"># 方式一：使用 &amp; 运算符</span></span><br><span class="line"><span class="built_in">print</span>(set1 &amp; set2) <span class="comment"># &#123;2, 4, 6&#125;</span></span><br><span class="line"><span class="comment"># 方法二： 使用intersection方法</span></span><br><span class="line"><span class="built_in">print</span>(set1.intersection(set2)) <span class="comment"># &#123;2, 4, 6&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并集</span></span><br><span class="line"><span class="comment"># 方法一： 使用 | 运算符</span></span><br><span class="line"><span class="built_in">print</span>(set1 | set2) <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7, 8, 10&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二： 使用union方法</span></span><br><span class="line"><span class="built_in">print</span>(set1.union(set2)) <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7, 8, 10&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 差集</span></span><br><span class="line"><span class="comment"># 方法一： 使用 - 运算符</span></span><br><span class="line"><span class="built_in">print</span>(set1 - set2) <span class="comment"># &#123;1, 3, 5, 7&#125;</span></span><br><span class="line"><span class="comment"># 方法二： 使用difference 方法</span></span><br><span class="line"><span class="built_in">print</span>(set1.difference(set2)) <span class="comment"># &#123;1, 3, 5, 7&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对称差</span></span><br><span class="line"><span class="comment"># 方法一： 使用 ^ 运算符</span></span><br><span class="line"><span class="built_in">print</span>(set1 ^ set2) <span class="comment"># &#123;1, 3, 5, 7, 8, 10&#125;</span></span><br><span class="line"><span class="comment"># 方法二： 使用 方法</span></span><br><span class="line"><span class="built_in">print</span>(set1.symmetric_difference(set2)) <span class="comment"># &#123;1, 3, 5, 7, 8, 10&#125;</span></span><br><span class="line"><span class="comment"># 方法三： 对称差相当于两个集合的并集减去交集</span></span><br><span class="line"><span class="built_in">print</span>((set1 - set2) - (set1 &amp; set2)) <span class="comment"># &#123;1, 3, 5, 7&#125;</span></span><br></pre></td></tr></table></figure><p>总结：对于两个集合求交集，<code>&amp;</code>运算符和<code>intersection</code>方法的作用是完全相同的，使用运算符的方式更直观而且代码也比较简短。</p><h4 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h4><p>两个集合可以用<code>==</code>和<code>!=</code>进行相等性判断，如果两个集合中的元素完全相同，那么<code>==</code>比较的结果就是</p><p><code>True</code>，否则就是<code>False</code>，如果集合<code>A</code>中的任意一个元素都是集合<code>B</code>的元素，那么集合<code>A</code>称为集合<code>B</code>的子集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">set3 = set2</span><br><span class="line"><span class="comment"># &lt; 运算符表示真子集， &lt;= 表示子集</span></span><br><span class="line"><span class="built_in">print</span>(set1 &lt; set2, set1 &lt;= set2) <span class="comment"># True True</span></span><br><span class="line"><span class="built_in">print</span>(set2 &lt; set3, set2 &lt;= set3) <span class="comment"># False True</span></span><br><span class="line"><span class="comment"># 通过issubset 方法也能进行子集判断</span></span><br><span class="line"><span class="built_in">print</span>(set1.issubset(set2)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反过来可以用issuperset 或&gt;运算符进行超集判断</span></span><br><span class="line"><span class="built_in">print</span>(set2.issuperset(set1)) <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(set2 &gt; set1) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h4 id="集合的方法"><a href="#集合的方法" class="headerlink" title="集合的方法"></a>集合的方法</h4><p>python中的集合是可变类型，我们可以通过集合类型的方法为集合添加或删除元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空集合</span></span><br><span class="line">set1 = <span class="built_in">set</span>() </span><br><span class="line"><span class="comment"># 通过add方法添加元素</span></span><br><span class="line">set1.add(<span class="number">33</span>)</span><br><span class="line">set1.add(<span class="number">55</span>)</span><br><span class="line">set1.update(&#123;<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(set1) <span class="comment"># &#123;33, 1, 100, 55, 1000, 10&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过discard方法删除指定元素</span></span><br><span class="line">set1.discard(<span class="number">100</span>)</span><br><span class="line">set1.discard(<span class="number">99</span>) <span class="comment"># 元素不存在不会抛出异常 和remove方法对比。</span></span><br><span class="line"><span class="built_in">print</span>(set1) <span class="comment"># &#123;33, 1, 55, 1000, 10&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过remove方法删除指定元素，建议先做成员运算再删除</span></span><br><span class="line"><span class="comment"># 否则元素如果不在集合中就会引发KeyError异常</span></span><br><span class="line">set1.remove(<span class="number">99</span>)</span><br><span class="line"><span class="built_in">print</span>(set1) <span class="comment"># KeyError: 99</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pop方法可以从集合中随机删除一个元素并返回该元素</span></span><br><span class="line"><span class="built_in">print</span>(set1.pop()) <span class="comment"># 33</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clear方法可以清空整个集合</span></span><br><span class="line">set1.clear()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(set1) <span class="comment"># set()</span></span><br></pre></td></tr></table></figure><p>如果要判断两个集合有没有相同的元素可以使用<code>isdisjoint</code>方法，没有相同元素返回<code>True</code>,否则返回</p><p><code>False</code>，代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;Go&#x27;</span>, <span class="string">&#x27;Kotlin&#x27;</span>&#125;</span><br><span class="line">set2 = &#123;<span class="string">&#x27;Kotlin&#x27;</span>, <span class="string">&#x27;Swift&#x27;</span>, <span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;Objective-C&#x27;</span>, <span class="string">&#x27;Dart&#x27;</span>&#125;</span><br><span class="line">set3 = &#123;<span class="string">&#x27;HTML&#x27;</span>, <span class="string">&#x27;CSS&#x27;</span>, <span class="string">&#x27;JavaScript&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set1.isdisjoint(set2))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(set1.isdisjoint(set3))  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h3 id="不可变集合"><a href="#不可变集合" class="headerlink" title="不可变集合"></a>不可变集合</h3><p>python中还有一种不可变类型的集合，名字叫<code>frozenset</code>。<code>set</code>和<code>frozenset</code>的区别就如同<code>list</code>跟<code>tuple</code>的区别。<code>frozenset</code>由于是不可变类型，能够计算出哈希码，因此它可以作为<code>set</code>中的元素。除了不能添加和删除元素，<code>frozenset</code>在其他方面跟<code>set</code>基本一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set1 = <span class="built_in">frozenset</span>(&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;)</span><br><span class="line">set2 = <span class="built_in">frozenset</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(set1 &amp; set2) <span class="comment"># frozenset(&#123;1, 3, 5&#125;)</span></span><br><span class="line"><span class="built_in">print</span>(set1 | set2) <span class="comment"># frozenset(&#123;1, 2, 3, 4, 5, 7&#125;)</span></span><br><span class="line"><span class="built_in">print</span>(set1 - set2) <span class="comment"># frozenset(&#123;7&#125;)</span></span><br><span class="line"><span class="built_in">print</span>(set1 &lt; set2) <span class="comment"># False</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>python中集合底层使用了哈希存储的方式。集合是一种容器，元素必须是<code>hashable</code>类型，与列表不同的地方在于集合中元素没有序、不能用索引运算、不能重复。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python回炉重造-面向对象编程入门</title>
      <link href="/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
      <url>/2022/07/03/python%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="面向对象编程入门"><a href="#面向对象编程入门" class="headerlink" title="面向对象编程入门"></a>面向对象编程入门</h2><p>程序是指令的集合</p><p>函数： 把相互独立且经常重复使用的代码放置到函数中，在需要使用这些代码的时候调用函数即可。</p><p>在面向对象编程的世界里，程序中的数据和操作数据的函数是一个逻辑上的整体，我们称之为<strong>对象</strong>。对象可以接收消息。解决问题的方法是创建对象并向对象发出各种各样的消息。通过消息的传递，程序中的多个对象可以协同工作，这样就能构造出复杂的系统并解决现实中的问题。</p><h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><p>面向对象编程：把一组数据和处理数据的方法组成<strong>对象</strong>，把行为相同的对象归纳为<strong>类</strong>，通过<strong>封装</strong>隐藏对象的内部细节，通过<strong>继承</strong>实现类的特化和泛化，通过<strong>多态</strong>实现基于对象类型的动态分派。</p><p><strong>对象（object）</strong></p><p><strong>类（class）</strong></p><p><strong>封装（encapsulation）</strong></p><p><strong>继承（inheritance）</strong></p><p><strong>多态（polymorphism）</strong></p><p>在面向对象编程中，<strong>类是一个抽象的概念，对象是一个具体的概念。</strong>我们把同一类对象的共同特征抽出来就是一个类。比如 人类 就是一个抽象概念，我们每个人就是人类的这个抽象概念下的实实在在的存在，也就是一个对象。简而言之，<strong>类是对象的蓝图和模板，对象是类的实例，是可以接收消息的实体。</strong></p><h2 id="类属性和类方法"><a href="#类属性和类方法" class="headerlink" title="类属性和类方法"></a>类属性和类方法</h2><p><strong>术语–实例</strong></p><p>1.使用面向对象开发， 先设计类</p><p>2.使用 <strong>类名()<strong>创建对象，</strong>创建对象</strong> 的动作有两步</p><p>​    1.在内存空间中为对象 <strong>分配空间</strong></p><pre><code>2. 调用初始化方法`__init__`为对象初始化</code></pre><p>3.对象创建后， <strong>内存</strong>中就有了一个对象 的<strong>实实在在 的存在</strong> – 实例</p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/8592/20220705213123.png"  /><p>因此，通常也会把：</p><p>创建出来的 <strong>对象</strong> 叫做 <strong>类的实例</strong></p><p>创建对象的 <strong>动作</strong> 叫做 <strong>实例化</strong></p><p><strong>对象的属性</strong> 叫做 <strong>实例属性</strong></p><p><strong>对象调用的方法</strong> 叫做 <strong>实例方法</strong></p><p>在程序执行时：</p><p>1.对象各自拥有自己的 实例属性</p><p>2.调用对象方法，可以通过<code>self.</code></p><p>访问自己的属性</p><p>调用自己的方法</p><p><strong>结论</strong></p><p><strong>每一个对象</strong> 都有自己 <strong>独立的内存空间</strong>，<strong>保存各自不同的属性</strong></p><p><strong>多个对象的方法</strong>，<strong>在内存中只有一份</strong>，在调用方法时，<strong>需要把对象的引用</strong> 传递到方法内部</p><h3 id="类是一个特殊的对象"><a href="#类是一个特殊的对象" class="headerlink" title="类是一个特殊的对象"></a>类是一个特殊的对象</h3><p>python中 <strong>一切皆对象</strong></p><p><code>class AAA: </code>定义的类属于 <strong>类对象</strong></p><p><code>obj1 = AAA()</code>属于 <strong>实例对象</strong></p><p>在程序运行时， 类 同样 会被加载到内存</p><p>在 <code>python</code>中， 类是一个特殊的对象 – 类对象</p><p>在程序运行时， 类对象 在内存中 只有一份， 使用 一个类 可以创建出 很多个对象实例</p><p>除了封装 实例的 属性 和方法外，类对象 哈可以拥有自己的 属性和方法</p><p>类属性</p><p>类方法</p><p>通过 <code>类名.</code>的方式 可以访问类的属性 或者 调用类的方法</p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/8592/20220705215156.png"  /><h2 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h2><p>在python中，用<code>class</code>关键字加上类名来定义类，通过缩进确定类的代码块。类的代码块中写函数，这些函数是对<strong>一类对象共同的动态特征的提取</strong>。写在类里面的函数我们称之为<strong>方法</strong>。方法是对象的行为，也就是对象可以接收的消息。方法的第一个参数是<code>self</code>，它代表接收这个消息的对象本身。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">类名首字母要大写，Student类中定义了 study 和 play 两个方法。</span></span><br><span class="line"><span class="string">两个方法第一个参数`self`代表接收消息的学生对象，`study`方法的第二个参数是学习的课程名称。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course_name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;学生正在学习<span class="subst">&#123;course_name&#125;</span>.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;学生正在玩游戏.&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="创建和使用对象"><a href="#创建和使用对象" class="headerlink" title="创建和使用对象"></a>创建和使用对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前的stu1 是Student这个类的对象 是一个具体的实例</span></span><br><span class="line"></span><br><span class="line">stu1 = Student()</span><br><span class="line">stu2 = Student()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前输出的值为这个具体实例在内存中的地址 十六进制的值</span></span><br><span class="line"><span class="built_in">print</span>(stu1) <span class="comment"># &lt;__main__.Student object at 0x7f4c9b62af70&gt;</span></span><br><span class="line"><span class="built_in">print</span>(stu2) <span class="comment"># &lt;__main__.Student object at 0x7f4c9b5ffb50&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="built_in">id</span>(stu1)), <span class="built_in">hex</span>(<span class="built_in">id</span>(stu2))) <span class="comment"># 0x7f4c9b62af70 0x7f4c9b5ffb50</span></span><br></pre></td></tr></table></figure><p>定义变量其实是保存 一个对象在内存中的地址（十六进制形式），和用<code>id</code>函数查看的值是相同的。</p><p>通过这个逻辑地址，就能在内存中找到这个对象。</p><p>常见报错，类没有实例化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student.study(<span class="string">&#x27;python&#x27;</span>) <span class="comment"># TypeError: study() missing 1 required positional argument: &#x27;course_name&#x27;</span></span><br></pre></td></tr></table></figure><p>正确写法，在调用类中方法时先 <strong>进行类的实例化</strong>。<strong>类名后加小括号就是类的实例化。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student().study(<span class="string">&#x27;java&#x27;</span>)</span><br><span class="line"><span class="comment"># 学生正在学习java.</span></span><br></pre></td></tr></table></figure><p>也可以将类实例化后赋给一个变量，像<code>stu1 = Student()</code>。后面调用类中的方法时就可以用<code>变量名.方法名</code>来调用方法。例如<code>stu1.play()</code>。</p><h2 id="初始化方法"><a href="#初始化方法" class="headerlink" title="初始化方法"></a>初始化方法</h2><p>上面创建的对象只有行为没有属性，使用<code>__init__</code>方法来初始化属性。</p><p>修改<code>Student</code>类，给学生对象添加<code>name</code>（姓名）和<code>age</code>（年龄）两个属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;初始化方法 给当前对象创建属性&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name, age</span>):</span><br><span class="line">        <span class="comment"># 给当前类添加属性</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course_name</span>):</span><br><span class="line">       <span class="comment"># 属性使用self 进行调用 参数是直接调用</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在学习<span class="subst">&#123;course_name&#125;</span>.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;玩耍&quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在玩游戏.&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于初始化方法除了self之外还有两个参数，所以调用Student 类的构造器创建的对象时要传入这两个参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stu1 = Student(<span class="string">&#x27;john&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">stu1.study(<span class="string">&#x27;python&#x27;</span>) <span class="comment"># john正在学习python.</span></span><br><span class="line"></span><br><span class="line">stu2 = Student(<span class="string">&#x27;smith&#x27;</span>, <span class="number">30</span>)</span><br><span class="line">stu2.play() <span class="comment"># smith正在玩游戏.</span></span><br></pre></td></tr></table></figure><h2 id="打印对象"><a href="#打印对象" class="headerlink" title="打印对象"></a>打印对象</h2><p>在python中，以两个下划线<code>__</code>、开头和结尾的方法通常都是有特殊用途和意义的方法，我们一般称之为 <strong>魔术方法或魔法方法</strong>。</p><p>如果我们在打印对象时候不希望看到对象的地址二十看到我们自定义的信息。可以通过在类中使用<code>__repr__</code>魔术方法来做到。该方法返回的字符串就是用<code>print</code>函数打印对象的时候会显示的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用类中内置魔术方法来实现</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>: <span class="subst">&#123;self.age&#125;</span>&#x27;</span></span><br><span class="line"><span class="comment"># 类实例化    </span></span><br><span class="line">stu1 = Student(<span class="string">&#x27;john&#x27;</span>, <span class="number">20</span>)</span><br><span class="line"><span class="comment"># 打印当前对象</span></span><br><span class="line"><span class="built_in">print</span>(stu1) <span class="comment"># john: 20</span></span><br></pre></td></tr></table></figure><h2 id="面向对象的支柱"><a href="#面向对象的支柱" class="headerlink" title="面向对象的支柱"></a>面向对象的支柱</h2><p>封装： 隐藏一切可以隐藏的实现细节，只向外界暴露简单的调用接口。</p><p>在类型中定义的对象其实是一种封装。在创建对象后，只需要给对象发送一个消息就可以执行方法中的代码，也就是说我们在只知道方法名字和参数（方法外部视图），不知道方法内部实现细节（方法内部视图）的情况下就完成了对方法的使用。</p><p>根据 <strong>职责</strong>将<strong>属性</strong>和<strong>方法</strong>封装到一个抽象的<strong>类</strong>中</p><p>继承：<strong>实现代码的重用</strong>，相同的代码不需要重复编写</p><p>多态：不同的对象调用相同的方法，产生不同的执行结果，<strong>增加代码的灵活度</strong>。</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h3><p><strong>继承的概念</strong>： <strong>子类</strong> 拥有 <strong>父类</strong>的所有<strong>方法</strong>和<strong>属性</strong></p><p>案例1：不使用继承创建两个类<code>动物类</code>和<code>狗类</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">开发两个类</span></span><br><span class="line"><span class="string">动物类</span></span><br><span class="line"><span class="string">狗类</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">动物类具有四个特性</span></span><br><span class="line"><span class="string">吃</span></span><br><span class="line"><span class="string">喝</span></span><br><span class="line"><span class="string">跑</span></span><br><span class="line"><span class="string">睡</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">狗的特性</span></span><br><span class="line"><span class="string">吃</span></span><br><span class="line"><span class="string">喝</span></span><br><span class="line"><span class="string">跑</span></span><br><span class="line"><span class="string">睡</span></span><br><span class="line"><span class="string">汪汪叫</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;汪汪叫&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">laoha = Dog()</span><br><span class="line"></span><br><span class="line">laoha.eat()</span><br><span class="line">laoha.drink()</span><br><span class="line">laoha.run()</span><br><span class="line">laoha.sleep()</span><br><span class="line">laoha.bark()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">当前动物类和狗类的四个方法已经重复了</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如何解决这样的情况</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">继承</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>使用继承特性较少重复代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;汪汪叫&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类实例化</span></span><br><span class="line">laoha = Dog()</span><br><span class="line"><span class="comment"># 调用类中方法</span></span><br><span class="line">laoha.eat()</span><br><span class="line">laoha.drink()</span><br><span class="line">laoha.run()</span><br><span class="line">laoha.sleep()</span><br><span class="line">laoha.bark()</span><br></pre></td></tr></table></figure><h3 id="继承语法"><a href="#继承语法" class="headerlink" title="继承语法"></a>继承语法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">类名</span>(<span class="title class_ inherited__">父类名</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><strong>子类</strong> 继承自 <strong>父类</strong>，可以直接<strong>享受</strong> 父类中 已经封装好的方法，不需要再次开发。</p><p><strong>子类</strong> 中应该根据 职责，封装 子类特有的属性和方法</p><h4 id="专业术语"><a href="#专业术语" class="headerlink" title="专业术语"></a>专业术语</h4><p><code>Dog</code> 类是<code>Animal</code>类的子集，<code>Animal</code>类是<code>Dog</code>类的父类，<code>Dog</code>类从 <code>Animal</code>类继承</p><p><code>Dog</code>类是 <code>Animal</code>类的派生类，<code>Animal</code>类是<code>Dog</code>类的基类，<code>Dog</code>类从 <code>Animal</code>类派生</p><h3 id="继承的传递性"><a href="#继承的传递性" class="headerlink" title="继承的传递性"></a>继承的传递性</h3><p><code>C</code>类从<code>B</code>类继承，<code>B</code>类又从<code>A</code>类继承</p><p>那么<code>C</code>类就具有<code>B</code>类和<code>A</code>类的所有属性和方法</p><p><strong>子类</strong> 拥有 <strong>父类</strong> 以及 <strong>父类的父类</strong> 中封装的所有<strong>属性</strong>和<strong>方法</strong>。</p><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><p>当 父类 的方法实现不能满足子类需求时，可以对方法进行重写。</p><p><code>Dog</code>是<code>XiaoTianQuan</code>的父类，</p><p><code> Animal</code>又是<code>Dog</code>的父类。</p><p>所以<code>XiaoTianQuan</code>可以继承<code>Dog</code>和<code>Animal</code>中定义的所有方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;汪汪叫&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianQuan</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;飞&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类实例化</span></span><br><span class="line">wangwang = XiaoTianQuan()</span><br><span class="line"><span class="comment"># 可以调用自身定义的方法</span></span><br><span class="line">wangwang.fly()</span><br><span class="line"><span class="comment"># 也可以调用父类以及父父类的方法</span></span><br><span class="line">wangwang.bark()</span><br><span class="line">wangwang.run()</span><br></pre></td></tr></table></figure><h3 id="方法的重写"><a href="#方法的重写" class="headerlink" title="方法的重写"></a>方法的重写</h3><p>子类 拥有 父类的 所有方法 和属性</p><p>子类 继承自 父类，可以直接 享受 父类中已经封装好的方法， 不需要再次开发。</p><p>重写 父类方法有两种情况：</p><p>1.覆盖 父类的方法</p><p>如何在开发中， <strong>父类的方法实现</strong> 和 <strong>子类的方法实现</strong>，完全不同。</p><p>就可以使用 <strong>覆盖</strong> 的方法，在子类中 <strong>重新编写</strong> 父类的方法实现</p><p>具体的实现方式，就相当于在 子类中定义了一个 <strong>和父类同名的方法</strong>并且实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;汪汪叫&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianQuan</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;飞&quot;</span>)</span><br><span class="line">    <span class="comment"># bark方法的重写，规则：和继承的方法名称一样。</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;叫的和神一样....&quot;</span>)</span><br><span class="line"></span><br><span class="line">wangwang = XiaoTianQuan()</span><br><span class="line"></span><br><span class="line">wangwang.bark() <span class="comment"># 叫的和神一样....</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">哮天犬是神犬和普通狗叫声不一样,</span></span><br><span class="line"><span class="string">XiaoTianQuan 类中定义自己的方法，由于继承了父类（Dog）类的bark 方法。这里 覆盖父类的bark方法，创建一个和父类同名的方法。来区分神犬的叫声。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h4 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h4><p>在子类中重写了父类的方法后，在进行方法调用时会执行子类中重写的方法。</p><p>2.对父类方法进行扩展</p><p>如果在开发中， <strong>子类的方法实现</strong>中 包含 <strong>父类的方法实现</strong></p><p>父类原本封装的方法实现 是 <strong>子类方法的一部分</strong></p><p>就可以使用 <strong>扩展</strong> 的方式</p><p>1.在子类中 重写 父类的方法</p><p>2.在需要的位置使用<code>super().父类方法</code>来调用父类方法的执行</p><p>3.代码其他的位置针对子类的需求，编写 子类特有的代码实现</p><p>关于 <code>super</code></p><p>在python中<code>super</code>是一个 <strong>特殊的类</strong></p><p><code>super()</code>就是使用<code>super</code>类创建出来的对象</p><p>最常 使用的场景是 在<strong>重写父类方法时</strong>，调用 <strong>在父类中封装的方法实现</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;吃&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喝&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;跑&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;睡&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;汪汪叫&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianQuan</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;飞&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 在当前方法中去调用父类方法</span></span><br><span class="line">        <span class="comment"># 使用super方法</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;叫的和神一样....&quot;</span>)</span><br><span class="line">        <span class="comment"># super() 也是一个对象</span></span><br><span class="line">        <span class="built_in">super</span>().bark()</span><br><span class="line">        <span class="comment"># 当前的子类方法进行扩展</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个测试...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wangwang = XiaoTianQuan()</span><br><span class="line"></span><br><span class="line">wangwang.bark() </span><br><span class="line"><span class="comment"># 叫的和神一样....</span></span><br><span class="line"><span class="comment"># 汪汪叫</span></span><br><span class="line"><span class="comment"># 这是一个测试...</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">XiaoTianQuan类不仅要调用自身的bark方法，也要调用它所继承父类（Dog）的bark方法。</span></span><br><span class="line"><span class="string">使用super().方法 来实现</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>调用父类方法的另外一种方式</p><p>在 <code>python2.x</code> 中，如果需要调用父类的方法，还可以使用以下方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父类名.方法(self)</span><br></pre></td></tr></table></figure><p>这种方式，目前在<code>python 3.x</code>还支持这种方式</p><p>这种方式 <strong>不推荐使用</strong>，因为一旦 <strong>父类发生变化</strong>，方法调用位置的 <strong>类名</strong> 同样需要修改</p><h4 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h4><p>在开发中，<code>父类名</code>和<code>super()</code>两种方式不要混用</p><p>如果使用 <strong>当前子类名</strong> 调用方法，会形成递归调用，<strong>出现死循环</strong>。</p><h3 id="父类的-私有属性-和私有方法"><a href="#父类的-私有属性-和私有方法" class="headerlink" title="父类的 私有属性 和私有方法"></a>父类的 私有属性 和私有方法</h3><p>1.<strong>子类对象 不能</strong>在自己的方法内部，<strong>直接</strong>访问父类的 <strong>私有属性</strong>或<strong>私有方法</strong></p><p>2.<strong>子类对象</strong> 可以通过 <strong>父类</strong>的<strong>公有方法</strong>间接访问到 <strong>私有属性或私有方法</strong></p><p>私有属性、方法是对象的隐私，不对外公开，<strong>外界</strong>以及<strong>子类</strong>都不能直接访问。</p><p>示例</p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/8592/20220704203316.png"  /><p><strong>代码理解父类的私有属性和私有方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="comment"># 创建类属性</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 公共属性</span></span><br><span class="line">        self.num_1 = <span class="number">100</span></span><br><span class="line">        <span class="comment"># 私有属性</span></span><br><span class="line">        self.__num_2 = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建私有方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;私有属性与公共属性的值：<span class="subst">&#123;self.num_1&#125;</span>, <span class="subst">&#123;self.__num_2&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">demo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 父类方法</span></span><br><span class="line">        <span class="built_in">super</span>().__test()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">B 具有父类的所有属性和方法</span></span><br><span class="line"><span class="string">如果是私有属性和私有方法的情况下 不可以直接去使用。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用子类去打印父类的公共属性</span></span><br><span class="line"><span class="built_in">print</span>(b.num_1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印父类中的私有属性 我们不可以直接打印弗莱的私有属性</span></span><br><span class="line"><span class="built_in">print</span>(b.__num_2) <span class="comment"># AttributeError: &#x27;B&#x27; object has no attribute &#x27;__num_2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用父类中的私有方法 不允许子类直接去调用父类的私有方法</span></span><br><span class="line">b.demo() <span class="comment"># AttributeError: &#x27;super&#x27; object has no attribute &#x27;_B__test&#x27;</span></span><br></pre></td></tr></table></figure><p>子类访问父类的私有属性和私有方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.num_1 = <span class="number">100</span></span><br><span class="line">        self.__num_2 = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建私有方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;私有属性与公共属性的值：<span class="subst">&#123;self.num_1&#125;</span>, <span class="subst">&#123;self.__num_2&#125;</span>&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建公有方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;父类中的公共方法输出私有属性: <span class="subst">&#123;self.__num_2&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="comment"># 在公有方法中调用私有方法</span></span><br><span class="line">        self.__test()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="comment"># 公有方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">demo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 1. 在子类方法中访问父类的公共属性</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;子类方法输出父类中的公有属性:<span class="subst">&#123;self.num_1&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="comment"># 2. 在子类中调用父类的公有方法输出私有属性</span></span><br><span class="line">        self.test()</span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line">b.demo()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">子类方法输出父类中的公有属性:100</span></span><br><span class="line"><span class="string">父类中的公共方法输出私有属性: 200</span></span><br><span class="line"><span class="string">私有属性与公共属性的值：100, 200</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>子类 可以拥有 多个父类，并且具有 所有父类的属性 和方法</p><p>例如： 孩子 会继承自己 父亲和母亲的特性</p><p><strong>语法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">子类名</span>(父类名<span class="number">1</span>, 父类名<span class="number">2.</span>..):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;test 方法&quot;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">demo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;demo 方法&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A, B):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建C类对象</span></span><br><span class="line"></span><br><span class="line">c = C()</span><br><span class="line">c.test()</span><br><span class="line">c.demo()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">在python中 面向对象是支持多个类进行继承的</span></span><br><span class="line"><span class="string">子类同时具有父类中的所有方法和所有属性</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="多继承的使用注意事项"><a href="#多继承的使用注意事项" class="headerlink" title="多继承的使用注意事项"></a>多继承的使用注意事项</h3><p>如果 不同的父类 中存在 同名的方法，子类对象 在调用方法时，会调用 哪一个父类中的方法呢？</p><p>提示：开发时，应该尽量避免这种容易产生混淆的情况！ —— 如果 父类之间存在同名的属性或者方法，应该尽量避免使用多继承。</p><h3 id="python-中的MRO——方法搜索顺序"><a href="#python-中的MRO——方法搜索顺序" class="headerlink" title="python 中的MRO——方法搜索顺序"></a>python 中的MRO——方法搜索顺序</h3><p>python中针对 类 提供了一个 内置属性 <code>__mro__</code>可以查看 方法 搜索顺序</p><p>MOR是 <code>method resolution order</code>,主要用于 在多继承时判断方法、属性的调用路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C.__mro__)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.C&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.A&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.B&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure><p>在搜索方法时，是按照<code>__mro__</code>的输出结果 <strong>从左到右</strong>的顺序查找的</p><p>如果在当前类中<strong>找到方法，就直接执行，不再搜索。</strong></p><p>如果 <strong>没有找到，就查找下一个类</strong> 中是否有对应的方法，如果找到，就直接执行，不再搜索。</p><p>如果找到最后一个类，还没有找到方法，程序报错。</p><h3 id="新式类和旧式类（经典类）"><a href="#新式类和旧式类（经典类）" class="headerlink" title="新式类和旧式类（经典类）"></a>新式类和旧式类（经典类）</h3><p><code>object</code>是python为所有对象提供的 <strong>基类</strong>，提供有一些内置的属性和方法，可以使用<code>dir</code>函数查看。</p><p>新式类： 以<code>object</code>为基类，推荐使用</p><p>经典类：  不以<code>object</code>为基类，不推荐使用</p><p>在<code>python 3.x</code>中定义类时，如果没有指定父类，会默认使用<code>object</code>作为该类的 基类——<code>python3.x</code>中定义的类都是 新式类</p><p>在<code>python 2.x</code>中定义类时，如果没有指定父类，不会以<code>object</code>作为基类。</p><p>新式类  和 经典类 在多继承时—会影响到方法的搜索顺序</p><p>为了保证编写的代码能够同时在<code>Python2.x</code>和<code>Python3.x</code>运行！今后在定义类时，如果没有父类，建议统一继承自<code>object</code>。</p><p><strong>在python3中如果不指定继承关系那么默认继承object。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span>(A)</span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__weakref__&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="可见性和属性的装饰器"><a href="#可见性和属性的装饰器" class="headerlink" title="可见性和属性的装饰器"></a>可见性和属性的装饰器</h2><p>对象的方法通常是公开（public）的，因为公开的方法是对象能够接收的消息，也是对象暴露给外界的调用接口。可以用<code>__name</code>表示一个私有属性，<code>_name</code>表示一个受保护属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="comment"># 设置两个私有属性 name 和 age</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name, age</span>):</span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course_name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在学习<span class="subst">&#123;course_name&#125;</span>.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在玩游戏.&#x27;</span>)</span><br><span class="line"><span class="comment"># 类实例化， __init__函数中定义了2个参数，这里要传入两个参数。</span></span><br><span class="line">stu1 = Student(<span class="string">&quot;john&quot;</span>, <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试调用私有属性 name。抛出异常。</span></span><br><span class="line">stu1.study(<span class="string">&quot;python&quot;</span>) <span class="comment"># AttributeError: &#x27;Student&#x27; object has no attribute &#x27;__name&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由此可见，以<code>__</code>开头的属性<code>__name</code>是私有的，在类的外面无法直接访问，但是在类里面的<code>study</code>方法中可以通过<code>self.__name</code>访问该属性。</p><p>那么有没有方法在类的外面也能访问私有属性呢？</p><p>可以，需要更换名字规则。<code>对象._类名__方法名</code>这种形式来读取私有属性。或者使用下面的装饰器来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stu1 = Student(<span class="string">&quot;john&quot;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(stu1._Student__name, stu1._Student__age) <span class="comment"># john 18 </span></span><br></pre></td></tr></table></figure><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><p>python中可以通过<code>property</code>装饰器为“私有”属性提供读取和修改的方法。装饰器通常会放在类、函数或方法的声明之前，通过一个<code>@</code>符号表示将装饰器应用于类、函数或方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name, age</span>):</span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__age = age</span><br><span class="line">    <span class="comment"># 私有属性读取（getter方法）- 获取__name属性</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line">    <span class="comment"># 私有属性修改器（setter方法）- 修改__name属性</span></span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="comment"># 如果name 参数不为空就赋值给对象的__name属性</span></span><br><span class="line">        <span class="comment"># 否则将__name属性赋值为&#x27;无名氏&#x27;,有两种写法</span></span><br><span class="line">        <span class="comment"># self.__name = name if name else &#x27;无名氏&#x27;</span></span><br><span class="line">        self.__name = name <span class="keyword">or</span> <span class="string">&#x27;无名氏&#x27;</span></span><br><span class="line">    <span class="comment"># 获取私有属性</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course_name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在学习<span class="subst">&#123;course_name&#125;</span>.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>正在玩游戏.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">stu1 = Student(<span class="string">&#x27;smith&#x27;</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(stu1.age, stu1.name) <span class="comment"># 20 smith</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改私有属性name的值，设置为空会触发私有属性修改器@name.setter。</span></span><br><span class="line">stu1.name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(stu1.name) <span class="comment"># 无名氏</span></span><br></pre></td></tr></table></figure><h2 id="动态属性"><a href="#动态属性" class="headerlink" title="动态属性"></a>动态属性</h2><p>在python中，我们可以动态为对象添加属性。python是动态类型语言。</p><p>对象的方法本质上也是对象的属性，如果给对象发送一个无法接收的信息，引发的异常仍然是<code>AttributeError</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">    </span><br><span class="line">stu = Student(<span class="string">&#x27;john&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># 想要在不修改当前类的代码的情况下，去添加一个sex属性</span></span><br><span class="line">stu.sex = <span class="string">&quot;女&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(stu.name, stu.age, stu.sex) <span class="comment"># john 18 女</span></span><br></pre></td></tr></table></figure><p>如果不希望再使用对象时动态的为对象添加属性，可以使用python的<code>__slots__</code>魔法方法。对于<code>Student</code>类来说，可以在类中指定<code>__slots__ = (&#39;name&#39;, &#39;age&#39;)</code>，这样<code>Student</code>类的对象只能有name 和 age 属性。如果想动态添加其他属性会引发异常。</p><p>注意添加位置，要在<code>__init__</code>方法之前添加。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    __slots__ = (<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">    </span><br><span class="line">stu = Student(<span class="string">&#x27;john&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># 想要在不修改当前类的代码的情况下，去添加一个属性</span></span><br><span class="line"></span><br><span class="line">stu.sex = <span class="string">&quot;女&quot;</span></span><br><span class="line"><span class="built_in">print</span>(stu.name, stu.age, stu.sex) <span class="comment"># AttributeError: &#x27;Student&#x27; object has no attribute &#x27;sex&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="静态方法和类方法"><a href="#静态方法和类方法" class="headerlink" title="静态方法和类方法"></a>静态方法和类方法</h2><p>在类中定义的方法都是对象方法，这些方法都是对象可以接收消息。</p><p>静态方法和类方法是发送给类对象的消息。</p><p>举例：</p><p>定义一个三角形类，通过传入三条边的长度来构造三角形，并提供计算周长和面积的方法。计算周长和面积肯定是三角形对象的方法，这一点毫无疑问。但是在创建三角形对象时，传入的三条边长未必能构造出三角形，为此我们可以先写一个方法来验证给定的三条边长是否可以构成三角形，这种方法很显然就不是对象方法，因为在调用这个方法时三角形对象还没有创建出来。我们可以把这类方法设计为静态方法或类方法，也就是说这类方法不是发送给三角形对象的消息，而是发送给三角形类的消息，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;三角形类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a, b, c</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法&quot;&quot;&quot;</span></span><br><span class="line">        self.a = a</span><br><span class="line">        self.b = b</span><br><span class="line">        self.c = c</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_valid</span>(<span class="params">a,b,c</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;判断三条边长能否构成三角形（静态方法）&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> a + b &gt; c <span class="keyword">and</span> b + c &gt; b</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @classmethod</span></span><br><span class="line">    <span class="comment"># def is_valid(cls, a, b, c):</span></span><br><span class="line">    <span class="comment">#     &quot;&quot;&quot;判断三条边长能否构成三角形（类方法）&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment">#     return  a + b &gt; c and b + c &gt; b</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">perimeter</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算周长&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.a + self.a + self.c</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">area</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算面积&quot;&quot;&quot;</span></span><br><span class="line">        p = self.perimeter() / <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> (p * (p - self.a) * (p - self.b) * (p - self.c)) ** <span class="number">0.5</span></span><br><span class="line"><span class="comment"># 正常调用，需要先进行类的实例化。</span></span><br><span class="line">triangle = Triangle(<span class="number">10</span> ,<span class="number">20</span> ,<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(triangle.perimeter()) <span class="comment"># 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用静态方法中定义的属性，不需要对当前类进行实例化，可以直接调用。类方法也一样。</span></span><br><span class="line"><span class="built_in">print</span>(Triangle.is_valid(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>)) <span class="comment"># False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>在调用静态方法时，不需要对当前类进行实例化，可以直接使用<code>类名.方法</code>。</p><p>静态方法和类方法的区别</p><p>1.静态方法传入的参数都是普通参数</p><p>2.类方法的参数第一位必须是cls</p><p>class简写，代表当前的方法是属于当前的类</p><p>静态方法是不和当前类进行绑定的，可以看成一个单独的函数。</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>面向对象三大特性</p><p>1.<strong>封装</strong> 根据 <strong>职责</strong> 将<strong>属性</strong> 和 <strong>方法</strong> 封装到一个抽象的<strong>类</strong>中</p><p>定义类的准则</p><p>2.<strong>继承 实现代码的重用</strong>，相同的代码不需要重复的编写</p><p>设计类的技巧</p><p>子类针对自己特有的需求，编写特有的代码</p><p>3.<strong>多态</strong> 不同的<strong>子类对象</strong> 调用相同的<strong>父类方法</strong>，产生不同的执行结果</p><p><strong>多态</strong> 可以 <strong>增加代码的灵活度</strong></p><p>以 <strong>继承</strong> 和 <strong>重写父类方法</strong> 为前提</p><p>是调用方法的技巧，不会影响到内部设计.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;人类需要工作&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序员</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;程序员在工作--代码&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设计师</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;设计师在工作--图纸&#x27;</span>)</span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line">c = C()</span><br><span class="line"></span><br><span class="line">c.work()</span><br><span class="line">b.work()</span><br></pre></td></tr></table></figure><h3 id="多态案例演练"><a href="#多态案例演练" class="headerlink" title="多态案例演练"></a>多态案例演练</h3><p><strong>需求</strong></p><p>1.在<code>Dog</code>类中封装方法<code>game</code></p><p>普通狗只是简单的玩耍</p><p>2.定义<code>XiaoTianDog</code>继承自<code>Dog</code>，并且重写<code>game</code>方法</p><p>哮天犬需要在天上玩耍</p><p>3.定义<code>Person</code>类，并且封装一个 和狗玩 的方法</p><p>在方法内部，直接让狗对象 调用 <code>game</code>方法</p><p><strong>案例小结</strong></p><p><code>Person</code>类中只需要让 狗对象 调用<code>game</code>方法，而不关心具体是什么狗</p><p><code>game</code>方法是在<code>Dog</code>父类中定义的</p><p>在程序执行时，传入不同的 狗对象 实参，就会产生不同的执行效果</p><p>多态更容易编写出通用的代码，做出通用的编程，以适应需求的不断变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line">    <span class="comment"># 定义类属性</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 在蹦蹦跳跳的玩耍...&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianDog</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 当前的哮天犬和普通的狗不一样</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    子类继承父类的时候 具有父类的所有属性和方法</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 飞到天上去玩耍...&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name  = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game_with_dog</span>(<span class="params">self, dog</span>):</span><br><span class="line">        <span class="comment"># 让狗玩耍</span></span><br><span class="line">        dog.game()</span><br><span class="line">        <span class="comment"># 让狗与人一起玩耍</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 和 %s 快乐的玩耍...&#x27;</span> % (self.name, dog.name))    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个普通狗对象</span></span><br><span class="line"><span class="comment"># wangcai = Dog(&#x27;旺财&#x27;)</span></span><br><span class="line"></span><br><span class="line">wangcai = XiaoTianDog(<span class="string">&#x27;旺财&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建一个人的对象</span></span><br><span class="line">xiaoming = Person(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line"></span><br><span class="line">xiaoming.game_with_dog(wangcai)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">旺财 在蹦蹦跳跳的玩耍...</span></span><br><span class="line"><span class="string">小明 和 旺财 快乐的玩耍...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">旺财 飞到天上去玩耍...</span></span><br><span class="line"><span class="string">小明 和 旺财 快乐的玩耍...</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">多态的运行情况</span></span><br><span class="line"><span class="string">    我们在调用子类中的同名方法时 输出的值不一样</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    继承和重写的</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http和https各种方法测试</title>
      <link href="/2022/06/30/http%E5%92%8Chttps%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/06/30/http%E5%92%8Chttps%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>测试网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://httpbin.org/</span><br></pre></td></tr></table></figure><h2 id="http所有方法"><a href="#http所有方法" class="headerlink" title="http所有方法"></a>http所有方法</h2><h3 id="get"><a href="#get" class="headerlink" title="get"></a>get</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/get&#x27;</span></span><br><span class="line">get_html_text(url)</span><br></pre></td></tr></table></figure><p>返回数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62b26fdb-5f9089b418e89e7533cd64f7&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;124.64.235.140&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="带请求头和不带请求头访问区别"><a href="#带请求头和不带请求头访问区别" class="headerlink" title="带请求头和不带请求头访问区别"></a>带请求头和不带请求头访问区别</h3><h4 id="不带请求头"><a href="#不带请求头" class="headerlink" title="不带请求头"></a>不带请求头</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/user-agent&#x27;</span></span><br><span class="line">get_html_text(url)</span><br></pre></td></tr></table></figure><p>结果</p><p>只显示原始请求，有些网站会拒绝访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;user-agent&quot;: &quot;python-requests/2.25.1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="带请求头"><a href="#带请求头" class="headerlink" title="带请求头"></a>带请求头</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/user-agent&#x27;</span></span><br><span class="line">get_html_text(url)</span><br></pre></td></tr></table></figure><p>结果</p><p>可以伪装成任意设备。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h3><p>请求头带cookies请求资源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">auth_html</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookies&#x27;</span>: <span class="string">&#x27;stale_after=never; fake=fake_value; last_nonce=65ef22149cc1c4c4214bf968aab45271&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html, r.status_code)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/get&#x27;</span></span><br><span class="line">auth_html(url)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;stale_after=never; fake=fake_value; last_nonce=65ef22149cc1c4c4214bf968aab45271&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62b28149-3ba69f2e27ccba90684da343&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;124.64.235.140&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="post"><a href="#post" class="headerlink" title="post"></a>post</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/post&#x27;</span></span><br><span class="line">get_html_text(url)</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;,  </span><br><span class="line">  <span class="string">&quot;data&quot;</span>: <span class="string">&quot;&quot;</span>,  </span><br><span class="line">  <span class="string">&quot;files&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;form&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62b2706d-7f50d849381586d306230274&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;json&quot;</span>: null,</span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;124.64.235.140&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/post&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想带数据post,可以加入参数，请求结果显示出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">    params = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;jack&#x27;</span>&#125;</span><br><span class="line">    r = requests.post(url, headers=headers, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/post&#x27;</span></span><br><span class="line">post_html_text(url)</span><br></pre></td></tr></table></figure><p>请求结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;jack&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;files&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">&quot;form&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-62b27146-6d5aa1171e476ed97757a9a5&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;json&quot;</span>: null,</span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;124.64.235.140&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/post?name=jack&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="auth认证"><a href="#auth认证" class="headerlink" title="auth认证"></a>auth认证</h3><p>请求头中加入<code>authorization</code>，带着请求头去请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">def auth_html(url):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;authorization&#x27;</span>: <span class="string">&#x27;Basic MTIzOjEyMw==&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">    params = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;jack&#x27;</span>&#125;</span><br><span class="line">    r = requests.get(url, headers=headers, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == 200:</span><br><span class="line">        html = r.text</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;访问失败&quot;</span>)</span><br><span class="line">        </span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/basic-auth/123/123&#x27;</span></span><br><span class="line">auth_html(url)</span><br></pre></td></tr></table></figure><p>请求结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;authenticated&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;user&quot;</span>: <span class="string">&quot;123&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>MTIzOjEyMw==</code>是<code>base64</code>加密后的。</p><p>解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MTIzOjEyMw==&quot;</span> | base64 -d</span><br><span class="line">123:123</span><br></pre></td></tr></table></figure><p>也可以直接浏览器测试认证功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://httpbin.org/basic-auth/用户名/密码</span><br></pre></td></tr></table></figure><p>浏览器f2 过滤无关元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.js -.jpg -.css -.gif -.png -.ico -.webp</span><br></pre></td></tr></table></figure><h3 id="linux系统命令行请求"><a href="#linux系统命令行请求" class="headerlink" title="linux系统命令行请求"></a>linux系统命令行请求</h3><h4 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">&quot;http://httpbin.org/get&quot;</span> -H <span class="string">&quot;accept: application/json&quot;</span> -H <span class="string">&quot;user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&quot;</span></span><br></pre></td></tr></table></figure><h4 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST <span class="string">&quot;http://httpbin.org/post&quot;</span> -H <span class="string">&quot;accept: application/json&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux垃圾桶</title>
      <link href="/2022/06/30/linux%E5%9E%83%E5%9C%BE%E6%A1%B6/"/>
      <url>/2022/06/30/linux%E5%9E%83%E5%9C%BE%E6%A1%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="rm垃圾桶"><a href="#rm垃圾桶" class="headerlink" title="rm垃圾桶"></a>rm垃圾桶</h2><p>rm命令杀伤力很大，如果误删了系统文件，会很麻烦。所以，给linux系统建立一个垃圾桶，是很有必要的，详情参考<a href="https://www.2daygeek.com/rm-command-to-move-files-to-trash-can-rm-alias/">Make “rm” Command To Move The Files To “Trash Can”</a>。</p><p>1、下载安装saferm.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lagerspetz/linux-stuff</span><br><span class="line">sudo mv linux-stuff/scripts/saferm.sh /bin</span><br><span class="line">rm -Rf linux-stuff</span><br></pre></td></tr></table></figure><p>2、编辑<code>.bashrc</code>文件，末尾添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias rm=saferm.sh</span><br><span class="line">alias sudo=&#x27;sudo &#x27;</span><br></pre></td></tr></table></figure><p>3、使环境生效<br><code>source .bashrc</code><br>之后，再使用<code>rm</code>或者<code>sudo rm</code>命令，实际上执行的是mv操作，移动文件到Trash目录。</p><h2 id="本机外网IP获取"><a href="#本机外网IP获取" class="headerlink" title="本机外网IP获取"></a>本机外网IP获取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://ifconfig.me/ </span><br><span class="line">或</span><br><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装jupyter</title>
      <link href="/2022/06/30/docker%E5%AE%89%E8%A3%85jupyter/"/>
      <url>/2022/06/30/docker%E5%AE%89%E8%A3%85jupyter/</url>
      
        <content type="html"><![CDATA[<h1 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h1><p>1、登录dockerhub查看需要的<a href="https://hub.docker.com/r/jupyter/base-notebook/">Jupyter - Docker Official Images</a>。</p><p>2、下载jupyter镜像（以6.4.12为例）<br><code>docker pull jupyter/base-notebook:notebook-6.4.12</code></p><p>3、创建配置目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/jupyter/jovyan</span><br><span class="line">mkdir -p /opt/jupyter/jovyan/.jupyter</span><br><span class="line">chmod 777 -R /opt/jupyter/jovyan</span><br></pre></td></tr></table></figure><p>4、启动jupyter服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --name vk-jupyter -d \</span><br><span class="line">-p 8888:8888 \</span><br><span class="line">-v /opt/jupyter/jovyan:/home/jovyan \</span><br><span class="line">jupyter/base-notebook:notebook-6.4.12</span><br></pre></td></tr></table></figure><p>以上命令：</p><ul><li>命名容器为vk-jupyter，后台运行</li><li>映射宿主机8888端口到容器的8888端口</li><li>挂载宿主机目录&#x2F;opt&#x2F;jupyter&#x2F;jovyan到容器目录&#x2F;home&#x2F;jovyan</li></ul><p>更多启动命令参数可以参考<a href="https://jupyter-docker-stacks.readthedocs.io/en/latest/index.html">Jupyter Docker Stacks</a>。</p><p>5、验证安装<br><code>docker ps</code>，jupyter启动正常的话就可以看到vk-jupyter容器。</p><p>浏览器访问 <a href="http://阿里云ip:8888/">http://aliyunip:8888</a> ，可以看到Jupyter登录页面。</p><p>6、登录<br><code>docker exec -it vk-jupyter jupyter notebook list</code><br>可以查看到登录需要的token，使用token即可登录进入jupyter编辑页面。</p><h1 id="配置jupyter"><a href="#配置jupyter" class="headerlink" title="配置jupyter"></a>配置jupyter</h1><p>1、设置密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it vk-jupyter jupyter notebook password</span><br><span class="line">docker restart vk-jupyter</span><br></pre></td></tr></table></figure><p>2、使用密码<br>浏览器访问 <a href="http://aliyunip:8888/">http://aliyunip:8888</a><br>此时使用自己设置的密码就可以访问jupyter了。</p><p>3、根目录<br>jupyter编辑器的默认根目录为 &#x2F;home&#x2F;jovyan ，对应宿主机目录 &#x2F;opt&#x2F;jupyter&#x2F;jovyan ，创建的目录和文件都去这个路径下面去找。</p><h1 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h1><p>jupyter 使用了 websocket 协议，所以需要配置支持 websocket。<br>如果不配置的话，通过域名访问时会报错无法连接内核，也就无法运行python脚本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name jupyter.voidking.com;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_set_header   Host             $host;</span><br><span class="line">        proxy_set_header   X-Real-IP        $remote_addr;</span><br><span class="line">        proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">        proxy_pass http://172.17.12.85:8888;</span><br><span class="line"></span><br><span class="line">        # WebSocket support</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="jupyter小技巧"><a href="#jupyter小技巧" class="headerlink" title="jupyter小技巧"></a>jupyter小技巧</h1><h2 id="执行bash"><a href="#执行bash" class="headerlink" title="执行bash"></a>执行bash</h2><p>在代码框里输入叹号+bash命令，即可执行bash，例如：<br><code>!ls -l</code></p><h2 id="登录进容器"><a href="#登录进容器" class="headerlink" title="登录进容器"></a>登录进容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it vk-jupyter /bin/bash</span><br><span class="line">docker exec --user root -it vk-jupyter /bin/bash</span><br></pre></td></tr></table></figure><h2 id="安装常用命令"><a href="#安装常用命令" class="headerlink" title="安装常用命令"></a>安装常用命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec --user root -it vk-jupyter /bin/bash</span><br><span class="line">apt update</span><br><span class="line">apt install curl</span><br><span class="line">apt install unzip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu20.04安装docker</title>
      <link href="/2022/06/29/ubuntu20.04%E5%AE%89%E8%A3%85docker/"/>
      <url>/2022/06/29/ubuntu20.04%E5%AE%89%E8%A3%85docker/</url>
      
        <content type="html"><![CDATA[<h2 id="ubuntu20-04安装docker"><a href="#ubuntu20-04安装docker" class="headerlink" title="ubuntu20.04安装docker"></a>ubuntu20.04安装docker</h2><h3 id="操作系统要求"><a href="#操作系统要求" class="headerlink" title="操作系统要求"></a>操作系统要求</h3><ul><li>Docker只支持64位版本的 Ubuntu 18.04 LTS、20.04 LTS、21.04、21.10 操作系统，更旧的 Ubuntu 操作系统如 16.04 官方已不再维护；</li><li>Docker Engine 支持 x86_64 (or amd64)、armhf、arm64、s390x 体系架构。</li></ul><h3 id="卸载旧版本的-Docker-Engine"><a href="#卸载旧版本的-Docker-Engine" class="headerlink" title="卸载旧版本的 Docker Engine"></a>卸载旧版本的 Docker Engine</h3><p>Docker的旧版本被称为docker，docker.io或docker-engine。如果安装了这些，请卸载它们：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="built_in">remove</span> docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><p>如果您想<strong>保留现有数据</strong>，那么<strong>直接进入下一步</strong>即可。<br>如果您<strong>不想保留现有数据（可选）</strong>，如 image、container、volume等，执行下面的命令，相比remove命令，purge会同时清除软件包和软件的配置文件。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> purge docker-<span class="keyword">ce</span> docker-<span class="keyword">ce</span>-cli containerd.io</span><br></pre></td></tr></table></figure><p>主机上的 image、container、volume 或自定义配置文件不会自动删除。要删除所有映像、容器和卷，执行下面的命令，删除对应的文件夹：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf <span class="regexp">/var/</span>lib/docker</span><br><span class="line">sudo rm -rf <span class="regexp">/var/</span>lib/containerd</span><br></pre></td></tr></table></figure><p>卸载完成。</p><h3 id="Docker-Engine-安装方法"><a href="#Docker-Engine-安装方法" class="headerlink" title="Docker Engine 安装方法"></a>Docker Engine 安装方法</h3><p>官方提供了三种安装 Docker Engine 的方法：</p><ul><li>大多数用户设置 Docker 的仓库，使用包管理器安装，以便于安装和升级任务，这是推荐的方法；</li><li>一些用户下载 deb 包并手动安装，完全手动管理升级。这在诸如在无法访问 Internet 的系统上安装 Docker 等情况下很有用；</li><li>在测试和开发环境中，一些用户选择使用自动化脚本来安装 Docker。</li></ul><p><strong>本文只介绍 <a href="https://link.segmentfault.com/?enc=lLD6lBFPEHRPtpZvEneGSQ==.4jwlQxH0tZwVG+6XAbuKKMQZmLd5XhJi0rdlWSALk+4gW5PXb+ipKzm17sB8jUE6">Docker Engine 官方安装-Ubuntu</a> 中的第一种方法——使用包管理器安装</strong>。</p><h4 id="设置-Docker-Engine-存储库"><a href="#设置-Docker-Engine-存储库" class="headerlink" title="设置 Docker Engine 存储库"></a>设置 Docker Engine 存储库</h4><p>① 更新 apt 包索引并安装 ca-certificates、curl、gnupg、lsb-release等，以允许 apt 通过 HTTPS 使用存储库;</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> install ca-certificates curl gnupg lsb-<span class="keyword">release</span></span><br></pre></td></tr></table></figure><p>② 添加 Docker 的官方 GPG 密钥;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https:<span class="regexp">//</span>download.docker.com<span class="regexp">/linux/u</span>buntu<span class="regexp">/gpg | sudo gpg --dearmor -o /u</span>sr<span class="regexp">/share/</span>keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>③ 使用下面命令设置 stable 仓库。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo \</span><br><span class="line">  <span class="string">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  $(lsb_release -cs) stable&quot;</span> | sudo tee <span class="regexp">/etc/</span>apt<span class="regexp">/sources.list.d/</span>docker.list &gt; <span class="regexp">/dev/</span><span class="keyword">null</span></span><br></pre></td></tr></table></figure><h4 id="安装-Dokcer-Engine"><a href="#安装-Dokcer-Engine" class="headerlink" title="安装 Dokcer Engine"></a>安装 Dokcer Engine</h4><p>安装最新版本的 Dokcer Engine：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install docker-<span class="keyword">ce</span> docker-<span class="keyword">ce</span>-cli containerd.io</span><br></pre></td></tr></table></figure><p>安装指定版本的 Dokcer Engine，首先使用cpt-cache命令查看仓库中 docker-ce 的版本，选择对应的版本，使用install命令安装。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-cache madison docker-ce</span><br><span class="line">sudo apt-<span class="built_in">get</span> install <span class="attribute">docker-ce</span>=&lt;VERSION_STRING&gt; <span class="attribute">docker-ce-cli</span>=&lt;VERSION_STRING&gt; containerd.io</span><br></pre></td></tr></table></figure><h4 id="更新-Dokcer-Engine"><a href="#更新-Dokcer-Engine" class="headerlink" title="更新 Dokcer Engine"></a>更新 Dokcer Engine</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> update</span><br><span class="line">sudo apt-<span class="built_in">get</span> upgrade</span><br></pre></td></tr></table></figure><h3 id="Docker-Compose-安装方法"><a href="#Docker-Compose-安装方法" class="headerlink" title="Docker Compose 安装方法"></a>Docker Compose 安装方法</h3><h4 id="Docker-Compose-稳定版-1-29-2-安装"><a href="#Docker-Compose-稳定版-1-29-2-安装" class="headerlink" title="Docker Compose 稳定版 1.29.2 安装"></a>Docker Compose 稳定版 1.29.2 安装</h4><p>下面的步骤来自于 <a href="https://link.segmentfault.com/?enc=Gy2ATrLdA0KIIHYJGgkMpQ==.rgr4laT9Mz9YRNWFMReqNfCKhl6HG9TV1OInbtJvwaseSCB5zmL3x42m4dHB4Owd">Docker Compose 官方安装-Ubuntu </a>。</p><p>目前 Docker Compose 的稳定版为 1.29.2。<br>运行下面的命令将 Docker Compose 1.29.2 的二进制版本安装到 <code>/usr/local/bin/docker-compose</code> 中。<br>要安装不同版本的 Compose，请将 1.29.2 替换为您要使用的 Compose 版本。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br></pre></td></tr></table></figure><p>对二进制文件 <code>/usr/local/bin/docker-compose</code> 赋予可执行权限。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br></pre></td></tr></table></figure><p>测试是否安装成功，正确输出 compose 版本号，即成功。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h4 id="Docker-Compose-V2-安装"><a href="#Docker-Compose-V2-安装" class="headerlink" title="Docker Compose V2 安装"></a>Docker Compose V2 安装</h4><p>对Docker Compose V2有兴趣，请访问 <a href="https://link.segmentfault.com/?enc=sNT2ZtN6ng80IkgNEUeryw==.6uyB92O7HdbkBDhQtlxCoqfuoICOTkwXDKTXsxdThN+GQV9fRXHSdq9tb+J9QenQ">Compose V2</a> ，来进行安装。</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据结构总结</title>
      <link href="/2022/06/13/Python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93/"/>
      <url>/2022/06/13/Python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="可变和不可变类型"><a href="#可变和不可变类型" class="headerlink" title="可变和不可变类型"></a>可变和不可变类型</h2><ul><li><strong>不可变类型</strong>，内存中的数据不允许被修改：<ul><li>数字类型 <code>int</code>, <code>bool</code>, <code>float</code>, <code>complex</code>, <code>long(2.x)</code></li><li>字符串 <code>str</code></li><li>元组 <code>tuple</code></li></ul></li><li><strong>可变类型</strong>，内存中的数据可以被修改：<ul><li>列表 <code>list</code></li><li>字典 <code>dict</code></li><li>集合<code>set</code></li></ul></li></ul><h3 id="哈希-hash"><a href="#哈希-hash" class="headerlink" title="哈希 (hash)"></a>哈希 (hash)</h3><p>Python 中内置有一个名字叫做 hash(o) 的函数<br>接收一个不可变类型的数据作为参数<br>返回结果是一个整数<br>哈希是一种算法,其作用就是提取数据的特征码（指纹）<br>相同的内容得到相同的结果<br>不同的内容得到不同的结果<br>在Python 中，设置字典的键值对时，会首先对key进行hash已决定如何在内存中保存字典的数据，以方便后续对字典的操作：增、删、改、查<br>键值对的key 必须是不可变类型数据<br>键值对的value 可以是任意类型的数据</p><h3 id="可以hash的类型"><a href="#可以hash的类型" class="headerlink" title="可以hash的类型"></a>可以hash的类型</h3><h4 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成元组类型</span></span><br><span class="line">tuple()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">tuple1 = (1,2,3)</span><br><span class="line"><span class="comment">#可以hash</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(tuple1)) <span class="comment"># 529344067295497451</span></span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成字符串类型</span></span><br><span class="line">str()</span><br><span class="line">str1 = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(str1)) <span class="comment"># 8722840457505038127</span></span><br></pre></td></tr></table></figure><h4 id="整形"><a href="#整形" class="headerlink" title="整形"></a>整形</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成整形类型</span></span><br><span class="line">int()</span><br><span class="line">num = 10</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(num))</span><br></pre></td></tr></table></figure><h4 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成浮点类型</span></span><br><span class="line"><span class="built_in">float</span>()</span><br><span class="line">num1 = 10.2</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(num1)) </span><br></pre></td></tr></table></figure><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成布尔类型。True False</span></span><br><span class="line">bool()</span><br><span class="line">num1 = True</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(num1))</span><br></pre></td></tr></table></figure><h3 id="不可以hash的类型"><a href="#不可以hash的类型" class="headerlink" title="不可以hash的类型"></a>不可以hash的类型</h3><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意类型转换成列表类型</span></span><br><span class="line">list()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">list1 = [1,2,3,4,5]</span><br><span class="line"><span class="comment">#不可以hash</span></span><br><span class="line"><span class="built_in">hash</span>(list1) <span class="comment"># TypeError: unhashable type: &#x27;list&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个字典</span></span><br><span class="line">dict()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">my_dict = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;smith&#x27;</span>, <span class="string">&#x27;age&#x27;</span>:18&#125;</span><br></pre></td></tr></table></figure><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 其他类型转换成集合类型</span></span><br><span class="line"><span class="built_in">set</span>()</span><br><span class="line">set1 = &#123;1,2,3,4,5&#125;</span><br></pre></td></tr></table></figure><h2 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h2><ul><li>在程序开发中，有时候，会希望 <strong>一个函数执行结束后，告诉调用者一个结果</strong>，以便调用者针对具体的结果做后续的处理</li><li><strong>返回值</strong> 是函数 <strong>完成工作</strong>后，<strong>最后</strong> 给调用者的 <strong>一个结果</strong></li><li>在函数中使用 <code>return</code> 关键字可以返回结果</li><li>调用函数一方，可以 <strong>使用变量</strong> 来 <strong>接收</strong> 函数的返回结果</li></ul><h3 id="举例1"><a href="#举例1" class="headerlink" title="举例1"></a>举例1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_func</span>():</span><br><span class="line">    a = <span class="number">10</span></span><br><span class="line">    b = <span class="number">20</span></span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_func()</span><br><span class="line"><span class="comment"># 结果为空。没有内容输出。print(b)语句在return 语句后面，不会被执行。</span></span><br></pre></td></tr></table></figure><h3 id="举例2"><a href="#举例2" class="headerlink" title="举例2"></a>举例2</h3><p>设置变量来接受函数的返回结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def my_func():</span><br><span class="line">    a = 10</span><br><span class="line">    b = 20</span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    <span class="built_in">return</span> a</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = my_func()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment"># 结果为 10 ,设置一个变量 result 来接收函数返回结果</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ceph</title>
      <link href="/2022/05/16/ceph/"/>
      <url>/2022/05/16/ceph/</url>
      
        <content type="html"><![CDATA[<h3 id="基于k8s的ceph集群搭建"><a href="#基于k8s的ceph集群搭建" class="headerlink" title="基于k8s的ceph集群搭建"></a>基于k8s的ceph集群搭建</h3><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>master-139 mon,osd 既做管理节点又做子节点</li><li>node1-140 mon,osd  做子节点</li><li>node2-141 mon,osd  做子节点</li><li>ceph 版本 13.2.10 mimic (stable)</li></ul><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><p>系统配置工作， 三台节点依次执行</p><h4 id="1、修改主机名称"><a href="#1、修改主机名称" class="headerlink" title="1、修改主机名称"></a>1、修改主机名称</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ~]<span class="comment"># vi /etc/hostname</span></span><br><span class="line">master-139</span><br></pre></td></tr></table></figure><h4 id="2、编辑hosts文件"><a href="#2、编辑hosts文件" class="headerlink" title="2、编辑hosts文件"></a>2、编辑hosts文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.4.7.139   master-139</span><br><span class="line">10.4.7.140   node1-140</span><br><span class="line">10.4.7.141 node2-141</span><br></pre></td></tr></table></figure><p>注意， 这里面的主机名称要和节点名称保持一致， 否则安装的时候会出现问题</p><h4 id="3-修改yum源"><a href="#3-修改yum源" class="headerlink" title="3.修改yum源"></a>3.修改yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /etc/yum.repos.d/ceph.repo </span></span><br><span class="line"><span class="string">[ceph] </span></span><br><span class="line"><span class="string">name=Ceph packages for $basearch</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/ceph/rpm-mimic/el7/x86_64/ </span></span><br><span class="line"><span class="string">enabled=1 </span></span><br><span class="line"><span class="string">gpgcheck=1 </span></span><br><span class="line"><span class="string">type=rpm-md </span></span><br><span class="line"><span class="string">gpgkey=https://download.ceph.com/keys/release.asc</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[ceph-noarch] </span></span><br><span class="line"><span class="string">name=Ceph noarch packages </span></span><br><span class="line"><span class="string"># 官方源 </span></span><br><span class="line"><span class="string">#baseurl=http://download.ceph.com/rpm-mimic/el7/noarch </span></span><br><span class="line"><span class="string"># 清华源 </span></span><br><span class="line"><span class="string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/ceph/rpm-mimic/el7/noarch/ </span></span><br><span class="line"><span class="string">enabled=1 </span></span><br><span class="line"><span class="string">gpgcheck=1 </span></span><br><span class="line"><span class="string">type=rpm-md </span></span><br><span class="line"><span class="string">gpgkey=https://download.ceph.com/keys/release.asc</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[ceph-source] </span></span><br><span class="line"><span class="string">name=Ceph source packages</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/ceph/rpm-mimic/el7/SRPMS/ </span></span><br><span class="line"><span class="string">enabled=1 </span></span><br><span class="line"><span class="string">gpgcheck=1 </span></span><br><span class="line"><span class="string">type=rpm-md </span></span><br><span class="line"><span class="string">gpgkey=https://download.ceph.com/keys/release.asc</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="4、安装ceph与ceph-deploy组件"><a href="#4、安装ceph与ceph-deploy组件" class="headerlink" title="4、安装ceph与ceph-deploy组件"></a>4、安装ceph与ceph-deploy组件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache </span><br><span class="line">yum -y install python-setuptools epel-release</span><br><span class="line">yum -y install python2-pip ceph-deploy ceph</span><br></pre></td></tr></table></figure><h4 id="5-安装NTP时间同步工具"><a href="#5-安装NTP时间同步工具" class="headerlink" title="5.安装NTP时间同步工具"></a>5.安装NTP时间同步工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp ntpdate ntp-doc -y</span><br></pre></td></tr></table></figure><p> 确保时区是正确， 设置开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure><p>并将时间每隔1小时自动校准同步。编辑 vi &#x2F;etc&#x2F;rc.d&#x2F;rc.local 追加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/ntpdate ntp1.aliyun.com &gt; /dev/null 2&gt;&amp;1; /sbin/hwclock -w</span><br></pre></td></tr></table></figure><p>配置定时任务, 执行crontab -e 加入：</p><h3 id="免密码SSH登陆"><a href="#免密码SSH登陆" class="headerlink" title="免密码SSH登陆"></a>免密码SSH登陆</h3><h4 id="6-开放端口，-非生产环境，-可以直接禁用防火墙："><a href="#6-开放端口，-非生产环境，-可以直接禁用防火墙：" class="headerlink" title="6.开放端口， 非生产环境， 可以直接禁用防火墙："></a>6.开放端口， 非生产环境， 可以直接禁用防火墙：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service </span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h4 id="7-SELINUX设置"><a href="#7-SELINUX设置" class="headerlink" title="7.SELINUX设置"></a>7.SELINUX设置</h4><p>SELinux 设为禁用：</p><p>永久生效：<br>编辑 vi &#x2F;etc&#x2F;selinux&#x2F;config 修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h4 id="8-生成密钥"><a href="#8-生成密钥" class="headerlink" title="8.生成密钥"></a>8.生成密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行 ssh-keygen ，一直按默认提示点击生成 RSA 密钥信息。</span><br></pre></td></tr></table></figure><h4 id="9-分发密钥至各机器节点"><a href="#9-分发密钥至各机器节点" class="headerlink" title="9.分发密钥至各机器节点"></a>9.分发密钥至各机器节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id root@master-139</span><br><span class="line">ssh-copy-id root@node1-140</span><br><span class="line">ssh-copy-id root@node2-141</span><br></pre></td></tr></table></figure><p><strong>注意：以上1-9步骤在所有节点上执行！！</strong></p><h2 id="集群搭建配置"><a href="#集群搭建配置" class="headerlink" title="集群搭建配置"></a><strong>集群搭建配置</strong></h2><h4 id="1-采用root身份进行安装，在管理节点创建集群配置目录"><a href="#1-采用root身份进行安装，在管理节点创建集群配置目录" class="headerlink" title="1.采用root身份进行安装，在管理节点创建集群配置目录"></a>1.采用root身份进行安装，在管理节点创建集群配置目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"><span class="built_in">mkdir</span> ceph-cluster </span><br><span class="line"><span class="built_in">cd</span> ceph-cluster</span><br></pre></td></tr></table></figure><p>注意： 此目录作为 ceph 操作命令的基准目录， 会存储处理配置信息。</p><h4 id="2-创建集群，-包含三台机器节点："><a href="#2-创建集群，-包含三台机器节点：" class="headerlink" title="2.创建集群， 包含三台机器节点："></a>2.创建集群， 包含三台机器节点：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy new master-139 node1-140 node2-141</span><br></pre></td></tr></table></figure><p>创建成功后， 会生一个配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ll</span></span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 root root  242 May 15 03:15 ceph.conf</span><br><span class="line">-rw-r--r-- 1 root root 5559 May 15 03:15 ceph-deploy-ceph.log</span><br><span class="line">-rw------- 1 root root   73 May 15 03:15 ceph.mon.keyring</span><br></pre></td></tr></table></figure><h4 id="3-如果接下来集群的安装配置出现问题，-可以执行以下命令清除，-再重新安装-可选"><a href="#3-如果接下来集群的安装配置出现问题，-可以执行以下命令清除，-再重新安装-可选" class="headerlink" title="3.如果接下来集群的安装配置出现问题， 可以执行以下命令清除， 再重新安装(可选)"></a>3.如果接下来集群的安装配置出现问题， 可以执行以下命令清除， 再重新安装(可选)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy purge master-139 node1-140 node2-141</span><br><span class="line">ceph-deploy purgedata master-139 node1-140 node2-141</span><br><span class="line">ceph-deploy forgetkeys</span><br></pre></td></tr></table></figure><h4 id="4-将三台节点的mon信息也删除（可选）"><a href="#4-将三台节点的mon信息也删除（可选）" class="headerlink" title="4.将三台节点的mon信息也删除（可选）"></a>4.将三台节点的mon信息也删除（可选）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /var/run/ceph/</span><br></pre></td></tr></table></figure><h4 id="5-修改配置文件，-有些配置后面需用到"><a href="#5-修改配置文件，-有些配置后面需用到" class="headerlink" title="5.修改配置文件， 有些配置后面需用到"></a>5.修改配置文件， 有些配置后面需用到</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/ceph-cluster/ceph.conf</span><br><span class="line">[global] </span><br><span class="line"><span class="comment"># 设置pool池默认分配数量 默认副本数为3 </span></span><br><span class="line">osd pool default size = 3 </span><br><span class="line"><span class="comment"># 容忍更多的时钟误差 </span></span><br><span class="line">mon clock drift allowed = 2 </span><br><span class="line">mon clock drift warn backoff = 30 </span><br><span class="line"><span class="comment"># 允许删除pool </span></span><br><span class="line">mon_allow_pool_delete = <span class="literal">true</span></span><br><span class="line">[mgr]</span><br><span class="line"><span class="comment"># 开启WEB仪表盘 </span></span><br><span class="line">mgr modules = dashboard</span><br></pre></td></tr></table></figure><p>第一项为副本数， 设为 3 份。<br>第二、三项为允许一定时间的漂移误差。</p><p><strong>设置完成后的配置如下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">fsid = 67dcaf50-275b-442f-b69d-677fd8afcc94</span><br><span class="line">mon_initial_members = master-139, node1-140, node2-141</span><br><span class="line">mon_host = 10.4.7.139,10.4.7.140,10.4.7.141</span><br><span class="line">auth_cluster_required = cephx</span><br><span class="line">auth_service_required = cephx</span><br><span class="line">auth_client_required = cephx</span><br><span class="line"><span class="comment"># 设置pool池默认分配数量 默认副本数为3</span></span><br><span class="line">osd pool default size = 3</span><br><span class="line"><span class="comment"># 容忍更多的时钟误差</span></span><br><span class="line">mon clock drift allowed = 2</span><br><span class="line">mon clock drift warn backoff = 30</span><br><span class="line"><span class="comment"># 允许删除pool</span></span><br><span class="line">mon_allow_pool_delete = <span class="literal">true</span></span><br><span class="line">[mgr]</span><br><span class="line"><span class="comment"># 开启WEB仪表盘</span></span><br><span class="line">mgr modules = dashboard</span><br></pre></td></tr></table></figure><h4 id="6-执行安装"><a href="#6-执行安装" class="headerlink" title="6.执行安装"></a>6.执行安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy install master-139 node1-140 node2-141</span><br></pre></td></tr></table></figure><p>如果出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph_deploy][ERROR ] RuntimeError: Failed to execute <span class="built_in">command</span>: ceph --version</span><br></pre></td></tr></table></figure><p>可以在各节点上单独进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ceph </span><br></pre></td></tr></table></figure><p>如果没有仓库文件 ceph.repo ， 按上面的步骤手工创建。</p><h4 id="7-初始monitor信息"><a href="#7-初始monitor信息" class="headerlink" title="7.初始monitor信息"></a>7.初始monitor信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mon create-initial <span class="comment">## ceph-deploy --overwrite-conf mon create-initial</span></span><br></pre></td></tr></table></figure><p><strong>初始化后生成以下信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.client.admin.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-mds.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-mgr.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] keyring <span class="string">&#x27;ceph.mon.keyring&#x27;</span> already exists</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-osd.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-rgw.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Destroy temp directory /tmp/tmpuBxetx</span><br><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ll</span></span><br><span class="line">total 220</span><br><span class="line">-rw------- 1 root root    113 May 15 03:29 ceph.bootstrap-mds.keyring</span><br><span class="line">-rw------- 1 root root    113 May 15 03:29 ceph.bootstrap-mgr.keyring</span><br><span class="line">-rw------- 1 root root    113 May 15 03:29 ceph.bootstrap-osd.keyring</span><br><span class="line">-rw------- 1 root root    113 May 15 03:29 ceph.bootstrap-rgw.keyring</span><br><span class="line">-rw------- 1 root root    151 May 15 03:29 ceph.client.admin.keyring</span><br><span class="line">-rw-r--r-- 1 root root    529 May 15 03:22 ceph.conf</span><br><span class="line">-rw-r--r-- 1 root root 167370 May 15 03:29 ceph-deploy-ceph.log</span><br><span class="line">-rw------- 1 root root     73 May 15 03:22 ceph.mon.keyring</span><br></pre></td></tr></table></figure><h4 id="8-同步管理信息"><a href="#8-同步管理信息" class="headerlink" title="8.同步管理信息"></a>8.同步管理信息</h4><p>下发配置文件和管理信息至各节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy admin master-139 node1-140 node2-141</span><br></pre></td></tr></table></figure><h4 id="9-安装mgr-管理守护进程-，-大于12-x版本需安装，-我们装的是最新版，需执行："><a href="#9-安装mgr-管理守护进程-，-大于12-x版本需安装，-我们装的是最新版，需执行：" class="headerlink" title="9.安装mgr(管理守护进程)， 大于12.x版本需安装， 我们装的是最新版，需执行："></a>9.安装mgr(管理守护进程)， 大于12.x版本需安装， 我们装的是最新版，需执行：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mgr create master-139 node1-140 node2-141</span><br></pre></td></tr></table></figure><h4 id="10-查看当前ceph版本"><a href="#10-查看当前ceph版本" class="headerlink" title="10.查看当前ceph版本"></a>10.查看当前ceph版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ceph -v</span></span><br><span class="line">ceph version 13.2.10 (564bdc4ae87418a232fc901524470e1a0f76d641) mimic (stable)</span><br></pre></td></tr></table></figure><p><strong>以上操作都在管理节点master-139上执行！！</strong></p><h3 id="安装OSD-对象存储设备"><a href="#安装OSD-对象存储设备" class="headerlink" title="安装OSD(对象存储设备)"></a>安装OSD(对象存储设备)</h3><p>注意： 新版本的 OSD 没有 prepare 与 activate 命令。<br>这里需要新的硬盘作为 OSD 存储设备， 关闭虚拟机， 增加一块硬盘， 不用格式化。</p><p>各节点都添加100G硬盘。</p><p>重启， fdisk -l 查看新磁盘名称：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sdb: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure><h4 id="1-执行创建OSD命令"><a href="#1-执行创建OSD命令" class="headerlink" title="1.执行创建OSD命令"></a>1.执行创建OSD命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy osd create --data /dev/sdb master-139 </span><br><span class="line">ceph-deploy osd create --data /dev/sdb node1-140 </span><br><span class="line">ceph-deploy osd create --data /dev/sdb node2-141</span><br></pre></td></tr></table></figure><p>三台节点都需分别依次执行。</p><p>都切换到&#x2F;usr&#x2F;local&#x2F;ceph-cluster下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy gatherkeys master-139</span><br></pre></td></tr></table></figure><h4 id="2-验证节点："><a href="#2-验证节点：" class="headerlink" title="2.验证节点："></a>2.验证节点：</h4><p>输入 ceph health 或 ceph -s 查看， 出现 HEALTH_OK 代表正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ceph -s </span></span><br><span class="line">  cluster:</span><br><span class="line">    <span class="built_in">id</span>:     4f74ac9a-b5f5-4bf5-9107-15ab8ea41f76</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line"> </span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum master-139,node1-140,node2-141</span><br><span class="line">    mgr: master-139(active), standbys: node1-140, node2-141</span><br><span class="line">    osd: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line"> </span><br><span class="line">  data:</span><br><span class="line">    pools:   0 pools, 0 pgs</span><br><span class="line">    objects: 0  objects, 0 B</span><br><span class="line">    usage:   3.0 GiB used, 297 GiB / 300 GiB avail</span><br><span class="line">    pgs:     </span><br></pre></td></tr></table></figure><h4 id="3-如果出现错误，各节点上执行-确保时间一致。"><a href="#3-如果出现错误，各节点上执行-确保时间一致。" class="headerlink" title="3.如果出现错误，各节点上执行,确保时间一致。"></a>3.如果出现错误，各节点上执行,确保时间一致。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpdate ntp1.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="安装管理后台（可选）"><a href="#安装管理后台（可选）" class="headerlink" title="安装管理后台（可选）"></a><strong>安装管理后台</strong>（可选）</h2><h4 id="1-开启dashboard模块"><a href="#1-开启dashboard模块" class="headerlink" title="1.开启dashboard模块"></a>1.开启dashboard模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mgr module <span class="built_in">enable</span> dashboard</span><br></pre></td></tr></table></figure><h4 id="2-生成签名"><a href="#2-生成签名" class="headerlink" title="2.生成签名"></a>2.生成签名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph dashboard create-self-signed-cert</span><br></pre></td></tr></table></figure><h4 id="3-创建目录"><a href="#3-创建目录" class="headerlink" title="3.创建目录"></a>3.创建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> mgr-dashboard</span><br><span class="line">[root@master-139 mgr-dashboard]<span class="comment"># pwd </span></span><br><span class="line">/usr/local/ceph-cluster/mgr-dashboard</span><br></pre></td></tr></table></figure><h4 id="4-生成密钥对"><a href="#4-生成密钥对" class="headerlink" title="4.生成密钥对"></a>4.生成密钥对</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/ceph-cluster/mgr-dashboard</span><br><span class="line">openssl req -new -nodes -x509 -subj <span class="string">&quot;/O=IT/CN=ceph-mgr-dashboard&quot;</span> -days 3650 -keyout dashboard.key -out dashboard.crt -extensions v3_ca</span><br></pre></td></tr></table></figure><h4 id="5-启动dashboard"><a href="#5-启动dashboard" class="headerlink" title="5.启动dashboard"></a>5.启动dashboard</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph mgr module <span class="built_in">disable</span> dashboard </span><br><span class="line">ceph mgr module <span class="built_in">enable</span> dashboard</span><br></pre></td></tr></table></figure><h4 id="6-设置IP与PORT"><a href="#6-设置IP与PORT" class="headerlink" title="6.设置IP与PORT"></a>6.设置IP与PORT</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mgr mgr/dashboard/server_addr 10.4.7.139</span><br><span class="line">ceph config <span class="built_in">set</span> mgr mgr/dashboard/server_port 18843</span><br></pre></td></tr></table></figure><p>注意：ip为管理节点的主IP</p><h4 id="7-关闭HTTPS"><a href="#7-关闭HTTPS" class="headerlink" title="7.关闭HTTPS"></a>7.关闭HTTPS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mgr mgr/dashboard/ssl <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="8-查看服务信息"><a href="#8-查看服务信息" class="headerlink" title="8.查看服务信息"></a>8.查看服务信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 mgr-dashboard]<span class="comment"># ceph mgr services</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;dashboard&quot;</span>: <span class="string">&quot;https://master-139:8443/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-设置管理用户与密码"><a href="#9-设置管理用户与密码" class="headerlink" title="9.设置管理用户与密码"></a>9.设置管理用户与密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph dashboard set-login-credentials admin admin</span><br></pre></td></tr></table></figure><h4 id="10-访问"><a href="#10-访问" class="headerlink" title="10.访问"></a>10.访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.4.7.139:18843</span><br></pre></td></tr></table></figure><h2 id="创建Cephfs"><a href="#创建Cephfs" class="headerlink" title="创建Cephfs"></a>创建Cephfs</h2><p>集群创建完后， 默认没有文件系统， 我们创建一个 Cephfs 可以支持对外访问的文件系统。</p><h4 id="1-创建两个存储池-执行两条命令"><a href="#1-创建两个存储池-执行两条命令" class="headerlink" title="1.创建两个存储池, 执行两条命令"></a>1.创建两个存储池, 执行两条命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create cephfs_data 128 </span><br><span class="line">ceph osd pool create cephfs_metadata 64</span><br></pre></td></tr></table></figure><p>少于 5 个 OSD 可把 pg_num 设置为 128<br>OSD 数量在 5 到 10 ，可以设置 pg_num 为 512<br>OSD 数量在 10 到 50 ，可以设置 pg_num 为 4096<br>OSD 数量大于 50 ，需要计算 pg_num 的值</p><p>通过下面命令可以列出当前创建的存储池：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ceph osd lspools</span></span><br><span class="line">1 cephfs_data</span><br><span class="line">2 cephfs_metadata</span><br></pre></td></tr></table></figure><h4 id="2-创建fs-名称为cephfs"><a href="#2-创建fs-名称为cephfs" class="headerlink" title="2.创建fs, 名称为cephfs"></a>2.创建fs, 名称为cephfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs new cephfs cephfs_metadata cephfs_data</span><br></pre></td></tr></table></figure><h4 id="3-状态查看，-以下信息代表正常"><a href="#3-状态查看，-以下信息代表正常" class="headerlink" title="3.状态查看， 以下信息代表正常"></a>3.状态查看， 以下信息代表正常</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ceph fs ls </span></span><br><span class="line">name: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ]</span><br><span class="line">[root@haproxy ceph-cluster]<span class="comment"># ceph mds stat</span></span><br><span class="line">cephfs-1/1/1 up  &#123;0=haproxy=up:active&#125;, 1 up:standby</span><br></pre></td></tr></table></figure><p>这里mds如果只显示cephfs-1&#x2F;1&#x2F;1 up 后面没内容说明mds没创建需要手动创建。如果不创建后面ceph挂载会报错。提示mds不存在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master-139 ceph-cluster]<span class="comment"># ceph mds stat </span></span><br><span class="line">cephfs-0/0/1 up</span><br><span class="line"><span class="comment">#挂载时报错信息</span></span><br><span class="line">[root@node1-140 ceph-cluster]<span class="comment"># ceph-fuse -k /etc/ceph/ceph.client.admin.keyring -m 10.4.7.139:6789 /usr/local/cephfs_directory </span></span><br><span class="line">ceph-fuse[42676]: starting ceph client</span><br><span class="line">2022-05-15 03:43:48.136 7f84eb7cac00 -1 init, newargv = 0x561dca3c0240 newargc=7</span><br><span class="line">ceph-fuse[42676]: probably no MDS server is up?</span><br><span class="line">ceph-fuse[42676]: ceph mount failed with (65536) Unknown error 65536</span><br></pre></td></tr></table></figure><p>手动创建mds</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mds create master-139 node1-140 node2-141</span><br></pre></td></tr></table></figure><p>附： 如果创建错误， 需要删除， 执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph fs <span class="built_in">rm</span> cephfs --yes-i-really-mean-it </span><br><span class="line">ceph osd pool delete cephfs_data cephfs_data --yes-i-really-really-mean-it</span><br></pre></td></tr></table></figure><p>确保在ceph.conf中开启以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mon] mon allow pool delete = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="采用fuse挂载"><a href="#采用fuse挂载" class="headerlink" title="采用fuse挂载"></a>采用fuse挂载</h3><p>先确定 ceph-fuse 命令能执行， 如果没有， 则安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ceph-fuse</span><br></pre></td></tr></table></figure><h4 id="1-创建挂载目录"><a href="#1-创建挂载目录" class="headerlink" title="1.创建挂载目录"></a>1.创建挂载目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /usr/local/cephfs_directory</span><br></pre></td></tr></table></figure><h4 id="2-挂载cephfs"><a href="#2-挂载cephfs" class="headerlink" title="2.挂载cephfs"></a>2.挂载cephfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-fuse -k /etc/ceph/ceph.client.admin.keyring -m 10.4.7.139:6789 /usr/local/cephfs_directory</span><br></pre></td></tr></table></figure><h4 id="3-查看磁盘挂载信息"><a href="#3-查看磁盘挂载信息" class="headerlink" title="3.查看磁盘挂载信息"></a>3.查看磁盘挂载信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#df -hT</span></span><br></pre></td></tr></table></figure><p>&#x2F;usr&#x2F;local&#x2F;cephfs_directory 目录已成功挂载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node1-140 ceph-cluster]<span class="comment"># df -hT | grep cephfs </span></span><br><span class="line">ceph-fuse                  fuse.ceph-fuse   94G     0   94G   0% /usr/local/cephfs_directory</span><br></pre></td></tr></table></figure><p>注意查看当前ceph 的主节点是谁。三台机器中如果有一台突然宕机，然后又恢复了。此时出问题的那台将成为主节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@node1-140 ceph-cluster]<span class="comment"># ceph -s </span></span><br><span class="line">  cluster:</span><br><span class="line">    <span class="built_in">id</span>:     4f74ac9a-b5f5-4bf5-9107-15ab8ea41f76</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line"> </span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum master-139,node1-140,node2-141</span><br><span class="line">    mgr: master-139(active), standbys: node1-140, node2-141</span><br><span class="line">    mds: cephfs-1/1/1 up  &#123;0=master-139=up:active&#125;, 2 up:standby</span><br><span class="line">    osd: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line"> </span><br><span class="line">  data:</span><br><span class="line">    pools:   2 pools, 192 pgs</span><br><span class="line">    objects: 21  objects, 2.2 KiB</span><br><span class="line">    usage:   3.0 GiB used, 297 GiB / 300 GiB avail</span><br><span class="line">    pgs:     192 active+clean</span><br><span class="line"> </span><br><span class="line">  io:</span><br><span class="line">    client:   5.0 KiB/s wr, 0 op/s rd, 9 op/s wr</span><br></pre></td></tr></table></figure><p>active的是主节点， standbys是备用节点。</p><h2 id="ceph常用命令"><a href="#ceph常用命令" class="headerlink" title="ceph常用命令"></a>ceph常用命令</h2><h4 id="ceph"><a href="#ceph" class="headerlink" title="ceph"></a>ceph</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看机器的监控状态</span></span><br><span class="line">ceph health</span><br><span class="line"><span class="comment"># 查看ceph的实时运行状态</span></span><br><span class="line">ceph -w</span><br><span class="line"><span class="comment"># 检查信息状态信息</span></span><br><span class="line">ceph -s</span><br><span class="line"><span class="comment"># 查看ceph存储空间</span></span><br><span class="line">ceph <span class="built_in">df</span></span><br></pre></td></tr></table></figure><h4 id="ceph认证"><a href="#ceph认证" class="headerlink" title="ceph认证"></a>ceph认证</h4><h4 id="创建管理用户"><a href="#创建管理用户" class="headerlink" title="创建管理用户"></a>创建管理用户</h4><p>为ceph创建一个admin用户并为admin用户创建一个密钥，把密钥保存到&#x2F;etc&#x2F;ceph目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create client.admin mds <span class="string">&#x27;allow&#x27;</span> osd <span class="string">&#x27;allow *&#x27;</span> mon <span class="string">&#x27;allow *&#x27;</span> &gt; /etc/ceph/ceph.client.admin.keyring</span><br><span class="line">或</span><br><span class="line">ceph auth get-or-create client.admin mds <span class="string">&#x27;allow&#x27;</span> osd <span class="string">&#x27;allow *&#x27;</span> mon <span class="string">&#x27;allow *&#x27;</span> -o /etc/ceph/ceph.client.admin.keyring</span><br></pre></td></tr></table></figure><p>为osd.0创建一个用户并创建一个key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create osd.0 mon <span class="string">&#x27;allow rwx&#x27;</span> osd <span class="string">&#x27;allow *&#x27;</span> -o /var/lib/ceph/osd/ceph-0/keyring</span><br></pre></td></tr></table></figure><p>为mds.node1创建一个用户并创建一个key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create mds.node1 mon <span class="string">&#x27;allow rwx&#x27;</span> osd <span class="string">&#x27;allow *&#x27;</span> mds <span class="string">&#x27;allow *&#x27;</span> -o /var/lib/ceph/mds/ceph-node1/keyring</span><br></pre></td></tr></table></figure><p>查看ceph集群中的认证用户及相关的key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth list</span><br></pre></td></tr></table></figure><p>删除集群中的一个认证用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth del osd.0</span><br></pre></td></tr></table></figure><h4 id="集群相关"><a href="#集群相关" class="headerlink" title="集群相关"></a>集群相关</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群的详细配置</span></span><br><span class="line">ceph daemon mon.node1 config show | more</span><br><span class="line"><span class="comment"># 查看集群健康状态细节</span></span><br><span class="line">ceph health detail</span><br><span class="line"><span class="comment"># 查看ceph log日志所在的目录</span></span><br><span class="line">ceph-conf --name mon.node1 --show-config-value log_file</span><br></pre></td></tr></table></figure><h4 id="mon命令"><a href="#mon命令" class="headerlink" title="mon命令"></a>mon命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ceph mon <span class="built_in">stat</span><span class="comment">#查看mon的状态信息</span></span><br><span class="line"></span><br><span class="line">ceph mon dump<span class="comment">#查看你ceph映射信息</span></span><br><span class="line"></span><br><span class="line">ceph mon remove node1 <span class="comment">#删除一个mon节点  ceph-deploy mon destroy &#123;host-name [host-name]...&#125;</span></span><br><span class="line"></span><br><span class="line">ceph mon add node1 node1_ip <span class="comment">#添加一个mon节点  ceph-deploy mon create &#123;host-name [host-name]...&#125; </span></span><br><span class="line"></span><br><span class="line">mon节点的/var/lib/ceph/mon/ceph-node2/store.db文件内容一致，添加mon注意先改配置目录配置文件，再推送到所有节点</span><br><span class="line"></span><br><span class="line">ceph-deploy --overwrite-conf config push  node1 node2 node3</span><br></pre></td></tr></table></figure><h4 id="mds命令"><a href="#mds命令" class="headerlink" title="mds命令"></a>mds命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ceph mds <span class="built_in">stat</span> <span class="comment">#查看msd状态</span></span><br><span class="line"></span><br><span class="line">ceph mds dump <span class="comment">#msd的映射信息</span></span><br><span class="line"></span><br><span class="line">ceph mds <span class="built_in">rm</span> 0 mds.node1<span class="comment">#删除一个mds节点</span></span><br><span class="line"></span><br><span class="line">ceph-deploy mds create &#123;host-name&#125;[:&#123;daemon-name&#125;] [&#123;host-name&#125;[:&#123;daemon-name&#125;] ...]</span><br></pre></td></tr></table></figure><h4 id="osd命令"><a href="#osd命令" class="headerlink" title="osd命令"></a>osd命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">ceph osd <span class="built_in">stat</span> <span class="comment">#查看osd状态</span></span><br><span class="line"></span><br><span class="line">ceph osd dump <span class="comment">#osd的映射信息</span></span><br><span class="line"></span><br><span class="line">ceph osd tree<span class="comment">#查看osd目录树</span></span><br><span class="line"></span><br><span class="line">ceph osd down 0   <span class="comment">#down掉osd.0节点</span></span><br><span class="line"></span><br><span class="line">ceph osd <span class="built_in">rm</span> 0<span class="comment">#集群删除一个osd硬盘</span></span><br><span class="line"></span><br><span class="line">ceph osd crush remove osd.4<span class="comment">#删除标记</span></span><br><span class="line"></span><br><span class="line">ceph osd getmaxosd<span class="comment">#查看最大osd个数</span></span><br><span class="line"></span><br><span class="line">ceph osd setmaxosd 10<span class="comment">#设置osd的个数</span></span><br><span class="line"></span><br><span class="line">ceph osd out osd.3<span class="comment">#把一个osd节点逐出集群</span></span><br><span class="line"></span><br><span class="line">ceph osd <span class="keyword">in</span> osd.3<span class="comment">#把逐出的osd加入集群</span></span><br><span class="line"></span><br><span class="line">ceph osd pause<span class="comment">#暂停osd （暂停后整个集群不再接收数据）</span></span><br><span class="line"></span><br><span class="line">ceph osd unpause<span class="comment">#再次开启osd （开启后再次接收数据）</span></span><br><span class="line"></span><br><span class="line">ceph osd lspools<span class="comment">#查看ceph集群中的pool数量</span></span><br><span class="line"></span><br><span class="line">ceph osd pool create jiayuan 100<span class="comment">#创建一个pool  这里的100指的是PG组</span></span><br><span class="line"></span><br><span class="line">ceph osd pool delete jiayuan  jiayuan  --yes-i-really-really-mean-it  <span class="comment">#集群名字需要重复两次</span></span><br><span class="line"></span><br><span class="line">rados <span class="built_in">df</span><span class="comment">#显示集群中pool的详细信息</span></span><br><span class="line"></span><br><span class="line">ceph osd pool get data pg_num  <span class="comment">#查看data池的pg数量</span></span><br><span class="line"></span><br><span class="line">ceph osd pool <span class="built_in">set</span> data target_max_bytes 100000000000000<span class="comment">#设置data池的最大存储空间为100T（默认是1T)</span></span><br><span class="line"></span><br><span class="line">ceph osd pool <span class="built_in">set</span> data size 3  <span class="comment">#设置data池的副本数是3</span></span><br><span class="line"></span><br><span class="line">ceph osd pool <span class="built_in">set</span> data min_size 2 <span class="comment">#设置data池能接受写操作的最小副本为2</span></span><br><span class="line"></span><br><span class="line">ceph osd pool <span class="built_in">set</span> data pg_num 100<span class="comment">#设置一个pool的pg数量</span></span><br><span class="line"></span><br><span class="line">ceph osd pool <span class="built_in">set</span> data pgp_num 100<span class="comment">#设置一个pool的pgp数量</span></span><br></pre></td></tr></table></figure><h4 id="pg命令"><a href="#pg命令" class="headerlink" title="pg命令"></a>pg命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ceph pg <span class="built_in">stat</span><span class="comment">#查看pg状态</span></span><br><span class="line"></span><br><span class="line">ceph pg dump<span class="comment">#查看pg组的映射信息</span></span><br><span class="line"></span><br><span class="line">ceph pg map 0.3f<span class="comment">#查看一个pg的map</span></span><br><span class="line"></span><br><span class="line">ceph pg  0.26 query<span class="comment">#查看pg详细信息</span></span><br><span class="line"></span><br><span class="line">ceph pg dump --format plain<span class="comment">#显示一个集群中的所有的pg统计</span></span><br></pre></td></tr></table></figure><h4 id="rados和rbd命令"><a href="#rados和rbd命令" class="headerlink" title="rados和rbd命令"></a>rados和rbd命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">rados lspools<span class="comment">#查看ceph集群中有多少个pool （只是查看pool)</span></span><br><span class="line"></span><br><span class="line">rados <span class="built_in">df</span> <span class="comment">#查看ceph集群中有多少个pool,并且每个pool容量及利用情况</span></span><br><span class="line"></span><br><span class="line">rados mkpool <span class="built_in">test</span><span class="comment">#创建一个pool</span></span><br><span class="line"></span><br><span class="line">rados create test-object -p <span class="built_in">test</span><span class="comment">#创建一个对象object </span></span><br><span class="line"></span><br><span class="line">rados <span class="built_in">rm</span> test-object-1 -p <span class="built_in">test</span><span class="comment">#删除一个对象object </span></span><br><span class="line"></span><br><span class="line">rados -p <span class="built_in">test</span> <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">rbd <span class="built_in">ls</span> pool_name<span class="comment">#查看ceph中一个pool里的所有镜像</span></span><br><span class="line"></span><br><span class="line">rbd info -p pool_name --image 74cb427c-cee9-47d0-b467-af217a67e60a <span class="comment">#查看ceph pool中一个镜像的信息</span></span><br><span class="line"></span><br><span class="line">rbd create -p <span class="built_in">test</span> --size 10000 zhanguo<span class="comment">#在test池中创建一个命名为zhanguo的10000M的镜像</span></span><br><span class="line"></span><br><span class="line">rbd <span class="built_in">rm</span>  -p <span class="built_in">test</span>  lizhanguo <span class="comment">#删除一个镜像</span></span><br><span class="line"></span><br><span class="line">rbd resize -p <span class="built_in">test</span> --size 20000 zhanguo  <span class="comment">#调整一个镜像的尺寸</span></span><br></pre></td></tr></table></figure><h4 id="CRUSH映射"><a href="#CRUSH映射" class="headerlink" title="CRUSH映射"></a>CRUSH映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ceph osd getcrushmap -o MAP   <span class="comment">#获取一个CRUSH映射</span></span><br><span class="line"></span><br><span class="line">crushtool -d MAP -o MAP.TXT   <span class="comment">#反编译一个CRUSH映射</span></span><br><span class="line"></span><br><span class="line">crushtool -c MAP.TXT -o MAP   <span class="comment">#编译一个CRUSH映射</span></span><br><span class="line"></span><br><span class="line">ceph osd setcrushmap -i MAP    <span class="comment">#设置一个CRUSH映射</span></span><br></pre></td></tr></table></figure><h4 id="块设备的一些命令"><a href="#块设备的一些命令" class="headerlink" title="块设备的一些命令"></a>块设备的一些命令</h4><p>单位为M，默认在rbd pool中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">创建块设备：rbd create &#123;image-name&#125;  --size &#123;megabytes&#125;  --pool &#123;pool-name&#125;</span><br><span class="line"></span><br><span class="line">列出块设备：rbd <span class="built_in">ls</span> &#123;poolname&#125; -l</span><br><span class="line"></span><br><span class="line">检索块信息：rbd --image &#123;image-name&#125; info</span><br><span class="line"></span><br><span class="line">更改块大小：rbd resize --image &#123;image-name&#125; --size &#123;megabytes&#125;</span><br><span class="line"></span><br><span class="line">删除块设备：rbd <span class="built_in">rm</span> &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">映射块设备：rbd map &#123;image-name&#125; --pool &#123;pool-name&#125; --<span class="built_in">id</span> &#123;user-name&#125;</span><br><span class="line"></span><br><span class="line">查看已映射块设备：rbd showmapped</span><br><span class="line"></span><br><span class="line">取消映射：rbd unmap /dev/rbd/&#123;poolname&#125;/&#123;imagename&#125;</span><br></pre></td></tr></table></figure><h4 id="快照和克隆相关命令"><a href="#快照和克隆相关命令" class="headerlink" title="快照和克隆相关命令"></a>快照和克隆相关命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">创建快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap create --snap &#123;snap-name&#125; &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap create &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snap-name&#125;</span><br><span class="line"></span><br><span class="line">快照回滚：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap rollback --snap &#123;snap-name&#125; &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap rollback &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snap-name&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">清除快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap purge &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap purge &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">删除快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap <span class="built_in">rm</span> --snap &#123;snap-name&#125; &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap <span class="built_in">rm</span> &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snap-name&#125;</span><br><span class="line"></span><br><span class="line">列出快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap <span class="built_in">ls</span> &#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap <span class="built_in">ls</span> &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line"></span><br><span class="line">保护快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap protect --image &#123;image-name&#125; --snap &#123;snapshot-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap protect &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snapshot-name&#125;</span><br><span class="line"></span><br><span class="line">取消保护快照：</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; snap unprotect --image &#123;image-name&#125; --snap &#123;snapshot-name&#125;</span><br><span class="line"></span><br><span class="line">rbd snap unprotect &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snapshot-name&#125;</span><br><span class="line"></span><br><span class="line">快照克隆</span><br><span class="line"></span><br><span class="line">rbd <span class="built_in">clone</span> &#123;pool-name&#125;/&#123;parent-image&#125;@&#123;snap-name&#125; &#123;pool-name&#125;/&#123;child-image-name&#125;</span><br><span class="line"></span><br><span class="line">查看快照的克隆</span><br><span class="line"></span><br><span class="line">rbd --pool &#123;pool-name&#125; children --image &#123;image-name&#125; --snap &#123;snap-name&#125;</span><br><span class="line"></span><br><span class="line">rbd children &#123;pool-name&#125;/&#123;image-name&#125;@&#123;snapshot-name&#125;</span><br></pre></td></tr></table></figure><h4 id="快照克隆相关例子"><a href="#快照克隆相关例子" class="headerlink" title="快照克隆相关例子"></a>快照克隆相关例子</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">创建快照：rbd  snap create vms/yjk01@yjk01_s1</span><br><span class="line"></span><br><span class="line">列出快照：rbd snap list  --pool vms yjk01</span><br><span class="line"></span><br><span class="line">快照回滚：rbd snap rollback vms/yjk01@yjk01_s1(先卸载已挂载目录)</span><br><span class="line"></span><br><span class="line">删除快照：rbd snap <span class="built_in">rm</span> vms/yjk01@yjk01_s2(单个)</span><br><span class="line"></span><br><span class="line">清除快照：rbd snap purge vms/yjk01(所有)</span><br><span class="line"></span><br><span class="line">保护快照：rbd snap protect vms/yjk01@yjk01_s1</span><br><span class="line"></span><br><span class="line">取消保护：rbd snap unprotect vms/yjk01@yjk01_s1</span><br><span class="line"></span><br><span class="line">快照克隆：rbd <span class="built_in">clone</span> vms/yjk01@yjk01_s3 vms/yjk01_s3_clone1</span><br><span class="line"></span><br><span class="line">查看克隆：rbd children vms/yjk01@yjk01_s3</span><br><span class="line"></span><br><span class="line">克隆只能基于快照，并且只能快照处于保护状态，而且ceph仅支持克隆format 2映像。</span><br></pre></td></tr></table></figure><h2 id="日志文件汇总"><a href="#日志文件汇总" class="headerlink" title="日志文件汇总"></a>日志文件汇总</h2><p>mon ,mgr , osd 等安装报错信息均在对应日志文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/ceph-cluster/ceph-deploy-ceph.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># tree /var/log/ceph/</span></span><br><span class="line">/var/log/ceph/</span><br><span class="line">├── ceph.audit.log</span><br><span class="line">├── ceph-client.admin.log</span><br><span class="line">├── ceph.log</span><br><span class="line">├── ceph-mds.haproxy.log</span><br><span class="line">├── ceph-mgr.haproxy.log</span><br><span class="line">├── ceph-mon.haproxy.log</span><br><span class="line">├── ceph-osd.0.log</span><br><span class="line">└── ceph-volume.log</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://blog.csdn.net/fake_hydra/article/details/109235907">1</a></p><p><a href="https://mp.weixin.qq.com/s/nWZWhnaudueuJwmp-Ktuxw">2</a></p><p><a href="https://blog.csdn.net/xiaoweite1/article/details/124059228">3</a></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于centos7/8安装任意版本python</title>
      <link href="/2022/05/11/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACpython/"/>
      <url>/2022/05/11/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACpython/</url>
      
        <content type="html"><![CDATA[<h3 id="基于centos7-x2F-8安装任意版本python"><a href="#基于centos7-x2F-8安装任意版本python" class="headerlink" title="基于centos7&#x2F;8安装任意版本python"></a>基于centos7&#x2F;8安装任意版本python</h3><h4 id="编译安装python"><a href="#编译安装python" class="headerlink" title="编译安装python"></a>编译安装python</h4><h3 id="安装python依赖环境"><a href="#安装python依赖环境" class="headerlink" title="安装python依赖环境"></a>安装python依赖环境</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install epel-release</span><br><span class="line">sudo yum -y update</span><br></pre></td></tr></table></figure><p>重启(可选)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y groupinstall <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line">sudo yum -y install openssl-devel bzip2-devel libffi-devel xz-devel</span><br></pre></td></tr></table></figure><h3 id="确认gcc可用"><a href="#确认gcc可用" class="headerlink" title="确认gcc可用"></a>确认gcc可用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gcc --version</span><br><span class="line">gcc (GCC) <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span>-<span class="number">44</span>)</span><br><span class="line">Copyright (C) <span class="number">2015</span> Free Software Foundation, Inc.</span><br><span class="line">This <span class="keyword">is</span> free software; see the source <span class="keyword">for</span> copying conditions.  There <span class="keyword">is</span> NO</span><br><span class="line">warranty; <span class="keyword">not</span> even <span class="keyword">for</span> MERCHANTABILITY <span class="keyword">or</span> FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><h3 id="选择编译包"><a href="#选择编译包" class="headerlink" title="选择编译包"></a>选择编译包</h3><p><a href="https://www.python.org/ftp/python/">官网编译包</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/<span class="number">3.9</span><span class="number">.12</span>/Python-<span class="number">3.9</span><span class="number">.12</span>.tgz</span><br></pre></td></tr></table></figure><h3 id="解压并进入"><a href="#解压并进入" class="headerlink" title="解压并进入"></a>解压并进入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-<span class="number">3.9</span><span class="number">.12</span>.tgz </span><br><span class="line">cd Python-<span class="number">3.9</span><span class="number">.12</span>/</span><br></pre></td></tr></table></figure><h3 id="配置脚本"><a href="#配置脚本" class="headerlink" title="配置脚本"></a>配置脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --enable-optimizations</span><br></pre></td></tr></table></figure><h3 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make altinstall</span><br></pre></td></tr></table></figure><h3 id="如果成功将会显示以下内容"><a href="#如果成功将会显示以下内容" class="headerlink" title="如果成功将会显示以下内容"></a>如果成功将会显示以下内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">copying build/scripts-<span class="number">3.9</span>/pydoc3<span class="number">.9</span> -&gt; /usr/local/<span class="built_in">bin</span></span><br><span class="line">copying build/scripts-<span class="number">3.9</span>/idle3<span class="number">.9</span> -&gt; /usr/local/<span class="built_in">bin</span></span><br><span class="line">copying build/scripts-<span class="number">3.9</span>/2to3-<span class="number">3.9</span> -&gt; /usr/local/<span class="built_in">bin</span></span><br><span class="line">changing mode of /usr/local/<span class="built_in">bin</span>/pydoc3<span class="number">.9</span> to <span class="number">755</span></span><br><span class="line">changing mode of /usr/local/<span class="built_in">bin</span>/idle3<span class="number">.9</span> to <span class="number">755</span></span><br><span class="line">changing mode of /usr/local/<span class="built_in">bin</span>/2to3-<span class="number">3.9</span> to <span class="number">755</span></span><br><span class="line">rm /usr/local/lib/python3<span class="number">.9</span>/lib-dynload/_sysconfigdata__linux_x86_64-linux-gnu.py</span><br><span class="line">rm -r /usr/local/lib/python3<span class="number">.9</span>/lib-dynload/__pycache__</span><br><span class="line">/usr/<span class="built_in">bin</span>/install -c -m <span class="number">644</span> ./Misc/python.man \</span><br><span class="line">/usr/local/share/man/man1/python3<span class="number">.9</span><span class="number">.1</span></span><br><span class="line"><span class="keyword">if</span> test <span class="string">&quot;xupgrade&quot;</span> != <span class="string">&quot;xno&quot;</span>  ; then \</span><br><span class="line">case upgrade <span class="keyword">in</span> \</span><br><span class="line">upgrade) ensurepip=<span class="string">&quot;--altinstall --upgrade&quot;</span> ;; \</span><br><span class="line">install|*) ensurepip=<span class="string">&quot;--altinstall&quot;</span> ;; \</span><br><span class="line">esac; \</span><br><span class="line"> ./python -E -m ensurepip \</span><br><span class="line">$ensurepip --root=/ ; \</span><br><span class="line">fi</span><br><span class="line">Looking <span class="keyword">in</span> links: /tmp/tmp3k1lhlmm</span><br><span class="line">Processing /tmp/tmp3k1lhlmm/setuptools-<span class="number">58.1</span><span class="number">.0</span>-py3-none-<span class="built_in">any</span>.whl</span><br><span class="line">Processing /tmp/tmp3k1lhlmm/pip-<span class="number">22.0</span><span class="number">.4</span>-py3-none-<span class="built_in">any</span>.whl</span><br><span class="line">Installing collected packages: setuptools, pip</span><br><span class="line">Successfully installed pip-<span class="number">22.0</span><span class="number">.4</span> setuptools-<span class="number">58.1</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h3 id="确认是否安装成功"><a href="#确认是否安装成功" class="headerlink" title="确认是否安装成功"></a>确认是否安装成功</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 Python-<span class="number">3.9</span><span class="number">.12</span>]<span class="comment"># python3.9 --version </span></span><br><span class="line">Python <span class="number">3.9</span><span class="number">.12</span></span><br></pre></td></tr></table></figure><h3 id="pip是否也安装了"><a href="#pip是否也安装了" class="headerlink" title="pip是否也安装了"></a>pip是否也安装了</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 Python-<span class="number">3.9</span><span class="number">.12</span>]<span class="comment"># pip3.9 --version </span></span><br><span class="line">pip <span class="number">22.0</span><span class="number">.4</span> <span class="keyword">from</span> /usr/local/lib/python3<span class="number">.9</span>/site-packages/pip (python <span class="number">3.9</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git入门</title>
      <link href="/2022/05/07/git%E5%85%A5%E9%97%A8/"/>
      <url>/2022/05/07/git%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="git入门"><a href="#git入门" class="headerlink" title="git入门"></a>git入门</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><h3 id="windows中安装"><a href="#windows中安装" class="headerlink" title="windows中安装"></a>windows中安装</h3><p><a href="https://git-scm.com/downloads">各操作系统版本下载</a></p><p>安装后在开始菜单里找到”Git”-&gt;”Git Bash”，会弹出 Git 命令窗口，你可以在该窗口进行 Git 操作。</p><p>创建工作目录，比如在D盘根目录下创建blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p blog</span><br></pre></td></tr></table></figure><h3 id="git初始化"><a href="#git初始化" class="headerlink" title="git初始化"></a>git初始化</h3><p>默认会生成.git文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><p>配置个人的用户名称和电子邮件地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;smith&quot;</span></span><br><span class="line">git config --global user.email smith@gmail.com</span><br></pre></td></tr></table></figure><h4 id="查看配置信息"><a href="#查看配置信息" class="headerlink" title="查看配置信息"></a>查看配置信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><p>也可以在配置文件中看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.gitconfig </span><br><span class="line">[http]</span><br><span class="line">    postBuffer = 2M</span><br><span class="line">[user]</span><br><span class="line">    name = smith</span><br><span class="line">    email = smith@gmail.com</span><br></pre></td></tr></table></figure><h3 id="git-工作流程"><a href="#git-工作流程" class="headerlink" title="git 工作流程"></a>git 工作流程</h3><p>git-process.png</p><h4 id="创建readme-txt文件"><a href="#创建readme-txt文件" class="headerlink" title="创建readme.txt文件"></a>创建<code>readme.txt</code>文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br></pre></td></tr></table></figure><h4 id="把文件提交到暂存区"><a href="#把文件提交到暂存区" class="headerlink" title="把文件提交到暂存区"></a>把文件提交到暂存区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add readme.txt</span><br><span class="line">git commit -m <span class="string">&quot;first push&quot;</span></span><br></pre></td></tr></table></figure><p><code>-m</code>:后面输入本次提交的说明，可以输入任何内容。</p><h3 id="查看提交日志"><a href="#查看提交日志" class="headerlink" title="查看提交日志"></a>查看提交日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> </span><br><span class="line">commit 934e87838ae19b396a9db3779f5722be53701f22 (HEAD -&gt; master)</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Mon May 9 09:17:05 2022 +0800</span><br><span class="line"></span><br><span class="line">    thired version</span><br><span class="line"></span><br><span class="line">commit 7580fbdc4ddfd4cf740cba51e1661b020806638c</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Mon May 9 09:16:18 2022 +0800</span><br><span class="line"></span><br><span class="line">    second version</span><br><span class="line"></span><br><span class="line">commit 48eca9171d496942470fbcb5b93500bf593c3fdf</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Mon May 9 09:12:21 2022 +0800</span><br><span class="line"></span><br><span class="line">    first push</span><br></pre></td></tr></table></figure><p>精简输出加上<code>--pretty=oneline</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --pretty=oneline</span><br><span class="line">934e87838ae19b396a9db3779f5722be53701f22 (HEAD -&gt; master) thired version</span><br><span class="line">7580fbdc4ddfd4cf740cba51e1661b020806638c second version</span><br><span class="line">48eca9171d496942470fbcb5b93500bf593c3fdf first push</span><br></pre></td></tr></table></figure><p><code>commit</code>后面的id是根据<code>sha1</code>算法得来的。</p><p>各个版本中readme.txt内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">版本一</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">版本二</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">second version</span><br><span class="line">版本三</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">thired version</span><br></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><p>通过<code>git log</code>查看最新一次提交id为<code>934e87838ae19b396a9db3779f5722be53701f22</code>。git中用HEAD表示当前版本。上一个版本用<code>HEAD^&#39;</code>表示，上上版本用<code>HEAD^^</code>表示。往上100个版本用<code>HEAD~100</code>表示。现在回到上一个版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD^</span><br><span class="line">HEAD is now at 7580fbd second version</span><br></pre></td></tr></table></figure><p>查看readme.txt文件内容。果然回到上一个版本了。</p><h4 id="查看当前版本库状态"><a href="#查看当前版本库状态" class="headerlink" title="查看当前版本库状态"></a>查看当前版本库状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 7580fbdc4ddfd4cf740cba51e1661b020806638c (HEAD -&gt; master)</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Mon May 9 09:16:18 2022 +0800</span><br><span class="line"></span><br><span class="line">    second version</span><br><span class="line"></span><br><span class="line">commit 48eca9171d496942470fbcb5b93500bf593c3fdf</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Mon May 9 09:12:21 2022 +0800</span><br><span class="line"></span><br><span class="line">    first push</span><br></pre></td></tr></table></figure><p>发现之前的版本不见了，还可以通过commit id 回到之前的版本。id不用写全，至少写6位。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard 934e87</span><br><span class="line">HEAD is now at 934e878 thired version</span><br></pre></td></tr></table></figure><p>再次查看readme.txt文件果然又回来了。</p><p>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的<code>HEAD</code>指针，当你回退版本的时候，Git仅仅是把HEAD从指向<code>thired version</code>.</p><p>如果还想回退到最新版本而又忘记了commit id ，Git提供了一个命令<code>git reflog</code>用来记录你的每一次命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">934e878 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to 934e87</span><br><span class="line">7580fbd HEAD@&#123;1&#125;: reset: moving to HEAD^</span><br><span class="line">934e878 (HEAD -&gt; master) HEAD@&#123;2&#125;: commit: thired version</span><br><span class="line">7580fbd HEAD@&#123;3&#125;: commit: second version</span><br><span class="line">48eca91 HEAD@&#123;4&#125;: commit (initial): first push</span><br></pre></td></tr></table></figure><p>然后通过commit  id回到最新版本。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li><li>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</li><li>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</li></ul><h3 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h3><h4 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h4><p>在笔记本中创建的blog文件夹就是工作区。</p><h4 id="暂存区"><a href="#暂存区" class="headerlink" title="暂存区"></a>暂存区</h4><h4 id="版本库（Repository）"><a href="#版本库（Repository）" class="headerlink" title="版本库（Repository）"></a>版本库（Repository）</h4><p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p><p>把文件向git版本库里添加时，分两步执行：</p><ul><li>用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区</li><li>用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</li></ul><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p><p>需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p>测试：</p><p>修改readme.txt文件。提交到暂存区，查看当前状态，最后提交到当前分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line">$ git commit -m <span class="string">&quot;change sth&quot;</span></span><br><span class="line">[master 410b2e7] change sth</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><p>一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><h3 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h3><p>测试过程：第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git commit</code></p><p>修改readme.txt文件</p><p>第一次修改并提交到缓存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vi readme.txt</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">with add</span><br><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure><p>第二次修改直接使用commit 提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ with readme.txt</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">no add</span><br><span class="line">$ git commit -m <span class="string">&quot;change sth&quot;</span></span><br><span class="line">[master 729bf9e] change sth</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>最后查看状态，发现第二次修改没被提交。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>Git管理的是修改，当你用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</p><p>提交后，用<code>git diff HEAD -- readme.txt</code>命令可以查看工作区和版本库里面最新版本的区别：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git diff HEAD -- readme.txt</span><br><span class="line">diff --git a/readme.txt b/readme.txt</span><br><span class="line">index 23faa4f..199308a 100644</span><br><span class="line">--- a/readme.txt</span><br><span class="line">+++ b/readme.txt</span><br><span class="line">@@ -1,3 +1,3 @@</span><br><span class="line"> Git is a version control system.</span><br><span class="line"> Git is free software.</span><br><span class="line">-with add</span><br><span class="line">+no add</span><br></pre></td></tr></table></figure><p>那怎么提交第二次修改呢？你可以继续<code>git add</code>再<code>git commit</code>，也可以别着急提交第一次修改，先<code>git add</code>第二次修改，再<code>git commit</code>，就相当于把两次修改合并后一块提交了：</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git add</code> -&gt; <code>git commit</code></p><p>都操作完后查看状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><h3 id="撤销更改"><a href="#撤销更改" class="headerlink" title="撤销更改"></a>撤销更改</h3><p>修改<code>readme.txt</code>文件–&gt;git add(提交到暂存区，没有commit) –&gt;发现文件修改有错误–&gt;git reset HEAD file(把暂存区的修改回退到工作区) –&gt;git checkout – file(丢弃工作区的修改)–&gt;git status (查看状态)</p><p><code>vi readme.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">no add</span><br><span class="line">add sthssssss</span><br></pre></td></tr></table></figure><p>提交到暂存区，没有commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure><p>查看状态。有修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        modified:   readme.txt</span><br></pre></td></tr></table></figure><p>把暂存区的修改回退到工作区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD readme.txt</span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M       readme.txt</span><br></pre></td></tr></table></figure><p>查看状态。已撤回。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><p>丢弃工作区的修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -- readme.txt</span><br></pre></td></tr></table></figure><p>查看状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><p>文件已还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> readme.txt</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">no add</span><br></pre></td></tr></table></figure><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><ul><li>提交到暂存区的文件可以用<code>git reset HEAD file</code>命令把文件退回到工作区。</li><li>退回到工作区后用<code>git checkout -- file</code>命令丢弃工作区修改。</li><li>可以用<code>git status</code>查看状态。</li></ul><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>文件提交后直接把文件删除可以在版本库中找到并恢复，如果从来没提交过，那文件是无法恢复的。</p><p>实验：创建<code>test.txt</code>文件并提交到版本库，工作区删除文件。并恢复。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> test.txt</span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add/rm &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        deleted:    test.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><p>恢复文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -- test.txt</span><br></pre></td></tr></table></figure><p><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p><p>如果确实不想用了版本区可以删除文件，这样就永久删除了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> test.txt</span><br></pre></td></tr></table></figure><h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><p>需求：</p><p>将本地仓和远程仓数据同步，还可以多人协同。</p><p>本地仓：笔记本</p><p>远程仓：github </p><p>1.github上创建新仓库</p><p>2.将远程仓库克隆到本地</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@github.com:github用户名/仓库名.git</span></span><br></pre></td></tr></table></figure><p>3.把本地库所有内容推送到远程库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p><p>推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样。</p><p>后面再次推送可以使用简化命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure><h4 id="删除远程库"><a href="#删除远程库" class="headerlink" title="删除远程库"></a>删除远程库</h4><p>如果添加的时候地址写错了，或者就是想删除远程库，可以用<code>git remote rm &lt;name&gt;</code>命令。使用前，建议先用<code>git remote -v</code>查看远程库信息。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">remote</span> <span class="string">-v</span></span><br><span class="line"><span class="string">origin</span>  <span class="string">git@github.com:michaelliao/learn-git.git</span> <span class="string">(fetch)</span></span><br><span class="line"><span class="string">origin</span>  <span class="string">git@github.com:michaelliao/learn-git.git</span> <span class="string">(push)</span></span><br></pre></td></tr></table></figure><p>然后，根据名字删除，比如删除<code>origin</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br></pre></td></tr></table></figure><p>此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。</p><p>总结</p><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p><p>关联一个远程库时必须给远程库指定一个名字，<code>origin</code>是默认习惯命名；</p><p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p><h4 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h4><p>克隆一个本地库</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">git@github.com:github用户名/仓库名.git</span></span><br></pre></td></tr></table></figure><p>本地查看有了。</p><p>有几种方式克隆仓库到本地</p><ul><li>https :<a href="https://github.com/github%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D.git">https://github.com/github用户名/仓库名.git</a></li><li>ssh : <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:github用户名&#x2F;仓库名.git</li><li>github cli : gh repo clone github用户名&#x2F;仓库名</li></ul><p>推荐使用ssh方式，速度更快。</p><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><p>创建分支dev</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">checkout</span> <span class="string">-b</span> <span class="string">dev</span></span><br><span class="line"><span class="string">Switched</span> <span class="string">to</span> <span class="string">a</span> <span class="string">new</span> <span class="string">branch</span> <span class="string">&#x27;dev&#x27;</span></span><br></pre></td></tr></table></figure><p>查看当前分支，星号代表当前分支</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">branch</span> <span class="string">-a</span></span><br><span class="line"><span class="string">*</span> <span class="string">dev</span></span><br><span class="line">  <span class="string">master</span></span><br></pre></td></tr></table></figure><p>写入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vi readme.txt</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">dev branch add sth</span><br></pre></td></tr></table></figure><p>上传到暂存区，并推送到dev分支。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;push dev branch&quot;</span></span><br><span class="line">[<span class="string">dev</span> <span class="string">d51e5f2</span>] <span class="string">push</span> <span class="string">dev</span> <span class="string">branch</span></span><br><span class="line"> <span class="number">1</span> <span class="string">file</span> <span class="string">changed,</span> <span class="number">1</span> <span class="string">insertion(+)</span></span><br></pre></td></tr></table></figure><p>切换到master主分支，查看readme.txt文件发现最后一行不见了。git中各分支之间互不影响。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><p>将dev分支和master主分支合并。<code>merge</code>后面是要合并的分支名。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">merge</span> <span class="string">dev</span></span><br><span class="line"><span class="string">Updating</span> <span class="string">8e3076e..d51e5f2</span></span><br><span class="line"><span class="string">Fast-forward</span></span><br><span class="line"> <span class="string">readme.txt</span> <span class="string">|</span> <span class="number">1</span> <span class="string">+</span></span><br><span class="line"> <span class="number">1</span> <span class="string">file</span> <span class="string">changed,</span> <span class="number">1</span> <span class="string">insertion(+)</span></span><br></pre></td></tr></table></figure><p>切换到master分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><p>再次查看文件内容，显示了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> readme.txt</span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br><span class="line">dev branch add sth</span><br></pre></td></tr></table></figure><h4 id="删除dev分支"><a href="#删除dev分支" class="headerlink" title="删除dev分支"></a>删除dev分支</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">branch</span> <span class="string">-d</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h4><p>Git鼓励大量使用分支：</p><p>查看分支：<code>git branch</code></p><p>创建分支：<code>git branch &lt;name&gt;</code></p><p>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></p><p>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></p><p>删除分支：<code>git branch -d &lt;name&gt;</code></p><p>新版本git 支持switch来切换分支。更加容易区分。</p><h3 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h3><p>通常，合并分支时，如果可能，Git会用<code>Fast forward</code>模式，但这种模式下，删除分支后，会丢掉分支信息。</p><p>如果要强制禁用<code>Fast forward</code>模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p><p>下面我们实战一下<code>--no-ff</code>方式的<code>git merge</code>：</p><p>首先，仍然创建并切换<code>dev</code>分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git switch -c dev</span><br><span class="line">Switched to a new branch <span class="string">&#x27;dev&#x27;</span></span><br></pre></td></tr></table></figure><p>修改readme.txt文件，并提交一个新的commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt </span><br><span class="line">$ git commit -m <span class="string">&quot;add merge&quot;</span></span><br><span class="line">[dev f52c633] add merge</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>现在，我们切换回<code>master</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git switch master</span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br></pre></td></tr></table></figure><p>准备合并<code>dev</code>分支，请注意<code>--no-ff</code>参数，表示禁用<code>Fast forward</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</span><br><span class="line">Merge made by the &#x27;recursive&#x27; strategy.</span><br><span class="line"> readme.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>因为本次合并要创建一个新的commit，所以加上<code>-m</code>参数，把commit描述写进去。</p><p>合并后，我们用<code>git log</code>看看分支历史：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br><span class="line">*   f116cb6 (HEAD -&gt; master) merge with no-ff</span><br><span class="line">|\</span><br><span class="line">| * 98d73ce (dev) add merge</span><br><span class="line">|/</span><br><span class="line">* d51e5f2 push dev branch</span><br><span class="line">* 8e3076e init</span><br><span class="line">* 3f097bb dev branch commit</span><br><span class="line">* 601bf08 del sth</span><br></pre></td></tr></table></figure><h4 id="分支策略"><a href="#分支策略" class="headerlink" title="分支策略"></a>分支策略</h4><ul><li><code>master</code>分支应该是非常稳定的，也就是仅用来发布新版本</li><li><code>dev</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>分支合并到<code>master</code>上，在<code>master</code>分支发布1.0版本。</li><li>你和你的小伙伴们每个人都在<code>dev</code>分支上干活，每个人都有自己的分支，时不时地往<code>dev</code>分支上合并就可以了。</li></ul><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p><h4 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h4><p>发现master分支有Bug需要修复，此时dev上的工作还没提交到暂存区。可以用<code>git stash</code>命令将当前工作现场保存起来，后面修复完Bug后在还原回来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch dev</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">stash</span></span><br><span class="line"><span class="attr">Saved working directory and index state WIP on dev:</span> <span class="string">7f2ad74</span> <span class="string">init</span> <span class="string">status</span></span><br><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">status</span></span><br><span class="line"><span class="string">On</span> <span class="string">branch</span> <span class="string">dev</span></span><br><span class="line"><span class="string">nothing</span> <span class="string">to</span> <span class="string">commit,</span> <span class="string">working</span> <span class="string">tree</span> <span class="string">clean</span></span><br></pre></td></tr></table></figure><p>首先确定要在哪个分支上修复bug，假定需要在<code>master</code>分支上修复，就从<code>master</code>创建临时分支：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">checkout</span> <span class="string">master</span></span><br><span class="line"><span class="string">Switched</span> <span class="string">to</span> <span class="string">branch</span> <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><p>创建新分支<code>issue-102</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">checkout</span> <span class="string">-b</span> <span class="string">issue-102</span></span><br><span class="line"><span class="string">Switched</span> <span class="string">to</span> <span class="string">a</span> <span class="string">new</span> <span class="string">branch</span> <span class="string">&#x27;issue-102&#x27;</span></span><br></pre></td></tr></table></figure><p>修复Bug（修改readme.txt文件内容），然后提交。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br><span class="line">$ git commit -m <span class="string">&quot;fix bug 102&quot;</span></span><br><span class="line">[issue-102 858cab6] fix bug 102</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>修复完成后，切换到<code>master</code>分支，并完成合并，最后删除<code>issue-102</code>分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git switch master</span><br><span class="line">Switched to branch <span class="string">&#x27;master&#x27;</span></span><br><span class="line">$ git merge --no-ff -m <span class="string">&quot;merged bug fix 102&quot;</span> issue-102</span><br><span class="line">Merge made by the <span class="string">&#x27;ort&#x27;</span> strategy.</span><br><span class="line"> readme.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>现在回到dev分支还原之前的工作状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git switch dev</span><br><span class="line">Switched to branch <span class="string">&#x27;dev&#x27;</span></span><br></pre></td></tr></table></figure><p>查看之前存储的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git stash list</span><br><span class="line">stash@&#123;0&#125;: WIP on dev: 7f2ad74 init status</span><br></pre></td></tr></table></figure><p>两种方法恢复之前的工作内容</p><ul><li>用<code>git stash apply</code>恢复，但是恢复后，stash内容并不删除，你需要用<code>git stash drop</code>来删除</li><li>用<code>git stash pop</code>，恢复的同时把stash内容也删了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git stash pop</span><br><span class="line">On branch dev</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">&quot;git add&quot;</span> and/or <span class="string">&quot;git commit -a&quot;</span>)</span><br><span class="line">Dropped refs/stash@&#123;0&#125; (6228502b0116dba3633cdb19b738aba9bd6d4664)</span><br></pre></td></tr></table></figure><p>你可以多次stash，恢复的时候，先用<code>git stash list</code>查看，然后恢复指定的stash，用命令：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">stash</span> <span class="string">apply</span> <span class="string">stash@&#123;0&#125;</span></span><br></pre></td></tr></table></figure><p>在master分支上修复了bug后，我们要想一想，dev分支是早期从master分支分出来的，所以，这个bug其实在当前dev分支上也存在。</p><p>先切换到master分支上查看之前“ fix bug 102” 那条<code>commit id</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git switch master <span class="comment">#也可以用git switch -来切换。</span></span><br><span class="line">$ git <span class="built_in">log</span> --graph</span><br><span class="line">commit 858cab6c5238646df8d353bfd83382a92a432fcd (issue-102)</span><br><span class="line">Author: smith &lt;smith@gmail.com&gt;</span><br><span class="line">Date:   Tue May 10 13:18:18 2022 +0800</span><br><span class="line"></span><br><span class="line">    fix bug 102</span><br></pre></td></tr></table></figure><p>Git专门提供了一个<code>cherry-pick</code>命令，让我们能复制一个特定的提交到当前分支。再次切换到dev分支，复制master分支上“fix bug 102”这条改动提交。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">branch</span></span><br><span class="line"><span class="string">*</span> <span class="string">dev</span></span><br><span class="line">  <span class="string">master</span></span><br><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">cherry-pick</span> <span class="string">858cab</span></span><br><span class="line">[<span class="string">dev</span> <span class="string">0996ec3</span>] <span class="string">fix</span> <span class="string">bug</span> <span class="number">102</span></span><br><span class="line"> <span class="attr">Date:</span> <span class="string">Tue</span> <span class="string">May</span> <span class="number">10</span> <span class="number">13</span><span class="string">:18:18</span> <span class="number">2022</span> <span class="string">+0800</span></span><br><span class="line"> <span class="number">1</span> <span class="string">file</span> <span class="string">changed,</span> <span class="number">1</span> <span class="string">insertion(+)</span></span><br></pre></td></tr></table></figure><p>Git自动给dev分支做了一次提交，注意这次提交的commit是<code>0996ec3</code>，它并不同于master的<code>858cab</code>，因为这两个commit只是改动相同，但确实是两个不同的commit。用<code>git cherry-pick</code>，我们就不需要在dev分支上手动再把修bug的过程重复一遍。</p><h5 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h5><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；</p><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场；</p><p>在master分支上修复的bug，想要合并到当前dev分支，可以用<code>git cherry-pick &lt;commit&gt;</code>命令，把bug提交的修改“复制”到当前分支，避免重复劳动。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/900375748016320">1</a></p>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible基础教程</title>
      <link href="/2022/04/22/ansible%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
      <url>/2022/04/22/ansible%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="ansible的配置文件"><a href="#ansible的配置文件" class="headerlink" title="ansible的配置文件"></a>ansible的配置文件</h2><h3 id="全局配置文件"><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h3><p>ansible默认的全局配置文件是<code>/etc/ansible/ansible.cfg</code>，可认为是全局配置的入口。</p><p>Ansible支持4种方式指定配置文件，它们的解析顺序从上到下</p><ul><li>ANSIBLE_CFG 环境变量指定的配置文件</li><li>ansible.cfg 当前目录下的ansible.cfg</li><li>~&#x2F;.ansible.cfg 家目录下的.ansible.cfg</li><li><code>/etc/ansible/ansible.cfg</code> 默认全局配置文件</li></ul><p>修改默认配置文件&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/ansible/ansible.cfg | grep -vE <span class="string">&quot;^$|^#&quot;</span></span><br><span class="line">[defaults]</span><br><span class="line">inventory      = /etc/ansible/hosts<span class="comment"># inventory文件：ansible管理的主机清单</span></span><br><span class="line">library        = /usr/share/my_modules/</span><br><span class="line">forks          = 5<span class="comment"># ansbile的并发连接数</span></span><br><span class="line">sudo_user      = root</span><br><span class="line">remote_port    = 22</span><br><span class="line">host_key_checking = False</span><br><span class="line"><span class="built_in">timeout</span> = 10</span><br><span class="line">log_path = /var/log/ansible.log</span><br></pre></td></tr></table></figure><p>文件中其它的可配置项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stdout_callback = debug        <span class="comment"># 可将输出变得人性化；默认输出会挤在一行，配置后会换行输出；</span></span><br></pre></td></tr></table></figure><h3 id="inventory主机文件"><a href="#inventory主机文件" class="headerlink" title="inventory主机文件"></a>inventory主机文件</h3><p><code>inventory</code>文件默认路径是<code>/etc/ansible/hosts</code>，在这里配置目标主机，ansible便可以对其进行控制。</p><p>在<code>/etc/ansible/hosts</code>文件里配置node主机名或ip：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> hosts</span><br><span class="line">[default]<span class="comment">#主机分组</span></span><br><span class="line">node1<span class="comment">#172.18.0.101</span></span><br><span class="line">node2<span class="comment">#172.18.0.102</span></span><br></pre></td></tr></table></figure><p>可以通过<code>/etc/ansible/ansible.cfg</code>文件修改inventory的默认路径：<code>inventory = /etc/ansible/hosts</code>。如果将该配置指定为目录，便可以使用多个inventory文件来管理节点，一般很少动这个。</p><p>通常，不会修改默认的路径。如果有自定义的inventory文件，可以直接在ansible命令行中使用<code>-i</code>选项指定:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible -i /tmp/my_inventory.ini ...</span></span><br><span class="line"><span class="comment"># ansible-playbook -i /tmp/my_inventory.ini ...</span></span><br></pre></td></tr></table></figure><h3 id="查看inventory"><a href="#查看inventory" class="headerlink" title="查看inventory"></a>查看inventory</h3><p>列出ansiblek可管理的所有主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-inventory --graph all<span class="comment"># 指定文件：ansible-inventory -i /etc/ansible/hosts --graph all</span></span><br><span class="line">@all:<span class="comment"># all是默认的主机组，包含所有主机</span></span><br><span class="line">  |--@default:</span><br><span class="line">  |  |--node1</span><br><span class="line">  |  |--node2</span><br><span class="line">  |--@ungrouped:</span><br></pre></td></tr></table></figure><h2 id="运行ansible命令"><a href="#运行ansible命令" class="headerlink" title="运行ansible命令"></a>运行ansible命令</h2><p>完成上述的基本配置后，即可以开始使用ansible来批量管理主机了，这里的管理方式为命令行方式（又称为<code>Ad-hoc</code>方式）。</p><p>Ad-hoc方式运行ansible的命令格式：<code>ansible 主机组/主机 -m 模块 -a 参数</code></p><p>选项解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-m:指定调用的模块</span><br><span class="line">-a:向模块传递的参数，模块不需要则可省略;参数需要使用引号包围</span><br></pre></td></tr></table></figure><p>此外ansible命令还可以带上其它选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i:指定本次的inventory路径，指定该参数则后面不加主机组/主机</span><br><span class="line">-e:设置变量，格式为<span class="string">&#x27;var1=&quot;aaa&quot; var=&quot;bbb&quot;&#x27;</span></span><br><span class="line">-v/vv/vvv:命令输出的打印级别</span><br></pre></td></tr></table></figure><p>ansible的批量管理功能依靠各个模块来完成，ansible提供了几千个模块（其中ansible团队自己维护大约100多个核心模块），每个模块完成各自的作用。</p><p>下面用ping模块和debug模块来演示一下ansible的基础功能。</p><h3 id="ping模块"><a href="#ping模块" class="headerlink" title="ping模块"></a>ping模块</h3><p><code>ping模块</code>是ansible最基础模块之一，可用于检测远程主机是否在线。</p><p>命令：<code>ansible 主机组/主机 -m ping</code></p><p>返回值：changed、ping</p><p>命令：<code>ansible all -m ping</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]$ ansible all -m ping</span><br><span class="line">node2 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node1 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="debug模块"><a href="#debug模块" class="headerlink" title="debug模块"></a>debug模块</h3><p>官网说明：<a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html</a></p><p><code>debug模块</code>用于输出或调试一些变量或数据。该模块共有三个参数msg、var、verbosity。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg：打印配置的信息</span><br><span class="line">var：打印变量值</span><br><span class="line">verbosity：运行级别，设置为3，则-vvv或更高才会打印输出</span><br></pre></td></tr></table></figure><p><strong>命令：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m debug -a &#x27;msg=&quot;hello world&quot;&#x27;</span><br><span class="line">ansible all -e &#x27;str=&quot;hello world&quot;&#x27; -m debug -a &#x27;var=str&#x27;</span><br><span class="line">ansible all -v -m debug -a &#x27;msg=&quot;hello world&quot; verbosity=1&#x27;</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]$ ansible all -m debug -a <span class="string">&#x27;msg=&quot;hello world&quot;&#x27;</span></span><br><span class="line">node1 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node2 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@master ansible]$ ansible all -e <span class="string">&#x27;str=&quot;hello world&quot;&#x27;</span> -m debug -a <span class="string">&#x27;var=str&#x27;</span></span><br><span class="line">node1 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;str&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node2 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;str&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@master ansible]$ ansible all -m debug -a <span class="string">&#x27;msg=&quot;hello world&quot; verbosity=1&#x27;</span></span><br><span class="line">node1 | SKIPPED</span><br><span class="line">node2 | SKIPPED</span><br><span class="line">[root@master ansible]$ ansible all -v -m debug -a <span class="string">&#x27;msg=&quot;hello world&quot; verbosity=1&#x27;</span></span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line">node1 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node2 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello world&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h2><p><code>playbook</code>是一个<code>yaml</code>格式的文件，由一个或多个<code>play</code>按顺序列表的方式组成。每个<code>play</code>运行一个或多个<code>task</code>，每个<code>task</code>调用一个模块<code>module</code>。</p><h3 id="playbook、play、task的关系"><a href="#playbook、play、task的关系" class="headerlink" title="playbook、play、task的关系"></a>playbook、play、task的关系</h3><ul><li>playbook中可以定义一个或多个play</li><li>每个play中可以定义一个或多个task<ul><li>其中还可以定义两类特殊的task：pre_tasks和post_tasks</li><li>pre_tasks表示执行执行普通任务之前执行的任务列表</li><li>post_tasks表示普通任务执行完之后执行的任务列表</li></ul></li><li>每个play都需要通过hosts指令指定要执行该play的目标主机</li><li>每个play都可以设置一些该play的环境控制行为，比如定义play级别的变量</li></ul><h3 id="编写一个playbook并执行"><a href="#编写一个playbook并执行" class="headerlink" title="编写一个playbook并执行"></a>编写一个playbook并执行</h3><p><code>playbook</code>使用<code>yaml</code>语法格式组织各种<code>play</code>和<code>task</code>规则。</p><p>下面使用ping模块和debug模块编写一个playbook文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat test.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span><span class="comment"># play的名称，非必须</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span><span class="comment"># 指定目标主机</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span><span class="comment"># 收集目标主机信息，默认值true，非必须</span></span><br><span class="line">  <span class="attr">tasks:</span><span class="comment"># tasks声明任务列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span><span class="comment"># task任务名称，非必须</span></span><br><span class="line">      <span class="attr">ping:</span><span class="comment"># 模块</span></span><br><span class="line">        <span class="attr">data:</span> <span class="string">&quot;pong task1&quot;</span><span class="comment"># 模块参数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">ping:</span></span><br><span class="line">        <span class="attr">data:</span> <span class="string">&quot;pong task2&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play2</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello task1 in play2&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello task2 in play2&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意所有的<code>-</code>和<code>:</code>符号后面均需要接一个空格</p></blockquote><p>执行playbook的命令是<code>ansible-playbook test.yaml</code>：</p><p>该命令同样支持像ansile命令一样的多个选项，如<code>-e</code>、<code>-i</code>、<code>-v</code>等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook -v test.yaml</span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line"></span><br><span class="line">PLAY [play1] **********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">ok: [node2] =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong task1&quot;</span>&#125;</span><br><span class="line">ok: [node1] =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong task1&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">TASK [task2] **********************************************************************************************************************</span><br><span class="line">ok: [node1] =&gt; &#123;<span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong task2&quot;</span>&#125;</span><br><span class="line">ok: [node2] =&gt; &#123;<span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong task2&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">PLAY [play2] **********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">ok: [node1] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello task1 in play2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">ok: [node2] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello task1 in play2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TASK [task2] **********************************************************************************************************************</span><br><span class="line">ok: [node1] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello task2 in play2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">ok: [node2] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello task2 in play2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************************************************</span><br><span class="line">node1                      : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class="line">node2                      : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><h3 id="playbook文件各配置指令及含义"><a href="#playbook文件各配置指令及含义" class="headerlink" title="playbook文件各配置指令及含义"></a>playbook文件各配置指令及含义</h3><p><code>yaml</code>文件中，使用<code>-</code>表示一个列表元素，多个<code>key：value</code>表示一个字典。</p><p>每个<code>playbook</code>使用列表来组织多个<code>play</code>，<code>play</code>内同样使用列表来组织多个<code>task</code>；play和task自身则采用字典的方式组织，即多个键值对。</p><p>在playbook顶层使用<code>- xxx:</code>表示这是一个play；每个play中必须包含<code>hosts</code>和<code>tasks</code>指令。</p><p><code>hosts</code>指令用来指定要执行该play的目标主机，可以是主机名、主机组或者其它多种方式。</p><p><code>tasks</code>指令用来指定该play中包含的任务列表，每个任务使用<code>- xxx:</code>方式表示。</p><p><code>name</code>指令用来设置play和task的名称，值具有唯一性。</p><p><code>gather_facts</code>指令用来收集目标主机的信息，由setup模块提供。默认情况下，每个play都先执行这个特殊任务，收集完信息才开始其它任务。如果后续任务中用不到该信息，则可以禁止掉该任务，提升效率。</p><h3 id="向模块传递参数"><a href="#向模块传递参数" class="headerlink" title="向模块传递参数"></a>向模块传递参数</h3><p>yaml中，向模块传递参数的方式总结为字符串和数组两种方式。</p><p>还是以debug模块为例。</p><p>数组方式如上面test.yaml文件里的传参，即<code>key: value</code>的形式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">......</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello task1 in play2&quot;</span></span><br><span class="line">        <span class="string">verbosity=1</span></span><br></pre></td></tr></table></figure><p>字符串方式，由于yaml的语法规则（字符串换行将自动转换为空格），又有不同的书写形式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="string">msg=&quot;hello</span> <span class="string">task1&quot;</span> <span class="string">verbosity=1</span><span class="comment"># 参数写成一行</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="string">msg=&quot;hello</span> <span class="string">task2&quot;</span><span class="comment"># 参数写成多行</span></span><br><span class="line">        <span class="string">verbosity=1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">debug:</span> <span class="string">|</span><span class="comment"># 竖线|，将保留字符串的换行符，否则将自动转换成空格，在一些模块中很有用，如shell</span></span><br><span class="line">        <span class="string">msg=&quot;hello</span> <span class="string">task3&quot;</span></span><br><span class="line">        <span class="string">verbosity=1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">      <span class="attr">debug:</span> <span class="string">&gt;</span><span class="comment"># 符号&gt;，效果和直接写成多行一样</span></span><br><span class="line">        <span class="string">msg=&quot;hello</span> <span class="string">task4&quot;</span></span><br><span class="line">        <span class="string">verbosity=1</span></span><br></pre></td></tr></table></figure><p>还可以直接使用指令args指明参数：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">......</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello task1 in play2&quot;</span></span><br></pre></td></tr></table></figure><h3 id="默认的任务执行策略"><a href="#默认的任务执行策略" class="headerlink" title="默认的任务执行策略"></a>默认的任务执行策略</h3><p>&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg文件的<code>forks</code>配置，决定ansible执行任务的并发连接数。</p><p>假如forks配置为5，那么ansible第一次将同时连接5个node节点执行任务。其中若有节点提前执行完任务， 则ansible会新建一个新进程，来连接下一个节点执行任务。</p><p>forks是保证最多有N个节点同时执行任务。</p><h2 id="常见模块"><a href="#常见模块" class="headerlink" title="常见模块"></a>常见模块</h2><h3 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h3><p><strong>说明：</strong></p><p><code>shell</code>模块接收shell命令，命令后可跟空格分割的参数列；</p><p>必须传入自由格式的命令，或者cmd参数；</p><p>它十分类似command模块，但是它在远程主机上通过shell（比如&#x2F;bin&#x2F;bash）来运行命令；</p><p>shell模块相比command模块，支持解析特殊符号<code>&lt;</code>、<code>&gt;</code>、<code>|</code>、<code>;</code>、<code>&amp;</code>等。</p><p><strong>参数：</strong></p><table><thead><tr><th>Parameter</th><th>Choices&#x2F;Defaults</th><th>说明</th></tr></thead><tbody><tr><td><strong><code>chdir</code></strong> path</td><td></td><td>运行脚本前，切换到相关目录</td></tr><tr><td><strong><code>cmd</code></strong> string</td><td></td><td>需要运行的命令，后跟可选的参数</td></tr><tr><td><strong><code>creates</code></strong> path</td><td></td><td>若一个文件或目录存在，则跳过该步骤</td></tr><tr><td><strong><code>removes</code></strong> path</td><td></td><td>若一个文件或目录不存在，则跳过该步骤</td></tr><tr><td><strong><code>executable</code></strong> path</td><td></td><td>改变执行命令的解释器，如&#x2F;bin&#x2F;bash、&#x2F;usr&#x2F;bin&#x2F;expect、&#x2F;usr&#x2F;bin&#x2F;python；绝对路径</td></tr><tr><td><strong>free_form</strong> string</td><td></td><td>自由格式的命令（即命令字符串，没有相关参数，直接写在shell模块后面即可）</td></tr><tr><td><strong>stdin</strong> string</td><td></td><td>Set the stdin of the command directly to the specified value.</td></tr><tr><td><strong>stdin_add_newline</strong> boolean</td><td><strong>Choices:</strong><br />no<br /><strong>yes</strong> ←（default）</td><td>Whether to append a newline to stdin data.</td></tr><tr><td><strong>warn</strong> boolean</td><td><strong>Choices:</strong><br />no<br /><strong>yes</strong> ←(default)</td><td>Whether to enable task warnings.</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">shell</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="string">hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">date</span> <span class="string">+&quot;%F</span> <span class="string">%T&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">shell:</span> </span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">pwd</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/etc/sysconfig</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">ls</span> <span class="string">/tmp</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task5</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">print(&#x27;hello</span> <span class="string">world&#x27;)</span></span><br><span class="line">        <span class="attr">executable:</span> <span class="string">/usr/bin/python</span></span><br></pre></td></tr></table></figure><p>注意chdir参数只支持下面的方式：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">shell:</span> </span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">pwd</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/etc/sysconfig</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">pwd</span><span class="comment"># free_from格式需要采用args参数，显式指定chdir参数</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/etc/sysconfig</span></span><br><span class="line"><span class="comment"># 下面的方式将发生错误</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">pwd</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/etc/sysconfig</span></span><br></pre></td></tr></table></figure><p><strong>Ad-hoc方式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible all -m shell -a <span class="string">&quot;ls -l | wc -l&quot;</span></span><br><span class="line">$ ansible all -v -m shell -a <span class="string">&quot;ls chdir=/tmp &quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module</a></p></blockquote><h3 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h3><p><strong>说明：</strong></p><p><code>script</code>模块接受一个脚本名称，后面可跟空格分割的参数列；</p><p>支持自由格式的命令，或者cmd参数；</p><p>将本地脚本传输到远程主机上执行；</p><p>在远程主机上使用shell环境执行脚本；</p><p>该模块不需要python，类似raw模块。</p><p><strong>参数：</strong></p><table><thead><tr><th>Parameter</th><th>Choices&#x2F;Defaults</th><th>说明</th></tr></thead><tbody><tr><td><strong><code>chdir</code></strong> path</td><td></td><td>运行脚本前，切换到远程主机的相关目录</td></tr><tr><td><strong><code>cmd</code></strong> string</td><td></td><td>需要运行的脚本路径，后跟可选的参数</td></tr><tr><td><strong><code>creates</code></strong> path</td><td></td><td>若一个文件或目录存在，则跳过该步骤</td></tr><tr><td><strong><code>removes</code></strong> path</td><td></td><td>若一个文件或目录不存在，则跳过该步骤</td></tr></tbody></table><p><strong>示例：</strong></p><p><code>sctipt-simple.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">script</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">tasks:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">list</span> <span class="string">files</span></span><br><span class="line">      <span class="attr">script:</span> <span class="string">/etc/ansible/test-yml/trans_exec.sh</span></span><br></pre></td></tr></table></figure><p><code>trans_exec.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">date</span> &amp;&amp; hostname </span><br></pre></td></tr></table></figure><p><strong>Ad-hoc：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ansible all -m script -a <span class="string">&quot;/tmp/hello.sh world&quot;</span></span><br><span class="line">$ ansible all -m script -a <span class="string">&quot;/tmp/hello.sh world creates=/tmp&quot;</span></span><br></pre></td></tr></table></figure><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/script_module.html#ansible-collections-ansible-builtin-script-module">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/script_module.html#ansible-collections-ansible-builtin-script-module</a></p><h3 id="hostname模块"><a href="#hostname模块" class="headerlink" title="hostname模块"></a>hostname模块</h3><p><strong>说明：</strong></p><p>设置系统的主机名</p><p><strong>参数：</strong></p><table><thead><tr><th>Parameter</th><th>Choices&#x2F;Defaults</th><th>说明</th></tr></thead><tbody><tr><td><strong><code>name</code></strong> string &#x2F; required</td><td></td><td>设置主机名</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">a</span> <span class="string">hostname</span></span><br><span class="line">  <span class="attr">ansible.builtin.hostname:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web01</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">a</span> <span class="string">hostname</span> <span class="string">specifying</span> <span class="string">strategy</span></span><br><span class="line">  <span class="attr">ansible.builtin.hostname:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web01</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">systemd</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/hostname_module.html">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/hostname_module.html</a></p></blockquote><h2 id="在playbook中设置变量"><a href="#在playbook中设置变量" class="headerlink" title="在playbook中设置变量"></a>在playbook中设置变量</h2><p><code>vars</code>指令可在play或task中设置变量，可以设置一个或多个。可以采用字典或列表的形式定义变量。</p><h3 id="字典变量的定义和引用"><a href="#字典变量的定义和引用" class="headerlink" title="字典变量的定义和引用"></a><strong>字典变量的定义和引用</strong></h3><p><strong>定义：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vars:</span></span><br><span class="line">    <span class="attr">foo1:</span></span><br><span class="line">      <span class="attr">a:</span> <span class="string">hello</span></span><br><span class="line">      <span class="attr">b:</span> <span class="string">world</span></span><br><span class="line">    <span class="attr">foo2:</span></span><br><span class="line">      <span class="attr">a:</span> <span class="string">aaa</span></span><br><span class="line">      <span class="attr">b:</span> <span class="string">bbb</span></span><br></pre></td></tr></table></figure><p><strong>引用：</strong></p><p>使用点号或方括号，在yaml文件使用jinja2语法引用，需要加单双引号，否则解析yaml的时候将报错</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; foo1.a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo1[&#x27;b&#x27;] &#125;&#125;</span>&quot;</span><span class="comment"># 注意&#123;&#123;&#125;&#125;是jinja2的语法，在yaml文件中需要使用引号引起来，单双引号都行</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">var:</span> <span class="string">foo1.a,foo1[&#x27;b&#x27;]</span><span class="comment"># debug模块的var参数，多个值使用逗号分隔，且无需花括号，前后加不加引号均可</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; foo2.a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo2.b &#125;&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">vars</span> <span class="string">play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">foo1:</span></span><br><span class="line">      <span class="attr">a:</span> <span class="string">hello</span></span><br><span class="line">      <span class="attr">b:</span> <span class="string">world</span></span><br><span class="line">    <span class="attr">foo2:</span></span><br><span class="line">      <span class="attr">a:</span> <span class="string">aaa</span></span><br><span class="line">      <span class="attr">b:</span> <span class="string">bbb</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; foo1.a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo1[&#x27;b&#x27;] &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span> <span class="string">foo1.a,foo1[&#x27;b&#x27;]</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; foo2.a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo2.b &#125;&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="列表变量的定义和引用"><a href="#列表变量的定义和引用" class="headerlink" title="列表变量的定义和引用"></a><strong>列表变量的定义和引用</strong></h3><p><strong>定义：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vars:</span></span><br><span class="line">    <span class="attr">foo:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">a:</span> <span class="string">hello</span></span><br><span class="line">        <span class="attr">b:</span> <span class="string">world</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">a:</span> <span class="string">aaa</span></span><br><span class="line">        <span class="attr">b:</span> <span class="string">bbb</span></span><br></pre></td></tr></table></figure><p><strong>引用：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; foo[0].a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo[0].b &#125;&#125;</span>&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;foo[1][&#x27;a&#x27;]&#125;&#125;</span> <span class="template-variable">&#123;&#123;foo[1][&#x27;b&#x27;]&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>引用变量时，使用点号比较方便，但如果变量名本身带点，则尽量选择方括号的方式。</p></blockquote><h2 id="when指令进行条件判断"><a href="#when指令进行条件判断" class="headerlink" title="when指令进行条件判断"></a>when指令进行条件判断</h2><p><code>when</code>指令是ansible提供的唯一一个通用条件指令。<code>when</code>指令后的变量引用不需要双花括号，当when指令的值为true时，执行任务。</p><p><strong>yaml文件如下：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">when</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">foo:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;test&quot;</span><span class="comment"># when指令的变量可直接引用</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;dev&quot;</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;world&quot;</span></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><p>从输出中可看出，任务task2由于条件不满足自动跳过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]<span class="comment"># ansible-playbook -v when.yaml</span></span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line"></span><br><span class="line">PLAY [when] ***********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">ok: [node1] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">ok: [node2] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TASK [task2] **********************************************************************************************************************</span><br><span class="line">skipping: [node1] =&gt; &#123;&#125;</span><br><span class="line">skipping: [node2] =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************************************************</span><br><span class="line">node1                      : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0</span><br><span class="line">node2                      : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><p><strong>多个判断条件：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;dev&quot;</span> <span class="string">or</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;test&quot;</span><span class="comment"># 逻辑或</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">(foo</span> <span class="string">==</span> <span class="string">&quot;dev&quot;</span><span class="string">)</span> <span class="string">or</span> <span class="string">(foo</span> <span class="string">==</span> <span class="string">&quot;test&quot;</span><span class="string">)</span><span class="comment"># 支持括号括起来</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task5</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">(foo</span> <span class="string">==</span> <span class="string">&quot;dev&quot;</span><span class="string">)</span> <span class="string">and</span> <span class="string">(foo</span> <span class="string">==</span> <span class="string">&quot;test&quot;</span><span class="string">)</span><span class="comment"># 逻辑与</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task6</span></span><br><span class="line">  <span class="attr">when:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;dev&quot;</span><span class="comment"># 逻辑与的另一种组织方式</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">foo</span> <span class="string">==</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task7</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">foo</span> <span class="type">!=</span> <span class="string">&quot;dev&quot;</span><span class="comment"># 逻辑否</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><h2 id="loop循环结构"><a href="#loop循环结构" class="headerlink" title="loop循环结构"></a>loop循环结构</h2><p>loop指令中的各项元素将以item变量名进行迭代。</p><h3 id="直接迭代列表"><a href="#直接迭代列表" class="headerlink" title="直接迭代列表"></a>直接迭代列表</h3><p><strong>迭代简单列表：</strong></p><p>列表元素为字符串</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;uptime -p&quot;</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]<span class="comment"># cat loop.yaml</span></span><br><span class="line">---</span><br><span class="line">- name: loop</span><br><span class="line">  hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: task1</span><br><span class="line">      shell: <span class="string">&quot;&#123;&#123; item &#125;&#125;&quot;</span></span><br><span class="line">      loop:</span><br><span class="line">        - hostname</span><br><span class="line">        - <span class="string">&quot;uptime -p&quot;</span></span><br><span class="line">[root@master ansible]<span class="comment"># ansible-playbook -v loop.yaml</span></span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line"></span><br><span class="line">PLAY [loop] ***********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">changed: [node2] =&gt; (item=hostname) =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.020436&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.126971&quot;</span>, <span class="string">&quot;item&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.106535&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;node2&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;node2&quot;</span>]&#125;</span><br><span class="line">changed: [node1] =&gt; (item=hostname) =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.361005&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.409020&quot;</span>, <span class="string">&quot;item&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.048015&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;node1&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;node1&quot;</span>]&#125;</span><br><span class="line">changed: [node2] =&gt; (item=<span class="built_in">uptime</span> -p) =&gt; &#123;<span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime -p&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.006628&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.610052&quot;</span>, <span class="string">&quot;item&quot;</span>: <span class="string">&quot;uptime -p&quot;</span>, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.603424&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;up 3 weeks, 2 days, 19 hours, 42 minutes&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;up 3 weeks, 2 days, 19 hours, 42 minutes&quot;</span>]&#125;</span><br><span class="line">changed: [node1] =&gt; (item=<span class="built_in">uptime</span> -p) =&gt; &#123;<span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime -p&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.074039&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:05:18.006283&quot;</span>, <span class="string">&quot;item&quot;</span>: <span class="string">&quot;uptime -p&quot;</span>, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:05:17.932244&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;up 3 weeks, 2 days, 19 hours, 42 minutes&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;up 3 weeks, 2 days, 19 hours, 42 minutes&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************************************************</span><br><span class="line">node1                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class="line">node2                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><p><strong>迭代hash哈希列表：</strong></p><p>列表元素为字典</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">shell:</span></span><br><span class="line">    <span class="attr">cmd:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item.cmd &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">creates:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item[&#x27;condition&#x27;] &#125;&#125;</span>&quot;</span><span class="comment"># 两种引用方式均可</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">cmd:</span> <span class="string">&#x27;hostname&#x27;</span>, <span class="attr">condition:</span> <span class="string">&#x27;/tmp&#x27;</span> &#125;<span class="comment"># 这个循环将被跳过</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">cmd:</span> <span class="string">&#x27;uptime&#x27;</span>, <span class="attr">condition:</span> <span class="string">&#x27;/aaa&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]<span class="comment"># cat loop.yaml</span></span><br><span class="line">---</span><br><span class="line">- name: loop</span><br><span class="line">  hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: task1</span><br><span class="line">      shell:</span><br><span class="line">        cmd: <span class="string">&quot;&#123;&#123; item.cmd &#125;&#125;&quot;</span></span><br><span class="line">        creates: <span class="string">&quot;&#123;&#123; item.condition &#125;&#125;&quot;</span></span><br><span class="line">      loop:</span><br><span class="line">        - &#123; cmd: <span class="string">&#x27;hostname&#x27;</span>, condition: <span class="string">&#x27;/tmp&#x27;</span> &#125;<span class="comment"># 这个循环将被跳过，[&quot;skipped, since /tmp exists&quot;]，任务没有跳过</span></span><br><span class="line">        - &#123; cmd: <span class="string">&#x27;uptime&#x27;</span>, condition: <span class="string">&#x27;/aaa&#x27;</span> &#125;</span><br><span class="line">[root@master ansible]<span class="comment">#</span></span><br><span class="line">[root@master ansible]<span class="comment"># ansible-playbook -v loop.yaml</span></span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line"></span><br><span class="line">PLAY [loop] ***********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">ok: [node2] =&gt; (item=&#123;u<span class="string">&#x27;cmd&#x27;</span>: u<span class="string">&#x27;hostname&#x27;</span>, u<span class="string">&#x27;condition&#x27;</span>: u<span class="string">&#x27;/tmp&#x27;</span>&#125;) =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;item&quot;</span>: &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;condition&quot;</span>: <span class="string">&quot;/tmp&quot;</span>&#125;, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;skipped, since /tmp exists&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;skipped, since /tmp exists&quot;</span>]&#125;</span><br><span class="line">changed: [node2] =&gt; (item=&#123;u<span class="string">&#x27;cmd&#x27;</span>: u<span class="string">&#x27;uptime&#x27;</span>, u<span class="string">&#x27;condition&#x27;</span>: u<span class="string">&#x27;/aaa&#x27;</span>&#125;) =&gt; &#123;<span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.024675&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:21:23.286758&quot;</span>, <span class="string">&quot;item&quot;</span>: &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;condition&quot;</span>: <span class="string">&quot;/aaa&quot;</span>&#125;, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:21:23.262083&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot; 15:21:23 up 23 days, 19:58,  2 users,  load average: 0.13, 0.14, 0.20&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot; 15:21:23 up 23 days, 19:58,  2 users,  load average: 0.13, 0.14, 0.20&quot;</span>]&#125;</span><br><span class="line">ok: [node1] =&gt; (item=&#123;u<span class="string">&#x27;cmd&#x27;</span>: u<span class="string">&#x27;hostname&#x27;</span>, u<span class="string">&#x27;condition&#x27;</span>: u<span class="string">&#x27;/tmp&#x27;</span>&#125;) =&gt; &#123;<span class="string">&quot;ansible_facts&quot;</span>: &#123;<span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span>&#125;, <span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;item&quot;</span>: &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;condition&quot;</span>: <span class="string">&quot;/tmp&quot;</span>&#125;, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;skipped, since /tmp exists&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot;skipped, since /tmp exists&quot;</span>]&#125;</span><br><span class="line">changed: [node1] =&gt; (item=&#123;u<span class="string">&#x27;cmd&#x27;</span>: u<span class="string">&#x27;uptime&#x27;</span>, u<span class="string">&#x27;condition&#x27;</span>: u<span class="string">&#x27;/aaa&#x27;</span>&#125;) =&gt; &#123;<span class="string">&quot;ansible_loop_var&quot;</span>: <span class="string">&quot;item&quot;</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.386491&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2022-01-09 15:21:30.029184&quot;</span>, <span class="string">&quot;item&quot;</span>: &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;condition&quot;</span>: <span class="string">&quot;/aaa&quot;</span>&#125;, <span class="string">&quot;rc&quot;</span>: 0, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2022-01-09 15:21:29.642693&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot; 15:21:30 up 23 days, 19:58,  2 users,  load average: 0.90, 0.51, 0.35&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [<span class="string">&quot; 15:21:30 up 23 days, 19:58,  2 users,  load average: 0.90, 0.51, 0.35&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************************************************</span><br><span class="line">node1                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class="line">node2                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><h3 id="迭代字典"><a href="#迭代字典" class="headerlink" title="迭代字典"></a>迭代字典</h3><p><code>loop</code>指令无法直接迭代字典，需要使用过滤器<code>dict2items</code>进行转换，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Using</span> <span class="string">dict2items</span></span><br><span class="line">  <span class="attr">ansible.builtin.debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item.key &#125;&#125;</span> - <span class="template-variable">&#123;&#123; item.value &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; tag_data | dict2items &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">tag_data:</span></span><br><span class="line">      <span class="attr">Environment:</span> <span class="string">dev</span></span><br><span class="line">      <span class="attr">Application:</span> <span class="string">payment</span></span><br></pre></td></tr></table></figure><p>上例中，通过迭代tag_data来打印它的key和value。</p><blockquote><p><code>when</code>指令和<code>loop</code>指令同时使用时，先进行循环，再在每个循环中进行条件判断。</p></blockquote><h2 id="notify和handlers"><a href="#notify和handlers" class="headerlink" title="notify和handlers"></a>notify和handlers</h2><p>ansible中的一个重要概念<code>changed</code>，它表示目标状态是否发生改变，即本次任务是否执行、执行后是否影响结果。如果changed&#x3D;1，则表示目标状态发生改变；如果changed&#x3D;0，则表示目标状态未发生改变，或者任务没有执行。</p><p>ansible若监视到<code>changed=1</code>，就会触发<code>notify</code>指令所定义的<code>handler</code>。handler，也是一个task，只是定义在<code>handlers</code>中，需要notify来触发执行。</p><p>handlers的使用与tasks使用一样，<strong>notify和hanlders中任务名称必须一样</strong>。</p><p><strong>当一个play中所有任务都执行完成后，handler才会执行。</strong>好处是可以多次触发notify，但最后只执行一次对应的handler。</p><p>示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">notify</span> <span class="string">and</span> <span class="string">handlers</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">uptime</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">hello</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]<span class="comment"># ansible-playbook notify.yaml</span></span><br><span class="line"></span><br><span class="line">PLAY [notify and handlers] ********************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [task1] **********************************************************************************************************************</span><br><span class="line">changed: [node2]</span><br><span class="line">changed: [node1]</span><br><span class="line"></span><br><span class="line">RUNNING HANDLER [hello] ***********************************************************************************************************</span><br><span class="line">ok: [node2] =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">MSG:</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line">ok: [node1] =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">MSG:</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************************************************</span><br><span class="line">node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class="line">node2                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><h2 id="组织playbook"><a href="#组织playbook" class="headerlink" title="组织playbook"></a>组织playbook</h2><p>将所有play全部写在一个yaml文件中，固然可行，但是可读性、维护性太差。</p><p>比较好的做法是，将同类任务的play放在一个文件中。多个任务，则写成多个文件，最后使用一个入口文件来引用这些任务文件。</p><p>假设入口文件名为main.yaml，在该文件中使用<code>import_playbook</code>指令引用其它playbook：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">import_playbook:</span> <span class="string">&quot;init_server/aaa.yaml&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">import_playbook:</span> <span class="string">&quot;init_server/bbb.yaml&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">import_playbook:</span> <span class="string">&quot;init_server/ccc.yaml&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">import_playbook:</span> <span class="string">&quot;init_server/ddd.yaml&quot;</span></span><br></pre></td></tr></table></figure><p>执行方式不变：<code>ansible-playbook main.yaml</code></p><h2 id="组织各类内容：task、handler、变量"><a href="#组织各类内容：task、handler、变量" class="headerlink" title="组织各类内容：task、handler、变量"></a>组织各类内容：task、handler、变量</h2><blockquote><p>上面介绍了使用playbook指令来引入多个playbook文件，从而提高可读性和维护性。</p><p>其实，ansible还提供了更加规范的方式，来组织更多的内容，即<code>role</code>和<code>colllection</code>，collection这里暂不涉及。</p></blockquote><p>ansible可组织的内容包括：</p><ul><li><code>playbook</code></li><li><code>task</code></li><li><code>variable</code></li><li><code>handler</code>（handler也是一个task，只是编写在handlers内部）</li><li><code>role</code></li></ul><p>可组织的意思是说，可将相同内容定义在同一个文件中，然后使用相关指令来引入指定文件内容。</p><ul><li>引入<code>palybook</code>：<code>import_playbook</code></li><li>引入<code>task</code>或<code>handler</code>：<code>import_tasks</code>、<code>include_tasks</code></li><li>引入<code>variable</code>：<code>vars_files</code>、<code>include_vars</code></li><li>引入<code>role</code>：<code>import_role</code>、<code>include_role</code>、<code>roles</code></li></ul><p>import和include两种引入方式有所区别，前者为<code>静态加载</code>（在playbook解析的阶段，内容将写入到引入的位置），后者为<code>动态加载</code>（解析阶段不引入，而是在执行阶段才引入）。</p><h3 id="组织tasks"><a href="#组织tasks" class="headerlink" title="组织tasks"></a>组织tasks</h3><p>可将task单独写在一个文件中，然后在play里使用<code>import_tasks</code>、<code>include_tasks</code>模块引入。</p><p><strong>示例：</strong></p><p>编写一个tasks文件tasks.yaml：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;world&quot;</span></span><br></pre></td></tr></table></figure><p>在playbook中引入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span> <span class="string">&amp;</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">import_tasks:</span> <span class="string">tasks.yaml</span><span class="comment"># include_tasks模块也行</span></span><br></pre></td></tr></table></figure><p><strong>在循环中引入tasks文件，必须使用include_tasks指令</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">loop</span> <span class="string">tasks</span></span><br><span class="line">      <span class="attr">include_tasks:</span> <span class="string">tasks.yaml</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">one</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">two</span></span><br></pre></td></tr></table></figure><h3 id="组织handlers"><a href="#组织handlers" class="headerlink" title="组织handlers"></a>组织handlers</h3><p>一般情况下playbook的handlers如下，在task中使用handler的任务名来触发</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">uptime</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">h1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">date</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">h2</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">h1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;run h1&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">h2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;run h2&quot;</span></span><br></pre></td></tr></table></figure><p>可将handler单独编写在一个文件中，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> handler1.yaml</span><br><span class="line">---</span><br><span class="line">- name: handler1</span><br><span class="line">  debug:</span><br><span class="line">    msg: <span class="string">&quot;run handler1&quot;</span></span><br><span class="line">$ <span class="built_in">cat</span> handler2.yaml</span><br><span class="line">---</span><br><span class="line">- name: handler2</span><br><span class="line">  debug:</span><br><span class="line">    msg: <span class="string">&quot;run handler2&quot;</span></span><br></pre></td></tr></table></figure><p>然后在playbook中使用<code>import_tasks</code>或<code>include_tasks</code>指令来引入，同时在<code>notify</code>中修改对应的<code>handler</code>名：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">uptime</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">handler1</span><span class="comment">#handler1为静态引入，notify使用handler名</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">date</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">h2</span><span class="comment">#handler2为动态引入，notify使用引入的任务名</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">h1</span></span><br><span class="line">      <span class="attr">import_tasks:</span> <span class="string">handler1.yaml</span><span class="comment">#import_tasks静态引入</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">h2</span></span><br><span class="line">      <span class="attr">include_tasks:</span> <span class="string">handler2.yaml</span><span class="comment">#include_tasks动态引入</span></span><br></pre></td></tr></table></figure><h3 id="组织变量"><a href="#组织变量" class="headerlink" title="组织变量"></a>组织变量</h3><p>前面已经介绍了如何在playbook中使用<code>var</code>指令直接设置变量，除了这个方法，ansible还支持将变量单独放在一个文件中，然后在play中使用<code>vars_files</code>指令或<code>include_vars</code>模块来引入该变量文件。也可以在命令行中，使用<code>-e</code>选项（–extra_vars）来设置变量或引入变量文件。</p><p><code>vars_files</code>是<code>play</code>级别的指令，用于play中，在playbook解析阶段引入变量文件；</p><p><code>include_vars</code>是任务模块（类似模块一样），用在tasks中定义一个引入变量的任务，只有该任务执行之后，才会创建变量；</p><p><code>-e</code>选项在命令行中，全局有效；</p><h4 id="vars-files示例"><a href="#vars-files示例" class="headerlink" title="vars_files示例"></a>vars_files示例</h4><p>变量文件varfile.yaml，变量的定义一样，使用yaml或json格式，可采用字典或列表的形式。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">foo:</span></span><br><span class="line">  <span class="attr">a:</span> <span class="string">hello</span></span><br><span class="line">  <span class="attr">b:</span> <span class="string">world</span></span><br></pre></td></tr></table></figure><p>playbook文件如下，使用vars_files指令来引入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">varfile.yaml</span><span class="comment">#多个变量文件，使用列表形式即可</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;foo.a&#125;&#125;</span> <span class="template-variable">&#123;&#123;foo.b&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="include-vars模块"><a href="#include-vars模块" class="headerlink" title="include_vars模块"></a>include_vars模块</h4><p>include_vars是模块提供的功能，它是一个手动创建的任务，和shell、debug等模块一样。所以只有当任务执行完后，相关变量才会创建。</p><p>下面介绍几个用法。</p><p>引入一个文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">varfile.yaml</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">include_vars:</span> <span class="string">varfile.yaml</span><span class="comment"># 引入之后，可在后续的任务中使用</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;foo.a&#125;&#125;</span> <span class="template-variable">&#123;&#123;foo.b&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>引入多个文件，可采用循环：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">include_vars:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">varfile1.yaml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">varfile2.yaml</span></span><br></pre></td></tr></table></figure><p>还可以引入目录，使用条件和其它参数控制引入的变量文件。这里不展开了，该模块有很多参数和用法，具体可参考官网：</p><blockquote><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_vars_module.html#ansible-collections-ansible-builtin-include-vars-module">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_vars_module.html#ansible-collections-ansible-builtin-include-vars-module</a></p></blockquote><h4 id="e选项"><a href="#e选项" class="headerlink" title="-e选项"></a>-e选项</h4><p>ansible-playbook命令的-e选项或–extra-vars选项也可以用来定义变量或引入变量文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义单个变量</span></span><br><span class="line">$ ansible-playbook -e <span class="string">&#x27;var1=&quot;value1&quot;&#x27;</span> xxx.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义多个变量</span></span><br><span class="line">$ ansible-playbook -e <span class="string">&#x27;var1=&quot;value1&quot; var2=&quot;value2&quot;&#x27;</span> xxx.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入单个变量文件</span></span><br><span class="line">$ ansible-playbook -e <span class="string">&#x27;@varfile1.yml&#x27;</span> xxx.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入多个变量文件</span></span><br><span class="line">$ ansible-playbook -e <span class="string">&#x27;@varfile1.yml&#x27;</span> -e <span class="string">&#x27;@varfile2.yml&#x27;</span> xxx.yml</span><br></pre></td></tr></table></figure><h2 id="使用role"><a href="#使用role" class="headerlink" title="使用role"></a>使用role</h2><p>上面将各类内容放在单独的文件中，然后使用相关指令或模块将其引入。ansible中，有一种更为规范的组织方式，即<code>role</code>。</p><p>使用<code>role</code>，即可无需手动使用这些指令或模块了。按照role指定的文件或目录存放对应的内容，ansible就会自动引入。</p><h3 id="role的文件结构"><a href="#role的文件结构" class="headerlink" title="role的文件结构"></a>role的文件结构</h3><p><code>ansible-galaxy init role1</code>命令，可以快速创建一个<code>role</code>框架。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/ansible/roles</span><br><span class="line">$ ansible-galaxy init role01</span><br><span class="line">$ tree role01</span><br><span class="line">role01</span><br><span class="line">├── defaults</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── files    <span class="comment"># 外部文件，放入此处的文件，在role的各种任务中直接无需使用全路径</span></span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml    <span class="comment"># 存放handler</span></span><br><span class="line">├── meta</span><br><span class="line">│   └── main.yml    <span class="comment"># 该role依赖的先行role。定义在此处的role将在该role运行前执行</span></span><br><span class="line">├── README.md</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml    <span class="comment"># 存放任务</span></span><br><span class="line">├── templates    <span class="comment"># 模板文件，放入此处的文件，在role的各种任务中无需使用全路径</span></span><br><span class="line">├── tests</span><br><span class="line">│   ├── inventory</span><br><span class="line">│   └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml    <span class="comment"># 存放变量</span></span><br></pre></td></tr></table></figure><p>在相应目录及文件下编写对应内容，然后还需要提供一个入口playbook文件。在入口playbook文件中，使用<code>import_roles</code>、<code>include_role</code>、<code>roles</code>指令来引入role。最后使用ansible-playbook命令执行入口文件，即可执行定义在role中的各种任务了。</p><p><strong>enter.yml文件如下：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">enter</span> <span class="string">for</span> <span class="string">all</span> <span class="string">roles</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">role01</span><span class="comment"># 多个role可使用列表一起列出</span></span><br></pre></td></tr></table></figure><h3 id="编写一个role"><a href="#编写一个role" class="headerlink" title="编写一个role"></a>编写一个role</h3><h4 id="定义role的变量"><a href="#定义role的变量" class="headerlink" title="定义role的变量"></a>定义role的变量</h4><p><code>etc/ansible/roles/role01/vars/main.yml</code>文件是role定义变量或引入变量文件的地方。</p><p><code>etc/ansible/roles/role01/defaults/main.yml</code>文件是role定义默认变量的地方，优先级较低，当然也可以引入文件。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># vars file for role01</span></span><br><span class="line"><span class="attr">foo1:</span></span><br><span class="line">  <span class="attr">a:</span> <span class="string">hello</span></span><br><span class="line">  <span class="attr">b:</span> <span class="string">world</span></span><br></pre></td></tr></table></figure><h4 id="定义role的task"><a href="#定义role的task" class="headerlink" title="定义role的task"></a>定义role的task</h4><p><code>/etc/ansible/roles/role01/tasks/main.yml</code>文件是role定义task或者引入task文件的地方。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># tasks file for role01</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; foo1.a &#125;&#125;</span> <span class="template-variable">&#123;&#123; foo1.b &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="string">handler1</span></span><br><span class="line">  <span class="attr">changed_when:</span> <span class="literal">true</span><span class="comment"># 该指令使得chenged=1，触发notify</span></span><br></pre></td></tr></table></figure><h4 id="定义role的handler"><a href="#定义role的handler" class="headerlink" title="定义role的handler"></a>定义role的handler</h4><p><code>/etc/ansible/roles/role01/handles/main.yml</code>文件是role定义handler或者引入handler文件的地方。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># handlers file for role01</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">handler1</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;run handler1&quot;</span></span><br></pre></td></tr></table></figure><p><strong>执行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook  enter.yml</span><br><span class="line"></span><br><span class="line">PLAY [enter <span class="keyword">for</span> all roles] **********************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [role01 : task1] ***************************************************************************************************************</span><br><span class="line">changed: [node1] =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">MSG:</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">RUNNING HANDLER [role01 : handler1] *************************************************************************************************</span><br><span class="line">ok: [node1] =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">MSG:</span><br><span class="line"></span><br><span class="line">run handler1</span><br><span class="line"></span><br><span class="line">PLAY RECAP **************************************************************************************************************************</span><br><span class="line">node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><h2 id="playbook的执行顺序"><a href="#playbook的执行顺序" class="headerlink" title="playbook的执行顺序"></a>playbook的执行顺序</h2><p><code>playbook</code>从上往下执行各个<code>play</code>，在每个<code>play</code>内，从上往下执行各个<code>task</code>。</p><p>一个节点执行任务的顺序如下：</p><ul><li>解析配置&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg</li><li>解析inventory</li><li>gather_facts任务</li><li>pre_tasks任务</li><li>pre_tasks任务触发的handler</li><li>roles指令加载的role</li><li>task指令中的任务</li><li>roles和tasks触发的handler</li><li>post_tasks指令中的任务</li><li>post_tasks中任务触发的handler</li></ul><p>多个节点时，<code>ansible</code>在所有节点上执行完成前一个任务后，才进入下一个任务的执行流程。<code>handlers</code>是在所有节点上的所有任务执行完成后，开始执行。</p><blockquote><ul><li>从inventory中选择执行play的相关主机</li><li>连接到远程主机，通常使用ssh方式</li><li>拷贝相关模块到远程主机，并开始执行</li></ul></blockquote><h3 id="理解委托任务"><a href="#理解委托任务" class="headerlink" title="理解委托任务"></a>理解委托任务</h3><p>委托是指将原本在一个节点上执行的任务，委托给另一个节点执行。</p><p>要想理解委托，需要先了解ansible任务的执行过程：默认情况下，ansible先选择执行任务的主机，后连接该主机，再拷贝相关模块，并在该远程主机上执行模块。</p><p>但是在任务中进行了委托后，实际连接主机和执行模块动作将发生改变。比如将node1主机的任务委托给node2，ansible会根据hosts指令选择远程主机node1后，然后根据<code>delegate_to</code>指令，连接到node2节点，并将相关模块拷贝到node2并在node2上执行。</p><p>以下使用<code>dalegate_to</code>指令做个演示</p><p>test.yaml文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">node1</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">hostname</span></span><br><span class="line">      <span class="attr">delegate_to:</span> <span class="string">node2</span><span class="comment"># 委托node2执行shell模块</span></span><br></pre></td></tr></table></figure><p>执行<code>ansible-playbook -vvv test.yaml</code>，然后查看具体的执行日志。</p><p>再将<code>delegate_to</code>指令去除，执行<code>ansible-playbook -vvv test.yaml</code>命令查看不委托的执行过程，两者对比很容易发现ansible连接的主机为委托的主机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook -vvv test.yaml</span><br></pre></td></tr></table></figure><p>打印输出日志如下，也可在<code>/var/log/ansible.log</code>中查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook 2.9.25</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible-playbook</span><br><span class="line">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line">host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method</span><br><span class="line">script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method</span><br><span class="line">auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method</span><br><span class="line">Parsed /etc/ansible/hosts inventory source with ini plugin</span><br><span class="line">Skipping callback &#x27;actionable&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;counter_enabled&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;debug&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;dense&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;dense&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;full_skip&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;json&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;minimal&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;null&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;oneline&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;selective&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;skippy&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;stderr&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;unixy&#x27;, as we already have a stdout callback.</span><br><span class="line">Skipping callback &#x27;yaml&#x27;, as we already have a stdout callback.</span><br><span class="line"></span><br><span class="line">PLAYBOOK: test.yaml *****************************************************************************************************************</span><br><span class="line">1 plays in test.yaml</span><br><span class="line"></span><br><span class="line">PLAY [play1] ************************************************************************************************************************</span><br><span class="line">META: ran handlers</span><br><span class="line"></span><br><span class="line">TASK [task1] ************************************************************************************************************************</span><br><span class="line">task path: /etc/ansible/test.yaml:6</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;echo ~ &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;/root\n&#x27;, &#x27;&#x27;)</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;( umask 77 &amp;&amp; mkdir -p &quot;` echo /root/.ansible/tmp `&quot;&amp;&amp; mkdir &quot;` echo /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554 `&quot; &amp;&amp; echo ansible-tmp-1642857067.57-71643-202799162287554=&quot;` echo /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554 `&quot; ) &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;ansible-tmp-1642857067.57-71643-202799162287554=/root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554\n&#x27;, &#x27;&#x27;)</span><br><span class="line">&lt;node1&gt; Attempting python interpreter discovery</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;echo PLATFORM; uname; echo FOUND; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;/usr/bin/python&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python3.7&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python3.6&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python3.5&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python2.7&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python2.6&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;/usr/libexec/platform-python&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;/usr/bin/python3&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; command -v &#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;python&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;&quot;&#x27;; echo ENDFOUND &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;PLATFORM\nLinux\nFOUND\n/usr/bin/python\n/usr/bin/python2.7\n/usr/libexec/platform-python\n/usr/bin/python\nENDFOUND\n&#x27;, &#x27;&#x27;)</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;/usr/bin/python &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;&#123;&quot;osrelease_content&quot;: &quot;NAME=\\&quot;CentOS Linux\\&quot;\\nVERSION=\\&quot;7 (Core)\\&quot;\\nID=\\&quot;centos\\&quot;\\nID_LIKE=\\&quot;rhel fedora\\&quot;\\nVERSION_ID=\\&quot;7\\&quot;\\nPRETTY_NAME=\\&quot;CentOS Linux 7 (Core)\\&quot;\\nANSI_COLOR=\\&quot;0;31\\&quot;\\nCPE_NAME=\\&quot;cpe:/o:centos:centos:7\\&quot;\\nHOME_URL=\\&quot;https://www.centos.org/\\&quot;\\nBUG_REPORT_URL=\\&quot;https://bugs.centos.org/\\&quot;\\n\\nCENTOS_MANTISBT_PROJECT=\\&quot;CentOS-7\\&quot;\\nCENTOS_MANTISBT_PROJECT_VERSION=\\&quot;7\\&quot;\\nREDHAT_SUPPORT_PRODUCT=\\&quot;centos\\&quot;\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\&quot;7\\&quot;\\n\\n&quot;, &quot;platform_dist_result&quot;: [&quot;centos&quot;, &quot;7.9.2009&quot;, &quot;Core&quot;]&#125;\n&#x27;, &#x27;&#x27;)</span><br><span class="line">Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py</span><br><span class="line">&lt;node2&gt; PUT /root/.ansible/tmp/ansible-local-71634Zeeqqp/tmpWHppzz TO /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/AnsiballZ_command.py</span><br><span class="line">&lt;node2&gt; SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c &#x27;[node2]&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;sftp&gt; put /root/.ansible/tmp/ansible-local-71634Zeeqqp/tmpWHppzz /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/AnsiballZ_command.py\n&#x27;, &#x27;&#x27;)</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;chmod u+x /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/ /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/AnsiballZ_command.py &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;&#x27;, &#x27;&#x27;)</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c -tt node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;/usr/bin/python /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/AnsiballZ_command.py &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;\r\n&#123;&quot;changed&quot;: true, &quot;end&quot;: &quot;2022-01-22 21:11:09.433351&quot;, &quot;stdout&quot;: &quot;node2&quot;, &quot;cmd&quot;: &quot;hostname&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2022-01-22 21:11:09.333195&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.100156&quot;, &quot;invocation&quot;: &#123;&quot;module_args&quot;: &#123;&quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, &quot;strip_empty_ends&quot;: true, &quot;_raw_params&quot;: &quot;hostname&quot;, &quot;removes&quot;: null, &quot;argv&quot;: null, &quot;warn&quot;: true, &quot;chdir&quot;: null, &quot;stdin_add_newline&quot;: true, &quot;stdin&quot;: null&#125;&#125;&#125;\r\n&#x27;, &#x27;Shared connection to node2 closed.\r\n&#x27;)</span><br><span class="line">&lt;node2&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br><span class="line">&lt;node2&gt; SSH: EXEC ssh -C -o ControlMaster=auto -o ControlPersist=60s -o Port=22 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 -o ControlPath=/root/.ansible/cp/0d67807d8c node2 &#x27;/bin/sh -c &#x27;&quot;&#x27;&quot;&#x27;rm -f -r /root/.ansible/tmp/ansible-tmp-1642857067.57-71643-202799162287554/ &gt; /dev/null 2&gt;&amp;1 &amp;&amp; sleep 0&#x27;&quot;&#x27;&quot;&#x27;&#x27;</span><br><span class="line">&lt;node2&gt; (0, &#x27;&#x27;, &#x27;&#x27;)</span><br><span class="line">changed: [node1 -&gt; node2] =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;cmd&quot;: &quot;hostname&quot;, </span><br><span class="line">    &quot;delta&quot;: &quot;0:00:00.100156&quot;, </span><br><span class="line">    &quot;end&quot;: &quot;2022-01-22 21:11:09.433351&quot;, </span><br><span class="line">    &quot;invocation&quot;: &#123;</span><br><span class="line">        &quot;module_args&quot;: &#123;</span><br><span class="line">            &quot;_raw_params&quot;: &quot;hostname&quot;, </span><br><span class="line">            &quot;_uses_shell&quot;: true, </span><br><span class="line">            &quot;argv&quot;: null, </span><br><span class="line">            &quot;chdir&quot;: null, </span><br><span class="line">            &quot;creates&quot;: null, </span><br><span class="line">            &quot;executable&quot;: null, </span><br><span class="line">            &quot;removes&quot;: null, </span><br><span class="line">            &quot;stdin&quot;: null, </span><br><span class="line">            &quot;stdin_add_newline&quot;: true, </span><br><span class="line">            &quot;strip_empty_ends&quot;: true, </span><br><span class="line">            &quot;warn&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;rc&quot;: 0, </span><br><span class="line">    &quot;start&quot;: &quot;2022-01-22 21:11:09.333195&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">STDOUT:</span><br><span class="line"></span><br><span class="line">node2</span><br><span class="line">META: ran handlers</span><br><span class="line">META: ran handlers</span><br><span class="line"></span><br><span class="line">PLAY RECAP **************************************************************************************************************************</span><br><span class="line">node1                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br></pre></td></tr></table></figure><hr><p>到此为止，ansible的基础算是过了一遍，对ansible的基础概念、用法有了一个大概的了解，作为入门是够了。</p><p>但是ansible的内容和细节还有很多，包括不限于：</p><ul><li>inventory更加复杂的定义方式</li><li>各种级别的指令</li><li>众多类型的变量和其作用</li><li>各种条件判断</li><li>各类循环，以及其它控制流程</li><li>文件如何加载解析、任务执行的顺序及方式</li><li>更多的模块、插件</li><li>role、vault、jinja2</li><li>配置文件</li><li>二次开发</li></ul>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本应用（长期更新）</title>
      <link href="/2022/04/18/shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2022/04/18/shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="批量免密登录"><a href="#批量免密登录" class="headerlink" title="批量免密登录"></a>批量免密登录</h2><p><code>no_pass.sh</code>:只需要运行脚本，输入目标端服务器用户名和密码即可。ip根据目标端网段修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;input user: &#x27;</span> USER</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line"><span class="built_in">read</span> -s -p <span class="string">&#x27;input pass: &#x27;</span> PASS</span><br><span class="line"><span class="built_in">rm</span> -f /root/.ssh/id_rsa</span><br><span class="line">(ssh-keygen -P <span class="string">&quot;&quot;</span> -f /root/.ssh/id_rsa) &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;5..7&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    IP_host=172.18.0.<span class="variable">$&#123;i&#125;</span></span><br><span class="line">    ping  -c 1 -w 1 <span class="variable">$&#123;IP_host&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        (sshpass -p <span class="variable">$&#123;PASS&#125;</span> ssh-copy-id -o StrictHostKeyChecking=no <span class="variable">$&#123;IP_host&#125;</span>) &amp;&gt;/dev/null</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\e[1;32m <span class="variable">$&#123;IP_host&#125;</span>    ok \e[0m&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="计算内存使用占比"><a href="#计算内存使用占比" class="headerlink" title="计算内存使用占比"></a>计算内存使用占比</h2><p><code>vi memory_info.sh &amp;&amp; chmod +x memory_info.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">MEM_TOTAL=`free -h |awk <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line">MEM_USE=`free -h |awk <span class="string">&#x27;NR==2&#123;print $3&#125;&#x27;</span>`</span><br><span class="line">MEM_USED=`free | grep -i mem |awk <span class="string">&#x27;&#123;print $3/$2*100&quot;%&quot;&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line">MEM_FREE=`free -h |awk <span class="string">&#x27;NR==2&#123;print $4&#125;&#x27;</span>`</span><br><span class="line">MEM_FREED=`free | grep -i mem |awk <span class="string">&#x27;&#123;print $4/$2*100&quot;%&quot;&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line">MEM_BUFF_CACHE=`free -h |awk <span class="string">&#x27;NR==2&#123;print $6&#125;&#x27;</span>`</span><br><span class="line">MEM_BUFF_CACHED=`free | grep -i mem |awk <span class="string">&#x27;&#123;print $6/$2*100 &quot;%&quot;&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line">MEM_SHARE=`free -h |awk <span class="string">&#x27;NR==2&#123;print $5&#125;&#x27;</span>`</span><br><span class="line">MEM_SHARED=`free | grep -i mem |awk <span class="string">&#x27;&#123;print $5/$2*100 &quot;%&quot;&#125;&#x27;</span>`</span><br><span class="line">MEM_ZONE=`<span class="built_in">head</span> -3 /proc/meminfo | awk <span class="string">&#x27;NR==1&#123;t=$2&#125;NR==2&#123;f=$2;print(t-f)*100/t&quot;%&quot;&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m内存总量: <span class="variable">$MEM_TOTAL</span> \e[0m&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m内存总量减剩余内存(所有已使用)占比: <span class="variable">$MEM_ZONE</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m已使用: <span class="variable">$MEM_USE</span>  占比: <span class="variable">$MEM_USED</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m剩  余: <span class="variable">$MEM_FREE</span>  占比: <span class="variable">$MEM_FREED</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m共  享: <span class="variable">$MEM_SHARE</span>  占比: <span class="variable">$MEM_SHARED</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\e[1;32m缓冲区: <span class="variable">$MEM_BUFF_CACHE</span>  占比: <span class="variable">$MEM_BUFF_CACHED</span> \e[0m&quot;</span></span><br></pre></td></tr></table></figure><p>执行后的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ccb07fbb3515:~<span class="comment"># ./memoryinfo.sh </span></span><br><span class="line">内存总量: 1.8Gi </span><br><span class="line">内存总量减剩余内存(所有已使用)占比: 93.9799% </span><br><span class="line">已使用: 695Mi  占比: 38.0057% </span><br><span class="line">剩  余: 110Mi  占比: 6.01987% </span><br><span class="line">共  享: 157Mi  占比: 8.59889% </span><br><span class="line">缓冲区: 1.0Gi  占比: 55.9744% </span><br></pre></td></tr></table></figure><h2 id="巡检报告"><a href="#巡检报告" class="headerlink" title="巡检报告"></a>巡检报告</h2><p><code>system_check.sh</code>巡检结果在当前用户log文件夹下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># @Author: localhost</span></span><br><span class="line"><span class="comment"># @Date:   2021-03-16 09:56:57</span></span><br><span class="line"><span class="comment"># @Last Modified by:   localhost</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2021-03-16 11:06:31</span></span><br><span class="line"><span class="comment"># @E-mail: localhost@163.com</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#主机信息每日巡检</span></span><br><span class="line"></span><br><span class="line">IPADDR=$(ifconfig eth0|grep <span class="string">&#x27;inet addr&#x27;</span>|awk -F <span class="string">&#x27;[ :]&#x27;</span> <span class="string">&#x27;&#123;print $13&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">#环境变量PATH没设好，在cron里执行时有很多命令会找不到</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">[ $(<span class="built_in">id</span> -u) -gt 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;请用root用户执行此脚本！&quot;</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line">centosVersion=$(awk <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span> /etc/redhat-release)</span><br><span class="line">VERSION=<span class="string">&quot;2020-03-16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志相关</span></span><br><span class="line">PROGPATH=`<span class="built_in">echo</span> <span class="variable">$0</span> | sed -e <span class="string">&#x27;s,[\\/][^\\/][^\\/]*$,,&#x27;</span>`</span><br><span class="line">[ -f <span class="variable">$PROGPATH</span> ] &amp;&amp; PROGPATH=<span class="string">&quot;.&quot;</span></span><br><span class="line">LOGPATH=<span class="string">&quot;<span class="variable">$PROGPATH</span>/log&quot;</span></span><br><span class="line">[ -e <span class="variable">$LOGPATH</span> ] || <span class="built_in">mkdir</span> <span class="variable">$LOGPATH</span></span><br><span class="line">RESULTFILE=<span class="string">&quot;<span class="variable">$LOGPATH</span>/HostDailyCheck-<span class="variable">$IPADDR</span>-`date +%Y%m%d`.txt&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义报表的全局变量</span></span><br><span class="line">report_DateTime=<span class="string">&quot;&quot;</span> <span class="comment">#日期 ok</span></span><br><span class="line">report_Hostname=<span class="string">&quot;&quot;</span> <span class="comment">#主机名 ok</span></span><br><span class="line">report_OSRelease=<span class="string">&quot;&quot;</span> <span class="comment">#发行版本 ok</span></span><br><span class="line">report_Kernel=<span class="string">&quot;&quot;</span> <span class="comment">#内核 ok</span></span><br><span class="line">report_Language=<span class="string">&quot;&quot;</span> <span class="comment">#语言/编码 ok</span></span><br><span class="line">report_LastReboot=<span class="string">&quot;&quot;</span> <span class="comment">#最近启动时间 ok</span></span><br><span class="line">report_Uptime=<span class="string">&quot;&quot;</span> <span class="comment">#运行时间（天） ok</span></span><br><span class="line">report_CPUs=<span class="string">&quot;&quot;</span> <span class="comment">#CPU数量 ok</span></span><br><span class="line">report_CPUType=<span class="string">&quot;&quot;</span> <span class="comment">#CPU类型 ok</span></span><br><span class="line">report_Arch=<span class="string">&quot;&quot;</span> <span class="comment">#CPU架构 ok</span></span><br><span class="line">report_MemTotal=<span class="string">&quot;&quot;</span> <span class="comment">#内存总容量(MB) ok</span></span><br><span class="line">report_MemFree=<span class="string">&quot;&quot;</span> <span class="comment">#内存剩余(MB) ok</span></span><br><span class="line">report_MemUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#内存使用率% ok</span></span><br><span class="line">report_DiskTotal=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘总容量(GB) ok</span></span><br><span class="line">report_DiskFree=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘剩余(GB) ok</span></span><br><span class="line">report_DiskUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘使用率% ok</span></span><br><span class="line">report_InodeTotal=<span class="string">&quot;&quot;</span> <span class="comment">#Inode总量 ok</span></span><br><span class="line">report_InodeFree=<span class="string">&quot;&quot;</span> <span class="comment">#Inode剩余 ok</span></span><br><span class="line">report_InodeUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#Inode使用率 ok</span></span><br><span class="line">report_IP=<span class="string">&quot;&quot;</span> <span class="comment">#IP地址 ok</span></span><br><span class="line">report_MAC=<span class="string">&quot;&quot;</span> <span class="comment">#MAC地址 ok</span></span><br><span class="line">report_Gateway=<span class="string">&quot;&quot;</span> <span class="comment">#默认网关 ok</span></span><br><span class="line">report_DNS=<span class="string">&quot;&quot;</span> <span class="comment">#DNS ok</span></span><br><span class="line">report_Listen=<span class="string">&quot;&quot;</span> <span class="comment">#监听 ok</span></span><br><span class="line">report_Selinux=<span class="string">&quot;&quot;</span> <span class="comment">#Selinux ok</span></span><br><span class="line">report_Firewall=<span class="string">&quot;&quot;</span> <span class="comment">#防火墙 ok</span></span><br><span class="line">report_USERs=<span class="string">&quot;&quot;</span> <span class="comment">#用户 ok</span></span><br><span class="line">report_USEREmptyPassword=<span class="string">&quot;&quot;</span> <span class="comment">#空密码用户 ok</span></span><br><span class="line">report_USERTheSameUID=<span class="string">&quot;&quot;</span> <span class="comment">#相同ID的用户 ok </span></span><br><span class="line">report_PasswordExpiry=<span class="string">&quot;&quot;</span> <span class="comment">#密码过期（天） ok</span></span><br><span class="line">report_RootUser=<span class="string">&quot;&quot;</span> <span class="comment">#root用户 ok</span></span><br><span class="line">report_Sudoers=<span class="string">&quot;&quot;</span> <span class="comment">#sudo授权 ok</span></span><br><span class="line">report_SSHAuthorized=<span class="string">&quot;&quot;</span> <span class="comment">#SSH信任主机 ok</span></span><br><span class="line">report_SSHDProtocolVersion=<span class="string">&quot;&quot;</span> <span class="comment">#SSH协议版本 ok</span></span><br><span class="line">report_SSHDPermitRootLogin=<span class="string">&quot;&quot;</span> <span class="comment">#允许root远程登录 ok</span></span><br><span class="line">report_DefunctProsess=<span class="string">&quot;&quot;</span> <span class="comment">#僵尸进程数量 ok</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;&quot;</span> <span class="comment">#自启动服务数量 ok</span></span><br><span class="line">report_SelfInitiatedProgram=<span class="string">&quot;&quot;</span> <span class="comment">#自启动程序数量 ok</span></span><br><span class="line">report_RuningService=<span class="string">&quot;&quot;</span> <span class="comment">#运行中服务数 ok</span></span><br><span class="line">report_Crontab=<span class="string">&quot;&quot;</span> <span class="comment">#计划任务数 ok</span></span><br><span class="line">report_Syslog=<span class="string">&quot;&quot;</span> <span class="comment">#日志服务 ok</span></span><br><span class="line">report_SNMP=<span class="string">&quot;&quot;</span> <span class="comment">#SNMP OK</span></span><br><span class="line">report_NTP=<span class="string">&quot;&quot;</span> <span class="comment">#NTP ok</span></span><br><span class="line">report_JDK=<span class="string">&quot;&quot;</span> <span class="comment">#JDK版本 ok</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">version</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;系统巡检脚本：Version <span class="variable">$VERSION</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getCpuStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ CPU检查 #############################&quot;</span></span><br><span class="line">Physical_CPUs=$(grep <span class="string">&quot;physical id&quot;</span> /proc/cpuinfo| <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l)</span><br><span class="line">Virt_CPUs=$(grep <span class="string">&quot;processor&quot;</span> /proc/cpuinfo | <span class="built_in">wc</span> -l)</span><br><span class="line">CPU_Kernels=$(grep <span class="string">&quot;cores&quot;</span> /proc/cpuinfo|<span class="built_in">uniq</span>| awk -F <span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">CPU_Type=$(grep <span class="string">&quot;model name&quot;</span> /proc/cpuinfo | awk -F <span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span>)</span><br><span class="line">CPU_Arch=$(<span class="built_in">uname</span> -m)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;物理CPU个数:<span class="variable">$Physical_CPUs</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;逻辑CPU个数:<span class="variable">$Virt_CPUs</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;每CPU核心数:<span class="variable">$CPU_Kernels</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; CPU型号:<span class="variable">$CPU_Type</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; CPU架构:<span class="variable">$CPU_Arch</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_CPUs=<span class="variable">$Virt_CPUs</span> <span class="comment">#CPU数量</span></span><br><span class="line">report_CPUType=<span class="variable">$CPU_Type</span> <span class="comment">#CPU类型</span></span><br><span class="line">report_Arch=<span class="variable">$CPU_Arch</span> <span class="comment">#CPU架构</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getMemStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 内存检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line">free -mo</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">free -h</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">MemTotal=$(grep MemTotal /proc/meminfo| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">MemFree=$(grep MemFree /proc/meminfo| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line"><span class="built_in">let</span> MemUsed=MemTotal-MemFree</span><br><span class="line">MemPercent=$(awk <span class="string">&quot;BEGIN &#123;if(<span class="variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,<span class="variable">$MemUsed</span>*100/<span class="variable">$MemTotal</span>&#125;&#125;&quot;</span>)</span><br><span class="line">report_MemTotal=<span class="string">&quot;<span class="subst">$((MemTotal/1024)</span>)&quot;</span><span class="string">&quot;MB&quot;</span> <span class="comment">#内存总容量(MB)</span></span><br><span class="line">report_MemFree=<span class="string">&quot;<span class="subst">$((MemFree/1024)</span>)&quot;</span><span class="string">&quot;MB&quot;</span> <span class="comment">#内存剩余(MB)</span></span><br><span class="line">report_MemUsedPercent=<span class="string">&quot;<span class="subst">$(awk <span class="string">&quot;BEGIN &#123;if(<span class="variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,<span class="variable">$MemUsed</span>*100/<span class="variable">$MemTotal</span>&#125;&#125;&quot;</span>)</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#内存使用率%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getDiskStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 磁盘检查 ############################&quot;</span></span><br><span class="line"><span class="built_in">df</span> -hiP | sed <span class="string">&#x27;s/Mounted on/Mounted/&#x27;</span>&gt; /tmp/inode</span><br><span class="line"><span class="built_in">df</span> -hTP | sed <span class="string">&#x27;s/Mounted on/Mounted/&#x27;</span>&gt; /tmp/disk </span><br><span class="line"><span class="built_in">join</span> /tmp/disk /tmp/inode | awk <span class="string">&#x27;&#123;print $1,$2,&quot;|&quot;,$3,$4,$5,$6,&quot;|&quot;,$8,$9,$10,$11,&quot;|&quot;,$12&#125;&#x27;</span>| column -t</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">diskdata=$(<span class="built_in">df</span> -TP | sed <span class="string">&#x27;1d&#x27;</span> | awk <span class="string">&#x27;$2!=&quot;tmpfs&quot;&#123;print&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">disktotal=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$diskdata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$3&#125;END&#123;print total&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">diskused=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$diskdata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$4&#125;END&#123;print total&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">diskfree=$((disktotal-diskused)) <span class="comment">#KB</span></span><br><span class="line">diskusedpercent=$(<span class="built_in">echo</span> <span class="variable">$disktotal</span> <span class="variable">$diskused</span> | awk <span class="string">&#x27;&#123;if($1==0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100/$1&#125;&#125;&#x27;</span>) </span><br><span class="line">inodedata=$(<span class="built_in">df</span> -iTP | sed <span class="string">&#x27;1d&#x27;</span> | awk <span class="string">&#x27;$2!=&quot;tmpfs&quot;&#123;print&#125;&#x27;</span>)</span><br><span class="line">inodetotal=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$inodedata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$3&#125;END&#123;print total&#125;&#x27;</span>)</span><br><span class="line">inodeused=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$inodedata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$4&#125;END&#123;print total&#125;&#x27;</span>)</span><br><span class="line">inodefree=$((inodetotal-inodeused))</span><br><span class="line">inodeusedpercent=$(<span class="built_in">echo</span> <span class="variable">$inodetotal</span> <span class="variable">$inodeused</span> | awk <span class="string">&#x27;&#123;if($1==0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100/$1&#125;&#125;&#x27;</span>)</span><br><span class="line">report_DiskTotal=$((disktotal/<span class="number">1024</span>/<span class="number">1024</span>))<span class="string">&quot;GB&quot;</span> <span class="comment">#硬盘总容量(GB)</span></span><br><span class="line">report_DiskFree=$((diskfree/<span class="number">1024</span>/<span class="number">1024</span>))<span class="string">&quot;GB&quot;</span> <span class="comment">#硬盘剩余(GB)</span></span><br><span class="line">report_DiskUsedPercent=<span class="string">&quot;<span class="variable">$diskusedpercent</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#硬盘使用率%</span></span><br><span class="line">report_InodeTotal=$((inodetotal/<span class="number">1000</span>))<span class="string">&quot;K&quot;</span> <span class="comment">#Inode总量</span></span><br><span class="line">report_InodeFree=$((inodefree/<span class="number">1000</span>))<span class="string">&quot;K&quot;</span> <span class="comment">#Inode剩余</span></span><br><span class="line">report_InodeUsedPercent=<span class="string">&quot;<span class="variable">$inodeusedpercent</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#Inode使用率%</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSystemStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 系统检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/sysconfig/i18n ];<span class="keyword">then</span></span><br><span class="line">default_LANG=<span class="string">&quot;<span class="subst">$(grep <span class="string">&quot;LANG=&quot;</span> /etc/sysconfig/i18n | grep -v <span class="string">&quot;^#&quot;</span> | awk -F &#x27;<span class="string">&quot;&#x27; &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">else</span></span></span><br><span class="line"><span class="subst"><span class="string">default_LANG=$LANG</span></span></span><br><span class="line"><span class="subst"><span class="string">fi</span></span></span><br><span class="line"><span class="subst"><span class="string">export LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">Release=$(cat /etc/redhat-release 2&gt;/dev/null)</span></span></span><br><span class="line"><span class="string">Kernel=<span class="subst">$(uname -r)</span></span></span><br><span class="line"><span class="string">OS=<span class="subst">$(uname -o)</span></span></span><br><span class="line"><span class="string">Hostname=<span class="subst">$(uname -n)</span></span></span><br><span class="line"><span class="string">SELinux=<span class="subst">$(/usr/sbin/sestatus | grep <span class="string">&quot;SELinux status: &quot;</span> | awk &#x27;&#123;print $3&#125;&#x27;)</span></span></span><br><span class="line"><span class="string">LastReboot=<span class="subst">$(who -b | awk &#x27;&#123;print $3,$4&#125;&#x27;)</span></span></span><br><span class="line"><span class="string">uptime=<span class="subst">$(uptime | sed &#x27;s/.*up \([^,]*\), .*/\1/&#x27;)</span></span></span><br><span class="line"><span class="string">echo &quot;</span> 系统：<span class="variable">$OS</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 发行版本：<span class="variable">$Release</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 内核：<span class="variable">$Kernel</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 主机名：<span class="variable">$Hostname</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> SELinux：<span class="variable">$SELinux</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>语言/编码：<span class="variable">$default_LANG</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 当前时间：$(<span class="built_in">date</span> +<span class="string">&#x27;%F %T&#x27;</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 最后启动：<span class="variable">$LastReboot</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 运行时间：<span class="variable">$uptime</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">#报表信息</span></span><br><span class="line"><span class="string">report_DateTime=<span class="subst">$(date +<span class="string">&quot;%F %T&quot;</span>)</span> #日期</span></span><br><span class="line"><span class="string">report_Hostname=&quot;</span><span class="variable">$Hostname</span><span class="string">&quot; #主机名</span></span><br><span class="line"><span class="string">report_OSRelease=&quot;</span><span class="variable">$Release</span><span class="string">&quot; #发行版本</span></span><br><span class="line"><span class="string">report_Kernel=&quot;</span><span class="variable">$Kernel</span><span class="string">&quot; #内核</span></span><br><span class="line"><span class="string">report_Language=&quot;</span><span class="variable">$default_LANG</span><span class="string">&quot; #语言/编码</span></span><br><span class="line"><span class="string">report_LastReboot=&quot;</span><span class="variable">$LastReboot</span><span class="string">&quot; #最近启动时间</span></span><br><span class="line"><span class="string">report_Uptime=&quot;</span><span class="variable">$uptime</span><span class="string">&quot; #运行时间（天）</span></span><br><span class="line"><span class="string">report_Selinux=&quot;</span><span class="variable">$SELinux</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">export LANG=&quot;</span><span class="variable">$default_LANG</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function getServiceStatus()&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="comment">############################ 服务检查 ############################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &gt; 7 ]];<span class="keyword">then</span></span><br><span class="line">conf=$(systemctl list-unit-files --<span class="built_in">type</span>=service --state=enabled --no-pager | grep <span class="string">&quot;enabled&quot;</span>)</span><br><span class="line">process=$(systemctl list-units --<span class="built_in">type</span>=service --state=running --no-pager | grep <span class="string">&quot;.service&quot;</span>)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#自启动服务数量</span></span><br><span class="line">report_RuningService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$process</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#运行中服务数量</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">conf=$(/sbin/chkconfig | grep -E <span class="string">&quot;:on|:启用&quot;</span>)</span><br><span class="line">process=$(/sbin/service --status-all 2&gt;/dev/null | grep -E <span class="string">&quot;is running|正在运行&quot;</span>)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#自启动服务数量</span></span><br><span class="line">report_RuningService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$process</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#运行中服务数量</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务配置&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | column -t</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在运行的服务&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$process</span>&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getAutoStartStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 自启动检查 ##########################&quot;</span></span><br><span class="line">conf=$(grep -v <span class="string">&quot;^#&quot;</span> /etc/rc.d/rc.local| sed <span class="string">&#x27;/^$/d&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedProgram=<span class="string">&quot;<span class="subst">$(echo $conf | wc -l)</span>&quot;</span> <span class="comment">#自启动程序数量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getLoginStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 登录检查 ############################&quot;</span></span><br><span class="line">last | <span class="built_in">head</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getNetworkStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 网络检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line">/sbin/ifconfig -a | grep -v packets | grep -v collisions | grep -v inet6</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#ip a</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(ip <span class="built_in">link</span> | grep BROADCAST | awk -F: <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>);<span class="keyword">do</span> ip add show <span class="variable">$i</span> | grep -E <span class="string">&quot;BROADCAST|global&quot;</span>| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27; &#x27;</span> ;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> ;<span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">GATEWAY=$(ip route | grep default | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>)</span><br><span class="line">DNS=$(grep nameserver /etc/resolv.conf| grep -v <span class="string">&quot;#&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网关：<span class="variable">$GATEWAY</span> &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; DNS：<span class="variable">$DNS</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">IP=$(ip -f inet addr | grep -v 127.0.0.1 | grep inet | awk <span class="string">&#x27;&#123;print $NF,$2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line">MAC=$(ip <span class="built_in">link</span> | grep -v <span class="string">&quot;LOOPBACK\|loopback&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sed <span class="string">&#x27;N;s/\n//&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line">report_IP=<span class="string">&quot;<span class="variable">$IP</span>&quot;</span> <span class="comment">#IP地址</span></span><br><span class="line">report_MAC=<span class="variable">$MAC</span> <span class="comment">#MAC地址</span></span><br><span class="line">report_Gateway=<span class="string">&quot;<span class="variable">$GATEWAY</span>&quot;</span> <span class="comment">#默认网关</span></span><br><span class="line">report_DNS=<span class="string">&quot;<span class="variable">$DNS</span>&quot;</span> <span class="comment">#DNS</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getListenStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 监听检查 ############################&quot;</span></span><br><span class="line">TCPListen=$(ss -ntul | column -t)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$TCPListen</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Listen=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$TCPListen</span>&quot;</span>| sed &#x27;1d&#x27; | awk &#x27;/tcp/ &#123;print $5&#125;&#x27; | awk -F: &#x27;&#123;print $NF&#125;&#x27; | sort | uniq | wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getCronStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 计划任务检查 ########################&quot;</span></span><br><span class="line">Crontab=0</span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> /etc/passwd| awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line">crontab -l -u <span class="variable">$user</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">status=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">crontab -l -u <span class="variable">$user</span></span><br><span class="line"><span class="built_in">let</span> Crontab=Crontab+$(crontab -l -u <span class="variable">$user</span> | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#计划任务</span></span><br><span class="line">find /etc/cron* -<span class="built_in">type</span> f | xargs -i <span class="built_in">ls</span> -l &#123;&#125; | column -t</span><br><span class="line"><span class="built_in">let</span> Crontab=Crontab+$(find /etc/cron* -<span class="built_in">type</span> f | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Crontab=<span class="string">&quot;<span class="variable">$Crontab</span>&quot;</span> <span class="comment">#计划任务数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getHowLongAgo</span></span>()&#123;</span><br><span class="line"><span class="comment"># 计算一个时间戳离现在有多久了</span></span><br><span class="line">datetime=<span class="string">&quot;$*&quot;</span></span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$datetime</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;错误的参数：getHowLongAgo() $*&quot;</span></span><br><span class="line">Timestamp=$(<span class="built_in">date</span> +%s -d <span class="string">&quot;<span class="variable">$datetime</span>&quot;</span>) <span class="comment">#转化为时间戳</span></span><br><span class="line">Now_Timestamp=$(<span class="built_in">date</span> +%s)</span><br><span class="line">Difference_Timestamp=$((<span class="variable">$Now_Timestamp</span>-<span class="variable">$Timestamp</span>))</span><br><span class="line">days=0;hours=0;minutes=0;</span><br><span class="line">sec_in_day=$((<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>));</span><br><span class="line">sec_in_hour=$((<span class="number">60</span>*<span class="number">60</span>));</span><br><span class="line">sec_in_minute=60</span><br><span class="line"><span class="keyword">while</span> (( $((<span class="variable">$Difference_Timestamp</span>-<span class="variable">$sec_in_day</span>)) &gt; 1 ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">let</span> Difference_Timestamp=Difference_Timestamp-sec_in_day</span><br><span class="line"><span class="built_in">let</span> days++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">while</span> (( $((<span class="variable">$Difference_Timestamp</span>-<span class="variable">$sec_in_hour</span>)) &gt; 1 ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">let</span> Difference_Timestamp=Difference_Timestamp-sec_in_hour</span><br><span class="line"><span class="built_in">let</span> hours++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$days</span> 天 <span class="variable">$hours</span> 小时前&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getUserLastLogin</span></span>()&#123;</span><br><span class="line"><span class="comment"># 获取用户最近一次登录的时间，含年份</span></span><br><span class="line"><span class="comment"># 很遗憾last命令不支持显示年份，只有&quot;last -t YYYYMMDDHHMMSS&quot;表示某个时间之间的登录，我</span></span><br><span class="line"><span class="comment"># 们只能用最笨的方法了，对比今天之前和今年元旦之前（或者去年之前和前年之前……）某个用户</span></span><br><span class="line"><span class="comment"># 登录次数，如果登录统计次数有变化，则说明最近一次登录是今年。</span></span><br><span class="line">username=<span class="variable">$1</span></span><br><span class="line">: <span class="variable">$&#123;username:=&quot;`whoami`&quot;&#125;</span></span><br><span class="line">thisYear=$(<span class="built_in">date</span> +%Y)</span><br><span class="line">oldesYear=$(last | <span class="built_in">tail</span> -n1 | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span>(( <span class="variable">$thisYear</span> &gt;= <span class="variable">$oldesYear</span>));<span class="keyword">do</span></span><br><span class="line">loginBeforeToday=$(last <span class="variable">$username</span> | grep <span class="variable">$username</span> | <span class="built_in">wc</span> -l)</span><br><span class="line">loginBeforeNewYearsDayOfThisYear=$(last <span class="variable">$username</span> -t <span class="variable">$thisYear</span><span class="string">&quot;0101000000&quot;</span> | grep <span class="variable">$username</span> | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$loginBeforeToday</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;从未登录过&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$loginBeforeToday</span> -gt <span class="variable">$loginBeforeNewYearsDayOfThisYear</span> ];<span class="keyword">then</span></span><br><span class="line">lastDateTime=$(last -i <span class="variable">$username</span> | <span class="built_in">head</span> -n1 | awk <span class="string">&#x27;&#123;for(i=4;i&lt;(NF-2);i++)printf&quot;%s &quot;,$i&#125;&#x27;</span>)<span class="string">&quot; <span class="variable">$thisYear</span>&quot;</span> <span class="comment">#格式如: Sat Nov 2 20:33 2015</span></span><br><span class="line">lastDateTime=$(<span class="built_in">date</span> <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span> -d <span class="string">&quot;<span class="variable">$lastDateTime</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lastDateTime</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">thisYear=$((thisYear-<span class="number">1</span>))</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getUserStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 用户检查 ############################&quot;</span></span><br><span class="line"><span class="comment">#/etc/passwd 最后修改时间</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line">Modify=$(<span class="built_in">stat</span> /etc/passwd | grep Modify | <span class="built_in">tr</span> <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27; &#x27;</span> | awk <span class="string">&#x27;&#123;print $2,$3&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/passwd 最后修改时间：<span class="variable">$Modify</span> (<span class="subst">$(getHowLongAgo $Modify)</span>)&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;特权用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">RootUser=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">id</span> -u <span class="variable">$user</span>) -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span>&quot;</span></span><br><span class="line">RootUser=<span class="string">&quot;<span class="variable">$RootUser</span>,<span class="variable">$user</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;用户列表&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">USERs=0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(</span></span></span><br><span class="line"><span class="subst"><span class="string">echo <span class="string">&quot;用户名 UID GID HOME SHELL 最后一次登录&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">for shell in $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells)</span>;do</span></span><br><span class="line"><span class="string">for username in <span class="subst">$(grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> /etc/passwd| awk -F: &#x27;&#123;print $1&#125;&#x27;)</span>;do</span></span><br><span class="line"><span class="string">userLastLogin=&quot;</span>$(getUserLastLogin <span class="variable">$username</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="variable">$pwdfile</span><span class="string">&quot; | grep -w &quot;</span><span class="variable">$username</span><span class="string">&quot; |grep -w &quot;</span><span class="variable">$shell</span><span class="string">&quot;| awk -F: -v lastlogin=&quot;</span>$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$userLastLogin</span>&quot;</span> | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;_&#x27;</span>)<span class="string">&quot; &#x27;&#123;print <span class="variable">$1</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$6</span>,<span class="variable">$7</span>,lastlogin&#125;&#x27;</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">let USERs=USERs+<span class="subst">$(echo <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span>| wc -l)</span></span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">)&quot;</span> | column -t</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;空密码用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------&quot;</span></span><br><span class="line">USEREmptyPassword=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> | <span class="built_in">cut</span> -d: -f1);<span class="keyword">do</span></span><br><span class="line">r=$(awk -F: <span class="string">&#x27;$2==&quot;!!&quot;&#123;print $1&#125;&#x27;</span> /etc/shadow | grep -w <span class="variable">$user</span>)</span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="variable">$r</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$r</span></span><br><span class="line">USEREmptyPassword=<span class="string">&quot;<span class="variable">$USEREmptyPassword</span>,&quot;</span><span class="variable">$r</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;相同ID的用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">USERTheSameUID=<span class="string">&quot;&quot;</span></span><br><span class="line">UIDs=$(<span class="built_in">cut</span> -d: -f3 /etc/passwd | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | awk <span class="string">&#x27;$1&gt;1&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> uid <span class="keyword">in</span> <span class="variable">$UIDs</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$uid</span>&quot;</span>;</span><br><span class="line">USERTheSameUID=<span class="string">&quot;<span class="variable">$uid</span>&quot;</span></span><br><span class="line">r=$(awk -F: <span class="string">&#x27;ORS=&quot;&quot;;$3==&#x27;</span><span class="string">&quot;<span class="variable">$uid</span>&quot;</span><span class="string">&#x27;&#123;print &quot;:&quot;,$1&#125;&#x27;</span> /etc/passwd)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$r</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">USERTheSameUID=<span class="string">&quot;<span class="variable">$USERTheSameUID</span> <span class="variable">$r</span>,&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_USERs=<span class="string">&quot;<span class="variable">$USERs</span>&quot;</span> <span class="comment">#用户</span></span><br><span class="line">report_USEREmptyPassword=$(<span class="built_in">echo</span> <span class="variable">$USEREmptyPassword</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>) </span><br><span class="line">report_USERTheSameUID=$(<span class="built_in">echo</span> <span class="variable">$USERTheSameUID</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>) </span><br><span class="line">report_RootUser=$(<span class="built_in">echo</span> <span class="variable">$RootUser</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>) <span class="comment">#特权用户</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> getPasswordStatus &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 密码检查 ############################&quot;</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;密码过期检查&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> | <span class="built_in">cut</span> -d: -f1);<span class="keyword">do</span></span><br><span class="line">get_expiry_date=$(/usr/bin/chage -l <span class="variable">$user</span> | grep <span class="string">&#x27;Password expires&#x27;</span> | <span class="built_in">cut</span> -d: -f2)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$get_expiry_date</span> = <span class="string">&#x27; never&#x27;</span> || <span class="variable">$get_expiry_date</span> = <span class="string">&#x27;never&#x27;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-15s 永不过期\n&quot;</span> <span class="variable">$user</span></span><br><span class="line">result=<span class="string">&quot;<span class="variable">$result</span>,<span class="variable">$user</span>:never&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">password_expiry_date=$(<span class="built_in">date</span> -d <span class="string">&quot;<span class="variable">$get_expiry_date</span>&quot;</span> <span class="string">&quot;+%s&quot;</span>)</span><br><span class="line">current_date=$(<span class="built_in">date</span> <span class="string">&quot;+%s&quot;</span>)</span><br><span class="line">diff=$((<span class="variable">$password_expiry_date</span>-<span class="variable">$current_date</span>))</span><br><span class="line"><span class="built_in">let</span> DAYS=$((<span class="variable">$diff</span>/(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)))</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-15s %s天后过期\n&quot;</span> <span class="variable">$user</span> <span class="variable">$DAYS</span></span><br><span class="line">result=<span class="string">&quot;<span class="variable">$result</span>,<span class="variable">$user</span>:<span class="variable">$DAYS</span> days&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">report_PasswordExpiry=$(<span class="built_in">echo</span> <span class="variable">$result</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;密码策略检查&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">grep -v <span class="string">&quot;#&quot;</span> /etc/login.defs | grep -E <span class="string">&quot;PASS_MAX_DAYS|PASS_MIN_DAYS|PASS_MIN_LEN|PASS_WARN_AGE&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSudoersStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ Sudoers检查 #########################&quot;</span></span><br><span class="line">conf=$(grep -v <span class="string">&quot;^#&quot;</span> /etc/sudoers| grep -v <span class="string">&quot;^Defaults&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Sudoers=<span class="string">&quot;<span class="subst">$(echo $conf | wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getInstalledStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 软件检查 ############################&quot;</span></span><br><span class="line">rpm -qa --last | <span class="built_in">head</span> | column -t </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getProcessStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 进程检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $(ps -ef | grep defunct | grep -v grep | <span class="built_in">wc</span> -l) -ge 1 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;僵尸进程&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">ps -ef | <span class="built_in">head</span> -n1</span><br><span class="line">ps -ef | grep defunct | grep -v grep</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;内存占用TOP10&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;PID %MEM RSS COMMAND</span></span><br><span class="line"><span class="string"><span class="subst">$(ps aux | awk &#x27;&#123;print $2, $4, $6, $11&#125;&#x27; | sort -k3rn | head -n 10 )</span>&quot;</span>| column -t </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CPU占用TOP10&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">top b -n1 | <span class="built_in">head</span> -17 | <span class="built_in">tail</span> -11</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_DefunctProsess=<span class="string">&quot;<span class="subst">$(ps -ef | grep defunct | grep -v grep|wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getJDKStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ JDK检查 #############################&quot;</span></span><br><span class="line">java -version 2&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">java -version 2&gt;&amp;1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;JAVA_HOME=\&quot;<span class="variable">$JAVA_HOME</span>\&quot;&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_JDK=<span class="string">&quot;<span class="subst">$(java -version 2&gt;&amp;1 | grep version | awk &#x27;&#123;print $1,$3&#125;&#x27; | tr -d &#x27;<span class="string">&quot;&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">&#125;</span></span></span><br><span class="line"><span class="subst"><span class="string">function getSyslogStatus()</span>&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="comment">############################ syslog检查 ##########################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState rsyslog)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/rsyslog.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-----------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/rsyslog.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | grep -v <span class="string">&quot;^\\$&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span> | column -t</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Syslog=<span class="string">&quot;<span class="subst">$(getState rsyslog)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getFirewallStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 防火墙检查 ##########################&quot;</span></span><br><span class="line"><span class="comment">#防火墙状态，策略等</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line">/etc/init.d/iptables status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">status=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;active&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$status</span> -eq 3 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;inactive&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$status</span> -eq 4 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;permission denied&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s=<span class="string">&quot;unknown&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s=<span class="string">&quot;<span class="subst">$(getState iptables)</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;iptables: <span class="variable">$s</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/sysconfig/iptables&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-----------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/sysconfig/iptables 2&gt;/dev/null</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Firewall=<span class="string">&quot;<span class="variable">$s</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSNMPStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#SNMP服务状态，配置等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ SNMP检查 ############################&quot;</span></span><br><span class="line">status=<span class="string">&quot;<span class="subst">$(getState snmpd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="variable">$status</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/snmp/snmpd.conf ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/snmp/snmpd.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/snmp/snmpd.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SNMP=<span class="string">&quot;<span class="subst">$(getState snmpd)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getState</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">&quot;/etc/init.d/<span class="variable">$1</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ `/etc/init.d/<span class="variable">$1</span> status 2&gt;/dev/null | grep -E <span class="string">&quot;is running|正在运行&quot;</span> | <span class="built_in">wc</span> -l` -ge 1 ];<span class="keyword">then</span></span><br><span class="line">r=<span class="string">&quot;active&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=<span class="string">&quot;inactive&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=<span class="string">&quot;unknown&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#CentOS 7+</span></span><br><span class="line">r=<span class="string">&quot;<span class="subst">$(systemctl is-active $1 2&gt;&amp;1)</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$r</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSSHStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#SSHD服务状态，配置,受信任主机等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ SSH检查 #############################&quot;</span></span><br><span class="line"><span class="comment">#检查受信任主机</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState sshd)</span>&quot;</span></span><br><span class="line">Protocol_Version=$(<span class="built_in">cat</span> /etc/ssh/sshd_config | grep Protocol | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;SSH协议版本：<span class="variable">$Protocol_Version</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;信任主机&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">authorized=0</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep /bin/bash | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line">authorize_file=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep -w <span class="variable">$user</span> | awk -F: <span class="string">&#x27;&#123;printf $6&quot;/.ssh/authorized_keys&quot;&#125;&#x27;</span>)</span><br><span class="line">authorized_host=$(<span class="built_in">cat</span> <span class="variable">$authorize_file</span> 2&gt;/dev/null | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="variable">$authorized_host</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span> 授权 \&quot;<span class="variable">$authorized_host</span>\&quot; 无密码访问&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">let</span> authorized=authorized+$(<span class="built_in">cat</span> <span class="variable">$authorize_file</span> 2&gt;/dev/null | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>|<span class="built_in">wc</span> -l)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否允许ROOT远程登录&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line">config=$(<span class="built_in">cat</span> /etc/ssh/sshd_config | grep PermitRootLogin)</span><br><span class="line">firstChar=<span class="variable">$&#123;config:0:1&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$firstChar</span> == <span class="string">&quot;#&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">PermitRootLogin=<span class="string">&quot;yes&quot;</span> <span class="comment">#默认是允许ROOT远程登录的</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">PermitRootLogin=$(<span class="built_in">echo</span> <span class="variable">$config</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin <span class="variable">$PermitRootLogin</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/ssh/sshd_config&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/ssh/sshd_config | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SSHAuthorized=<span class="string">&quot;<span class="variable">$authorized</span>&quot;</span> <span class="comment">#SSH信任主机</span></span><br><span class="line">report_SSHDProtocolVersion=<span class="string">&quot;<span class="variable">$Protocol_Version</span>&quot;</span> <span class="comment">#SSH协议版本</span></span><br><span class="line">report_SSHDPermitRootLogin=<span class="string">&quot;<span class="variable">$PermitRootLogin</span>&quot;</span> <span class="comment">#允许root远程登录</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getNTPStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#NTP服务状态，当前时间，配置等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ NTP检查 #############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/ntp.conf ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState ntpd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/ntp.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/ntp.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_NTP=<span class="string">&quot;<span class="subst">$(getState ntpd)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">uploadHostDailyCheckReport</span></span>()&#123;</span><br><span class="line">json=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">\&quot;DateTime\&quot;:\&quot;<span class="variable">$report_DateTime</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Hostname\&quot;:\&quot;<span class="variable">$report_Hostname</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;OSRelease\&quot;:\&quot;<span class="variable">$report_OSRelease</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Kernel\&quot;:\&quot;<span class="variable">$report_Kernel</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Language\&quot;:\&quot;<span class="variable">$report_Language</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;LastReboot\&quot;:\&quot;<span class="variable">$report_LastReboot</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Uptime\&quot;:\&quot;<span class="variable">$report_Uptime</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;CPUs\&quot;:\&quot;<span class="variable">$report_CPUs</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;CPUType\&quot;:\&quot;<span class="variable">$report_CPUType</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Arch\&quot;:\&quot;<span class="variable">$report_Arch</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemTotal\&quot;:\&quot;<span class="variable">$report_MemTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemFree\&quot;:\&quot;<span class="variable">$report_MemFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemUsedPercent\&quot;:\&quot;<span class="variable">$report_MemUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskTotal\&quot;:\&quot;<span class="variable">$report_DiskTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskFree\&quot;:\&quot;<span class="variable">$report_DiskFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskUsedPercent\&quot;:\&quot;<span class="variable">$report_DiskUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeTotal\&quot;:\&quot;<span class="variable">$report_InodeTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeFree\&quot;:\&quot;<span class="variable">$report_InodeFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeUsedPercent\&quot;:\&quot;<span class="variable">$report_InodeUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;IP\&quot;:\&quot;<span class="variable">$report_IP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MAC\&quot;:\&quot;<span class="variable">$report_MAC</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Gateway\&quot;:\&quot;<span class="variable">$report_Gateway</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DNS\&quot;:\&quot;<span class="variable">$report_DNS</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Listen\&quot;:\&quot;<span class="variable">$report_Listen</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Selinux\&quot;:\&quot;<span class="variable">$report_Selinux</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Firewall\&quot;:\&quot;<span class="variable">$report_Firewall</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USERs\&quot;:\&quot;<span class="variable">$report_USERs</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USEREmptyPassword\&quot;:\&quot;<span class="variable">$report_USEREmptyPassword</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USERTheSameUID\&quot;:\&quot;<span class="variable">$report_USERTheSameUID</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;PasswordExpiry\&quot;:\&quot;<span class="variable">$report_PasswordExpiry</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;RootUser\&quot;:\&quot;<span class="variable">$report_RootUser</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Sudoers\&quot;:\&quot;<span class="variable">$report_Sudoers</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHAuthorized\&quot;:\&quot;<span class="variable">$report_SSHAuthorized</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHDProtocolVersion\&quot;:\&quot;<span class="variable">$report_SSHDProtocolVersion</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHDPermitRootLogin\&quot;:\&quot;<span class="variable">$report_SSHDPermitRootLogin</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DefunctProsess\&quot;:\&quot;<span class="variable">$report_DefunctProsess</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SelfInitiatedService\&quot;:\&quot;<span class="variable">$report_SelfInitiatedService</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SelfInitiatedProgram\&quot;:\&quot;<span class="variable">$report_SelfInitiatedProgram</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;RuningService\&quot;:\&quot;<span class="variable">$report_RuningService</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Crontab\&quot;:\&quot;<span class="variable">$report_Crontab</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Syslog\&quot;:\&quot;<span class="variable">$report_Syslog</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SNMP\&quot;:\&quot;<span class="variable">$report_SNMP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;NTP\&quot;:\&quot;<span class="variable">$report_NTP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;JDK\&quot;:\&quot;<span class="variable">$report_JDK</span>\&quot;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line"><span class="comment">#echo &quot;$json&quot; </span></span><br><span class="line">curl -l -H <span class="string">&quot;Content-type: application/json&quot;</span> -X POST -d <span class="string">&quot;<span class="variable">$json</span>&quot;</span> <span class="string">&quot;<span class="variable">$uploadHostDailyCheckReportApi</span>&quot;</span> 2&gt;/dev/null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getchage_file_24h</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 文件检查 #############################&quot;</span></span><br><span class="line">    check2=$(find / -name <span class="string">&#x27;*.sh&#x27;</span> -mtime -1)</span><br><span class="line">check21=$(find / -name <span class="string">&#x27;*.asp&#x27;</span> -mtime -1)</span><br><span class="line">check22=$(find / -name <span class="string">&#x27;*.php&#x27;</span> -mtime -1)</span><br><span class="line">check23=$(find / -name <span class="string">&#x27;*.aspx&#x27;</span> -mtime -1)</span><br><span class="line">check24=$(find / -name <span class="string">&#x27;*.jsp&#x27;</span> -mtime -1)</span><br><span class="line">check25=$(find / -name <span class="string">&#x27;*.html&#x27;</span> -mtime -1)</span><br><span class="line">check26=$(find / -name <span class="string">&#x27;*.htm&#x27;</span> -mtime -1)</span><br><span class="line">check9=$(find / -name core -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;)</span><br><span class="line">check10=$(<span class="built_in">cat</span> /etc/crontab)</span><br><span class="line">check12=$(<span class="built_in">ls</span> -alt /usr/bin | <span class="built_in">head</span> -10)</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################查看所有被修改过的文件返回最近24小时内的############################</span></span><br><span class="line"><span class="string">$&#123;check2&#125;</span></span><br><span class="line"><span class="string">$&#123;check21&#125;</span></span><br><span class="line"><span class="string">$&#123;check22&#125;</span></span><br><span class="line"><span class="string">$&#123;check23&#125;</span></span><br><span class="line"><span class="string">$&#123;check24&#125;</span></span><br><span class="line"><span class="string">$&#123;check25&#125;</span></span><br><span class="line"><span class="string">$&#123;check26&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################检查定时文件的完整性############################</span></span><br><span class="line"><span class="string">$&#123;check10&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################查看系统命令是否被替换############################</span></span><br><span class="line"><span class="string">$&#123;check12&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check</span></span>()&#123;</span><br><span class="line">version</span><br><span class="line">getSystemStatus</span><br><span class="line">getCpuStatus</span><br><span class="line">getMemStatus</span><br><span class="line">getDiskStatus</span><br><span class="line">getNetworkStatus</span><br><span class="line">getListenStatus</span><br><span class="line">getProcessStatus</span><br><span class="line">getServiceStatus</span><br><span class="line">getAutoStartStatus</span><br><span class="line">getLoginStatus</span><br><span class="line">getCronStatus</span><br><span class="line">getUserStatus</span><br><span class="line">getPasswordStatus</span><br><span class="line">getSudoersStatus</span><br><span class="line">getJDKStatus</span><br><span class="line">getFirewallStatus</span><br><span class="line">getSSHStatus</span><br><span class="line">getSyslogStatus</span><br><span class="line">getSNMPStatus</span><br><span class="line">getNTPStatus</span><br><span class="line">getInstalledStatus</span><br><span class="line">getchage_file_24h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行检查并保存检查结果</span></span><br><span class="line">check &gt; <span class="variable">$RESULTFILE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;检查结果：<span class="variable">$RESULTFILE</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;`date &quot;</span>+%Y-%m-%d %H:%M:%S<span class="string">&quot;` 巡检报告&quot;</span></span><br><span class="line">END</span><br></pre></td></tr></table></figure><h3 id="从一个文件夹中的所有文件加-tmp，转移到另一个目录下再去掉-tmp。"><a href="#从一个文件夹中的所有文件加-tmp，转移到另一个目录下再去掉-tmp。" class="headerlink" title="从一个文件夹中的所有文件加.tmp，转移到另一个目录下再去掉.tmp。"></a>从一个文件夹中的所有文件加.tmp，转移到另一个目录下再去掉.tmp。</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">PRE_HOME=/iflytek/sl_export_pre</span><br><span class="line">EXP_HOME=/iflytek/sl_export</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">nameadd</span></span>() &#123;</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PRE_HOME</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> `<span class="built_in">ls</span> *.*`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$filename</span> | <span class="built_in">mv</span> <span class="variable">$filename</span> <span class="variable">$filename</span><span class="string">&quot;.tmp&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">mv</span> *.tmp <span class="variable">$EXP_HOME</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">namesub</span></span>() &#123;</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EXP_HOME</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> `<span class="built_in">ls</span> *.tmp`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$filename</span> | <span class="built_in">mv</span> <span class="variable">$filename</span> `sed <span class="string">&#x27;s/.tmp//g&#x27;</span>`</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nameadd</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line">namesub</span><br></pre></td></tr></table></figure><h3 id="同时设置定时任务，定时执行。"><a href="#同时设置定时任务，定时执行。" class="headerlink" title="同时设置定时任务，定时执行。"></a>同时设置定时任务，定时执行。</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15 8,10,12,15,17,19 * * *</span><br></pre></td></tr></table></figure><h3 id="定时重启进程配合crontab-使用"><a href="#定时重启进程配合crontab-使用" class="headerlink" title="定时重启进程配合crontab 使用"></a>定时重启进程配合crontab 使用</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line">PID=`ps -ef | grep <span class="string">&#x27;/tmpdisk/siphole_back -c /etc/siphole/siphole_back_3.conf&#x27;</span> | grep -v <span class="string">&quot;grep&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$PID</span></span><br><span class="line">/tmpdisk/siphole_back -c /etc/siphole/siphole_back_3.conf</span><br></pre></td></tr></table></figure><p>crontab</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59 23 * * * /tmpdisk/restart_back3.sh &gt;&gt; /tmpdisk/restart_back.txt</span><br></pre></td></tr></table></figure><p>是否执行成功会输出到日志<code>/tmpdisk/restart_back.txt</code></p><h3 id="使用awk将两个单词位置互换"><a href="#使用awk将两个单词位置互换" class="headerlink" title="使用awk将两个单词位置互换"></a>使用awk将两个单词位置互换</h3><p>文本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat a.txt</span></span><br><span class="line">tian po </span><br></pre></td></tr></table></figure><p>处理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;temp=$1;$1=$2;$2=temp;print $0&#125;&#x27;</span> a.txt</span><br><span class="line">po tian</span><br></pre></td></tr></table></figure><h3 id="取出文本中指定行指定位置的字段内容"><a href="#取出文本中指定行指定位置的字段内容" class="headerlink" title="取出文本中指定行指定位置的字段内容"></a>取出文本中指定行指定位置的字段内容</h3><p>文本如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat a.txt</span></span><br><span class="line">root     4041836 4040563  0 09:23 pts/0    00:00:00 journalctl _PID=2726353 -f</span><br><span class="line">root     4041863 4040563  0 09:23 pts/0    00:00:00 journalctl _PID=3371956 -f</span><br></pre></td></tr></table></figure><p>处理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;NR==2 &#123;print $2&#125;&#x27;</span> a.txt</span><br><span class="line">4041863</span><br></pre></td></tr></table></figure><p>分析</p><p>在 <code>awk</code> 命令中，<code>NR</code> 是一个内置变量，代表当前正在处理的行数。每次 <code>awk</code> 处理一行文本时，<code>NR</code> 的值都会增加 1。您可以使用 <code>NR</code> 来判断处理的是文件的第几行，并根据需要对特定行执行操作。如果当前行的行号（即 <code>NR</code> 的值）等于 2，则会打印指定的消息。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker搭建openvpn</title>
      <link href="/2022/04/17/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAopenvpn/"/>
      <url>/2022/04/17/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAopenvpn/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>通过vpn直接访问内网容器ip可以直接登录，不再需要先登入公网IP再跳转到内网容器内部。</p><h3 id="访问示意图"><a href="#访问示意图" class="headerlink" title="访问示意图"></a>访问示意图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">互联网（openvpn client）--&gt;（公网ip）服务器（私网ip:172.18.0.10）--&gt;服务器端容器（内网172.18.0.8）</span><br></pre></td></tr></table></figure><h2 id="openvpn服务端配置"><a href="#openvpn服务端配置" class="headerlink" title="openvpn服务端配置"></a>openvpn服务端配置</h2><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull kylemanna/openvpn</span><br></pre></td></tr></table></figure><h3 id="创建映射目录"><a href="#创建映射目录" class="headerlink" title="创建映射目录"></a>创建映射目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -pv /data/openvpn/conf</span><br></pre></td></tr></table></figure><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> kylemanna/openvpn ovpn_genconfig -u udp://10.10.10.10</span><br></pre></td></tr></table></figure><h3 id="生成密钥文件"><a href="#生成密钥文件" class="headerlink" title="生成密钥文件"></a>生成密钥文件</h3><p>要求输入私钥密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn ovpn_initpki</span><br><span class="line">Enter PEM pass phrase: 098poilkj.<span class="comment"># 输入私钥密码</span></span><br><span class="line">Verifying - Enter PEM pass phrase: 098poilkj.<span class="comment"># 重新输入一次密码</span></span><br><span class="line">Common Name (eg: your user,host,or server name) [Easy-RSA CA]: <span class="comment"># 输入一个CA名称。可以不用输入，直接回车</span></span><br><span class="line">Enter pass phrase <span class="keyword">for</span> /etc/openvpn/pki/private/ca.key: 123456<span class="comment"># 输入刚才设置的私钥密码，完成后在输入一次</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成客户端证书"><a href="#生成客户端证书" class="headerlink" title="生成客户端证书"></a>生成客户端证书</h3><p>test1改成其他名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn easyrsa build-client-full test1 nopass</span><br><span class="line">Enter pass phrase <span class="keyword">for</span> /etc/openvpn/pki/private/ca.key: 098poilkj.<span class="comment"># 输入刚才设置的密码</span></span><br></pre></td></tr></table></figure><h3 id="导出客户端配置"><a href="#导出客户端配置" class="headerlink" title="导出客户端配置"></a>导出客户端配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> kylemanna/openvpn ovpn_getclient test1 &gt; /data/openvpn/conf/test1.ovpn</span><br></pre></td></tr></table></figure><h3 id="启动openvpn"><a href="#启动openvpn" class="headerlink" title="启动openvpn"></a>启动openvpn</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name openvpn -v /data/openvpn:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn</span><br></pre></td></tr></table></figure><h2 id="openvpn用户管理"><a href="#openvpn用户管理" class="headerlink" title="openvpn用户管理"></a>openvpn用户管理</h2><h3 id="添加用户脚本"><a href="#添加用户脚本" class="headerlink" title="添加用户脚本"></a>添加用户脚本</h3><p><code>vim add_user.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please your username: &quot;</span> NAME</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn easyrsa build-client-full <span class="variable">$NAME</span> nopass</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> kylemanna/openvpn ovpn_getclient <span class="variable">$NAME</span> &gt; /data/openvpn/conf/<span class="string">&quot;<span class="variable">$NAME</span>&quot;</span>.ovpn</span><br><span class="line">docker restart openvpn</span><br></pre></td></tr></table></figure><h3 id="删除用户脚本"><a href="#删除用户脚本" class="headerlink" title="删除用户脚本"></a>删除用户脚本</h3><p><code>vim del_user.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Delete username: &quot;</span> DNAME</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn easyrsa revoke <span class="variable">$DNAME</span></span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn easyrsa gen-crl</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn <span class="built_in">rm</span> -f /etc/openvpn/pki/reqs/<span class="string">&quot;DNAME&quot;</span>.req</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn <span class="built_in">rm</span> -f /etc/openvpn/pki/private/<span class="string">&quot;DNAME&quot;</span>.key</span><br><span class="line">docker run -v /data/openvpn:/etc/openvpn --<span class="built_in">rm</span> -it kylemanna/openvpn <span class="built_in">rm</span> -f /etc/openvpn/pki/issued/<span class="string">&quot;DNAME&quot;</span>.crt</span><br><span class="line">docker restart openvpn</span><br></pre></td></tr></table></figure><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./add_user.sh<span class="comment"># 输入要添加的用户名，回车后输入刚才创建的私钥密码</span></span><br></pre></td></tr></table></figure><p>创建的证书在<code>/data/openvpn/conf</code>目录下。</p><h2 id="openvpn客户端配置"><a href="#openvpn客户端配置" class="headerlink" title="openvpn客户端配置"></a>openvpn客户端配置</h2><p>官网下载<a href="https://openvpn.net/vpn-client/">客户端</a></p><p>从服务端把证书拷贝到桌面上，并将证书<code>test1.ovpn</code>直接导入到客户端内。然后输入容器内部IP就可以直接访问docker内部容器了。</p><p><img src="/img/postimages/image-20220417135159910.webp" alt="image-20220417135159910"></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible相关参考资料</title>
      <link href="/2022/04/15/ansible%E7%9B%B8%E5%85%B3%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
      <url>/2022/04/15/ansible%E7%9B%B8%E5%85%B3%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h2 id="ansible模块官方手册"><a href="#ansible模块官方手册" class="headerlink" title="ansible模块官方手册"></a>ansible模块官方手册</h2><p><a href="https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html">模块</a></p><h3 id="模块筛选"><a href="#模块筛选" class="headerlink" title="模块筛选"></a>模块筛选</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-doc -l | grep <span class="string">&#x27;copy&#x27;</span></span><br><span class="line">vsphere_copy          Copy a file to a VMware datastore</span><br><span class="line">win_copy              Copies files to remote locations on windows hosts</span><br><span class="line">bigip_file_copy       Manage files <span class="keyword">in</span> datastores on a BIG-IP</span><br><span class="line">ec2_ami_copy          copies AMI between AWS regions, <span class="built_in">return</span> new image <span class="built_in">id</span></span><br><span class="line">win_robocopy          Synchronizes the contents of two directories using Robocopy</span><br><span class="line">copy                  Copy files to remote locations</span><br><span class="line">na_ontap_lun_copy     NetApp ONTAP copy LUNs</span><br><span class="line">icx_copy              Transfer files from or to remote Ruckus ICX 7000 series switches</span><br><span class="line">unarchive             Unpacks an archive after (optionally) copying it from the <span class="built_in">local</span> machine</span><br><span class="line">postgresql_copy       Copy data between a file/program and a PostgreSQL table</span><br><span class="line">ec2_snapshot_copy     copies an EC2 snapshot and returns the new Snapshot ID</span><br><span class="line">nxos_file_copy        Copy a file to a remote NXOS device</span><br><span class="line">netapp_e_volume_copy  NetApp E-Series create volume copy pairs</span><br></pre></td></tr></table></figure><p>详细的模块描述手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc copy</span><br></pre></td></tr></table></figure><p>只包含模块参数用法的模块描述手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -s copy</span><br></pre></td></tr></table></figure><h3 id="连接行为变量"><a href="#连接行为变量" class="headerlink" title="连接行为变量"></a>连接行为变量</h3><p><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters">官网链接</a></p><p>常见的解释</p><table><thead><tr><th align="center">Inventory变量名</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">ansible_host</td><td align="center">ansible连接节点时的IP地址</td></tr><tr><td align="center">ansible_port</td><td align="center">连接对方的端口号，ssh连接时默认为22</td></tr><tr><td align="center">ansible_user</td><td align="center">连接对方主机时使用的主机名。不指定时，将使用执行ansible或ansible-playbook命令的用户</td></tr><tr><td align="center">ansible_password</td><td align="center">连接时的用户密码</td></tr><tr><td align="center">ansible_connection</td><td align="center">连接类型，有效值包括smart、ssh、paramiko、local、docker、winrm，默认为smart。smart表示智能选择ssh和paramiko，当SSH支持ControlPersist(即持久连接)时使用ssh，否则使用paramiko。local和docker是非基于ssh连接的方式，winrm是连接windows的插件</td></tr><tr><td align="center">ansible_ssh_private_key_file</td><td align="center">指定密钥认证ssh连接时的私钥文件</td></tr><tr><td align="center">ansible_ssh_common_args</td><td align="center">提供给ssh、sftp、scp命令的额外参数</td></tr><tr><td align="center">ansible_become</td><td align="center">允许进行权限提升</td></tr><tr><td align="center">ansible_become_method</td><td align="center">指定提升权限的方式，例如可使用sudo&#x2F;su&#x2F;runas等方式</td></tr><tr><td align="center">ansible_become_user</td><td align="center">提升为哪个用户的权限，默认提升为root</td></tr><tr><td align="center">ansible_become_password</td><td align="center">提升为指定用户权限时的密码</td></tr></tbody></table><h3 id="yaml与json格式转换"><a href="#yaml与json格式转换" class="headerlink" title="yaml与json格式转换"></a>yaml与json格式转换</h3><p><a href="https://yaml-online-parser.appspot.com/">链接</a></p><p>也可以用yq将yaml转换成json 格式。</p><h3 id="ansible关于lookup的插件"><a href="#ansible关于lookup的插件" class="headerlink" title="ansible关于lookup的插件"></a>ansible关于lookup的插件</h3><p><a href="https://docs.ansible.com/ansible/latest/plugins/lookup.html#plugin-list">参考</a></p><h3 id="ansible支持的magic-variables"><a href="#ansible支持的magic-variables" class="headerlink" title="ansible支持的magic variables"></a>ansible支持的magic variables</h3><p><a href="https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html#magic-variables">官网</a></p><h3 id="sh模式下没有ip-ifconfig-命令如何看IP？"><a href="#sh模式下没有ip-ifconfig-命令如何看IP？" class="headerlink" title="sh模式下没有ip  ifconfig 命令如何看IP？"></a>sh模式下没有ip  ifconfig 命令如何看IP？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname -I | awk ‘&#123;<span class="built_in">print</span> <span class="variable">$1</span>&#125;’</span><br></pre></td></tr></table></figure><h3 id="没有telnet-工具如何测试端口？"><a href="#没有telnet-工具如何测试端口？" class="headerlink" title="没有telnet 工具如何测试端口？"></a>没有telnet 工具如何测试端口？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">echo</span> &gt;/dev/tcp/172.18.0.1/6666) &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;open&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;closed&quot;</span></span><br><span class="line"></span><br><span class="line">开放 open </span><br><span class="line">未开放 closed</span><br></pre></td></tr></table></figure><h2 id="ansible告警"><a href="#ansible告警" class="headerlink" title="ansible告警"></a>ansible告警</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[WARNING]: Platform linux on host node3 is using the discovered Python interpreter at /usr/bin/python3.7, but future installation of</span><br><span class="line">another Python interpreter could change this. See</span><br><span class="line">https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure><h3 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h3><p>关闭告警</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ansible/ansible.cfg</span><br><span class="line">[defaults]</span><br><span class="line">interpreter_python=auto_silent</span><br></pre></td></tr></table></figure><h2 id="debain-ansible所有版本"><a href="#debain-ansible所有版本" class="headerlink" title="debain ansible所有版本"></a>debain ansible所有版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://packages.debian.org/buster-backports/all/ansible/download</span><br></pre></td></tr></table></figure><h2 id="ansible-rpm包所有版本"><a href="#ansible-rpm包所有版本" class="headerlink" title="ansible rpm包所有版本"></a>ansible rpm包所有版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker冷门技巧</title>
      <link href="/2022/04/15/docker%E5%86%B7%E9%97%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/04/15/docker%E5%86%B7%E9%97%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="查看docker镜像的dockerfile"><a href="#查看docker镜像的dockerfile" class="headerlink" title="查看docker镜像的dockerfile"></a>查看docker镜像的dockerfile</h2><p>将<code>&lt;IMAGE ID&gt;</code>替换为待查看Dockerfile的镜像ID。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">history</span> &lt;IMAGE ID&gt; --format <span class="string">&quot;&#123;&#123;.CreatedBy&#125;&#125;&quot;</span> --no-trunc |<span class="built_in">tac</span> | awk <span class="string">&#x27;&#123;if($3~/nop/)&#123;for(i=1;i&lt;=3;i++)&#123;$i=&quot;&quot;&#125;;print substr($0,4)&#125;else&#123;print &quot;RUN&quot;,$0&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>对比</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker history f1396d3fa7b5 --format &quot;&#123;&#123;.CreatedBy&#125;&#125;&quot; --no-trunc |tac | awk &#x27;&#123;if($3~/nop/)&#123;for(i=1;i&lt;=3;i++)&#123;$i=&quot;&quot;&#125;;print substr($0,4)&#125;else&#123;print &quot;RUN&quot;,$0&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">ADD file:be998d04a8927e9c4b105995e3b9d6800ea798807389f7c5921c0f4774328e21 <span class="keyword">in</span> /</span><br><span class="line">CMD [<span class="string">&quot;bash&quot;</span>]</span><br><span class="line">COPY file:d3994e70cf156a17b1ad3dae5c75ed40c6d5c73a0d1b4c6b94620f1cd76b0943 <span class="keyword">in</span> /etc/apt/sources.list</span><br><span class="line">RUN /bin/sh -c apt update;apt install -y vim net-tools procps openssh-server python3.7</span><br><span class="line">RUN /bin/sh -c sed -i <span class="string">&#x27;s/^#PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;<span class="built_in">cp</span> /usr/bin/python3.7 /usr/bin/python</span><br><span class="line">CMD [<span class="string">&quot;/bin/bash&quot;</span>]</span><br></pre></td></tr></table></figure><p>原Dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:10</span><br><span class="line">COPY sources.list /etc/apt/sources.list</span><br><span class="line">RUN apt update;apt install -y vim net-tools procps openssh-server python3.7</span><br><span class="line">RUN sed -i <span class="string">&#x27;s/^#PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;<span class="built_in">cp</span> /usr/bin/python3.7 /usr/bin/python</span><br><span class="line">CMD [<span class="string">&quot;/bin/bash&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="创建容器时指定主机名"><a href="#创建容器时指定主机名" class="headerlink" title="创建容器时指定主机名"></a>创建容器时指定主机名</h2><p>加<code>--hostname</code>参数，<code>--network</code>指定网络。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name aa --hostname kafka_node -p 2181:2181 -v /home/htht/kafka/logs:/home/kafka/logs -v /home/htht/kafka/k-datas:/home/kafka/k-datas --network=my_net1 --ip 172.18.0.3  kafka:0.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压缩与解压缩</title>
      <link href="/2022/04/14/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/"/>
      <url>/2022/04/14/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="全文件压缩与解压"><a href="#全文件压缩与解压" class="headerlink" title="全文件压缩与解压"></a>全文件压缩与解压</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 文件名.tgz 源文件</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>先创建解压目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/a</span><br></pre></td></tr></table></figure><p>再将文件指定压缩到该目录内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf 文件名.tgz -C /root/a</span><br></pre></td></tr></table></figure><h2 id="排除日志文件的压缩与解压"><a href="#排除日志文件的压缩与解压" class="headerlink" title="排除日志文件的压缩与解压"></a>排除日志文件的压缩与解压</h2><h3 id="压缩-1"><a href="#压缩-1" class="headerlink" title="压缩"></a>压缩</h3><p>注意<code>--exclude=</code>参数要放到打包目录之前。</p><p>排除xxx&#x2F;logs文件，其余都压缩。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf xxx.tgz --exclude=xxx/logs xxx</span><br></pre></td></tr></table></figure><p>例如：打包<code>/var/log/*</code>下所有文件除了<code>/var/log/landscape</code>文件夹之外。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf exclude-log.tgz  --exclude=/var/log/landscape /var/log/*</span><br></pre></td></tr></table></figure><h3 id="解压到指定文件夹"><a href="#解压到指定文件夹" class="headerlink" title="解压到指定文件夹"></a>解压到指定文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf 文件名.tgz -C /root/a</span><br></pre></td></tr></table></figure><h2 id="同时压缩多个文件夹"><a href="#同时压缩多个文件夹" class="headerlink" title="同时压缩多个文件夹"></a>同时压缩多个文件夹</h2><p>多个路径用空格隔开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf myfile.tgz /etc/adduser.conf /var/log/docker.log</span><br></pre></td></tr></table></figure><p>解压到指定文件夹内（该文件夹必须存在！）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf myfile.tgz -C /root/a</span><br></pre></td></tr></table></figure><h2 id="只显示压缩内容不解压"><a href="#只显示压缩内容不解压" class="headerlink" title="只显示压缩内容不解压"></a>只显示压缩内容不解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -tvf myfile.tgz </span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim myfile.tgz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟ssh执行远程命令</title>
      <link href="/2022/04/12/%E6%A8%A1%E6%8B%9Fssh%E6%89%A7%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/12/%E6%A8%A1%E6%8B%9Fssh%E6%89%A7%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="模拟ssh执行远程命令"><a href="#模拟ssh执行远程命令" class="headerlink" title="模拟ssh执行远程命令"></a>模拟ssh执行远程命令</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">server = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">server.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8090</span>))</span><br><span class="line">server.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    conn, client_addr = server.accept()</span><br><span class="line">    <span class="built_in">print</span>(client_addr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cmd = conn.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cmd:<span class="keyword">break</span></span><br><span class="line">            obj = subprocess.Popen(cmd.decode(<span class="string">&#x27;utf-8&#x27;</span>), shell=<span class="literal">True</span>,</span><br><span class="line">                                   stdout=subprocess.PIPE,</span><br><span class="line">                                   stderr=subprocess.PIPE</span><br><span class="line">                                   )</span><br><span class="line">            stdout = obj.stdout.read()</span><br><span class="line">            stderr = obj.stderr.read()</span><br><span class="line">            cmd_res = stdout+stderr</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">len</span>(cmd_res))</span><br><span class="line">            conn.send(cmd_res)</span><br><span class="line">        <span class="keyword">except</span> ConnectionResetError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    conn.close()</span><br><span class="line">server.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">client = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">client.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8090</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cmd = <span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cmd:<span class="keyword">continue</span></span><br><span class="line">    client.send(cmd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    data = client.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(data.decode(<span class="string">&#x27;gbk&#x27;</span>)) <span class="comment">#环境时windows收包后要转成gbk格式。</span></span><br><span class="line"></span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure><h2 id="粘包现象"><a href="#粘包现象" class="headerlink" title="粘包现象"></a>粘包现象</h2><h3 id="什么是粘包？"><a href="#什么是粘包？" class="headerlink" title="什么是粘包？"></a>什么是粘包？</h3><p>须知：只有TCP有粘包现象，UDP永远不会粘包。</p><p>首先需要掌握一个socket收发消息的原理</p><p><img src="/img/postimages/image-20220412220522130.webp" alt="image-20220412220522130"></p><p>发送端可以是一K一K地发送数据，而接收端的应用程序可以两K两K地提走数据，当然也有可能一次提走3K或6K数据，或者一次只提走几个字节的数据，也就是说，应用程序所看到的数据是一个整体，或说是一个流（stream），一条消息有多少字节对应用程序是不可见的，因此<code>TCP协议</code>是面向流的协议，这也是容易出现粘包问题的原因。而<code>UDP</code>是面向消息的协议，每个<code>UDP段</code>都是一条消息，应用程序必须以消息为单位提取数据，不能一次提取任意字节的数据，这一点和<code>TCP</code>是很不同的。</p><p>怎样定义消息呢？可以认为对方一次性<code>write/send</code>的数据为一个消息，需要明白的是当对方<code>send</code>一条信息的时候，无论底层怎样分段分片，<code>TCP协议层</code>会把构成整条消息的数据段排序完成后才呈现在内核缓冲区。</p><p>例如基于<code>TCP</code>的套接字客户端往服务端上传文件，发送时文件内容是按照一段一段的字节流发送的，在接收方看了，根本不知道该文件的字节流从何处开始，在何处结束。</p><p>所谓粘包问题主要还是因为接收方不知道消息之间的界限，不知道一次性提取多少字节的数据所造成的。</p><p>此外，发送方引起的粘包是由<code>TCP协议</code>本身造成的，<code>TCP</code>为提高传输效率，发送方往往要收集到足够多的数据后才发送一个<code>TCP</code>段。若连续几次需要<code>send</code>的数据都很少，通常<code>TCP</code>会根据优化算法把这些数据合成一个<code>TCP段</code>后一次发送出去，这样接收方就收到了粘包数据。</p><h3 id="TCP与UDP"><a href="#TCP与UDP" class="headerlink" title="TCP与UDP"></a><code>TCP</code>与<code>UDP</code></h3><ol><li><code>TCP</code>（transport control protocol，传输控制协议）是面向连接的，面向流的，提供高可靠性服务。收发两端（客户端和服务器端）都要有一一成对的socket，因此，发送端为了将多个发往接收端的包，更有效的发到对方，使用了优化方法（<code>Nagle算法</code>），将多次间隔较小且数据量小的数据，合并成一个大的数据块，然后进行封包。这样，接收端，就难于分辨出来了，必须提供科学的拆包机制。 即面向流的通信是无消息保护边界的。</li><li><code>UDP</code>（user datagram protocol，用户数据报协议）是无连接的，面向消息的，提供高效率服务。不会使用块的合并优化算法，, 由于<code>UDP</code>支持的是一对多的模式，所以接收端的<code>skbuff</code>(套接字缓冲区）采用了链式结构来记录每一个到达的<code>UDP包</code>，在每个<code>UDP包</code>中就有了消息头（消息来源地址，端口等信息），这样，对于接收端来说，就容易进行区分处理了。 <strong>即面向消息的通信是有消息保护边界的。</strong></li><li><strong><code>tcp</code>是基于数据流的，于是收发的消息不能为空，这就需要在客户端和服务端都添加空消息的处理机制，防止程序卡住，而<code>udp</code>是基于数据报的，即便是你输入的是空内容（直接回车），那也不是空消息，<code>udp协议</code>会帮你封装上消息头。</strong></li></ol><p><code>udp</code>的<code>recvfrom</code>是阻塞的，一个<code>recvfrom(x)</code>必须对唯一一个<code>sendinto(y)</code>,收完了<code>x</code>个字节的数据就算完成,若是<code>y&gt;x</code>数据就丢失，这意味着<code>udp</code>根本不会粘包，但是会丢数据，不可靠。</p><p><code>TCP</code>的协议数据不会丢，没有收完包，下次接收，会继续上次继续接收，己端总是在收到<code>ack</code>时才会清除缓冲区内容。数据是可靠的，但是会粘包。</p><h3 id="两种情况下会发生粘包"><a href="#两种情况下会发生粘包" class="headerlink" title="两种情况下会发生粘包"></a>两种情况下会发生粘包</h3><p>发送端需要等缓冲区满才发送出去，造成粘包（发送数据时间间隔很短，数据了很小，会合到一起，产生粘包）</p><p>运行上面的服务端和客户端代码看TCP粘包现象。</p><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line">(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">3221</span>)</span><br><span class="line"><span class="number">21944</span> <span class="comment">#一共21944个字节数据，只收了1024个字节数据。剩下的就会粘包。</span></span><br><span class="line"><span class="number">393</span></span><br><span class="line"><span class="number">393</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#客户端 执行tasklist 相当于打印windows的任务管理器,然后再执行dir查看有哪些文件。</span></span><br><span class="line">&gt;&gt;: tasklist</span><br><span class="line"></span><br><span class="line">映像名称                       PID 会话名              会话<span class="comment">#       内存使用 </span></span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">System Idle Process              <span class="number">0</span> Services                   <span class="number">0</span>          <span class="number">8</span> K</span><br><span class="line">System                           <span class="number">4</span> Services                   <span class="number">0</span>        <span class="number">144</span> K</span><br><span class="line">Secure System                   <span class="number">88</span> Services                   <span class="number">0</span>     <span class="number">73</span>,<span class="number">304</span> K</span><br><span class="line">Registry                       <span class="number">156</span> Services                   <span class="number">0</span>     <span class="number">93</span>,<span class="number">616</span> K</span><br><span class="line">smss.exe                       <span class="number">528</span> Services                   <span class="number">0</span>      <span class="number">1</span>,<span class="number">256</span> K</span><br><span class="line">csrss.exe                      <span class="number">880</span> Services                   <span class="number">0</span>      <span class="number">5</span>,<span class="number">200</span> K</span><br><span class="line">wininit.exe                    <span class="number">980</span> Services                   <span class="number">0</span>      <span class="number">6</span>,<span class="number">700</span> K</span><br><span class="line">csrss.exe                      <span class="number">988</span> Console                    <span class="number">1</span>      <span class="number">7</span>,<span class="number">392</span> K</span><br><span class="line">services.exe                   <span class="number">784</span> Services                   <span class="number">0</span>     <span class="number">12</span>,<span class="number">104</span> K</span><br><span class="line">LsaIso.exe                     <span class="number">816</span> Services                   <span class="number">0</span>      <span class="number">3</span>,<span class="number">352</span> K</span><br><span class="line">lsass.exe                      <span class="number">808</span> Services                   <span class="number">0</span>     <span class="number">24</span>,<span class="number">360</span> K</span><br><span class="line">winlogon</span><br><span class="line">&gt;&gt;: <span class="built_in">dir</span></span><br><span class="line">.exe                  <span class="number">1064</span> Console                    <span class="number">1</span>     <span class="number">13</span>,052 K</span><br><span class="line">svchost.exe                   <span class="number">1192</span> Services                   <span class="number">0</span>     <span class="number">35</span>,<span class="number">916</span> K</span><br><span class="line">fontdrvhost.exe               <span class="number">1228</span> Console                    <span class="number">1</span>     <span class="number">14</span>,<span class="number">864</span> K</span><br><span class="line">fontdrvhost.exe               <span class="number">1236</span> Services                   <span class="number">0</span>      <span class="number">4</span>,<span class="number">444</span> K</span><br><span class="line">WUDFHost.exe                  <span class="number">1244</span> Services                   <span class="number">0</span>     <span class="number">18</span>,<span class="number">332</span> K</span><br><span class="line">svchost.exe                   <span class="number">1360</span> Services                   <span class="number">0</span>     <span class="number">18</span>,016 K</span><br><span class="line">svchost.exe                   <span class="number">1408</span> Services                   <span class="number">0</span>      <span class="number">9</span>,<span class="number">484</span> K</span><br><span class="line">dwm.exe                       <span class="number">1512</span> Console                    <span class="number">1</span>    <span class="number">154</span>,<span class="number">792</span> K</span><br><span class="line">svchost.exe                   <span class="number">1644</span> Services                   <span class="number">0</span>      <span class="number">9</span>,<span class="number">572</span> K</span><br><span class="line">svchost.exe                   <span class="number">1656</span> Services                   <span class="number">0</span>     <span class="number">13</span>,<span class="number">208</span> K</span><br><span class="line">svchost.exe                   <span class="number">1664</span> Services                   <span class="number">0</span>     <span class="number">14</span>,<span class="number">728</span> K</span><br><span class="line">svchost.exe                   <span class="number">1680</span> Services                   <span class="number">0</span>     <span class="number">11</span>,<span class="number">348</span> K</span><br><span class="line">svchost.exe                   <span class="number">1708</span> Services                   <span class="number">0</span>      <span class="number">5</span>,<span class="number">540</span> K</span><br><span class="line">svchost.exe       </span><br></pre></td></tr></table></figure><p>发现<code>dir</code>显示的不是当前目录下的内容，仿佛是上一次执行<code>tasklist</code>后内容没显示全。</p><p>接收方不及时接收缓冲区的包，造成多个包接收（客户端发送了一段数据，服务端只收了一小部分，服务端下次再收的时候还是从缓冲区拿上次遗留的数据，产生粘包） 。</p><h3 id="拆包的发生情况"><a href="#拆包的发生情况" class="headerlink" title="拆包的发生情况"></a><strong>拆包的发生情况</strong></h3><p>当发送端缓冲区的长度大于网卡的<code>MTU</code>时，<code>TCP</code>会将这次发送的数据拆成几个数据包发送出去。</p><p><strong>补充问题一：为何TCP是可靠传输，UDP是不可靠传输</strong></p><p><code>TCP</code>在数据传输时，发送端先把数据发送到自己的缓存中，然后协议控制将缓存中的数据发往对端，对端返回一个<code>ack=1</code>，发送端则清理缓存中的数据，对端返回<code>ack=0</code>，则重新发送数据，所以<code>TCP</code>是可靠的。</p><p>而<code>udp</code>发送数据，对端是不会返回确认信息的，因此不可靠。</p><p><strong>补充问题二：send(字节流)和recv(1024)及sendall</strong></p><p><code>recv</code>里指定的1024意思是从缓存里一次拿出1024个字节的数据</p><p><code>send</code>的字节流是先放入己端缓存，然后由协议控制将缓存内容发往对端，如果待发送的字节流大小大于缓存剩余空间，那么数据丢失，用<code>sendall</code>就会循环调用<code>send</code>，数据不会丢失。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible基本环境搭建及升级版本</title>
      <link href="/2022/04/12/ansible/"/>
      <url>/2022/04/12/ansible/</url>
      
        <content type="html"><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p><code>Ansible</code>是一个基于<code>Python</code>开发的配置管理和应用部署工具，现在也在自动化管理领域大放异彩。它融合了众多老牌运维工具的优点，<code>Pubbet和Saltstack</code>能实现的功能，<code>Ansible</code>基本上都可以实现。</p><p><code>Ansible</code>能批量配置、部署、管理一大堆的主机。比如以前需要切换到每个主机上执行的一或多个操作，使用<code>Ansible</code>只需在固定的一台<code>Ansible</code>控制节点上去完成所有主机的操作。</p><h2 id="ansible主控端搭建"><a href="#ansible主控端搭建" class="headerlink" title="ansible主控端搭建"></a>ansible主控端搭建</h2><h3 id="基于docker构建一个ansible镜像"><a href="#基于docker构建一个ansible镜像" class="headerlink" title="基于docker构建一个ansible镜像"></a>基于docker构建一个ansible镜像</h3><h4 id="编写Dockerfile"><a href="#编写Dockerfile" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:10</span><br><span class="line">COPY sources.list /etc/apt/sources.list</span><br><span class="line">RUN apt update;apt install -y ansible sshpass vim net-tools procps</span><br><span class="line">RUN sed -i <span class="string">&#x27;s/^#host_key_checking.*/host_key_checking = False/g&#x27;</span> /etc/ansible/ansible.cfg</span><br><span class="line">CMD [<span class="string">&quot;/bin/bash&quot;</span>]</span><br></pre></td></tr></table></figure><p>说明：基于debain10搭建的基础ansible镜像包。</p><h4 id="创建sources-list文件"><a href="#创建sources-list文件" class="headerlink" title="创建sources.list文件"></a>创建sources.list文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; sources.list </span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian/ buster main</span></span><br><span class="line"><span class="string">deb-src http://mirrors.ustc.edu.cn/debian/ buster main</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian-security buster/updates main</span></span><br><span class="line"><span class="string">deb-src http://mirrors.ustc.edu.cn/debian-security buster/updates main</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># buster-updates, previously known as &#x27;volatile&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian/ buster-updates main</span></span><br><span class="line"><span class="string">deb-src http://mirrors.ustc.edu.cn/debian/ buster-updates main</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian/ buster-backports main non-free contrib</span></span><br><span class="line"><span class="string">deb-src http://mirrors.ustc.edu.cn/debian/ buster-backports main non-free contrib</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>注意：<code>sources.list</code>是一个源配置文件，和<code>Dockerfile</code>文件在同一级。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM 意思就是使用哪个基础镜像</span><br><span class="line">COPY 就是复制本地的哪个文件到容器镜像</span><br><span class="line">RUN 就是执行一个Linux命令</span><br><span class="line">CMD 就是设置容器启动的时候需要运行什么程序</span><br></pre></td></tr></table></figure><h4 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h4><p>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t <span class="variable">$&#123;镜像名称:版本&#125;</span> .</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t debian10/ansible .</span><br></pre></td></tr></table></figure><p>当不设置版本的时候，默认会给予latest的一个版本标签。</p><p>注意构建过程中报错信息，根据报错信息更改Dockerfile文件内容。</p><h4 id="验证镜像"><a href="#验证镜像" class="headerlink" title="验证镜像"></a>验证镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images | grep ansible</span></span><br><span class="line">debain10/ansible       latest      03216dab3d76        23 minutes ago      349MB</span><br></pre></td></tr></table></figure><h3 id="主控端容器创建"><a href="#主控端容器创建" class="headerlink" title="主控端容器创建"></a>主控端容器创建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name ansible-control --privilaged=<span class="literal">true</span> -d debain10/ansible sh</span><br></pre></td></tr></table></figure><h4 id="查看容器是否正常启动"><a href="#查看容器是否正常启动" class="headerlink" title="查看容器是否正常启动"></a>查看容器是否正常启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br><span class="line">ccb07fbb3515  debain10/ansible  <span class="string">&quot;sh&quot;</span>  25 minutes ago  Up 25 minutes  ansible-control</span><br></pre></td></tr></table></figure><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it ansible-control bash</span><br></pre></td></tr></table></figure><p>查看ansible版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ccb07fbb3515:/etc/ansible<span class="comment"># ansible --version </span></span><br><span class="line">ansible 2.7.7</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [<span class="string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class="string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class="line">  ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 3.7.3 (default, Jan 22 2021, 20:04:44) [GCC 8.3.0]</span><br></pre></td></tr></table></figure><h2 id="ansible被控节点搭建"><a href="#ansible被控节点搭建" class="headerlink" title="ansible被控节点搭建"></a>ansible被控节点搭建</h2><h3 id="使用Dockerfile创建被控节点镜像"><a href="#使用Dockerfile创建被控节点镜像" class="headerlink" title="使用Dockerfile创建被控节点镜像"></a>使用Dockerfile创建被控节点镜像</h3><p>Dockerfile文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:10</span><br><span class="line">COPY sources.list /etc/apt/sources.list</span><br><span class="line">RUN apt update;apt install -y vim net-tools procps openssh-server python3.7</span><br><span class="line">RUN sed -i <span class="string">&#x27;s/^#PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;<span class="built_in">cp</span> /usr/bin/python3.7 /usr/bin/python</span><br><span class="line">CMD [<span class="string">&quot;/bin/bash&quot;</span>]</span><br></pre></td></tr></table></figure><p>这里有一个坑，被控节点中必须安装python，ansible默认会去<code>/usr/bin</code>内找python执行文件。如果没有就会报错。这里安装镜像时就默认安装了<code>python3.7</code>。并将执行文件复制为<code>/usr/bin/python</code>。</p><p>当然<code>openssh-server</code>是必备的，<code>ansible</code>就是基于ssh服务控制服务器的。</p><h3 id="创建sources-list文件-同主控端"><a href="#创建sources-list文件-同主控端" class="headerlink" title="创建sources.list文件(同主控端)"></a>创建sources.list文件(同主控端)</h3><h3 id="开始构建-1"><a href="#开始构建-1" class="headerlink" title="开始构建"></a>开始构建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t debian10/ansible-node .</span><br></pre></td></tr></table></figure><h3 id="创建3个被控端容器"><a href="#创建3个被控端容器" class="headerlink" title="创建3个被控端容器"></a>创建3个被控端容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name ansible-node1 --privilaged=<span class="literal">true</span> -d debain10/ansible init</span><br><span class="line">docker run -it --name ansible-node2 --privilaged=<span class="literal">true</span> -d debain10/ansible init</span><br><span class="line">docker run -it --name ansible-node3 --privilaged=<span class="literal">true</span> -d debain10/ansible init</span><br></pre></td></tr></table></figure><h3 id="分别进入容器并修改root密码"><a href="#分别进入容器并修改root密码" class="headerlink" title="分别进入容器并修改root密码"></a>分别进入容器并修改root密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#密码统一修改为123456</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span> | passwd --stdin root <span class="comment">#debain10试了下不生效</span></span><br><span class="line"><span class="comment">#使用以下命令更改</span></span><br><span class="line">passwd root</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>最后可以看到一个主控端和3个被控端容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e8e005edfab9        debain/ansible-node                    <span class="string">&quot;init&quot;</span>                   About an hour ago   Up About an hour                             ansible-node3</span><br><span class="line">cd03436b2424        debain/ansible-node                    <span class="string">&quot;init&quot;</span>                   About an hour ago   Up About an hour                             ansible-node2</span><br><span class="line">88bf589578f5        debain/ansible-node                    <span class="string">&quot;init&quot;</span>                   About an hour ago   Up About an hour                             ansible-node1</span><br><span class="line">ccb07fbb3515        debain10/ansible                       <span class="string">&quot;sh&quot;</span>                     About an hour ago   Up About an hour                             ansible-control</span><br></pre></td></tr></table></figure><h2 id="在控制端添加所有被控端主机信息"><a href="#在控制端添加所有被控端主机信息" class="headerlink" title="在控制端添加所有被控端主机信息"></a>在控制端添加所有被控端主机信息</h2><p>有两种方法</p><h3 id="一种明文方式-不安全"><a href="#一种明文方式-不安全" class="headerlink" title="一种明文方式(不安全)"></a>一种明文方式(不安全)</h3><p>在&#x2F;etc&#x2F;ansible&#x2F;hosts文件添加下面的内容（覆盖）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">node1 ansible_ssh_host=172.18.0.5 ansible_ssh_port=22 ansible_ssh_pass=1</span><br><span class="line">node2 ansible_ssh_host=172.18.0.6 ansible_ssh_port=22 ansible_ssh_pass=1</span><br><span class="line">node3 ansible_ssh_host=172.18.0.7 ansible_ssh_port=22 ansible_ssh_pass=1</span><br><span class="line">[hello]</span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure><h3 id="另一种密文方式（推荐）"><a href="#另一种密文方式（推荐）" class="headerlink" title="另一种密文方式（推荐）"></a>另一种密文方式（推荐）</h3><h4 id="使用openssl生成随机密码"><a href="#使用openssl生成随机密码" class="headerlink" title="使用openssl生成随机密码"></a>使用openssl生成随机密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">openssl rand -out vault_password_file -base64 128 </span><br><span class="line"><span class="comment">#cat vault_password_file</span></span><br><span class="line">eBqrIFYQ7XDJKjTywZwc26KElu1NQwwx5su3pzj21c4H33RQUV4kslL+UHVEJzxN</span><br><span class="line">sYIEbklwL7la+sugcSoK5PutqZ79bXnvT7FkEk2pMFNUO4W13/R3pH1AFAddAvsC</span><br><span class="line">h+YG1mxTCUsNbCwgtngCkAe9cBcLbkbLMVxjQ+dZym4=</span><br><span class="line"><span class="comment">#最小化权限并上锁。</span></span><br><span class="line"><span class="built_in">chmod</span> a-w vault_password_file</span><br><span class="line">chattr +i vault_password_file</span><br></pre></td></tr></table></figure><p>删除文件前先解锁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr -i vault_password_file</span><br></pre></td></tr></table></figure><p>关于openssl补充：</p><p>openssl生成随机数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openssl rand [-out file] [-rand file(s)] [-base64] [-hex] num</span><br><span class="line">常用选项有：</span><br><span class="line"></span><br><span class="line">-out file：将生成的随机数保存至指定文件中</span><br><span class="line">-base64：使用base64 编码格式</span><br><span class="line">-hex：使用16进制编码格式</span><br></pre></td></tr></table></figure><h4 id="使用ansible-vault生成加密后的字符串"><a href="#使用ansible-vault生成加密后的字符串" class="headerlink" title="使用ansible-vault生成加密后的字符串"></a>使用<code>ansible-vault</code>生成加密后的字符串</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@ccb07fbb3515:~# ansible-vault encrypt_string &quot;123456&quot; -name ansible_ssh_pass </span><br><span class="line">The number of --name options do not match the number of args.</span><br><span class="line">The last named variable will be &quot;ame&quot;. The rest will not have names.</span><br><span class="line"># The encrypted version of variable (&quot;ame&quot;, the string #1 from the command line args).</span><br><span class="line">ame: !vault |</span><br><span class="line">         $ANSIBLE_VAULT;1.1;AES256</span><br><span class="line">         35643865643061373962376261653765333233333839353937643134643437396262646338363965</span><br><span class="line"> 3366666561653365663164386536363963353961313362350a626662366361303434383665306531</span><br><span class="line"> 34386161363965363634626663343832363664623139336665313131623732343437633439386264</span><br><span class="line"> 6534663962663337640a363166383137613835383966396431326165663732646337653235646239</span><br><span class="line"> 3534</span><br><span class="line"># The encrypted version of the string #2 from the command line args.)</span><br><span class="line">!vault |</span><br><span class="line">         $ANSIBLE_VAULT;1.1;AES256</span><br><span class="line">         34306239353764383165316133636366633131366332326362323830613638633263353638656562</span><br><span class="line">     3736396133633063623863623739326132383062373533300a613036646534353033363134383532          66333366633537643737333065313866396137663965393530653262616132633236663561336164</span><br><span class="line">     3633393361616162340a343931653762613765366339356632366135326464336532313562643432</span><br><span class="line">     38386533653231626365303837653831346263646464633430643765396239366334</span><br><span class="line">Encryption successful</span><br></pre></td></tr></table></figure><p>最后修改主机文件<code>/etc/ansible/hosts</code>配置(使用yaml风格)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">all:</span> </span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="attr">node1:</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.5</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">ansible_ssh_pass:</span> <span class="type">!vault</span> <span class="string">|</span></span><br><span class="line"><span class="string">         $ANSIBLE_VAULT;1.1;AES256</span></span><br><span class="line"><span class="string">         35643865643061373962376261653765333233333839353937643134643437396262646338363965</span></span><br><span class="line"><span class="string">         3366666561653365663164386536363963353961313362350a626662366361303434383665306531</span></span><br><span class="line"><span class="string">         34386161363965363634626663343832363664623139336665313131623732343437633439386264</span></span><br><span class="line"><span class="string">         6534663962663337640a363166383137613835383966396431326165663732646337653235646239</span></span><br><span class="line"><span class="string">         3534</span></span><br><span class="line"><span class="string"></span>    <span class="attr">node2:</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.6</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">ansible_ssh_pass:</span> <span class="type">!vault</span> <span class="string">|</span></span><br><span class="line"><span class="string">         $ANSIBLE_VAULT;1.1;AES256</span></span><br><span class="line"><span class="string">         35643865643061373962376261653765333233333839353937643134643437396262646338363965</span></span><br><span class="line"><span class="string">         3366666561653365663164386536363963353961313362350a626662366361303434383665306531</span></span><br><span class="line"><span class="string">         34386161363965363634626663343832363664623139336665313131623732343437633439386264</span></span><br><span class="line"><span class="string">         6534663962663337640a363166383137613835383966396431326165663732646337653235646239</span></span><br><span class="line"><span class="string">         3534</span></span><br><span class="line"><span class="string"></span>    <span class="attr">node3:</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.7</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">ansible_ssh_pass:</span> <span class="type">!vault</span> <span class="string">|</span></span><br><span class="line"><span class="string">         $ANSIBLE_VAULT;1.1;AES256</span></span><br><span class="line"><span class="string">         35643865643061373962376261653765333233333839353937643134643437396262646338363965</span></span><br><span class="line"><span class="string">         3366666561653365663164386536363963353961313362350a626662366361303434383665306531</span></span><br><span class="line"><span class="string">         34386161363965363634626663343832363664623139336665313131623732343437633439386264</span></span><br><span class="line"><span class="string">         6534663962663337640a363166383137613835383966396431326165663732646337653235646239</span></span><br><span class="line"><span class="string">         3534</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>yaml格式参考<a href="https://docs.ansible.com/ansible-core/devel/reference_appendices/YAMLSyntax.html">官网</a></p><p>这里的ssh端口还有另一种写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible_port: 22</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ccb07fbb3515:/etc/ansible<span class="comment"># ansible all -m ping</span></span><br><span class="line">node1 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node3 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">node2 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;ping&quot;</span>: <span class="string">&quot;pong&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启其中一个主机的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ccb07fbb3515:/etc/ansible<span class="comment"># ansible node1 -m command -a &quot;systemctl restart cron&quot;</span></span><br><span class="line">node1 | CHANGED | rc=0 &gt;&gt;</span><br></pre></td></tr></table></figure><p>查看所有主机的内核版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">&quot;uname -a&quot;</span></span><br><span class="line"></span><br><span class="line">node1 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Linux cd03436b2424 4.18.0-147.5.1.el8_1.x86_64 <span class="comment">#1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">node2 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Linux e8e005edfab9 4.18.0-147.5.1.el8_1.x86_64 <span class="comment">#1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">node3 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Linux 88bf589578f5 4.18.0-147.5.1.el8_1.x86_64 <span class="comment">#1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><h3 id="最后还可以免密登录"><a href="#最后还可以免密登录" class="headerlink" title="最后还可以免密登录"></a>最后还可以免密登录</h3><p>主控端使用ssh-keygen生成公钥和私钥，通过sshpass传递到被控端。输入被控端用户名和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;input user: &#x27;</span> USER</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line"><span class="built_in">read</span> -s -p <span class="string">&#x27;input pass: &#x27;</span> PASS</span><br><span class="line"><span class="built_in">rm</span> -f /root/.ssh/id_rsa</span><br><span class="line">(ssh-keygen -P <span class="string">&quot;&quot;</span> -f /root/.ssh/id_rsa) &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;5..7&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    IP_host=172.18.0.<span class="variable">$&#123;i&#125;</span></span><br><span class="line">    ping  -c 1 -w 1 <span class="variable">$&#123;IP_host&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        (sshpass -p <span class="variable">$&#123;PASS&#125;</span> ssh-copy-id -o StrictHostKeyChecking=no <span class="variable">$&#123;IP_host&#125;</span>) &amp;&gt;/dev/null</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\e[1;32m <span class="variable">$&#123;IP_host&#125;</span>    ok \e[0m&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>然后ansible的配置文件hosts里可以不写密码了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">web:</span> <span class="comment">#组名1</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="attr">node1:</span> <span class="comment">#被控主机1</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.5</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line">    <span class="attr">node2:</span> <span class="comment">#被控主机2</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.6</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line"><span class="attr">apache:</span> <span class="comment">#组名2</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="attr">node3:</span> <span class="comment">#被控主机3</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.7</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line">    <span class="attr">node4:</span> <span class="comment">#被控主机4</span></span><br><span class="line">      <span class="attr">ansible_host:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.8</span></span><br><span class="line">      <span class="attr">ansible_ssh_port:</span> <span class="number">22</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="Ansible参数补全功能"><a href="#Ansible参数补全功能" class="headerlink" title="Ansible参数补全功能"></a><strong>Ansible参数补全功能</strong></h2><p>从Ansible 2.9版本开始，ansible支持命令的选项补全功能，它依赖于python的argcomplete插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aptitude install python-argcomplete -y <span class="comment">#安装</span></span><br><span class="line">activate-global-python-argcomplete   <span class="comment">#激活</span></span><br></pre></td></tr></table></figure><p>激活后，就可以按两次tab补全命令和选项了。</p><h2 id="ansible升级到特定版本"><a href="#ansible升级到特定版本" class="headerlink" title="ansible升级到特定版本"></a>ansible升级到特定版本</h2><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>查看当前版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible --version</span><br><span class="line">ansible 2.7.7</span><br></pre></td></tr></table></figure><p>安装debain包管理器<code>aptitude</code>,它可以自动解决包依赖问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install aptitude -y</span><br></pre></td></tr></table></figure><p>卸载旧版本的ansible</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude remove ansible*</span><br></pre></td></tr></table></figure><p>查看ansible依赖包是否没卸载干净</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list | grep ansible*</span><br></pre></td></tr></table></figure><h3 id="安装新版本"><a href="#安装新版本" class="headerlink" title="安装新版本"></a>安装新版本</h3><p>debain 系统下ansible所有版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://packages.debian.org/buster-backports/all/ansible/download</span><br></pre></td></tr></table></figure><p>本次下载2.9.16版本的安装包进行升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.cn.debian.org/debian/pool/main/a/ansible/ansible_2.9.16+dfsg-1~bpo10+2_all.deb</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude install ansible_2.9.16+dfsg-1~bpo10+2_all.deb</span><br></pre></td></tr></table></figure><p>最新版支持<code>python3</code>，可以下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude install python3</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ansible --version </span><br><span class="line">ansible 2.9.16</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [<span class="string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class="string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class="line">  ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 3.7.3 (default, Jan 22 2021, 20:04:44) [GCC 8.3.0]</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="关于debain10系统鼠标右键粘连的解决方法"><a href="#关于debain10系统鼠标右键粘连的解决方法" class="headerlink" title="关于debain10系统鼠标右键粘连的解决方法"></a>关于<code>debain10系统</code>鼠标右键粘连的解决方法</h3><p>编辑<code> vim</code> 的默认配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/share/vim/vim81/defaults.vim</span><br><span class="line"><span class="comment">#第79行</span></span><br><span class="line"><span class="keyword">if</span> has(<span class="string">&#x27;mouse&#x27;</span>)</span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line">endif</span><br><span class="line"><span class="comment">#set mouse=a 改为set mouse-=a</span></span><br><span class="line">保存退出</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于tcp的简单套接字通信</title>
      <link href="/2022/04/11/%E5%9F%BA%E4%BA%8Etcp%E7%9A%84%E7%AE%80%E5%8D%95%E5%A5%97%E6%8E%A5%E5%AD%97%E9%80%9A%E4%BF%A1/"/>
      <url>/2022/04/11/%E5%9F%BA%E4%BA%8Etcp%E7%9A%84%E7%AE%80%E5%8D%95%E5%A5%97%E6%8E%A5%E5%AD%97%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="简单套接字通信"><a href="#简单套接字通信" class="headerlink" title="简单套接字通信"></a>简单套接字通信</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="comment">#买手机</span></span><br><span class="line">phone = socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="comment">#tcp协议</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#绑定手机</span></span><br><span class="line"><span class="comment"># phone.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)</span></span><br><span class="line">phone.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>)) <span class="comment">#0-65535</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开机</span></span><br><span class="line">phone.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#等待电话连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;staring....&#x27;</span>)</span><br><span class="line">conn, client_addr=phone.accept() <span class="comment">#(conn,client_addr)  .accept()会阻塞，等待建立连接。</span></span><br><span class="line"><span class="built_in">print</span>(conn, client_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#收、发消息</span></span><br><span class="line">data = conn.recv(<span class="number">1024</span>) <span class="comment">#1024bytes? .recv()也会阻塞。等着接收数据。</span></span><br><span class="line">conn.send(data.upper()) <span class="comment">#.send()不会阻塞，只是发给缓存就结束了。</span></span><br><span class="line"><span class="comment">#挂电话连接</span></span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#关机</span></span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment">#买手机</span></span><br><span class="line">phone=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment">#拨电话</span></span><br><span class="line">phone.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#发收消息</span></span><br><span class="line">phone.send(<span class="string">&quot;hello&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">data = phone.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂电话</span></span><br><span class="line">phone.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line">staring....</span><br><span class="line">&lt;socket.socket fd=<span class="number">360</span>, family=AddressFamily.AF_INET, <span class="built_in">type</span>=SocketKind.SOCK_STREAM, proto=<span class="number">0</span>, laddr=(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>), raddr=(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18455</span>)&gt; (<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18455</span>)</span><br><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="string">b&#x27;HELLO&#x27;</span></span><br></pre></td></tr></table></figure><p>优化：加上通信循环</p><p>服务端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">phone = socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="comment">#tcp协议</span></span><br><span class="line"><span class="comment"># phone.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)</span></span><br><span class="line">phone.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>)) <span class="comment">#0-65535</span></span><br><span class="line">phone.listen(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;staring....&#x27;</span>)</span><br><span class="line">conn, client_addr=phone.accept() <span class="comment">#(conn,client_addr)</span></span><br><span class="line"><span class="built_in">print</span>(conn, client_addr)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = conn.recv(<span class="number">1024</span>) <span class="comment">#1024bytes?</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;客户端信息&#x27;</span>, data)</span><br><span class="line">    conn.send(data.upper())</span><br><span class="line"></span><br><span class="line">conn.close()</span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">phone=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">phone.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#通信循环</span></span><br><span class="line">    msg=<span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg: <span class="keyword">continue</span>  <span class="comment">#防止发送空信息</span></span><br><span class="line">    phone.send(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    data = phone.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p>防止服务端死掉，添加链接循环。并捕捉异常信号，防止客户端突然断掉导致服务端死掉。相当于服务端释放无效链接。</p><p>服务端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">phone = socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="comment">#tcp协议</span></span><br><span class="line"><span class="comment"># phone.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)</span></span><br><span class="line">phone.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>)) <span class="comment">#0-65535</span></span><br><span class="line">phone.listen(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;staring....&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#链接循环</span></span><br><span class="line">    conn, client_addr=phone.accept() <span class="comment">#(conn,client_addr)</span></span><br><span class="line">    <span class="built_in">print</span>(client_addr)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#通信循环</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = conn.recv(<span class="number">1024</span>) <span class="comment">#1024bytes?</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:<span class="keyword">break</span> <span class="comment">#针对的是Linux系统，因为linux不会抛异常。windows会抛异常。</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;客户端信息&#x27;</span>, data)</span><br><span class="line">            conn.send(data.upper())</span><br><span class="line">        <span class="keyword">except</span> ConnectionResetError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    conn.close()</span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">phone=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">phone.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9000</span>))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#通信循环</span></span><br><span class="line">    msg=<span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg: <span class="keyword">continue</span>  <span class="comment">#防止发送空信息</span></span><br><span class="line">    phone.send(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    data = phone.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">phone.close()</span><br></pre></td></tr></table></figure><p>效果，客户端突然死掉后，服务端会释放链接。当再次有新客户端来连接时，服务端会再开新链接，释放旧链接。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line">staring....</span><br><span class="line">(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18939</span>)</span><br><span class="line">(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18940</span>)</span><br><span class="line">(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18941</span>)</span><br><span class="line">(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">18944</span>)</span><br><span class="line"><span class="comment">#客户端</span></span><br><span class="line">&gt;&gt;: </span><br><span class="line">Process finished <span class="keyword">with</span> exit code -<span class="number">1</span></span><br><span class="line"><span class="comment">#windows会查到链接</span></span><br><span class="line"> TCP    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>         <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">18944</span>        ESTABLISHED</span><br><span class="line"> TCP    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">18944</span>        <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>         ESTABLISHED</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合的相关特性</title>
      <link href="/2022/04/11/%E9%9B%86%E5%90%88%E7%9A%84%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/"/>
      <url>/2022/04/11/%E9%9B%86%E5%90%88%E7%9A%84%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="集合的相关特性"><a href="#集合的相关特性" class="headerlink" title="集合的相关特性"></a>集合的相关特性</h2><h3 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(s) <span class="comment">#&#123;1,2,3,4,5&#125;</span></span><br></pre></td></tr></table></figure><p>确保不要将集合与字典混淆，字典也用花括号括起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_set = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; </span><br><span class="line">my_dict = &#123;<span class="string">&quot;term&quot;</span>: <span class="string">&quot;definition&quot;</span>, <span class="string">&quot;term2&quot;</span>: <span class="string">&quot;definition2&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set()"></a>set()</h3><p><strong>将其他数据类型转换成集合类型</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">s = <span class="built_in">set</span>(l)</span><br><span class="line"><span class="built_in">print</span>(s) <span class="comment">#&#123;1,2,3,4&#125;</span></span><br></pre></td></tr></table></figure><h3 id="并集-union"><a href="#并集-union" class="headerlink" title="并集(.union())"></a>并集(.union())</h3><p>联合是一个新集合，包含所有原始集合中的元素。这可以被认为是两个或多个集合的总和。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">c = a.union(b)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#&#123;1,2,3,4,5&#125;</span></span><br></pre></td></tr></table></figure><h3 id="交集-intersection"><a href="#交集-intersection" class="headerlink" title="交集(.intersection())"></a>交集(.intersection())</h3><p>交集标识多个集合之间的共同元素或重叠。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = a.intersection(b) </span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#&#123;3&#125;</span></span><br></pre></td></tr></table></figure><h3 id="差集-difference"><a href="#差集-difference" class="headerlink" title="差集(.difference())"></a>差集(.difference())</h3><p>差异标识存在于基集中而不存在于另一个基集中的值。a集合中有而b集合中没有的部分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = a.difference(b)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#&#123;1,2&#125;</span></span><br></pre></td></tr></table></figure><h3 id="对称差集-symmetric-difference"><a href="#对称差集-symmetric-difference" class="headerlink" title="对称差集(.symmetric_difference)"></a>对称差集(.symmetric_difference)</h3><p>从并集中减去交集剩下的就是对称差集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = a.symmetric_difference(b)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#&#123;1,2,4,5&#125;</span></span><br></pre></td></tr></table></figure><h3 id="子集判断"><a href="#子集判断" class="headerlink" title="子集判断"></a>子集判断</h3><p><code>.issubset()</code>和<code>issuperset()</code>方法返回布尔值<code>True</code>或者<code>False</code></p><p>子集是一个集合，其中所有元素都存在于更大的集合中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = a.issubset(b)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#a是b的子集吗？ 结果是 False</span></span><br></pre></td></tr></table></figure><p>a、b集合调换位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = b.issubset(a)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#b是a的子集吗？ 结果是 True</span></span><br></pre></td></tr></table></figure><h3 id="超集判断"><a href="#超集判断" class="headerlink" title="超集判断"></a>超集判断</h3><p>超集与子集相反。如果提供的参数的所有元素都存在于其中，则基集被声明为超集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">b = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125; </span><br><span class="line">c = a.issuperset(b) </span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment"># True</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常</title>
      <link href="/2022/04/09/%E5%BC%82%E5%B8%B8/"/>
      <url>/2022/04/09/%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="什么是异常？"><a href="#什么是异常？" class="headerlink" title="什么是异常？"></a>什么是异常？</h3><p>异常是错误发生的信号，一旦程序出错，就会产生一个异常，应用程序未处理该异常，异常便会抛出，程序随之终止。</p><h3 id="常见异常类型"><a href="#常见异常类型" class="headerlink" title="常见异常类型"></a>常见异常类型</h3><h4 id="语法错误应该在程序运行之前就修正"><a href="#语法错误应该在程序运行之前就修正" class="headerlink" title="语法错误应该在程序运行之前就修正"></a>语法错误应该在程序运行之前就修正</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>&gt;<span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;xxxxxx&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="逻辑错误"><a href="#逻辑错误" class="headerlink" title="逻辑错误"></a>逻辑错误</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x <span class="comment">#NameError</span></span><br><span class="line">l=[<span class="number">10000</span>] <span class="comment">#IndexError</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">foo</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">Foo.x <span class="comment">#AttributeError:</span></span><br><span class="line">k=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="number">1</span>&#125;</span><br><span class="line">k[<span class="string">&#x27;y&#x27;</span>] <span class="comment">#KeyError</span></span><br><span class="line"></span><br><span class="line">res1=<span class="number">1</span>/<span class="number">0</span></span><br><span class="line">res2=<span class="number">1</span>+<span class="string">&#x27;str&#x27;</span> <span class="comment">#ZeroDivisionError:无法完成计算</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">pass</span> <span class="comment">#TypeError:int类型不可迭代</span></span><br><span class="line"></span><br><span class="line">num=<span class="built_in">input</span>(<span class="string">&quot;&gt;&gt;: &quot;</span>) <span class="comment">#输入hello</span></span><br><span class="line"><span class="built_in">int</span>(num) <span class="comment">#ValueError</span></span><br></pre></td></tr></table></figure><h3 id="如何处理异常"><a href="#如何处理异常" class="headerlink" title="如何处理异常"></a>如何处理异常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本语法为</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    被检测的代码块</span><br><span class="line"><span class="keyword">except</span> 异常类型：</span><br><span class="line">    <span class="keyword">try</span>中一旦检测到异常，就执行这个位置的逻辑</span><br><span class="line"><span class="comment">#举例</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f=<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>)</span><br><span class="line">    g=(line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> f)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(g))</span><br><span class="line"><span class="keyword">except</span> StopIteration:</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p>异常类只能用来处理指定的异常情况，如果非指定异常则无法处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(s1)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e: <span class="comment"># 未捕获到异常，程序直接报错</span></span><br><span class="line">    <span class="built_in">print</span> e</span><br></pre></td></tr></table></figure><h4 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(s1)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p><strong>万能异常Exception</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(s1)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><h4 id="多分支异常与万能异常"><a href="#多分支异常与万能异常" class="headerlink" title="多分支异常与万能异常"></a>多分支异常与万能异常</h4><p>如果你想要的效果是，无论出现什么异常，我们统一丢弃，或者使用同一段代码逻辑去处理他们。</p><p>如果你想要的效果是，对于不同的异常我们需要定制不同的处理逻辑，那就需要用到多分支了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(s1)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><h4 id="异常的其他结构"><a href="#异常的其他结构" class="headerlink" title="异常的其他结构"></a>异常的其他结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(s1)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="comment">#except Exception as e:</span></span><br><span class="line"><span class="comment">#    print(e)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try内代码块没有异常则执行我&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;无论异常与否,都会执行该模块,通常是进行清理工作&#x27;</span>)</span><br></pre></td></tr></table></figure><p>主动触发异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> TypeError(<span class="string">&#x27;类型错误&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">EgonException</span>(<span class="title class_ inherited__">BaseException</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,msg</span>):</span><br><span class="line">        self.msg=msg</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.msg</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> EgonException(<span class="string">&#x27;类型错误&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> EgonException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>断言:assert 条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">1</span>  </span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span></span><br></pre></td></tr></table></figure><p>总结<code>try..except</code></p><p>1：把错误处理和真正的工作分开来<br>2：代码更易组织，更清晰，复杂的工作任务更容易实现<br>3：毫无疑问，更安全了，不至于由于一些小的疏忽而使程序意外崩溃了</p><h4 id="多分支异常处理"><a href="#多分支异常处理" class="headerlink" title="多分支异常处理"></a>多分支异常处理</h4><p>功能：判断打开的文件是否存在，不存在则捕获异常，存在则每2秒逐行读取文件内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;123.txt&quot;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = f.readline()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(content) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;文件关闭&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;发生异常。。。。&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装</title>
      <link href="/2022/04/09/%E5%B0%81%E8%A3%85/"/>
      <url>/2022/04/09/%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="封装与反射"><a href="#封装与反射" class="headerlink" title="封装与反射"></a>封装与反射</h2><p>片面理解：封装相当于隐藏。</p><h3 id="如何将属性隐藏（设置成私有）？"><a href="#如何将属性隐藏（设置成私有）？" class="headerlink" title="如何将属性隐藏（设置成私有）？"></a>如何将属性隐藏（设置成私有）？</h3><p>用双下划线开头方式将属性隐藏起来。</p><p>1.<code>__</code>开头的属性只是一种语法意义上的变形，并不会真的限制外部的访问。<code>_类名__属性名</code>可以访问但毫无意义。</p><p>2.这种变形只在类的定义阶段发送一次，类定义之后再新增的<code>__</code>开头的属性不会变形。</p><p>3.这种隐藏只对外不对内，因为类内部定义的属性在类定义阶段统一发生变形。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    __N=<span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.__X=<span class="number">10</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__foo</span>(<span class="params">self</span>):    <span class="comment">#相当于_Foo__foo()</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from A&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bar</span>(<span class="params">self</span>):</span><br><span class="line">        self.__foo()</span><br><span class="line"></span><br><span class="line">f = Foo() <span class="comment">#类实例化，f是对象。</span></span><br><span class="line">f.bar() <span class="comment">#结果 &#x27;from A&#x27;。内部调用了__foo()验证第3条。</span></span><br><span class="line">f.__foo() <span class="comment">#报错。AttributeError: &#x27;Foo&#x27; object has no attribute &#x27;__foo&#x27;，属性被隐藏，外部不可调用。验证第一条外部不能访问隐藏属性。</span></span><br><span class="line"><span class="comment"># 可以用f._Foo__foo()调用，但毫无意义。验证第1条。</span></span><br><span class="line"></span><br><span class="line">f.__N=<span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(f.__N) <span class="comment">#验证第二条。类定义时已经定义了__N=0,而__N=10是在类定义之后。此时可以调用__N.结果为10</span></span><br></pre></td></tr></table></figure><p>封装应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        <span class="comment"># self.__name=name</span></span><br><span class="line">        <span class="comment"># self.__age=age</span></span><br><span class="line">        self.set_info(name,age)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;姓名：&lt;%s&gt; 年龄：&lt;%s&gt;&quot;</span>%(self.__name,self.__age))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_info</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(name) <span class="keyword">is</span> <span class="keyword">not</span> <span class="built_in">str</span>: <span class="comment">#判断name是否是str类型</span></span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;name must be str&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(age) <span class="keyword">is</span> <span class="keyword">not</span> <span class="built_in">int</span>: <span class="comment">#判断age是否是int类型</span></span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;age must be int&#x27;</span>)</span><br><span class="line">        self.__name=name</span><br><span class="line">        self.__age=age</span><br><span class="line">p=People(<span class="number">12312323</span>,<span class="number">18</span>) <span class="comment">#TypeError: name must be str</span></span><br><span class="line">p.tell_info()</span><br></pre></td></tr></table></figure><p>核心思想：通过设置<code>set_info()</code>方法统一接口，把<code>name</code>、<code>age</code>隐藏。用户只需要调用<code>tell_info()</code>方法，不需要了解其中的过程。</p><h3 id="封装之property"><a href="#封装之property" class="headerlink" title="封装之property"></a>封装之property</h3><p><code>property</code>是一种特殊属性，访问它时会执行一段功能（函数）然后返回值。</p><p>成人的<code>BMI数值</code>：</p><p>过轻：低于18.5</p><p>正常：18.5-23.9</p><p>过重：24-27</p><p>肥胖：28-32</p><p>非常肥胖, 高于32</p><p>　　<code>体质指数（BMI）=体重（kg）÷身高^2（m）</code></p><p>　　<code>EX：70kg÷（1.75×1.75）=22.86</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,height,weight</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.height=height</span><br><span class="line">        self.weight=weight</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bmi</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.weight / (self.height ** <span class="number">2</span>)</span><br><span class="line">jack=People(<span class="string">&#x27;jack&#x27;</span>,<span class="number">18</span>,<span class="number">1.80</span>,<span class="number">75</span>)</span><br><span class="line"><span class="comment"># jack.height=1.82</span></span><br><span class="line"><span class="built_in">print</span>(jack.bmi)</span><br></pre></td></tr></table></figure><p><code>bmi</code>应该是不断变化的，是一种数据属性。</p><h4 id="为什么要用property"><a href="#为什么要用property" class="headerlink" title="为什么要用property"></a>为什么要用property</h4><p>将一个类的函数定义成特性以后，对象再去使用的时候<code>ojb.name</code>，根本无法察觉自己的<code>name</code>是执行了一个而函数然后计算出来，这种特性的使用方式遵循了统一访问的原则。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.__name = name <span class="comment">#将所有的数据属性都隐藏起来</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__name <span class="comment">#obj.name访问的是self.__name（这也是真实值的存放位置）</span></span><br><span class="line">jack=Pepole(<span class="string">&#x27;jack&#x27;</span>) <span class="comment">#类实例化</span></span><br><span class="line"><span class="built_in">print</span>(jack.name) <span class="comment">#jack</span></span><br></pre></td></tr></table></figure><p>此时名字不能修改,修改会报异常。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jack.name=<span class="string">&#x27;smith&#x27;</span> <span class="comment">#AttributeError: can&#x27;t set attribute</span></span><br></pre></td></tr></table></figure><p>怎样可以修改呢？</p><p>设置<code>同名的属性.setter()</code>方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.__name = name </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self,obj</span>): </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(obj) <span class="keyword">is</span> <span class="keyword">not</span> <span class="built_in">str</span>: <span class="comment">#在设定值之前进行类型检查</span></span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;name must be str&quot;</span>)</span><br><span class="line">        self.__name=obj</span><br><span class="line">        </span><br><span class="line">jack=Pepole(<span class="string">&#x27;jack&#x27;</span>)</span><br><span class="line">jack.name=<span class="string">&#x27;smith&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(jack.name) <span class="comment">#smith </span></span><br></pre></td></tr></table></figure><p>如何删除属性呢？</p><p>添加<code>同名属性.deleter</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.__name = name </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self,obj</span>): </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(obj) <span class="keyword">is</span> <span class="keyword">not</span> <span class="built_in">str</span>: <span class="comment">#在设定值之前进行类型检查</span></span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&quot;name must be str&quot;</span>)</span><br><span class="line">        self.__name=obj</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @name.deleter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self,obj</span>):</span><br><span class="line">        <span class="keyword">del</span> self.__name</span><br><span class="line">jack=Pepole(<span class="string">&#x27;jack&#x27;</span>)</span><br><span class="line">jack.name=<span class="string">&#x27;smith&#x27;</span></span><br><span class="line"><span class="keyword">del</span> jack.name </span><br><span class="line"><span class="built_in">print</span>(jack.name) <span class="comment">#AttributeError: &#x27;People&#x27; object has no attribute &#x27;_People__name&#x27; 成功删除了。 </span></span><br></pre></td></tr></table></figure><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h3 id="内置函数补充"><a href="#内置函数补充" class="headerlink" title="内置函数补充"></a>内置函数补充</h3><p><code>isinstance</code>判断类型</p><p><code>issubclass</code>:判断是不是子类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">l=[]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(l) <span class="keyword">is</span> <span class="built_in">list</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(l,<span class="built_in">list</span>)) <span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bar</span>(<span class="title class_ inherited__">Foo</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(Bar,Foo)) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><p>反射</p><p>通过字符串映射或修改程序运行时的状态、属性、方法有以下4个方法：</p><p><code>hasattr(obj,name_str)</code>:判断一个对象里是否有对应的<code>name_str</code>字符串的方法</p><p><code>setattr(obj,y,v)</code>：设置属性,相当于<code>obj.y=v</code></p><p><code>getattr(obj,name_str,default=None)</code>：根据字符串<code>name_str</code>去获取<code>obj对象</code>里的方法内存地址</p><p><code>delattr(x,y)</code>：删除某种属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from f1&#x27;</span>)</span><br><span class="line">obj=Foo(<span class="string">&#x27;jack&#x27;</span>)</span><br><span class="line"><span class="comment"># print(obj.name) #等同于obj.__dict__[&#x27;name&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#hasattr</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(obj,<span class="string">&#x27;name&#x27;</span>)) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(obj,<span class="string">&#x27;f1&#x27;</span>)) <span class="comment">#True</span></span><br><span class="line"><span class="comment">#setattr</span></span><br><span class="line"><span class="built_in">setattr</span>(obj,<span class="string">&#x27;x&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(obj.__dict__) <span class="comment">#结果是：&#123;&#x27;name&#x27;: &#x27;jack&#x27;, &#x27;x&#x27;: 1&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#getattr</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">hasattr</span>(obj, <span class="string">&#x27;f1&#x27;</span>):</span><br><span class="line">    f = <span class="built_in">getattr</span>(obj, <span class="string">&#x27;f1&#x27;</span>) <span class="comment"># f=obj.f1</span></span><br><span class="line">    <span class="comment"># print(f) #&lt;bound method Foo.f1 of &lt;__main__.Foo object at 0x000002A8A3677DC0&gt;&gt;</span></span><br><span class="line">    f() <span class="comment">#from f1</span></span><br><span class="line"><span class="comment">#delattr</span></span><br><span class="line"><span class="built_in">delattr</span>(obj,<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(obj.__dict__) <span class="comment">#&#123;&#x27;x&#x27;: 1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="类的内置方法"><a href="#类的内置方法" class="headerlink" title="类的内置方法"></a>类的内置方法</h2><p><code>__str__</code>：改变对象字符串显示</p><p>不使用<code>__str__</code>显示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">jack=People(<span class="string">&#x27;jack&#x27;</span>,<span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(jack) <span class="comment">#&lt;__main__.People object at 0x000001D7DEF31310&gt;</span></span><br></pre></td></tr></table></figure><p>使用之后可以自定义显示内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;name: %s,age: %s&gt;&#x27;</span> %(self.name,self.age)</span><br><span class="line"></span><br><span class="line">jack=People(<span class="string">&#x27;jack&#x27;</span>,<span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(jack) <span class="comment">#&lt;name: jack,age: 18&gt;</span></span><br></pre></td></tr></table></figure><p><code>__del__</code>：析构方法，当对象在内存种被释放时，自动触发执行。</p><p>注：如果产生的对象仅仅只是python程序级别的（用户级），那么无需定义<code>__del__</code>,如果产生的对象的同时还会向操作系统发起系统调用，即一个对象有用户级与内核级两种资源，比如（打开一个文件，创建一个数据库链接），则必须在清除对象的同时回收系统资源，这就用到了<code>__del__</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;执行我啦&#x27;</span>)</span><br><span class="line">f1=Foo()</span><br><span class="line"><span class="keyword">del</span> f1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行我啦</span><br><span class="line">------&gt;</span><br></pre></td></tr></table></figure><p>如果去掉<code>del f1</code>那么结果又不一样了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;执行我啦&#x27;</span>)</span><br><span class="line">f1=Foo()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">------&gt;</span><br><span class="line">执行我啦</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsftpd相关配置</title>
      <link href="/2022/04/02/vsftpd%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/04/02/vsftpd%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="ftp基本配置"><a href="#ftp基本配置" class="headerlink" title="ftp基本配置"></a>ftp基本配置</h3><p>系统：<code>centos7</code></p><p>安装<code>vsftpd 、ftp客户端</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd -y </span><br><span class="line">yum install ftp -y</span><br><span class="line">[root@localhost vsftpd]# rpm -qa | grep ftp</span><br><span class="line">vsftpd-sysvinit-3.0.2-29.el7_9.x86_64</span><br><span class="line">vsftpd-3.0.2-29.el7_9.x86_64</span><br><span class="line">ftp-0.17-67.el7.x86_64</span><br></pre></td></tr></table></figure><p>防火墙设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-services //查看防火墙允许的服务。</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=ftp --permanent //永久开放ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=20/tcp --permanent</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=21/tcp --permanent //允许外网访问</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload //重新载入配置</span><br><span class="line"></span><br><span class="line">setsebool ftpd_full_access 1 //selinux设置</span><br><span class="line"></span><br><span class="line">setsebool tftp_home_dir 1</span><br></pre></td></tr></table></figure><p>创建用户，登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">useradd test</span><br><span class="line"></span><br><span class="line">passwd test</span><br><span class="line"></span><br><span class="line">ftp localhost #ftp本地测试</span><br><span class="line">[root@localhost vsftpd]# ftp localhost</span><br><span class="line">Trying ::1...</span><br><span class="line">ftp: connect to address ::1Connection refused</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost (127.0.0.1).</span><br><span class="line">220 Welcome to blah FTP service.</span><br><span class="line">Name (localhost:root): test</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line"><span class="meta">ftp&gt; </span></span><br></pre></td></tr></table></figure><p>局域网测试：</p><p>虚拟机<code>IP:10.4.7.140 ftp：21</code>被动模式</p><p>接下来在<code>windows平台用FileZilla Client</code>软件登陆.</p><p><img src="/img/postimages/filezila-1.webp" alt="filezila-1"></p><p><img src="/img/postimages/filezila-2.webp" alt="filezila-2"></p><p>连接成功：</p><p><img src="/img/postimages/filezila-success.webp" alt="filezila-success"></p><p>系统账号默认登陆是在账号的家目录，可以切换到其它目录。</p><p>到这里，基本的<code>vsftpd</code>搭建成功。</p><p>开机自启<code>vsftpd</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable vsftpd</span><br></pre></td></tr></table></figure><h3 id="vsftpd-被动模式普通用户登录配置"><a href="#vsftpd-被动模式普通用户登录配置" class="headerlink" title="vsftpd 被动模式普通用户登录配置"></a>vsftpd 被动模式普通用户登录配置</h3><p>主程序：<code>/usr/sbin/vsftpd</code></p><p>主配置文件：<code>/etc/vsftpd/vsftpd.conf</code></p><p>数据根目录：<code>/var/ftp</code></p><p>就算是经验丰富的老手也会做好备份工作</p><p><code>cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO //设定不允许匿名访问</span><br><span class="line"></span><br><span class="line">local_enable=YES //设定本地用户可以访问</span><br><span class="line"></span><br><span class="line">write_enable=YES //设定可以进行写操作</span><br><span class="line"></span><br><span class="line">local_umask=022 //设定上传后文件的权限掩码</span><br><span class="line"></span><br><span class="line">anon_upload_enable=NO //禁止匿名用户上传</span><br><span class="line"></span><br><span class="line">anon_mkdir_write_enable=NO //禁止匿名用户建立目录</span><br><span class="line"></span><br><span class="line">dirmessage_enable=YES //设定开启目录标语功能</span><br><span class="line"></span><br><span class="line">xferlog_enable=YES //设定开启日志记录功能</span><br><span class="line"></span><br><span class="line">connect_from_port_20=YES //设定端口20进行数据连接(主动模式)</span><br><span class="line"></span><br><span class="line">chown_uploads=NO //设定禁止上传文件更改宿主</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">chown_username=whoever</span></span><br><span class="line"></span><br><span class="line">xferlog_file=/var/log/xferlog //设定Vsftpd的服务日志保存路径。</span><br><span class="line"></span><br><span class="line">xferlog_std_format=YES //设定日志使用标准的记录格式。</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">idle_session_timeout=600 //设定空闲连接超时时间，单位为秒，这里默认</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">data_connection_timeout=120 //设定空闲连接超时时间，单位为秒，这里默认。</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">nopriv_user=ftptest</span></span><br><span class="line"></span><br><span class="line">async_abor_enable=YES //设定支持异步传输功能。</span><br><span class="line"></span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line"></span><br><span class="line">ascii_download_enable=YES //设定支持ASCII模式的上传和下载功能。</span><br><span class="line"></span><br><span class="line">ftpd_banner=Welcome to blah FTP service. //设定Vsftpd的登陆标语。</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">deny_email_enable=YES // (default follows)</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">banned_email_file=/etc/vsftpd/banned_emails</span></span><br><span class="line"></span><br><span class="line">chroot_local_user=YES</span><br><span class="line"></span><br><span class="line">chroot_list_enable=YES //禁止用户登出自己的FTP主目录。</span><br><span class="line"></span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list //这个文件里的用户不受限制，不限制在本目录。</span><br><span class="line"></span><br><span class="line">ls_recurse_enable=NO //禁止用户登陆FTP后使用&quot;ls -R&quot;的命令。</span><br><span class="line"></span><br><span class="line">该命令会对服务器性能造成巨大开销。</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">listen=NO</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">listen_ipv6=YES</span></span><br><span class="line"></span><br><span class="line">userlist_enable=YES //设定userlist_file中的用户将不得使用FTP。</span><br><span class="line"></span><br><span class="line">tcp_wrappers=YES //设定支持TCP Wrappers</span><br><span class="line"></span><br><span class="line">allow_writeable_chroot=YES //这个可以解决chroot权限问题</span><br><span class="line"></span><br><span class="line">pasv_enable=YES</span><br><span class="line"></span><br><span class="line">pasv_min_port=40000</span><br><span class="line"></span><br><span class="line">pasv_max_port=40080</span><br><span class="line"></span><br><span class="line">pasv_promiscuous=YES</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>systemctl restart vsftpd</code> &#x2F;&#x2F;重启<code>vsftpd服务</code></p><p><img src="/img/postimages/filezila-3.webp" alt="filezila-3"></p><p>如果登录失败提示500，需要在服务器上创建<code>chroot_lis</code>t把<code>test</code>加进列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo test &gt;&gt; /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><p><img src="/img/postimages/chroot_limit.webp" alt="chroot_limit"></p><p>创建另一个用户<code>aaa</code>。目前<code>test</code> 和<code>aaa</code>都可以登录<code>ftp</code></p><p>由于<code>test</code>加入到了<code>chroot_list</code>列表中，可以随意切换目录。而<code>aaa</code>用户不在了列表中，只能在<code>aaa用户</code>家目录中活动，不能自由切换目录。</p><p><img src="/img/postimages/test-1.webp" alt="test-1"></p><p><img src="/img/postimages/aaa-1.webp" alt="aaa-1"></p><p>————————————————</p><p>解释：<code>chroot_local_user=YES</code>将所有用户限定在主目录内，<code>chroot_list_enable=YES</code>表示要启用<code>chroot_list_file</code>, 因为<code>chroot_local_user=YES</code>，即全体用户都被“限定在主目录内”,所以总是作为“例外列表”的<code>chroot_list_file</code>这时列出的是那些<code>不会被限制在主目录下</code>的用户。</p><h3 id="vsftpd-匿名用户登录配置"><a href="#vsftpd-匿名用户登录配置" class="headerlink" title="vsftpd 匿名用户登录配置"></a>vsftpd 匿名用户登录配置</h3><p> 建立虚拟FTP用户数据库文件</p><p>建立一个虚拟用户名单文件，这个文件就是来记录<code>vsftpd</code>虚拟用户的用户名和口令的数据文件，我这里给它命名为<code>vuser.list</code>，保存在<code>/etc/vsftpd/</code>目录下。一行账号，一行密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">vim vuser.list</span></span><br><span class="line"></span><br><span class="line">vuser</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>安装<code>Berkeley DB</code> #有db_load 命令可以忽略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install libdb-utils-5.3.21-25.el7.x86_64</span><br></pre></td></tr></table></figure><p>安装后在<code>/etc/vsftpd/</code>目录下执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t hash -f vuser.list vuser.db//生成用户加密文件</span><br><span class="line">chmod 600 vuser.db //敏感文件限制只允许属主读写</span><br></pre></td></tr></table></figure><p>创建虚拟用户及虚拟用户的家目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /var/vusers -s /sbin/nologin vftp //创建系统用户vftp，并制定其家目录为/var/vusers</span><br><span class="line"></span><br><span class="line">chmod -Rf 755 /var/vusers/ //修改目录的权限使得其他用户也可以访问。</span><br></pre></td></tr></table></figure><p>建立支持虚拟用户的PAM认证文件</p><p><code>vsftpd</code>的<code>pam文件</code>在<code>/etc/pam.d/目录</code>下，先做备份工作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp vsftpd vsftpd.bak</span><br><span class="line">vim vsftpd</span><br><span class="line">重要：先注释掉所有的内容后添加以下内容：</span><br><span class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser //此句用于检查用户密码，数据库文件不要写后缀.db</span><br><span class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser //此句用于检查用户是否在有效期内，数据库支持虚拟用户的PAM认证文件。</span><br></pre></td></tr></table></figure><p>在<code>vsftpd.conf</code>中添加支持配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">guest_enable=YES //开启虚拟用户模式</span><br><span class="line"></span><br><span class="line">guest_username=vftp //指定虚拟用户账号</span><br><span class="line"></span><br><span class="line">pam_service_name=vsftpd //指定pam文件</span><br><span class="line"></span><br><span class="line">user_config_dir=/etc/vsftpd/vusers_profile //指定虚拟用户的权限配置目录。</span><br><span class="line"></span><br><span class="line">virtual_use_local_privs=NO //虚拟用户和匿名用户有相同的权限</span><br></pre></td></tr></table></figure><p>为虚拟用户设置不同的权限。</p><p><code>mkdir -p  /etc/vsftpd/vusers_profile</code>&#x2F;新建虚拟用户目录</p><p><code>vim /etc/vsftpd/vusers_profile/vuser</code>&#x2F;新建虚拟用户配置文件，文件名要和上面的虚拟用户名单里的账号名字对等。</p><p><code>mkdir -p /var/vusers/vuser</code>&#x2F;创建虚拟用户家目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">local_root=/var/vusers/vuser //虚拟账号的家目录</span><br><span class="line"></span><br><span class="line">write_enable=YES</span><br><span class="line"></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"></span><br><span class="line">local_umask=022</span><br><span class="line"></span><br><span class="line">anon_upload_enable=YES //上传权限</span><br><span class="line"></span><br><span class="line">anon_mkdir_write_enable=YES //创建文件和目录的权限</span><br><span class="line"></span><br><span class="line">anon_other_write_enable=YES //删除文件和目录的权限</span><br><span class="line"></span><br><span class="line">anon_world_readable_only=YES //当文件的“其他人”有读权限的时候可以下载</span><br><span class="line"></span><br><span class="line">download_enable=YES //下载权限</span><br></pre></td></tr></table></figure><p>保存配置，重启服务。</p><p><code>systemctl restart vsftpd</code></p><p>登录查看：</p><p><img src="/img/postimages/filezila-niming.webp" alt="filezila-niming"></p><p><img src="/img/postimages/filezila-niming-1.webp" alt="filezila-niming-1"></p><p>此处<code>/</code>指的是<code>vuser用户家目录</code>而不是根目录。</p><p>本实验中匿名用户登录后有查看下载权限，没有创建文件权限。并且限制了只能查看匿名用户的家目录，不能切换到其他目录。</p><p><code>vsftpd</code>传输模式</p><p>主动模式：服务端主动连客户端</p><p><img src="/img/postimages/ftp-%E4%B8%BB%E5%8A%A8.webp" alt="ftp-主动"></p><p>在主动模式下，FTP客户端从任意端口5150（端口号&gt;1023）发起一个FTP请求，并携带自己监听的端口号5151（发送的端口号+1&#x3D;监听端口号）；随后服务器返回确认，然后从服务器本地的20端口主动发起连接请求到客户端的监听端口5151，最后客户端返回确认。</p><p>被动模式：客户端主动连服务端</p><p><img src="/img/postimages/ftp-%E8%A2%AB%E5%8A%A8.webp" alt="ftp-被动"></p><p>在被动模式中，命令连接和数据连接都由客户端来发起，如上图所示，客户端用随机命令端口5150向服务器的21命令端口发送一个<code>PASV请求</code>，然后服务器返回数据端口3267，告诉客户端我在哪个端口监听数据连接。然后客户端向服务器的监听端口3268发起数据连接，最后服务器回复确认。</p><p><strong>vsftpd默认是被动模式。</strong>所以客户端要设置被动模式连接，如果到现在还没连接成功的看客户端有没有设置被动传输模式。</p><h4 id="FTP工作原理介绍"><a href="#FTP工作原理介绍" class="headerlink" title="FTP工作原理介绍"></a>FTP工作原理介绍</h4><p>文件传输协议：<code>File Transfer Protocol</code> 早期的三个应用级协议之一，基于<code>C/S结构</code><br>数据传输格式：二进制（默认）和文本<br>双通道协议：命令和数据连接</p><p><strong>两种模式</strong>：从服务器角度</p><ul><li>主动(PORT style)：服务器主动连接<br>命令（控制）：客户端：随机port —&gt; 服务器：21&#x2F;tcp<br>数据：客户端：随机port &lt;—服务器：20&#x2F;tcp</li><li>被动(PASV style)：客户端主动连接<br>命令（控制）：客户端：随机port —&gt; 服务器：21&#x2F;tcp<br>数据：客户端：随机port —&gt; 服务器：随机port &#x2F;tcp</li></ul><p>范例：服务器被动模式数据端口<br>227 Entering Passive Mode (172,16,0,1,224,59)<br>服务器数据端口为：224*256+59</p><p><strong>FTP服务状态码：</strong><br><code>1XX</code>：信息 125：数据连接打开<br><code>2XX</code>：成功类状态 200：命令OK 230：登录成功<br><code>3XX</code>：补充类 331：用户名OK<br><code>4XX</code>：客户端错误 425：不能打开数据连接<br><code>5XX</code>：服务器错误 530：不能登录</p><p><strong>用户认证：</strong></p><p> 匿名用户：<code>ftp,anonymous</code>,对应<code>Linux用户ftp</code><br>​ 系统用户：<code>Linux用户</code>,用户<code>/etc/passwd</code>,密码<code>/etc/shadow</code><br>​ 虚拟用户：特定服务的专用用户，独立的用户&#x2F;密码文件</p><h4 id="vsftpd-软件介绍"><a href="#vsftpd-软件介绍" class="headerlink" title="vsftpd 软件介绍"></a>vsftpd 软件介绍</h4><p>由 <code>vsftpd</code> 包提供，不再由<code>xinetd</code>管理<br>用户认证配置文件：<code>/etc/pam.d/vsftpd</code></p><p><strong>启动服务相关文件：</strong></p><p><code>/usr/lib/systemd/system/vsftpd.service</code><br><code>/etc/rc.d/init.d/vsftpd</code></p><p><strong>配置文件：</strong></p><p><code>/etc/vsftpd/vsftpd.conf</code></p><p>帮助：<code>man 5 vsftpd.conf</code></p><p>配置文件格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">option=value </span><br></pre></td></tr></table></figure><p>注意：<code>=</code> 前后不要有空格</p><p>用户和其共享目录</p><ul><li>匿名用户（映射为系统用户<code>ftp</code> ）共享文件位置：<code>/var/ftp</code></li><li>系统用户共享文件位置：用户家目录</li><li>虚拟用户共享文件位置：为其映射的系统用户的家目录</li></ul><h3 id="提高vsftp的访问速度"><a href="#提高vsftp的访问速度" class="headerlink" title="提高vsftp的访问速度"></a>提高vsftp的访问速度</h3><p>vsftp连接时很慢，因为默认开启了reverse_lookup（反向解析）.</p><p>在(vsftpd.conf)主文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reverse_lookup_enable=NO</span><br></pre></td></tr></table></figure><p>重启<code>vsftpd</code>服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>1.设立管理员用户拥有所有权限（上传、下载、文件删除）。</p><p>2.其他用户只允许下载，不允许上传、文件修改和删除。</p><p>3.禁止使用匿名用户登录</p><table><thead><tr><th align="center">用户名</th><th align="center">权限说明</th></tr></thead><tbody><tr><td align="center">admin</td><td align="center">管理员，可以上传、下载、新建文件夹、删除和更改文件和文件夹名。</td></tr><tr><td align="center">upload</td><td align="center">可以上传、新建文件夹。不可以下载，不能删除文件和文件夹，不能重命名原有文件和文件夹。</td></tr><tr><td align="center">download</td><td align="center">只能下载，不能进行其他操作。</td></tr></tbody></table><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p><code>centos7.9 x86_64</code></p><p>以上三个虚拟用户均不允许登录系统，并且使用ftp时会被锁定在指定目录内不可进入系统其他目录。</p><h4 id="安装配置vsftpd"><a href="#安装配置vsftpd" class="headerlink" title="安装配置vsftpd"></a>安装配置<code>vsftpd</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vsftpd</span><br><span class="line">cd /etc/vsftpd/</span><br><span class="line">cp vsftpd.conf vsftpd.conf.bak #先备份</span><br></pre></td></tr></table></figure><h4 id="添加一个不能登录系统用户，用来做虚拟用户映射。"><a href="#添加一个不能登录系统用户，用来做虚拟用户映射。" class="headerlink" title="添加一个不能登录系统用户，用来做虚拟用户映射。"></a>添加一个不能登录系统用户，用来做虚拟用户映射。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd www2013 -s /sbin/nologin -d /home/www2013</span><br><span class="line">passwd www2013</span><br></pre></td></tr></table></figure><h4 id="创建虚拟用户列表，分别是upload、download和admin"><a href="#创建虚拟用户列表，分别是upload、download和admin" class="headerlink" title="创建虚拟用户列表，分别是upload、download和admin"></a>创建虚拟用户列表，分别是<code>upload、download和admin</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/vsftpd/vu_list.txt</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;vu_list&lt;&lt;eof</span><br><span class="line">upload</span><br><span class="line">111111</span><br><span class="line">download</span><br><span class="line">111111</span><br><span class="line">admin</span><br><span class="line">111111</span><br><span class="line">eof</span><br></pre></td></tr></table></figure><p>查看列表内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#cat /etc/vsftpd/vu_list.txt</span><br><span class="line">upload</span><br><span class="line">111111</span><br><span class="line">download</span><br><span class="line">111111</span><br><span class="line">admin</span><br><span class="line">111111</span><br></pre></td></tr></table></figure><h4 id="创建db文件"><a href="#创建db文件" class="headerlink" title="创建db文件"></a>创建<code>db</code>文件</h4><p>保存虚拟帐号和密码的文本文件无法被系统帐号直接调用，需要创建用于系统认证的<code>db</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t hash -f /etc/vsftpd/vu_list.txt /etc/vsftpd/vu_list.db</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-T 用于轻松地将文本文件导入数据库。</span><br><span class="line">-t 表示指定底层访问方法。</span><br><span class="line">hash 是我们指定的底层访问方法。</span><br><span class="line">-f 表示从指定文件中读取。</span><br><span class="line">指定的文件是vu_list.txt</span><br><span class="line">我们正在创建或添加的数据库是vu_list.db</span><br></pre></td></tr></table></figure><p>注意：创建db文件需要db4支持，如果系统没安装请安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install db4 db4-devel db4-utils</span><br></pre></td></tr></table></figure><h4 id="修改db文件的权限，以免被非法用户修改"><a href="#修改db文件的权限，以免被非法用户修改" class="headerlink" title="修改db文件的权限，以免被非法用户修改"></a>修改db文件的权限，以免被非法用户修改</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /etc/vsftpd/vu_list.db</span><br></pre></td></tr></table></figure><h4 id="并删除vu-list-txt-文件"><a href="#并删除vu-list-txt-文件" class="headerlink" title="并删除vu_list.txt 文件"></a>并删除<code>vu_list.txt </code>文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm vu_list.txt</span><br></pre></td></tr></table></figure><p>添加新用户时，只需使用<code>vi</code>新建一个<code>vu_list.txt </code>文件，然后重新运行<code>db_load</code>命令，即可将新用户添加到数据库中。</p><h4 id="配置PAM文件"><a href="#配置PAM文件" class="headerlink" title="配置PAM文件"></a>配置<code>PAM</code>文件</h4><p>由于服务器通过调用系统PAM模块来对客户端进行身份验证，因此需要修改指定的配置文件来调整认证方式。PAM模块的配置文件路径为：<code>/etc/pam.d/</code>,这个目录下存放只许多与用户认证有关的配置文件。</p><p>备份原文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.old</span><br></pre></td></tr></table></figure><p>编辑<code>vsftpd文件</code>，除了<code>#%PAM-1.0</code>其他都注释掉，然后再添加。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">32位系统添加：</span><br><span class="line">auth       required     /lib/security/pam_userdb.so     db=/etc/vsftpd/vu_list</span><br><span class="line">account    required     /lib/security/pam_userdb.so     db=/etc/vsftpd/vu_list</span><br><span class="line">64位系统添加：</span><br><span class="line">auth       required     /lib64/security/pam_userdb.so   db=/etc/vsftpd/vu_list</span><br><span class="line">account    required     /lib64/security/pam_userdb.so   db=/etc/vsftpd/vu_list</span><br></pre></td></tr></table></figure><h4 id="创建虚拟用户配置文件"><a href="#创建虚拟用户配置文件" class="headerlink" title="创建虚拟用户配置文件"></a>创建虚拟用户配置文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#创建conf文件夹</span><br><span class="line">cd /etc/vsftpd</span><br><span class="line">mkdir conf</span><br><span class="line">cd conf</span><br><span class="line">#创建admin用户的配置文件</span><br><span class="line">cat &gt;&gt;admin&lt;&lt; EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">EOF</span><br><span class="line">#创建upload用户的配置文件</span><br><span class="line">cat &gt;&gt;upload&lt;&lt; EOF</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">download_enable=NO</span><br><span class="line">EOF</span><br><span class="line">#创建download用户的配置文件</span><br><span class="line">cat &gt;&gt;download&lt;&lt; EOF</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="修改vsftpd-conf文件"><a href="#修改vsftpd-conf文件" class="headerlink" title="修改vsftpd.conf文件"></a>修改<code>vsftpd.conf文件</code></h4><p><code>vi vsftpd.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#修改内容如下</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">local_enable=YES</span><br><span class="line">anon_mkdir_write_enable=NO</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">chown_uploads=NO</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">xferlog_file=/var/log/vsftpd.log</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">nopriv_user=www2013</span><br><span class="line">async_abor_enable=YES</span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line">ascii_download_enable=YES</span><br><span class="line">ftpd_banner=Welcome to blah FTP service ^_^</span><br><span class="line">ls_recurse_enable=NO</span><br><span class="line">listen=YES</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">userlist_enable=YES</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line">local_root=/home/www2013</span><br><span class="line">guest_enable=YES</span><br><span class="line">guest_username=www2013</span><br><span class="line">virtual_use_local_privs=YES</span><br><span class="line">user_config_dir=/etc/vsftpd/conf</span><br><span class="line">reverse_lookup_enable=NO</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><code>guest_username</code>要和之前建立的不能登陆的系统用户匹配。</p><p><code>chroot_list_enable和chroot_local_user</code>取值的不同组合情况</p><table><thead><tr><th align="center">参数</th><th align="center">取值</th><th align="center">取值</th><th align="center">取值</th><th align="center">取值</th></tr></thead><tbody><tr><td align="center">chroot_list_enable</td><td align="center">YES</td><td align="center">YES</td><td align="center">NO</td><td align="center">NO</td></tr><tr><td align="center">chroot_local_user</td><td align="center">YES</td><td align="center">NO</td><td align="center">YES</td><td align="center">NO</td></tr><tr><td align="center">意义</td><td align="center">文件中列出的用户根目录为系统根目录，其它用户根目录为自己主目录。</td><td align="center">文件中列出的用户根目录为自己主目录，其它用户根目录为系统根目录。</td><td align="center">全部用户根目录都是自己主目录。</td><td align="center">全部用户根目录都是系统根目录。</td></tr></tbody></table><h5 id="禁锢系统用户"><a href="#禁锢系统用户" class="headerlink" title="禁锢系统用户"></a>禁锢系统用户</h5><p><strong>禁锢所有系统用户在家目录中</strong></p><p><code> chroot_local_user=YES</code> 禁锢系统用户，默认NO，即不禁锢。</p><p><strong>禁锢或不禁锢特定的系统用户在家目录中，与上面设置功能相反</strong></p><p> <code>chroot_list_enable=YES</code> #默认是NO<br>​ <code>chroot_list_file=/etc/vsftpd/chroot_list</code> #默认值</p><ul><li>当<code>chroot_local_user=YES</code>和<code>chroot_list_enable=YES</code>时，则<code>chroot_list</code>中用户不禁锢，即白名单</li><li>当<code>chroot_local_user=NO</code>和<code>chroot_list_enable=YES</code>时，则<code>chroot_list</code>中用户禁锢，即黑名单</li></ul><h4 id="设置ssl，提高安全性。"><a href="#设置ssl，提高安全性。" class="headerlink" title="设置ssl，提高安全性。"></a>设置ssl，提高安全性。</h4><p><code>vi /etc/vsftpd/vsftpd.conf</code>添加到文件末尾。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rsa_cert_file=/etc/vsftpd/vsftpd.pem</span><br><span class="line">rsa_private_key_file=/etc/vsftpd/vsftpd.key</span><br><span class="line">ssl_enable=YES</span><br><span class="line">allow_anon_ssl=NO</span><br><span class="line">force_local_data_ssl=YES</span><br><span class="line">force_local_logins_ssl=YES</span><br><span class="line">ssl_tlsv1=YES</span><br><span class="line">ssl_sslv2=NO</span><br><span class="line">ssl_sslv3=NO</span><br><span class="line"></span><br><span class="line">pasv_min_port=7000</span><br><span class="line">pasv_max_port=7500</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="设置RSA证书"><a href="#设置RSA证书" class="headerlink" title="设置RSA证书"></a>设置RSA证书</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/vsftpd/vsftpd.key -out /etc/vsftpd/vsftpd.pem</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">第一个字段是国家代码字段，填写您所在国家的两个字母代码：</span><br><span class="line"></span><br><span class="line">Country Name (2 letter code) [XX]:</span><br><span class="line"></span><br><span class="line">接下来是州或省，通过输入全名而不是缩写来填写：</span><br><span class="line"></span><br><span class="line">State or Province Name (full name) []:</span><br><span class="line"></span><br><span class="line">接下来是地区名称。这是你的城市：</span><br><span class="line"></span><br><span class="line">Locality Name (eg, city) [Default City]:</span><br><span class="line"></span><br><span class="line">接下来是公司或组织名称。您可以将此留空或根据需要填写：</span><br><span class="line"></span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:</span><br><span class="line"></span><br><span class="line">接下来是组织单位名称。如果服务器用于特定部门，您可以填写此内容，或将其留空：</span><br><span class="line"></span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line"></span><br><span class="line">应该填写下一个字段，但是您可以决定如何填写。这是您的服务器的通用名称。示例webftp.domainname.ext：：</span><br><span class="line"></span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:</span><br><span class="line"></span><br><span class="line">最后是电子邮件字段，您当然可以将其留空而不会出现问题：</span><br><span class="line"></span><br><span class="line">Email Address []:</span><br><span class="line"></span><br><span class="line">完成表格后，将创建证书。</span><br></pre></td></tr></table></figure><p>最后重启<code>vsftpd服务</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure><h4 id="使用Filezilla连接测试"><a href="#使用Filezilla连接测试" class="headerlink" title="使用Filezilla连接测试"></a>使用<code>Filezilla</code>连接测试</h4><p><img src="/img/postimages/vsftpd%E6%B5%8B%E8%AF%951.webp" alt="vsftpd测试1"></p><h4 id="使用lftp连接测试"><a href="#使用lftp连接测试" class="headerlink" title="使用lftp连接测试"></a>使用<code>lftp</code>连接测试</h4><p><img src="/img/postimages/vsftpd%E6%B5%8B%E8%AF%952.webp" alt="vsftpd测试2"></p><p>注意：</p><p>关闭<code>lftp</code>客户端认证。否则会报错。</p><p>报错如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls: Fatal error: Certificate verification: Not trusted (DB:40:CE:56:E3:56:6C:75:9C:8D:1F:08:CF:9F:22:9D:8D:9B:E8:D3)</span><br></pre></td></tr></table></figure><p><code>vi /etc/lftp.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set ssl:verify-certificate no</span><br></pre></td></tr></table></figure><p>参考资料：</p><p><a href="https://docs.rockylinux.org/guides/file_sharing/secure_ftp_server_vsftpd/">https://docs.rockylinux.org/guides/file_sharing/secure_ftp_server_vsftpd/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python文件处理</title>
      <link href="/2022/03/31/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
      <url>/2022/03/31/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="文件处理流程"><a href="#文件处理流程" class="headerlink" title="文件处理流程"></a>文件处理流程</h2><p>1.打开文件，得到文件句柄并赋值给一个变量</p><p>2.通过句柄对文件进行操作</p><p>3.关闭文件</p><h3 id="两种文件操作方式"><a href="#两种文件操作方式" class="headerlink" title="两种文件操作方式"></a>两种文件操作方式</h3><h4 id="直接操作（需要手动关闭文件）"><a href="#直接操作（需要手动关闭文件）" class="headerlink" title="直接操作（需要手动关闭文件）"></a>直接操作（需要手动关闭文件）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 打开文件，得到文件句柄并赋值给一个变量</span></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#默认打开模式就为r</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 通过句柄对文件进行操作</span></span><br><span class="line">data=f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="使用with关键字（推荐！自动关闭文件无需手动操作）"><a href="#使用with关键字（推荐！自动关闭文件无需手动操作）" class="headerlink" title="使用with关键字（推荐！自动关闭文件无需手动操作）"></a>使用<code>with</code>关键字（推荐！自动关闭文件无需手动操作）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可用用with同时打开多个文件，用逗号分隔开即可</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> read_f,<span class="built_in">open</span>(<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> write_f:</span><br><span class="line">    data=read_f.read()</span><br><span class="line">    write_f.write(data)</span><br></pre></td></tr></table></figure><p>注意：若要保证不乱码，文件以什么方式存的，就要以什么方式打开。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">linux默认编码<span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">windows默认编码 <span class="string">&#x27;gbk&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="python2中文件打开"><a href="#python2中文件打开" class="headerlink" title="python2中文件打开"></a>python2中文件打开</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先在python3中操作文件只有一种选择，那就是open()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#而在python2中则有两种方式：file()与open()</span></span><br><span class="line">两者都能够打开文件，对文件进行操作，也具有相似的用法和参数，但是，这两种文件打开方式有本质的区别，file为文件类，用file()来打开文件，相当于这是在构造文件类，而用<span class="built_in">open</span>()打开文件，是用python的内建函数来操作，我们一般使用<span class="built_in">open</span>()打开文件进行操作，而用file当做一个类型，比如<span class="built_in">type</span>(f) <span class="keyword">is</span> file。</span><br></pre></td></tr></table></figure><h3 id="打开文件的模式"><a href="#打开文件的模式" class="headerlink" title="打开文件的模式"></a>打开文件的模式</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><p>打开文件的模式有(默认为文本模式)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r，只读模式【默认模式，文件必须存在，文件存在文件内指针直接跳到文件开头,不存在则抛出异常】</span><br><span class="line">w，只写模式【不可读；不存在则创建；存在则清空内容,文件指针跑到文件开头.】</span><br><span class="line">a，之追加写模式【不可读；不存在则创建；存在则只追加内容，文件存在会将文件指针直接移动到文件末尾】</span><br></pre></td></tr></table></figure><h4 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h4><p>在文件不关闭的情况下,连续的写入，后写的内容一定跟在前写内容的后面。</p><p>如果重新以w模式打开文件，则会清空文件内容。</p><h4 id="a与w相同与异同"><a href="#a与w相同与异同" class="headerlink" title="a与w相同与异同"></a><code>a</code>与<code>w</code>相同与异同</h4><p>相同点：在打开的文件不关闭的情况下，连续的写入，新写的内容总会跟在前写的内容之后</p><p>不同点：以 a 模式重新打开文件，不会清空原文件内容，会将文件指针直接移动到文件末尾，新写的内容永远写在最后。</p><p>对于非文本文件，我们只能使用b模式，”b”表示以字节的方式操作（而所有文件也都是以字节的形式存储的，使用这种模式无需考虑文本文件的字符编码、图片文件的<code>jgp格式</code>、视频文件的<code>avi格式</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rb </span><br><span class="line">wb</span><br><span class="line">ab</span><br><span class="line">注：以b方式打开时，读取到的内容是字节类型，写入时也需要提供字节类型，不能指定编码</span><br></pre></td></tr></table></figure><p>在平时工作中，我们只单纯使用<code>r/w/a</code>，要么只读，要么只写，一般不用可读可写的模式。<br>大前提: <code>tb模式</code>均不能单独使用,必须与<code>r/w/a</code>之一结合使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t（默认的）：文本模式</span><br><span class="line">    1. 读写文件都是以字符串为单位的</span><br><span class="line">    2. 只能针对文本文件</span><br><span class="line">    3. 必须指定encoding参数</span><br><span class="line">b：二进制模式:</span><br><span class="line">   1.读写文件都是以bytes/二进制为单位的</span><br><span class="line">   2. 可以针对所有文件</span><br><span class="line">   3. 一定不能指定encoding参数</span><br></pre></td></tr></table></figure><p>强调：<code>b模式对比t模式</code><br>1、在操作纯文本文件方面t模式帮我们省去了编码与解码的环节，b模式则需要手动编码与解码，所以此时t模式更为方便。<br>2、针对非文本文件（如图片、视频、音频等）只能使用b模式。</p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;+&quot; 表示可以同时读写某个文件</span><br><span class="line">r+， 读写【可读，可写】</span><br><span class="line">w+，写读【可读，可写】</span><br><span class="line">a+， 写读【可读，可写】</span><br><span class="line">x， 只写模式【不可读；不存在则创建，存在则报错】</span><br><span class="line">x+ ，写读【可读，可写】</span><br></pre></td></tr></table></figure><p>回车与换行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\n 换行</span><br><span class="line">\r 回车</span><br></pre></td></tr></table></figure><h3 id="操作文件的方法"><a href="#操作文件的方法" class="headerlink" title="操作文件的方法"></a>操作文件的方法</h3><h4 id="基础-1"><a href="#基础-1" class="headerlink" title="基础"></a>基础</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f.read() <span class="comment">#读取所有内容,光标移动到文件末尾。</span></span><br><span class="line">f.readline() <span class="comment">#读取一行内容,光标移动到第二行首部。</span></span><br><span class="line">f.readlines() <span class="comment">#读取每一行内容,存放于列表中。</span></span><br><span class="line">f.write(<span class="string">&#x27;11111\n222\n&#x27;</span>) <span class="comment">#针对文本模式的写,需要自己写换行符。</span></span><br><span class="line">f.writelines(<span class="string">&#x27;11111\n222\n&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#针对b模式的写,需要自己写换行符。</span></span><br><span class="line">f.writelines([<span class="string">&#x27;333\n&#x27;</span>,<span class="string">&#x27;444\n&#x27;</span>]) <span class="comment">#文件模式</span></span><br><span class="line">f.writelines([<span class="built_in">bytes</span>(<span class="string">&#x27;333\n&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>),<span class="string">&#x27;444\n&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)]) <span class="comment">#b模式</span></span><br></pre></td></tr></table></figure><h4 id="拓展-1"><a href="#拓展-1" class="headerlink" title="拓展"></a>拓展</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f.readable() #文件是否可读</span><br><span class="line">f.writeable() #文件是否可写</span><br><span class="line">f.closed #文件是否关闭</span><br><span class="line">f.encoding() #如果文件打开模式为b,则没有该属性。</span><br><span class="line">f.flush() #立刻将文件内容从内存刷到硬盘</span><br><span class="line">f.name #显示文件名</span><br><span class="line">f.tell() #显示当前光标位置</span><br><span class="line">f.seek(0) #重置光标位置,光标会跳到第一行行首。</span><br></pre></td></tr></table></figure><h3 id="文件内光标移动"><a href="#文件内光标移动" class="headerlink" title="文件内光标移动"></a>文件内光标移动</h3><p><code>read(3)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件打开方式为文本模式时，代表读取3个字符。</span><br><span class="line">文件打开方式为b模式时，代表读取3个字节。</span><br></pre></td></tr></table></figure><p>其余的文件内光标移动都是以字节为单位如<code>seek，tell，truncate</code>。</p><p>注意</p><p><code>seek</code>有三种移动方式<code>0，1，2</code>，其中1和2必须在<code>b模式</code>下进行，但无论哪种模式，都是以<code>bytes</code>为单位移动的.</p><p><code>truncate</code>是截断文件，所以文件的打开方式必须可写，但是不能用<code>w</code>或<code>w+</code>等方式打开，因为那样直接清空文件了，所以<code>truncate</code>要在<code>r+或a或a+</code>等模式下测试效果。</p><p>之前文件内指针的移动都是由读&#x2F;写操作而被动触发的，若想读取文件某一特定位置的数据，则需要用<code>f.seek方法</code>主动控制文件内指针的移动，详细用法如下：<br><code>f.seek</code>(指针移动的字节数,模式控制):<br>模式控制:<br>0: 默认的模式,该模式代表指针移动的字节数是以文件开头为参照的<br>1: 该模式代表指针移动的字节数是以当前所在的位置为参照的<br>2: 该模式代表指针移动的字节数是以文件末尾的位置为参照的<br>强调:其中0模式可以在t或者b模式使用,而1跟2模式只能在b模式下用</p><p><code>0模式</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a.txt用utf-8编码，内容如下（abc各占1个字节，中文“你好”各占3个字节）</span></span><br><span class="line">abc你好</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0模式的使用</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,mode=<span class="string">&#x27;rt&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.seek(<span class="number">3</span>,<span class="number">0</span>)     <span class="comment"># 参照文件开头移动了3个字节</span></span><br><span class="line">    <span class="built_in">print</span>(f.tell()) <span class="comment"># 查看当前文件指针距离文件开头的位置，输出结果为3</span></span><br><span class="line">    <span class="built_in">print</span>(f.read()) <span class="comment"># 从第3个字节的位置读到文件末尾，输出结果为：你好</span></span><br><span class="line">    <span class="comment"># 注意：由于在t模式下，会将读取的内容自动解码，所以必须保证读取的内容是一个完整中文数据，否则解码失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,mode=<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.seek(<span class="number">6</span>,<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#输出结果为: 好</span></span><br></pre></td></tr></table></figure><p><code>1模式</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>模式</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,mode=<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.seek(<span class="number">3</span>,<span class="number">1</span>) <span class="comment"># 从当前位置往后移动3个字节，而此时的当前位置就是文件开头</span></span><br><span class="line">    <span class="built_in">print</span>(f.tell()) <span class="comment"># 输出结果为：3</span></span><br><span class="line">    f.seek(<span class="number">4</span>,<span class="number">1</span>)     <span class="comment"># 从当前位置往后移动4个字节，而此时的当前位置为3</span></span><br><span class="line">    <span class="built_in">print</span>(f.tell()) <span class="comment"># 输出结果为：7</span></span><br></pre></td></tr></table></figure><p>练习：使用<code>seek()</code>实现<code>shell中tail -f （文件日志追加功能）</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;access.log&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.seek(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> line:</span><br><span class="line">            <span class="built_in">print</span>(line.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            time.sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><p>练习编写文件<code>copy</code>工具</p><p>方法1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">src_file=<span class="built_in">input</span>(<span class="string">&#x27;源文件路径: &#x27;</span>).strip()</span><br><span class="line">dst_file=<span class="built_in">input</span>(<span class="string">&#x27;目标文件路径: &#x27;</span>).strip()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;%s&#x27;</span> %src_file,mode=<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> read_f,<span class="built_in">open</span>(<span class="string">r&#x27;%s&#x27;</span> %dst_file,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> write_f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> read_f:</span><br><span class="line">        <span class="comment"># print(line)</span></span><br><span class="line">        write_f.write(line)</span><br></pre></td></tr></table></figure><p>方法2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意文件拷贝</span></span><br><span class="line"><span class="keyword">import</span> sys <span class="comment">#引入sys模块</span></span><br><span class="line">_, src_file, dst_file = sys.argv <span class="comment">#传参，_表示占位符。</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(src_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> read_f,\</span><br><span class="line">        <span class="built_in">open</span>(dst_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> write_f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> read_f:</span><br><span class="line">        write_f.write(line)</span><br><span class="line"><span class="comment">#print(sys.argv)</span></span><br><span class="line"><span class="comment">#使用方式 python D:\pccharmcode\begin.py 源文件路径 目的文件路径</span></span><br></pre></td></tr></table></figure><h3 id="文件的修改"><a href="#文件的修改" class="headerlink" title="文件的修改"></a>文件的修改</h3><p>文件的数据是存放于硬盘上的，因而只存在覆盖、不存在修改这么一说，我们平时看到的修改文件，都是模拟出来的效果，具体的说有两种实现方式：</p><p>方式一：将硬盘存放的该文件的内容全部加载到内存，在内存中是可以修改的，修改完毕后，再由内存覆盖到硬盘（word，vim，nodpad++等编辑器）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>) <span class="keyword">as</span> read_f,<span class="built_in">open</span>(<span class="string">&#x27;.a.txt.swap&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> write_f:</span><br><span class="line">    data=read_f.read() <span class="comment">#全部读入内存,如果文件很大,会很卡</span></span><br><span class="line">    data=data.replace(<span class="string">&#x27;alex&#x27;</span>,<span class="string">&#x27;SB&#x27;</span>) <span class="comment">#在内存中完成修改</span></span><br><span class="line"></span><br><span class="line">    write_f.write(data) <span class="comment">#一次性写入新文件</span></span><br><span class="line"></span><br><span class="line">os.remove(<span class="string">&#x27;a.txt&#x27;</span>)</span><br><span class="line">os.rename(<span class="string">&#x27;.a.txt.swap&#x27;</span>,<span class="string">&#x27;a.txt&#x27;</span>) </span><br></pre></td></tr></table></figure><p>方式二：将硬盘存放的该文件的内容一行一行地读入内存，修改完毕就写入新文件，最后用新文件覆盖源文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>) <span class="keyword">as</span> read_f,<span class="built_in">open</span>(<span class="string">&#x27;.a.txt.swap&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> write_f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> read_f: <span class="comment">#读</span></span><br><span class="line">        line=line.replace(<span class="string">&#x27;alex&#x27;</span>,<span class="string">&#x27;SB&#x27;</span>) <span class="comment">#替换</span></span><br><span class="line">        write_f.write(line)<span class="comment">#写入</span></span><br><span class="line">os.remove(<span class="string">&#x27;a.txt&#x27;</span>)</span><br><span class="line">os.rename(<span class="string">&#x27;.a.txt.swap&#x27;</span>,<span class="string">&#x27;a.txt&#x27;</span>) </span><br></pre></td></tr></table></figure><h3 id="文件的逐行读取并打印行号"><a href="#文件的逐行读取并打印行号" class="headerlink" title="文件的逐行读取并打印行号"></a>文件的逐行读取并打印行号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">content = f.readlines()</span><br><span class="line">i = <span class="number">1</span> </span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> content:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d:%s&quot;</span>%(i,temp))</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>:hello world!</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>:hello world!</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>:hello world!</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>:hello world!</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>:hello world!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见问题总结</title>
      <link href="/2022/03/28/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2022/03/28/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="描述Linux下软链接和硬链接的区别"><a href="#描述Linux下软链接和硬链接的区别" class="headerlink" title="描述Linux下软链接和硬链接的区别"></a>描述Linux下软链接和硬链接的区别</h2><p>实践：当前所在路径<code>/root</code></p><p>准备工作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo 123 &gt; /tmpdisk/a.txt</span><br><span class="line">echo 123 &gt; /tmpdisk/b.txt</span><br><span class="line">mkdir -p /tmpdisk/ylink</span><br><span class="line">mkdir -p /tmpdisk/rlink</span><br></pre></td></tr></table></figure><p>分别创建软链接和硬链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -s  /tmpdisk/a.txt ra.txt</span><br><span class="line">ln   /tmpdisk/b.txt yb.txt</span><br><span class="line">ln  /tmpdisk/ylink   ylink </span><br><span class="line">#创建失败，硬链接不允许文件夹创建。ln: &#x27;/tmpdisk/ylink&#x27;: hard link not allowed for directory</span><br><span class="line">ln -s  /tmpdisk/rlink  rlink</span><br></pre></td></tr></table></figure><p>查看inode节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 ~]# ls -li </span><br><span class="line">total 8</span><br><span class="line">84271555 -rw------- 1 root root 3302 May 31  2018 anaconda-ks.cfg</span><br><span class="line">87108116 lrwxrwxrwx 1 root root   14 Mar 28 06:18 ra.txt -&gt; /tmpdisk/a.txt</span><br><span class="line">87108117 lrwxrwxrwx 1 root root   14 Mar 28 06:18 rlink -&gt; /tmpdisk/rlink</span><br><span class="line"> 1588983 -rw-r--r-- 2 root root    4 Mar 28 05:27 yb.txt</span><br><span class="line">[root@43f873a76b81 ~]# ls -li /tmpdisk/</span><br><span class="line">total 8</span><br><span class="line">1588982 -rw-r--r-- 1 root root 4 Mar 28 05:26 a.txt</span><br><span class="line">1588983 -rw-r--r-- 2 root root 4 Mar 28 05:27 b.txt</span><br><span class="line">1588941 drwxr-xr-x 2 root root 6 Mar 28 06:13 rlink</span><br><span class="line">1588940 drwxr-xr-x 2 root root 6 Mar 28 06:13 ylink</span><br></pre></td></tr></table></figure><p>发现硬链接的原文件和链接文件<code>inode</code>一致。都为1588983。</p><p>软链接相当于<code>快捷方式</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s 源文件路径 链接文件路径</span><br><span class="line">链接文件路径--------&gt;源文件路径</span><br></pre></td></tr></table></figure><p>总结：</p><p>默认不带参数的情况下，<code>ln</code>创建的是硬链接，带<code>-s</code>参数的<code>ln</code>命令创建的是软链接。</p><p>硬链接文件与源文件的<code>inode</code>节点号相同，软链接文件的<code>inode</code>节点号，与源文件不同。</p><p><code>ln</code>命令不能对目录创建硬链接，但可以创建软链接。对目录的软链接会经常使用到</p><p>删除软链接文件，对源文件和硬链接文件无 任何影响。</p><p>删除文件的硬链接文件，对源文件及软链接文件无任何影响。</p><p>删除链接文件的源文件，对硬链接文件无影响，会导致其软链接失效（红底白字闪烁）。</p><p>同时删除源文件及其硬链接文件，整个文件才会被真正的删除。</p><p>很多硬件设备的快照功能，使用的就是列斯硬链接的原理</p><p>软链接可以跨文件系统，硬链接不可以跨文件系统。</p><h2 id="Linux-如何查找具有相同-inode-号的文件"><a href="#Linux-如何查找具有相同-inode-号的文件" class="headerlink" title="Linux 如何查找具有相同 inode 号的文件?"></a>Linux 如何查找具有相同 <code>inode</code> 号的文件?</h2><h3 id="通过-inode号查找"><a href="#通过-inode号查找" class="headerlink" title="通过 inode号查找"></a>通过 <code>inode</code>号查找</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -xdev -inum &lt;inode_num&gt; 2&gt;/dev/null</span><br><span class="line">find -L / -xdev -inum &lt;inode_num&gt; 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h3 id="通过文件名查找"><a href="#通过文件名查找" class="headerlink" title="通过文件名查找"></a>通过文件名查找</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -xdev -samefile &lt;file_name&gt; 2&gt;/dev/null</span><br><span class="line">find -L / -xdev -samefile &lt;file_name&gt; 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-xdev 表示不跨越文件系统查找</span><br><span class="line">-L 表示考虑符号链接(软链接)</span><br></pre></td></tr></table></figure><p>实例</p><p>查找源文件为<code>/tmpdisk/a.txt</code>的链接文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 ~]# find / -xdev -samefile /tmpdisk/b.txt </span><br><span class="line">/root/yb.txt</span><br><span class="line">/tmpdisk/b.txt</span><br><span class="line">[root@43f873a76b81 ~]# ll -i /root/yb.txt /tmpdisk/b.txt </span><br><span class="line">1588983 -rw-r--r-- 2 root root 4 Mar 28 05:27 /root/yb.txt</span><br><span class="line">1588983 -rw-r--r-- 2 root root 4 Mar 28 05:27 /tmpdisk/b.txt</span><br></pre></td></tr></table></figure><h2 id="linux常见的系统日志文件都有哪些，各自的用途？"><a href="#linux常见的系统日志文件都有哪些，各自的用途？" class="headerlink" title="linux常见的系统日志文件都有哪些，各自的用途？"></a>linux常见的系统日志文件都有哪些，各自的用途？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/var/log/messages 内核及公共消息日志</span><br><span class="line">/var/log/cron计划任务日志</span><br><span class="line">/var/log/dmesg系统引导日志</span><br><span class="line">/var/log/maillog邮件系统日志</span><br><span class="line">/var/log/secure记录与访问限制相关日志</span><br><span class="line">/var/log/yum.log 使用yum安装软件的日志</span><br></pre></td></tr></table></figure><h2 id="常见Linux开机设置文件"><a href="#常见Linux开机设置文件" class="headerlink" title="常见Linux开机设置文件"></a>常见Linux开机设置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/fstab 实现开机自动挂载</span><br><span class="line">/etc/initab定义开机进入默认级别的配置文件</span><br><span class="line">/etc/rc.local 定义开机自定义任务的配置文件</span><br></pre></td></tr></table></figure><h2 id="请描述Linux系统优化的12个步骤"><a href="#请描述Linux系统优化的12个步骤" class="headerlink" title="请描述Linux系统优化的12个步骤"></a>请描述Linux系统优化的12个步骤</h2><p>1.不用<code>root</code>直接登陆系统改用普通用户登录。</p><p>2.禁止ssh远程，可以更改默认远程连接ssh服务及禁止<code>root</code>远程连接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">PermitRootLogin no</span><br><span class="line">Port 22 #改为其他端口</span><br><span class="line">重启sshd服务</span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p>3.时间同步：定时更新服务器时间</p><p>每天12点同步一次。</p><p><code>crontab -e</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 12 * * * * /usr/sbin/ntpdate 192.168.0.1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">设置ntp开机启动并启动ntp</span><br><span class="line">systemctl enable ntpd</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure><p>定时任务验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://crontab.guru/</span><br></pre></td></tr></table></figure><p>4.关闭<code>selinux</code>及<code>iptables</code>(<code>iptables</code>工作场景如有wan ip,一般要打开，高并发除外)</p><p><code>iptables</code>是<code>firewalld</code>的子模块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service 关闭服务</span><br><span class="line">systemctl status firewalld.service 查看服务状态</span><br><span class="line">systemctl disable firewalld.service 设置开机默认关闭防火墙</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">永久关闭selinux</span><br><span class="line">/etc/selinux/config</span><br><span class="line">将SELINUX=enforcing 改为SELINUX=disabled</span><br><span class="line">临时关闭</span><br><span class="line">getenforce 获取状态</span><br><span class="line">setenforce 0 关闭 #0关闭，1开启</span><br></pre></td></tr></table></figure><p>5.配置<code>yum</code>更新源，从国内更新下载安装rpm包。</p><p>备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p>下载新的 <code>CentOS-Base.repo 到 /etc/yum.repos.d/</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">或者</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>运行<code>yum makecache</code>生成缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>6.调整文件描述符的数量，进程及文件的打开都会消耗文件描述符。</p><p>内核（kernel）利用文件描述符（file descriptor）来访问文件。文件描述符是非负整数。打开现存文件或新建文件时，内核会返回一个文件描述符。读写文件也需要使用文件描述符来指定待读写的文件。通俗来讲，因为linux一切皆文件，所以占用文件描述符超过了系统或者用户要求的最大值，就无法再打开了，文件描述符主要是系统级和用户级。查看方式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -a|grep fs.file-max 查看系统级文件描述符数量</span><br><span class="line">ulimit -n 查看用户级文件描述符数量</span><br></pre></td></tr></table></figure><p>用户级限制：<code>ulimit</code>命令看到的是用户级的最大文件描述符限制，也就是说每一个用户登录后执行的程序占用文件描述符的总数不能超过这个限制<br>系统级限制：<code>sysctl</code>命令与<code>proc</code>文件系统中查看到的数值是一样的，这属于系统级限制，它是限制所有用户打开文件描述符的总数.</p><p>修改用户级文件描述符(需要root权限或root用户)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/security/limits.conf。修改文件描述符，应该注意字段下是否存在nofile字段，如果存在直接修改，不存在在末尾添加保存即可。</span><br><span class="line">* hard nofile 4096</span><br><span class="line">* soft nofile 2048</span><br></pre></td></tr></table></figure><p>修改系统级文件描述符(需要root权限或root用户)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>找到<code>fs.file-max</code>，将<code>fs.file-max</code>值修改，保存即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p #加载内核参数使修改生效</span><br></pre></td></tr></table></figure><p>7.定时自动清理<code>/var/spool/clientmquene/</code>目录垃圾文件，防止节点被占满（c6.4默认没有Sendmail，因此可以不配。）</p><p>8.精简开机启动服务(crond、sshd、network、rsyslog)</p><p>9.Linux内核参数优化<code>/etc/sysctl.conf</code>，执行<code>sysctl -P</code>生效。</p><p>10.更改字符集，支持中文，但是还是建议使用英文，防止乱码问题出现。linux默认编码为<code>utf-8</code></p><p>11.锁定关键系统文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr +i /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab</span><br></pre></td></tr></table></figure><p>处理以上内容后，把<code>chattr</code>改名，就更安全了。</p><p>12.清空<code>/etc/issue</code>去除系统及内核版本登录前的屏幕显示。</p><h2 id="请给出查看当前哪些在线用户的Linux命令"><a href="#请给出查看当前哪些在线用户的Linux命令" class="headerlink" title="请给出查看当前哪些在线用户的Linux命令"></a>请给出查看当前哪些在线用户的Linux命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">w #显示目前系统登录用户</span><br><span class="line">who #显示目前已登陆用户信息</span><br><span class="line">last #列出当前与过去登录系统的用户相关信息</span><br><span class="line">lastlog #检查某特定用户上次登录时间</span><br><span class="line">whoami #打印与当前生效的用户ID关联的用户名</span><br><span class="line">finger #用户信息查找程序</span><br><span class="line">id #显示指定用户或当前用户的用户信息与组信息</span><br></pre></td></tr></table></figure><h2 id="输出重定向相关"><a href="#输出重定向相关" class="headerlink" title="输出重定向相关"></a>输出重定向相关</h2><p><code>/dev/null</code>是特殊的字符设备文件，表示黑洞设备或空设备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;或者1&gt; #输出重定向：把前面输出的东西输入到后面的文件中，会删除文件原有内容。</span><br><span class="line">&gt;&gt;或者1&gt;&gt; #追加重定向：把前面输出的东西追加到后边的文件中，不会删除文件原有内容。</span><br><span class="line">&lt;或者&lt;0 #输入重定向：输入重定向用于改变命令的输入，指定输入内容那个，后跟文件名。</span><br><span class="line">&lt;&lt;或者&lt;&lt;0 #输入重定向：后跟字符串，用来表示“输入结束”，也可以用ctrl+d来结束输入。</span><br><span class="line">2&gt; #错误重定向：把错误信息输入到后边的文件中，会删除文件原有内容。</span><br><span class="line">2&gt;&gt; #错误追加重定向：把错误信息追加到后边的文件中，不会删除文件原有内容。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标准输入（stdin）: 0 使用 &lt;或者&lt;&lt;</span><br><span class="line">标准输出（stdout）: 1 使用 &gt;或者&gt;&gt;。正常的输出</span><br><span class="line">标准错误输出（stderr）:2 使用2&gt; 或者2&gt;&gt;</span><br><span class="line">特殊：</span><br><span class="line">2&gt;&amp;1 就是把标准错误重定向到标准输出（&gt;&amp;）</span><br><span class="line">&gt;/dev/null 2&gt;&amp;1 等价于1&gt;/dev/null 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>例如：找到文件，忽略错误输出结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">find / -name python3.6 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/usr/bin/python3.6</span><br><span class="line">/usr/lib/python3.6</span><br><span class="line">/usr/lib64/python3.6</span><br><span class="line">/usr/local/lib/python3.6</span><br><span class="line">/usr/local/lib64/python3.6</span><br></pre></td></tr></table></figure><h2 id="sed常见用法"><a href="#sed常见用法" class="headerlink" title="sed常见用法"></a><code>sed</code>常见用法</h2><p>删除文件<code>ra.txt</code>的第2行内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;2d&#x27; ra.txt</span><br></pre></td></tr></table></figure><p>将文件<code>yb.txt</code>中的<code>5555</code>改为<code>8080</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/5555/8080/g&#x27; yb.txt</span><br></pre></td></tr></table></figure><p>使用<code>-e</code>同时更改多个文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e &#x27;s/6666/9999/g&#x27; a.txt b.txt</span><br></pre></td></tr></table></figure><h2 id="0、dirname和、basename有什么作用？具体举个例子。"><a href="#0、dirname和、basename有什么作用？具体举个例子。" class="headerlink" title="$0、dirname和、basename有什么作用？具体举个例子。"></a><code>$0</code>、<code>dirname</code>和、<code>basename</code>有什么作用？具体举个例子。</h2><h2 id="z-sh文件"><a href="#z-sh文件" class="headerlink" title="z.sh文件"></a><code>z.sh</code>文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo &quot;#############&quot;</span><br><span class="line">echo &quot;# this is &#x27;$0&#x27; test#&quot;</span><br><span class="line">echo &quot;#############&quot;</span><br><span class="line">echo $0</span><br><span class="line">echo </span><br><span class="line">echo &quot;###############&quot;</span><br><span class="line">echo &quot;# this is &#x27;dirname&#x27; test#&quot;</span><br><span class="line">echo &quot;############@@#&quot;</span><br><span class="line">cd `dirname $0` &amp;&amp; pwd</span><br><span class="line">echo </span><br><span class="line">echo &quot;###############&quot;</span><br><span class="line">echo &quot;# this is &#x27;basename&#x27; test#&quot;</span><br><span class="line">echo &quot;####################&quot;</span><br><span class="line">echo `basename $0`</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#############</span><br><span class="line"># this is &#x27;z.sh&#x27; test#</span><br><span class="line">#############</span><br><span class="line">z.sh</span><br><span class="line"></span><br><span class="line">###############</span><br><span class="line"># this is &#x27;dirname&#x27; test#</span><br><span class="line">############@@#</span><br><span class="line">/tmpdisk</span><br><span class="line"></span><br><span class="line">###############</span><br><span class="line"># this is &#x27;basename&#x27; test#</span><br><span class="line">####################</span><br><span class="line">z.sh</span><br></pre></td></tr></table></figure><p>总结：</p><p><code>dirname</code>获取脚本路径名</p><p><code>basename</code>获取脚本名</p><p><code>$0</code>获取脚本名和脚本路径名</p><h2 id="用nohup把一个脚本放后台运行"><a href="#用nohup把一个脚本放后台运行" class="headerlink" title="用nohup把一个脚本放后台运行"></a>用<code>nohup</code>把一个脚本放后台运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sh test.sh &gt; filename 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="有1-9的数字，echo输出1-9的数字时，屏蔽0-5数字再输出"><a href="#有1-9的数字，echo输出1-9的数字时，屏蔽0-5数字再输出" class="headerlink" title="有1-9的数字，echo输出1-9的数字时，屏蔽0-5数字再输出"></a>有<code>1-9</code>的数字，<code>echo</code>输出<code>1-9</code>的数字时，屏蔽<code>0-5</code>数字再输出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;1234567890&#x27; | sed &#x27;s/[0-5]//g&#x27;</span><br></pre></td></tr></table></figure><h2 id="如何用wget和curl监控web是否正常"><a href="#如何用wget和curl监控web是否正常" class="headerlink" title="如何用wget和curl监控web是否正常"></a>如何用<code>wget</code>和<code>curl</code>监控web是否正常</h2><p><code>wget</code> 常用命令参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--spider                             模拟爬虫的行为去访问网站，但不会下载网页</span><br><span class="line">-q --quite                           安静的访问，禁止输出，类似-o /dev/null</span><br><span class="line">-o --output-file=FILE                记录到输出文件</span><br><span class="line">-T --timeout=SECONDS              访问网站的超时时间</span><br><span class="line">-t -tries=NUMBER                     重试次数</span><br></pre></td></tr></table></figure><p><code>curl </code>常用命令参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-I/--header　　　　　　　　　　          显示响应头信息</span><br><span class="line">-m/--max-time&lt;seconds&gt;               访问超时时间</span><br><span class="line">-o/--output&lt;file&gt;                    记录访问信息到文件</span><br><span class="line">-s/--silent                          静默模式访问，不输出信息</span><br><span class="line">-w/--write-output&lt;format&gt;            以固定格式输出，例如%&#123;http_code&#125;,输出状态码</span><br></pre></td></tr></table></figure><p><code>wget</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 tmpdisk]# wget -T 5 -q -t 2 --spider www.qq.com </span><br><span class="line">[root@43f873a76b81 tmpdisk]# echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><code>curl</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 tmpdisk]# curl -o /dev/null -s -w %&#123;http_code&#125; https://www.baidu.com</span><br><span class="line">200</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> questions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类和对象</title>
      <link href="/2022/03/27/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/03/27/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="面向过程与面向对象"><a href="#面向过程与面向对象" class="headerlink" title="面向过程与面向对象"></a>面向过程与面向对象</h2><h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><p>核心就是过程二字，过程即解决问题的步骤，就是先干什么再干什么<br>基于该思想写程序就好比在设计一条流水线，是一种机械式的思维方式<br>优点：复杂的过程流程化，进而简单化<br>缺点：扩展性差</p><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>核心是对象二字，对象是特征与技能的结合体<br>基于该思想编写程序就好比在创造一个世界，世界是由一个个对象组成的，是一种“上帝式” 的思维方式<br>优点：可拓展性强<br>缺点：编程复杂高，容易出现过度设计</p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>对象是特征与技能的结合体，类就是一系列对象相似的特征与技能的结合体。</p><p>在现实世界中：一定是现有的一个个具体存在的对象，后总结出的类。</p><p>在程序中：一定保证先定义类，后产生对象。</p><p>类体代码在类的定义阶段就会立刻执行。</p><p>在程序中特征用变量标识，技能用函数标识。</p><p>因而类中最常见的无非是：变量和函数的定义</p><p><code>Student</code>是类名，<code>school</code>是特征，<code>def</code>定义的函数都是技能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    school = <span class="string">&#x27;taiyang&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;is learning&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;is sleeping&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_course</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;choose course&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(Student.__dict__)</span><br></pre></td></tr></table></figure><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(Student.school) <span class="comment">#数据属性是所有对象共享的</span></span><br><span class="line"><span class="built_in">print</span>(Student.learn)  <span class="comment">#函数属性是绑定给对象用的</span></span><br></pre></td></tr></table></figure><h4 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student.country = <span class="string">&#x27;china&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(Student.country)</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> Student.country</span><br><span class="line"><span class="built_in">print</span>(Student.country)</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>类中可以有任意python代码，这些代码在类定义阶段便会执行</p><p>因而会产生新的名称空间，用来存放类的变量名与函数名，可以通过<code>Student.__dict__</code>查看</p><p>对于经典类来说我们可以通过该字典操作类名称空间的名字（新式类有限制），但<code>python</code>为我们提供专门的<code>.</code>语法。</p><p>点是访问属性的语法，类中定义的名字，都是类的属性。</p><h4 id="程序中类的用法"><a href="#程序中类的用法" class="headerlink" title="程序中类的用法"></a>程序中类的用法</h4><p><code>.</code>专门用来访问属性，本质操作的就是<code>__dict__</code></p><p><code>Student.school</code> 等于经典类的操作<code>Student.__dict__[&#39;school&#39;]</code></p><p><code>Student.school=&#39;taiyang&#39;</code>等于经典类的操作<code>Student.__dict__[&#39;school&#39;]=‘taiyang’</code></p><p><code>Student.x=1</code>等于经典的类的操作<code>Student.__dict__[&#39;x&#39;]=1</code></p><p><code>del Student.x</code>等于经典的类的操作<code>Student.__dict__.pop(&#39;x&#39;)</code></p><h4 id="python中类内置的特殊属性"><a href="#python中类内置的特殊属性" class="headerlink" title="python中类内置的特殊属性"></a>python中类内置的特殊属性</h4><p><code>类名.__name__</code># 类的名字(字符串)<br><code>类名.__doc__</code># 类的文档字符串<br><code>类名.__base__</code># 类的第一个父类(在讲继承时会讲)<br><code>类名.__bases__</code># 类所有父类构成的元组(在讲继承时会讲)<br><code>类名.__dict__</code># 类的字典属性<br><code>类名.__module__</code># 类定义所在的模块<br><code>类名.__class__</code># 实例对应的类(仅新式类中)</p><h2 id="如何绑定到对象独有特征？"><a href="#如何绑定到对象独有特征？" class="headerlink" title="如何绑定到对象独有特征？"></a>如何绑定到对象独有特征？</h2><p>调用类的过程又称为实例化</p><p>得到一个返回值，即对象，该对象是一个空对象。</p><p>示例：</p><p>改写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    school = <span class="string">&#x27;taiyang&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>): <span class="comment">#在调用类时会自动触发执行。</span></span><br><span class="line">        self.Name = name</span><br><span class="line">        self.Sex = sex</span><br><span class="line">        self.Age = age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;is learning&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;is sleeping&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_course</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;choose course&#x27;</span>)</span><br><span class="line"><span class="comment">#实例化三个对象</span></span><br><span class="line">stu1 = Student(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">stu2 = Student(<span class="string">&#x27;smith&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">28</span>)</span><br><span class="line">stu3 = Student(<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用对象特有属性。</span></span><br><span class="line"><span class="built_in">print</span>(stu1.Name) <span class="comment">#jack</span></span><br><span class="line"><span class="built_in">print</span>(stu2.Name) <span class="comment">#smith</span></span><br></pre></td></tr></table></figure><h2 id="属性查找与绑定方法"><a href="#属性查找与绑定方法" class="headerlink" title="属性查找与绑定方法"></a>属性查找与绑定方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    school = <span class="string">&#x27;taiyang&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is learning&#x27;</span> %self.Name)</span><br><span class="line">        <span class="built_in">print</span>(x, y)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sleep</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;is sleeping&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_course</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;choose course&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.Name = name</span><br><span class="line">        self.Sex = sex</span><br><span class="line">        self.Age = age</span><br><span class="line"><span class="comment">#1.查找一个对象的属性顺序是：先找对象自己的__dict__，再找类的__dict__。</span></span><br><span class="line">stu1 = Student(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">stu2 = Student(<span class="string">&#x27;smith&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">28</span>)</span><br><span class="line">stu3 = Student(<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(stu1.__dict__) <span class="comment">#&#123;&#x27;Name&#x27;: &#x27;jack&#x27;, &#x27;Sex&#x27;: &#x27;男&#x27;, &#x27;Age&#x27;: 18&#125;</span></span><br><span class="line"><span class="built_in">print</span>(stu1.Name, stu1.Age, stu1.Sex) <span class="comment">#jack 18 男</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.类的数据属性是所有对象共享，所有对象都指向同一个内存地址。</span></span><br><span class="line"><span class="built_in">print</span>(Student.school, <span class="built_in">id</span>(Student.school)) <span class="comment">#taiyang 2061253245552</span></span><br><span class="line"><span class="built_in">print</span>(stu1.school, <span class="built_in">id</span>(stu1.school)) <span class="comment">#taiyang 2061253245552</span></span><br><span class="line"><span class="built_in">print</span>(stu2.school, <span class="built_in">id</span>(stu2.school)) <span class="comment">#taiyang 2061253245552</span></span><br><span class="line"><span class="built_in">print</span>(stu3.school, <span class="built_in">id</span>(stu3.school)) <span class="comment">#taiyang 2061253245552</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.类中定义的函数是绑定给对象使用的。</span></span><br><span class="line"><span class="comment"># 不同对象就是不同绑定方法。</span></span><br><span class="line"><span class="comment"># 绑定给谁，就应该由谁来调用,谁来调用就会把谁当作第一个参数传给对应的函数。</span></span><br><span class="line"><span class="built_in">print</span>(Student.learn)  <span class="comment">#&lt;function Student.learn at 0x0000026B2F04F9D0&gt;</span></span><br><span class="line"><span class="built_in">print</span>(stu1.learn) <span class="comment">#&lt;bound method Student.learn of &lt;__main__.Student object at 0x0000026B2F05EFD0&gt;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(stu2.learn) <span class="comment">#&lt;bound method Student.learn of &lt;__main__.Student object at 0x00000227AB11EF10&gt;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(stu3.learn) <span class="comment">#&lt;bound method Student.learn of &lt;__main__.Student object at 0x00000227AB11ED00&gt;&gt;</span></span><br><span class="line"></span><br><span class="line">stu1.learn(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">#等于Student.learn(stu1, 1, 2)</span></span><br><span class="line">stu2.learn(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">stu3.learn(<span class="number">5</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure><p>解析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stu1.learn #stu1对象绑定公共函数属性learn</span><br><span class="line">Student.learn #Student类访问公共函数属性learn</span><br><span class="line">它们都可以加括号访问公共函数属性learn</span><br></pre></td></tr></table></figure><p>python中一切皆为对象，且<code>python3</code>中类与类型是一个概念，类型就是类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类型dict就是类dict</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#实例化的到3个对象l1,l2,l3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l1=<span class="built_in">list</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l2=<span class="built_in">list</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l3=<span class="built_in">list</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#三个对象都有绑定方法append,是相同的功能,但内存地址不同</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l1.append</span><br><span class="line">&lt;built-<span class="keyword">in</span> method append of <span class="built_in">list</span> <span class="built_in">object</span> at <span class="number">0x10b482b48</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l2.append</span><br><span class="line">&lt;built-<span class="keyword">in</span> method append of <span class="built_in">list</span> <span class="built_in">object</span> at <span class="number">0x10b482b88</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l3.append</span><br><span class="line">&lt;built-<span class="keyword">in</span> method append of <span class="built_in">list</span> <span class="built_in">object</span> at <span class="number">0x10b482bc8</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#操作绑定方法l1.append(3),就是在往l1添加3,绝对不会将3添加到l2或l3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l1.append(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l1</span><br><span class="line">[<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l2</span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l3</span><br><span class="line">[]</span><br><span class="line"><span class="comment">#调用类list.append(l3,111)等同于l3.append(111)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>.append(l3,<span class="number">111</span>) <span class="comment">#l3.append(111)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l3</span><br><span class="line">[<span class="number">111</span>] </span><br></pre></td></tr></table></figure><h2 id="对象之间的交互"><a href="#对象之间的交互" class="headerlink" title="对象之间的交互"></a>对象之间的交互</h2><p>小练习:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Garen</span>: <span class="comment">#定义英雄盖伦的类，不同的玩家可以用它实例出自己英雄;</span></span><br><span class="line">    camp = <span class="string">&#x27;demacia&#x27;</span> <span class="comment">#所有玩家的英雄(盖伦)的阵营都是Demacia;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,nickname,life_value,aggresivity</span>):</span><br><span class="line">        self.nickname=nickname <span class="comment">#为自己的盖伦起个别名;</span></span><br><span class="line">        self.life_value=life_value <span class="comment">#英雄都有自己的生命值;</span></span><br><span class="line">        self.aggresivity=aggresivity <span class="comment">#英雄都有自己的攻击力;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">self,enemy</span>):</span><br><span class="line">        enemy.life_value-=self.aggresivity <span class="comment">#根据自己的攻击力，攻击敌人就减掉敌人的生命值。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Riven</span>:</span><br><span class="line">    camp = <span class="string">&#x27;Noxus&#x27;</span> <span class="comment">#所有玩家的英雄(锐雯)的阵营都是Noxus;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,nickname,life_value,aggresivity</span>):</span><br><span class="line">        self.nickname=nickname <span class="comment">#为自己的锐雯起个别名;</span></span><br><span class="line">        self.life_value=life_value <span class="comment">#英雄都有自己的生命值;</span></span><br><span class="line">        self.aggresivity=aggresivity <span class="comment">#英雄都有自己的攻击力;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">self,enemy</span>): <span class="comment">#普通攻击技能，enemy是敌人;</span></span><br><span class="line">        enemy.life_value-=self.aggresivity <span class="comment">#根据自己的攻击力，攻击敌人就减掉敌人的生命值。</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fire</span>(<span class="params">self,enemy</span>):</span><br><span class="line">        enemy.life_value-=<span class="number">100</span></span><br><span class="line"><span class="comment">#实例出俩英雄</span></span><br><span class="line">g1=Garen(<span class="string">&#x27;草丛猥琐男&#x27;</span>, <span class="number">1000</span>,<span class="number">100</span>)</span><br><span class="line">r1=Riven(<span class="string">&#x27;猛男雯雯&#x27;</span>,<span class="number">200</span>,<span class="number">500</span>)</span><br><span class="line"><span class="comment">#交互</span></span><br><span class="line"><span class="built_in">print</span>(r1.life_value) <span class="comment">#攻击之前锐雯血量 200</span></span><br><span class="line">g1.attack(r1) <span class="comment">#盖伦攻击锐雯</span></span><br><span class="line"><span class="built_in">print</span>(r1.life_value) <span class="comment">#攻击之后锐雯剩余血量 100</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.站的角度不同，定义出的类是截然不同的</p><p>2.现实中的类并不完全等于程序中的类，比如现实中的公司类，在程序中有时需要拆分成部门类，业务类。</p><p>3.有时为了编程需求，程序中也可能会定义现实中不存在的类，比如策略类，现实中并不存在，但是在程序中却是一个很常见的类。</p><h2 id="从代码级别看面向对象"><a href="#从代码级别看面向对象" class="headerlink" title="从代码级别看面向对象"></a>从代码级别看面向对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在没有学习类这个概念时，数据与功能是分离的</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exc1</span>(<span class="params">host,port,db,charset</span>):</span><br><span class="line">    conn=connect(host,port,db,charset)</span><br><span class="line">    conn.execute(sql)</span><br><span class="line">    <span class="keyword">return</span> xxx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exc2</span>(<span class="params">host,port,db,charset,proc_name</span>)</span><br><span class="line">    conn=connect(host,port,db,charset)</span><br><span class="line">    conn.call_proc(sql)</span><br><span class="line">    <span class="keyword">return</span> xxx</span><br><span class="line"><span class="comment">#每次调用都需要重复传入一堆参数</span></span><br><span class="line">exc1(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">3306</span>,<span class="string">&#x27;db1&#x27;</span>,<span class="string">&#x27;utf8&#x27;</span>,<span class="string">&#x27;select * from tb1;&#x27;</span>)</span><br><span class="line">exc2(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">3306</span>,<span class="string">&#x27;db1&#x27;</span>,<span class="string">&#x27;utf8&#x27;</span>,<span class="string">&#x27;存储过程的名字&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#我们能想到的解决方法是，把这些变量都定义成全局变量.</span></span><br><span class="line">HOST=‘<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>’</span><br><span class="line">PORT=<span class="number">3306</span></span><br><span class="line">DB=‘db1’</span><br><span class="line">CHARSET=‘utf8’</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exc1</span>(<span class="params">host,port,db,charset</span>):</span><br><span class="line">    conn=connect(host,port,db,charset)</span><br><span class="line">    conn.execute(sql)</span><br><span class="line">    <span class="keyword">return</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exc2</span>(<span class="params">host,port,db,charset,proc_name</span>)</span><br><span class="line">    conn=connect(host,port,db,charset)</span><br><span class="line">    conn.call_proc(sql)</span><br><span class="line">    <span class="keyword">return</span> xxx</span><br><span class="line"></span><br><span class="line">exc1(HOST,PORT,DB,CHARSET,<span class="string">&#x27;select * from tb1;&#x27;</span>)</span><br><span class="line">exc2(HOST,PORT,DB,CHARSET,<span class="string">&#x27;存储过程的名字&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">但是<span class="number">2</span>的解决方法也是有问题的，按照<span class="number">2</span>的思路，我们将会定义一大堆全局变量，这些全局变量并没有做任何区分，即能够被所有功能使用，然而事实上只有HOST，PORT，DB，CHARSET是给exc1和exc2这两个功能用的。言外之意：我们必须找出一种能够将数据与操作数据的方法组合到一起的解决方法，这就是我们说的类了.</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MySQLHandler</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,host,port,db,charset=<span class="string">&#x27;utf8&#x27;</span></span>):</span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.db=db</span><br><span class="line">        self.charset=charset</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exc1</span>(<span class="params">self,sql</span>):</span><br><span class="line">        conn=connect(self.host,self.port,self.db,self.charset)</span><br><span class="line">        res=conn.execute(sql)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exc2</span>(<span class="params">self,sql</span>):</span><br><span class="line">        conn=connect(self.host,self.port,self.db,self.charset)</span><br><span class="line">        res=conn.call_proc(sql)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">obj=MySQLHandler(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">3306</span>,<span class="string">&#x27;db1&#x27;</span>)</span><br><span class="line">obj.exc1(<span class="string">&#x27;select * from tb1;&#x27;</span>)</span><br><span class="line">obj.exc2(<span class="string">&#x27;存储过程的名字&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#改进</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MySQLHandler</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,host,port,db,charset=<span class="string">&#x27;utf8&#x27;</span></span>):</span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.db=db</span><br><span class="line">        self.charset=charset</span><br><span class="line">        self.conn=connect(self.host,self.port,self.db,self.charset)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exc1</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="keyword">return</span> self.conn.execute(sql)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exc2</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="keyword">return</span> self.conn.call_proc(sql)</span><br><span class="line"></span><br><span class="line">obj=MySQLHandler(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">3306</span>,<span class="string">&#x27;db1&#x27;</span>)</span><br><span class="line">obj.exc1(<span class="string">&#x27;select * from tb1;&#x27;</span>)</span><br><span class="line">obj.exc2(<span class="string">&#x27;存储过程的名字&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="继承与派生"><a href="#继承与派生" class="headerlink" title="继承与派生"></a>继承与派生</h2><h3 id="什么是继承？"><a href="#什么是继承？" class="headerlink" title="什么是继承？"></a>什么是继承？</h3><p>继承是一种创建新类的方式，新建的类可以继承一个或多个父类（python支持多继承），父类又可称作基类或超类，新建的类称为派生类或子类。</p><p>子类会“遗传”父类的属性，从而解决代码重用的问题。</p><p>python中类的继承分为：单继承和多继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ParentClass1</span>: <span class="comment">#定义父类</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ParentClass2</span>: <span class="comment">#定义父类</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubClass1</span>(<span class="title class_ inherited__">ParentClass1</span>): <span class="comment">#单继承，基类是ParentClass1，派生类是SubClass</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubClass2</span>(ParentClass1,ParentClass2): <span class="comment">#python支持多继承，用逗号分隔开多个继承的类</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="查看继承"><a href="#查看继承" class="headerlink" title="查看继承"></a>查看继承</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SubClass1.__bases__ <span class="comment">#__base__只查看从左到右继承的第一个子类，__bases__则是查看所有继承的父类</span></span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.ParentClass1&#x27;</span>&gt;,)</span><br><span class="line">SubClass2.__bases__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.ParentClass1&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.ParentClass2&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure><p>提示：如果没有指定基类，python的类会默认继承object类，object是所有python类的基类，他提供了一些常见的方法（如<code>__str__</code>）的实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ParentClass1.__bases__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line">ParentClass2.__bases__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br></pre></td></tr></table></figure><h3 id="经典类与新式类"><a href="#经典类与新式类" class="headerlink" title="经典类与新式类"></a>经典类与新式类</h3><p>在<code>python2</code> 中类分为两种：</p><p>1.经典类:   指的是没有继承<code>object</code>类的类，以及该类的子类。</p><p>2.新式类：指的是继承<code>object</code>类的类，以及该类的子类。</p><p>在<code>python3</code>中类统一为新式类</p><p>继承描述的是子类和父类之间的关系，是一种<code>什么是什么的关系</code>。要找出这种关系，必须先抽象再继承。</p><p>抽象即抽取类似或者说比较像的部分。</p><p><strong>继承：是基于抽象的结果，通过编程语言去实现它，肯定是先经历抽象这个过程，才能通过继承的方式去表达出抽象的结构。</strong></p><p>抽象只是分析和设计的过程中，一个动作或者说一种技巧，通过抽象可以得到类。</p><p>在开发程序的过程中，如果我们定义了一个类A，然后又想新建立另外一个类B，但是类B的大部分内容与类A的相同时</p><p>我们不可能从头开始写一个类B，这就用到了类的继承的概念。</p><p>通过继承的方式新建类B，让B继承A，B会‘遗传’A的所有属性(数据属性和函数属性)，实现代码重用。</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>定义两个类<code>Student</code>类和<code>Teacher</code>类，都有相同的数据属性（都在同一个学校），也有相同的函数属性。姓名、性别、年龄。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    school=<span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.sex=sex</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is learing&#x27;</span>%self.name)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>:</span><br><span class="line">    school=<span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.sex=sex</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">teach</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is teaching&#x27;</span>%self.name)</span><br></pre></td></tr></table></figure><p>使用继承，把相同部分提取出来，单独做成父类。学生和老师类都作为子类继承父类的所有属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    school=<span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.sex=sex</span><br><span class="line">        self.age=age</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is learing&#x27;</span>%self.name) </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">teach</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is teaching&#x27;</span>%self.name)</span><br><span class="line"><span class="comment">#初始化</span></span><br><span class="line">stu1=Student(<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;man&#x27;</span>,<span class="number">18</span>)</span><br><span class="line">teacher1=Teacher(<span class="string">&#x27;john&#x27;</span>,<span class="string">&#x27;woman&#x27;</span>,<span class="number">20</span>)</span><br><span class="line"><span class="comment">#Student和Teacher作为子类继承了父类People类的所有属性。可以直接调用。</span></span><br><span class="line"><span class="built_in">print</span>(stu1.__dict__)</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;man&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="派生"><a href="#派生" class="headerlink" title="派生"></a>派生</h3><p>当在父类中找不到所需的属性时，子类可以定义属于自己的特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    school=<span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.sex=sex</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name, self.sex, self.age))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is learing&#x27;</span>%self.name)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是学生:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name,self.sex,self.age))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">teach</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is teaching&#x27;</span>%self.name)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是老师:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name,self.sex,self.age))</span><br><span class="line"><span class="comment">#初始化</span></span><br><span class="line">stu1=Student(<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;man&#x27;</span>,<span class="number">18</span>)</span><br><span class="line">teacher1=Teacher(<span class="string">&#x27;john&#x27;</span>,<span class="string">&#x27;woman&#x27;</span>,<span class="number">20</span>)</span><br><span class="line"><span class="comment">#调用tell_info()函数属性</span></span><br><span class="line">stu1.tell_info()</span><br><span class="line">teacher1.tell_info()</span><br><span class="line">我是学生:&lt;名字:jack 性别:man 年龄:<span class="number">18</span>&gt; </span><br><span class="line">我是老师:&lt;名字:john 性别:woman 年龄:<span class="number">20</span>&gt; </span><br></pre></td></tr></table></figure><p><code>tell_info</code>函数属性查找顺序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stu1对象自己有没有--&gt;stu1所在的类（Student）有没有--&gt;发现有直接调用。</span><br><span class="line">如果没有--&gt;查找父类（People）有没有（有直接调用，没有直接抛出异常）</span><br><span class="line">异常：AttributeError: &#x27;Student&#x27; object has no attribute &#x27;tell_info&#x27;</span><br></pre></td></tr></table></figure><h2 id="子类重用父类方法"><a href="#子类重用父类方法" class="headerlink" title="子类重用父类方法"></a>子类重用父类方法</h2><p>在子类派生出的新方法中，往往需要重用父类的方法，我们有两种实现方式：</p><p>1.“指名道姓”，即<code>父类名.父类方法()</code>跟继承没关系。和函数调用类似。</p><p><code>Student类</code>中除了继承父类的<code>name sex age </code>方法之外，还派生出自己的新方法<code>course stu_id</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    school = <span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name, self.sex, self.age))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, course, stu_id</span>):</span><br><span class="line">        People.__init__(self, name, sex, age)</span><br><span class="line">        self.course = course</span><br><span class="line">        self.stu_id = stu_id</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is learning.&quot;</span>%(self.name))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是学生: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        People.tell_info(self)</span><br><span class="line"></span><br><span class="line">stu1 = Student(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;man&#x27;</span>, <span class="number">18</span>,<span class="string">&#x27;python&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">stu1.tell_info()</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">我是学生: &lt;名字:jack 性别:man 年龄:<span class="number">18</span>&gt; </span><br></pre></td></tr></table></figure><p>2.使用<code>super()</code>，依赖于继承。依循<code>mro列表</code>从当前类的下一个类开始查找。</p><p>在<code>python2</code>中<code>super(自己的类名, self)</code>，而在<code>python3</code>中<code>super()</code>函数中可以不传参。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    school = <span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name, self.sex, self.age))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, course, stu_id</span>):</span><br><span class="line">        <span class="built_in">super</span>(Student, self).__init__(name, sex, age)</span><br><span class="line">        self.course = course</span><br><span class="line">        self.stu_id = stu_id</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is learning.&quot;</span>%(self.name))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是学生: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">super</span>(Student, self).tell_info()</span><br><span class="line"></span><br><span class="line">stu1 = Student(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;man&#x27;</span>, <span class="number">18</span>,<span class="string">&#x27;python&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">stu1.tell_info()</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">我是学生: &lt;名字:jack 性别:man 年龄:<span class="number">18</span>&gt; </span><br></pre></td></tr></table></figure><p>示例。问结果是什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;======&gt;f2&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Foo f1&#x27;</span>)</span><br><span class="line">        <span class="built_in">super</span>().f2()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bar</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Bar f2&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sub</span>(Foo, Bar):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">s=Sub()</span><br><span class="line">s.f1()</span><br></pre></td></tr></table></figure><p>解析：</p><p>先查看子类<code>Sub()</code>的<code>mro方法</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(Sub.mro()) <span class="comment">#[&lt;class &#x27;__main__.Sub&#x27;&gt;, &lt;class &#x27;__main__.Foo&#x27;&gt;, &lt;class &#x27;__main__.Bar&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></span><br></pre></td></tr></table></figure><p>寻找<code>f1()</code>时的顺序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对象s-&gt;对象所在类Sub-&gt;类Sub左侧父类Foo-&gt;找到f1(),并打印&#x27;Foo f1&#x27;。遇到super()，super()遵循mro列表继续查找f2().当前在Foo类。-&gt;找到Foo下一个类Bar中有f2方法，打印&#x27;Bar f2&#x27;-&gt;查找结束</span><br><span class="line">#最终结果</span><br><span class="line">Foo f1</span><br><span class="line">Bar f2</span><br><span class="line">即使super()所在类中有同名函数属性f2()也不会调用，只会调用当前所在类的下一个类中的方法。</span><br><span class="line">即使没有直接继承关系，`super`仍然会按照`mro`继续往后查找。这就是为什么super所在的类有同名的f2函数也不会调用的原因。</span><br></pre></td></tr></table></figure><h2 id="组合与重用"><a href="#组合与重用" class="headerlink" title="组合与重用"></a>组合与重用</h2><p>组合指的是，在一个类中以另外一个类的对象作为数据属性，称为类的组合。</p><h3 id="继承与组合的区别"><a href="#继承与组合的区别" class="headerlink" title="继承与组合的区别"></a>继承与组合的区别</h3><p>继承：<code>什么是什么</code></p><p>组合：<code>什么有什么</code></p><h4 id="组合示例1"><a href="#组合示例1" class="headerlink" title="组合示例1"></a>组合示例1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    school = <span class="string">&#x27;qinghua&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;名字:%s 性别:%s 年龄:%s&gt; &#x27;</span>%(self.name, self.sex, self.age))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, course, stu_id</span>):</span><br><span class="line">        People.__init__(self, name, sex, age)</span><br><span class="line">        self.course = course</span><br><span class="line">        self.stu_id = stu_id</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is learning.&quot;</span>%(self.name))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是学生: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        People.tell_info(self)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, level, salary</span>):</span><br><span class="line">        People.__init__(self, name, sex, age)</span><br><span class="line">        self.level = level</span><br><span class="line">        self.salary = salary</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">teach</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is teaching.&quot;</span>%(self.name))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是老师：&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        People.tell_info(self)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Date</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, year, mon, day</span>):</span><br><span class="line">        self.year = year</span><br><span class="line">        self.mon = mon</span><br><span class="line">        self.day = day</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;出生日期是:&lt;%s-%s-%s&gt;&#x27;</span>%(self.year, self.mon, self.day))</span><br><span class="line"></span><br><span class="line">stu1 = Student(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;man&#x27;</span>, <span class="number">18</span>,<span class="string">&#x27;python&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">date_obj1 = Date(<span class="number">1995</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">stu1.birth = date_obj1</span><br><span class="line">teacher1 = Teacher(<span class="string">&#x27;smith&#x27;</span>, <span class="string">&#x27;women&#x27;</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">4000</span>)</span><br><span class="line">date_obj2 = Date(<span class="number">1980</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">teacher1.birth = date_obj2</span><br><span class="line"></span><br><span class="line">stu1.birth.tell_info()</span><br><span class="line">teacher1.birth.tell_info()</span><br></pre></td></tr></table></figure><p>解析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Teacher类和Stuent类都有共同的属性生日，所以单独创建Date类。</span><br><span class="line">#初始化Date类</span><br><span class="line">date_obj1 = Date(1995, 10, 2)</span><br><span class="line">#学生1的生日是date_obj1</span><br><span class="line">stu1.birth = date_obj1</span><br><span class="line">#调用学生1的tell_info方法</span><br><span class="line">stu1.birth.tell_info()</span><br></pre></td></tr></table></figure><h4 id="组合示例2"><a href="#组合示例2" class="headerlink" title="组合示例2"></a>组合示例2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,sex</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.sex=sex</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,period,price</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.period=period</span><br><span class="line">        self.price=price</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tell_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;%s %s %s&gt;&#x27;</span> %(self.name,self.period,self.price))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,sex,job_title</span>):</span><br><span class="line">        People.__init__(self,name,age,sex)</span><br><span class="line">        self.job_title=job_title</span><br><span class="line">        self.course=[]</span><br><span class="line">        self.students=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,sex</span>):</span><br><span class="line">        People.__init__(self,name,age,sex)</span><br><span class="line">        self.course=[]</span><br><span class="line"></span><br><span class="line">eg=Teacher(<span class="string">&#x27;eg&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;霸道金牌讲师&#x27;</span>)</span><br><span class="line">s1=Student(<span class="string">&#x27;牛二&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;female&#x27;</span>)</span><br><span class="line"></span><br><span class="line">python=Course(<span class="string">&#x27;python&#x27;</span>,<span class="string">&#x27;3mons&#x27;</span>,<span class="number">3000.0</span>)</span><br><span class="line">linux=Course(<span class="string">&#x27;linux&#x27;</span>,<span class="string">&#x27;3mons&#x27;</span>,<span class="number">3000.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#为老师eg和学生s1添加课程</span></span><br><span class="line">eg.course.append(python)</span><br><span class="line">eg.course.append(linux)</span><br><span class="line">s1.course.append(python)</span><br><span class="line"></span><br><span class="line"><span class="comment">#为老师eg添加学生s1</span></span><br><span class="line">eg.students.append(s1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看老师的课程</span></span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> eg.course:</span><br><span class="line">    obj.tell_info()</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">&lt;python 3mons <span class="number">3000.0</span>&gt;</span><br><span class="line">&lt;linux 3mons <span class="number">3000.0</span>&gt;</span><br><span class="line"><span class="comment">#查看学生的课程</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1.course:</span><br><span class="line">    i.tell_info()</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">&lt;python 3mons <span class="number">3000.0</span>&gt;</span><br></pre></td></tr></table></figure><p>解析:</p><p>学生选课之前课程为空，课程有<code>Python</code>和<code>Linux</code>可以选择，学生选择<code>Python</code>。为学生分配导师，最后查看学生所选的课程。</p><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><h3 id="什么是抽象类？"><a href="#什么是抽象类？" class="headerlink" title="什么是抽象类？"></a>什么是抽象类？</h3><p>抽象类是一个特殊类，只能被继承不能实例化。</p><h3 id="为什么要有抽象类？"><a href="#为什么要有抽象类？" class="headerlink" title="为什么要有抽象类？"></a>为什么要有抽象类？</h3><p>如果说类是从一堆对象中抽取相同的内容而来的，那么抽象类就是从一类中抽取相同的内容而来的，内容包括数据属性和函数属性。</p><p>从实现角度来看，抽象类与普通类的不同之处在于：抽象类中只能有抽象方法（没有实现功能），该类不能被实例化，只能被继承，且子类必须实现抽象方法。这一点与接口有点类似，但其实是不同的。</p><h3 id="在python中实现抽象类"><a href="#在python中实现抽象类" class="headerlink" title="在python中实现抽象类"></a>在<code>python</code>中实现抽象类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> abc</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>(metaclass=abc.ABCMeta):</span><br><span class="line"><span class="meta">    @abc.abstractmethod </span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pig</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">peol=People() <span class="comment">#TypeError: Can&#x27;t instantiate abstract class People with abstract methods eat, run</span></span><br></pre></td></tr></table></figure><p>解析：</p><p>引用<code>abc</code>模块实现<code>java</code>中接口功能。抽象化（<code>Animal</code>）类下面的子类必须使用父类（<code>Animal</code>）定义好的功能，名称也不能改。</p><p><strong>要在抽象类中定义抽象方法，我们必须使用装饰器：<code>@abstractmethod</code>。内置<code>abc</code>模块包含这两者。</strong></p><p><strong>作用是强制子类来使用定义好的功能。</strong></p><p>如果子类不使用抽象类中定义的功能，将不能进行实例化。异常如上段代码所示。</p><p>定义好功能后就能实例化正常调用了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> abc</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>(metaclass=abc.ABCMeta):</span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;He is eatting&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;He is running&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pig</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">peol=People() <span class="comment">#实例化</span></span><br><span class="line">peol.eat() <span class="comment">#调用eat()。He is eatting</span></span><br><span class="line">peol.run() <span class="comment">#调用run()。He is running</span></span><br></pre></td></tr></table></figure><p><code>Linux</code>中一切皆文件。用抽象类定义一套模板。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> abc</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">File</span>(metaclass=abc.ABCMeta):</span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Disk</span>(<span class="title class_ inherited__">File</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;disk read&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;disk write&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Process</span>(<span class="title class_ inherited__">File</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;process read&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;process write&quot;</span>)</span><br><span class="line"></span><br><span class="line">d=Disk</span><br><span class="line">p=Process</span><br><span class="line"></span><br><span class="line">d.read()</span><br><span class="line">d.write()</span><br></pre></td></tr></table></figure><h2 id="继承的原理"><a href="#继承的原理" class="headerlink" title="继承的原理"></a>继承的原理</h2><p>属性的查找有两种方法：深度优先和广度优先。</p><p><img src="/img/postimages/image-20220406220157089.webp" alt="image-20220406220157089"></p><p><img src="/img/postimages/image-20220406220221407.webp" alt="image-20220406220221407"></p><p><strong><code>python2</code>中默认是经典类（深度优先），而<code>python3</code>中默认是新式类（广度优先）。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from A&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from B&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from C&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(<span class="title class_ inherited__">B</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from D&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">E</span>(<span class="title class_ inherited__">C</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;from E&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>(D,E):</span><br><span class="line">    <span class="comment"># def test(self):</span></span><br><span class="line">    <span class="comment">#     print(&#x27;from F&#x27;)</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">f1=F()</span><br><span class="line">f1.test()</span><br><span class="line"><span class="built_in">print</span>(F.__mro__) <span class="comment">#只有新式才有这个属性可以查看线性列表，经典类没有这个属性</span></span><br><span class="line"><span class="comment">#(&lt;class &#x27;__main__.F&#x27;&gt;, &lt;class &#x27;__main__.D&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;__main__.E&#x27;&gt;, &lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#新式类继承顺序:F-&gt;D-&gt;B-&gt;E-&gt;C-&gt;A</span></span><br><span class="line"><span class="comment">#经典类继承顺序:F-&gt;D-&gt;B-&gt;A-&gt;E-&gt;C</span></span><br><span class="line"><span class="comment">#python3中统一都是新式类</span></span><br><span class="line"><span class="comment">#pyhon2中才分新式类与经典类</span></span><br></pre></td></tr></table></figure><p>为了实现继承,python会在<code>MRO列表</code>上从左到右开始查找基类,直到找到第一个匹配这个属性的类为止。<br>而这个<code>MRO列表</code>的构造是通过一个<code>C3线性化算法</code>来实现的。我们不去深究这个算法的数学原理,它实际上就是合并所有父类的<code>MRO列表</code>并遵循如下三条准则:<br>1.子类会先于父类被检查<br>2.多个父类会根据它们在列表中的顺序被检查<br>3.如果对下一个类存在两个合法的选择,选择第一个父类。（查找顺序都是从左到右）</p><h2 id="多态与多态性"><a href="#多态与多态性" class="headerlink" title="多态与多态性"></a>多态与多态性</h2><h3 id="什么是多态？"><a href="#什么是多态？" class="headerlink" title="什么是多态？"></a>什么是多态？</h3><p>同一种事物的不同形态。如：水。有水蒸气、冰、还有液态水三种形态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">peo=People()</span><br><span class="line">dog=Dog()</span><br><span class="line">pig=Pig()</span><br><span class="line"></span><br><span class="line">#peo、dog、pig都是动物,只要是动物肯定有talk方法</span><br><span class="line">#于是我们可以不用考虑它们三者的具体是什么类型,而直接使用</span><br><span class="line">peo.talk()</span><br><span class="line">dog.talk()</span><br><span class="line">pig.talk()</span><br><span class="line"></span><br><span class="line">#更进一步,我们可以定义一个统一的接口来使用</span><br><span class="line">def func(obj):</span><br><span class="line">    obj.talk()</span><br></pre></td></tr></table></figure><h3 id="多态的好处"><a href="#多态的好处" class="headerlink" title="多态的好处"></a>多态的好处</h3><p>1.增加了程序的灵活性</p><p>　　以不变应万变，不论对象千变万化，使用者都是同一种形式去调用，如<code>func(animal)</code></p><p>2.增加了程序额可扩展性</p><p>　　通过继承<code>animal类</code>创建了一个新的类，使用者无需更改自己的代码，还是用<code>func(animal)</code>去调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; class Cat(Animal): #属于动物的另外一种形态：猫</span><br><span class="line">...     def talk(self):</span><br><span class="line">...         print(&#x27;say miao&#x27;)</span><br><span class="line">... </span><br><span class="line">&gt;&gt;&gt; def func(animal): #对于使用者来说，自己的代码根本无需改动</span><br><span class="line">...     animal.talk()</span><br><span class="line">... </span><br><span class="line">&gt;&gt;&gt; cat1=Cat() #实例出一只猫</span><br><span class="line">&gt;&gt;&gt; func(cat1) #甚至连调用方式也无需改变，就能调用猫的talk功能</span><br><span class="line">say miao</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">这样我们新增了一个形态Cat，由Cat类产生的实例cat1，使用者可以在完全不需要修改自己代码的情况下。使用和人、狗、猪一样的方式调用cat1的talk方法，即func(cat1)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><h3 id="鸭子类型"><a href="#鸭子类型" class="headerlink" title="鸭子类型"></a>鸭子类型</h3><p>Python崇尚鸭子类型，即‘如果看起来像、叫声像而且走起路来像鸭子，那么它就是鸭子’</p><p>python程序员通常根据这种行为来编写程序。例如，如果想编写现有对象的自定义版本，可以继承该对象</p><p>也可以创建一个外观和行为像，但与它无任何关系的全新对象，后者通常用于保存程序组件的松耦合度。</p><p>例1：利用标准库中定义的各种‘与文件类似’的对象，尽管这些对象的工作方式像文件，但他们没有继承内置文件对象的方法.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二者都像鸭子,二者看起来都像文件,因而就可以当文件一样去用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TxtFile</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DiskFile</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>例2：其实大家一直在享受着多态性带来的好处，比如Python的序列类型有多种形态：字符串，列表，元组，多态性体现如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#str,list,tuple都是序列类型</span><br><span class="line">s=str(&#x27;hello&#x27;)</span><br><span class="line">l=list([1,2,3])</span><br><span class="line">t=tuple((4,5,6))</span><br><span class="line"></span><br><span class="line">#我们可以在不考虑三者类型的前提下使用s,l,t</span><br><span class="line">s.__len__()</span><br><span class="line">l.__len__()</span><br><span class="line">t.__len__()</span><br><span class="line"></span><br><span class="line">len(s)</span><br><span class="line">len(l)</span><br><span class="line">len(t)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>序列化与反序列化</title>
      <link href="/2022/03/26/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/03/26/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是序列化？"><a href="#什么是序列化？" class="headerlink" title="什么是序列化？"></a>什么是序列化？</h2><p>我们把对象（变量）从内存中变成可存储或传输的过程称之为序列化。在<code>Python</code>中叫<code>pickling</code>，在其他语言中也被称之为<code>serialization</code>，<code>marshalling</code>，<code>flattening</code>等等，都是一个意思。</p><h2 id="为什么要序列化？"><a href="#为什么要序列化？" class="headerlink" title="为什么要序列化？"></a>为什么要序列化？</h2><p>持久保存状态</p><p>内存是无法永久保存数据的，当程序运行了一段时间，我们断电或者重启程序，内存中关于这个程序的之前一段时间的数据（有结构）都被清空了。在断电或重启程序之前将程序当前内存中所有的数据都保存下来（保存到文件中），以便于下次程序执行能够从文件中载入之前的数据，然后继续执行，这就是序列化。</p><p>跨平台数据交互</p><p>序列化之后，不仅可以把序列化后的内容写入磁盘，还可以通过网络传输到别的机器上，如果收发的双方约定好实用一种序列化的格式，那么便打破了平台&#x2F;语言差异化带来的限制，实现了跨平台数据交互。<br>反过来，把变量内容从序列化的对象重新读到内存里称之为反序列化，即<code>unpickling</code>。</p><h2 id="如何序列化之json和pickle"><a href="#如何序列化之json和pickle" class="headerlink" title="如何序列化之json和pickle"></a>如何序列化之<code>json</code>和<code>pickle</code></h2><p><code>json反序列化</code></p><p>如果我们要在不同的编程语言之间传递对象，就必须把对象序列化为标准格式，比如<code>XML</code>，但更好的方法是序列化为<code>JSON</code>，因为<code>JSON</code>表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输。<code>JSON</code>不仅是标准格式，并且比<code>XML</code>更快，而且可以直接在<code>Web页面</code>中读取，非常方便。<br><code>JSON</code>表示的对象就是标准的<code>JavaScript语言</code>的对象，<code>JSON和Python</code>内置的数据类型对应如下：</p><table><thead><tr><th align="center">json类型</th><th align="center">python类型</th></tr></thead><tbody><tr><td align="center">{}</td><td align="center">dic</td></tr><tr><td align="center">[]</td><td align="center">list</td></tr><tr><td align="center">“string”</td><td align="center">str</td></tr><tr><td align="center">1234.56</td><td align="center">int或float</td></tr><tr><td align="center">true&#x2F;false</td><td align="center">True&#x2F;False</td></tr><tr><td align="center">null</td><td align="center">None</td></tr></tbody></table><p>内存中结构化的数据-&gt;<code>格式json</code>-&gt;字符串-&gt;保存到文件中或基于网络传输</p><p>序列化</p><p><code>python-&gt;json</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">json.dumps()</span><br><span class="line">json.dump()</span><br></pre></td></tr></table></figure><p>反序列化</p><p><code>json-&gt;python</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">json.loads()</span><br><span class="line">json.load()</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>需求1</p><p>把<code>user = &#123;&#39;name&#39;: &#39;jack&#39;, &#39;age&#39;: 20, &#39;sex&#39;: &#39;male&#39;&#125;</code>序列化。保存为<code>user_new.json</code></p><p>序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.使用dumps</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">user = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_new.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(json.dumps(user))</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;jack&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">20</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;male&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.使用dump</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">user = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;</span><br><span class="line">json.dump(user, <span class="built_in">open</span>(<span class="string">&#x27;user_new.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">使用dumps和使用dump效果一样。</span><br></pre></td></tr></table></figure><p>需求2：<br>把刚刚序列化后的文件<code>user_new.json</code>反序列化，并查询key所对应的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用loads反序列化</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_new.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">     user=json.loads(f.read())</span><br><span class="line">     <span class="built_in">print</span>(user[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="comment">#结果：jack</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用load反序列化</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">user=json.load(<span class="built_in">open</span>(<span class="string">&#x27;user_new.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(user[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果：jack</span></span><br></pre></td></tr></table></figure><p>以上都是序列化和反序列化文件，自定义的字符串能不能进行序列化和反序列化？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#123;&quot;Name&quot;: &quot;jack&quot;, &quot;Hobby&quot;: &quot;play&quot;, &quot;age&quot;: 20&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(json.loads(s))</span><br><span class="line"><span class="comment">#结果 &#123;&#x27;Name&#x27;: &#x27;jack&#x27;, &#x27;Hobby&#x27;: &#x27;play&#x27;, &#x27;age&#x27;: 20&#125; </span></span><br></pre></td></tr></table></figure><p>注意</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">dct=&quot;&#123;&#x27;1&#x27;:111&#125;&quot;#json 不认单引号</span><br><span class="line">dct=str(&#123;&quot;1&quot;:111&#125;)#报错,因为生成的数据还是单引号:&#123;&#x27;one&#x27;: 1&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dct=&#x27;&#123;&quot;1&quot;:&quot;111&quot;&#125;&#x27;</span><br><span class="line">print(json.loads(dct))</span><br></pre></td></tr></table></figure><p>总结</p><p>无论数据是怎样创建的，只要满足<code>json</code>格式，就可以<code>json.loads</code>出来,不一定非要<code>dumps</code>的数据才能<code>loads</code></p><h2 id="pickle反序列化"><a href="#pickle反序列化" class="headerlink" title="pickle反序列化"></a>pickle反序列化</h2><p><code>json</code>并不是所有类型的数据都能序列化。比如集合类型，这时候需要使用<code>pickle模块</code>了。<br><code>pickle</code>会把所有类型转换成<code>bytes类型</code>。<br><code>Pickle</code>的问题和所有其他编程语言特有的序列化问题一样，就是它只能用于<code>Python</code>，并且可能不同版本的<code>Python</code>彼此都不兼容，因此，只能用<code>Pickle</code>保存那些不重要的数据，不能成功地反序列化也没关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(pickle.dumps(s))</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line"><span class="string">b&#x27;\x80\x04\x95\x0f\x00\x00\x00\x00\x00\x00\x00\x8f\x94(K\x01K\x02K\x03K\x04K\x05\x90.&#x27;</span></span><br></pre></td></tr></table></figure><p>将集合存入文件再序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="comment">#方式1</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;s.plk&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">     f.write(pickle.dumps(s))</span><br><span class="line"><span class="comment">#方式2</span></span><br><span class="line">pickle.dump(s, <span class="built_in">open</span>(<span class="string">&#x27;s.plk&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>))</span><br></pre></td></tr></table></figure><p>反序列化文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="comment">#方式1</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;s.plk&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s = pickle.loads(f.read())</span><br><span class="line">    <span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#方式2</span></span><br><span class="line">s = pickle.load(<span class="built_in">open</span>(<span class="string">&#x27;s.plk&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><h2 id="shelve模块"><a href="#shelve模块" class="headerlink" title="shelve模块"></a>shelve模块</h2><p>shelve模块比pickle模块简单，只有一个open函数，返回类似字典的对象，可读可写;key必须为字符串，而值可以是python所支持的数据类型<br>打开一个文件的同时会创建3个同名文件。<code>.bak .dat .dir</code>结尾。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建</span></span><br><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line">f = shelve.<span class="built_in">open</span>(<span class="string">&#x27;db.sh1&#x27;</span>)</span><br><span class="line">f[<span class="string">&#x27;stu1&#x27;</span>]=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>&#125;</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询</span></span><br><span class="line"><span class="built_in">print</span>(f[<span class="string">&#x27;stu1&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python常用模块</title>
      <link href="/2022/03/26/python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
      <url>/2022/03/26/python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="日志模块角色"><a href="#日志模块角色" class="headerlink" title="日志模块角色"></a>日志模块角色</h2><p>1.<code>Logger</code>:产生日志<br>2.<code>Filter</code>:几乎不用<br>3.<code>Handler</code>: 接收Logger传过来的日志，进行日志格式化，可以打印到终端，也可以打印到文件<br>4.<code>Formatter</code>：日志格式</p><h2 id="日志模块相关说明"><a href="#日志模块相关说明" class="headerlink" title="日志模块相关说明"></a>日志模块相关说明</h2><p>可在<code>logging.basicConfig()</code>函数中可通过具体参数来更改<code>logging</code>模块默认行为，可用参数有.<br><code>filename</code>：用指定的文件名创建<code>FiledHandler</code>，这样日志会被存储在指定的文件中。<br><code>filemode</code>：文件打开方式，在指定了<code>filename</code>时使用这个参数，默认值为“a”还可指定为“w”。<br><code>format</code>：指定<code>handler</code>使用的日志显示格式。<br><code>datefmt</code>：指定日期时间格式。<br><code>level</code>：设置<code>rootlogger</code>的日志级别<br><code>stream</code>：用指定的<code>stream</code>创建<code>StreamHandler</code>。可以指定输出到<code>sys.stderr,sys.stdout</code>或者文件，默认为<code>sys.stderr</code>。若同时列出了<code>filename</code>和<code>stream</code>两个参数，则<code>stream</code>参数会被忽略。</p><h3 id="format参数中可能用到的格式化串"><a href="#format参数中可能用到的格式化串" class="headerlink" title="format参数中可能用到的格式化串"></a>format参数中可能用到的格式化串</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">%(name)s Logger的名字</span><br><span class="line">%(levelno)s 数字形式的日志级别</span><br><span class="line">%(levelname)s 文本形式的日志级别</span><br><span class="line">%(pathname)s 调用日志输出函数的模块的完整路径名，可能没有</span><br><span class="line">%(filename)s 调用日志输出函数的模块的文件名</span><br><span class="line">%(module)s 调用日志输出函数的模块名</span><br><span class="line">%(funcName)s 调用日志输出函数的函数名</span><br><span class="line">%(lineno)d 调用日志输出函数的语句所在的代码行</span><br><span class="line">%(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示</span><br><span class="line">%(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数</span><br><span class="line">%(asctime)s 字符串形式的当前时间。默认格式是 “2003-07-08 16:49:45,896”。逗号后面的是毫秒</span><br><span class="line">%(thread)d 线程ID。可能没有</span><br><span class="line">%(threadName)s 线程名。可能没有</span><br><span class="line">%(process)d 进程ID。可能没有</span><br><span class="line">%(message)s用户输出的消息</span><br></pre></td></tr></table></figure><h2 id="日志打印实现过程"><a href="#日志打印实现过程" class="headerlink" title="日志打印实现过程"></a>日志打印实现过程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment">#1.Logger:产生日志</span></span><br><span class="line">logger1=logging.getLogger(<span class="string">&#x27;访问日志&#x27;</span>) </span><br><span class="line"><span class="comment">#2.Handler: 接收Logger传过来的日志，进行日志格式化，可以打印到终端，也可以打印到文件</span></span><br><span class="line">sh=logging.StreamHandler() <span class="comment">#打印到终端</span></span><br><span class="line">fh1=logging.FileHandler(<span class="string">&#x27;s1.log&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#打印到文件</span></span><br><span class="line">fh2=logging.FileHandler(<span class="string">&#x27;s2.log&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment">#3.Formatter：日志格式</span></span><br><span class="line">formatter1=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(module)s: %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line">formatter2=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s : %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line">formatter3=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s : %(module)s : %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.为Handler绑定日志格式</span></span><br><span class="line">sh.setFormatter(formatter1)</span><br><span class="line">fh1.setFormatter(formatter2)</span><br><span class="line">fh2.setFormatter(formatter3)</span><br><span class="line"><span class="comment">#5.为logger 绑定handler</span></span><br><span class="line">logger1.addHandler(sh)</span><br><span class="line">logger1.addHandler(fh1)</span><br><span class="line">logger1.addHandler(fh2)</span><br><span class="line"><span class="comment">#6.设置日志级别:logger 对象的日志级别应该&lt;=handler的日志级别</span></span><br><span class="line"><span class="comment">#logger1.setLevel(30)</span></span><br><span class="line">logger1.setLevel(<span class="number">10</span>)</span><br><span class="line">sh.setLevel(<span class="number">10</span>)</span><br><span class="line">fh1.setLevel(<span class="number">10</span>)</span><br><span class="line">fh2.setLevel(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.测试</span></span><br><span class="line">logger1.debug(<span class="string">&#x27;测试者玩&#x27;</span>)</span><br><span class="line">logger1.info(<span class="string">&#x27;运行还算正常&#x27;</span>)</span><br><span class="line">logger1.warning(<span class="string">&#x27;可能要有bug了&#x27;</span>)</span><br><span class="line">logger1.error(<span class="string">&#x27;不好了，真出bug了&#x27;</span>)</span><br><span class="line">logger1.critical(<span class="string">&#x27;推到重写&#x27;</span>)</span><br></pre></td></tr></table></figure><p>去注释版</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger1=logging.getLogger(<span class="string">&#x27;访问日志&#x27;</span>) </span><br><span class="line">sh=logging.StreamHandler()</span><br><span class="line">fh1=logging.FileHandler(<span class="string">&#x27;s1.log&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) </span><br><span class="line">fh2=logging.FileHandler(<span class="string">&#x27;s2.log&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">formatter1=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(module)s: %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line">formatter2=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s : %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line">formatter3=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s : %(module)s : %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line">sh.setFormatter(formatter1)</span><br><span class="line">fh1.setFormatter(formatter2)</span><br><span class="line">fh2.setFormatter(formatter3)</span><br><span class="line">logger1.addHandler(sh)</span><br><span class="line">logger1.addHandler(fh1)</span><br><span class="line">logger1.addHandler(fh2)</span><br><span class="line"><span class="comment">#logger1.setLevel(30)</span></span><br><span class="line">logger1.setLevel(<span class="number">10</span>)</span><br><span class="line">sh.setLevel(<span class="number">10</span>)</span><br><span class="line">fh1.setLevel(<span class="number">10</span>)</span><br><span class="line">fh2.setLevel(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logger1.debug(<span class="string">&#x27;测试者玩&#x27;</span>)</span><br><span class="line">logger1.info(<span class="string">&#x27;运行还算正常&#x27;</span>)</span><br><span class="line">logger1.warning(<span class="string">&#x27;可能要有bug了&#x27;</span>)</span><br><span class="line">logger1.error(<span class="string">&#x27;不好了，真出bug了&#x27;</span>)</span><br><span class="line">logger1.critical(<span class="string">&#x27;推到重写&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><p><code>s1.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2022-03-22 20:26:58 PM : 测试者玩</span><br><span class="line">2022-03-22 20:26:58 PM : 运行还算正常</span><br><span class="line">2022-03-22 20:26:58 PM : 可能要有bug了</span><br><span class="line">2022-03-22 20:26:58 PM : 不好了，真出bug了</span><br><span class="line">2022-03-22 20:26:58 PM : 推到重写</span><br></pre></td></tr></table></figure><p><code>s2.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2022-03-22 20:26:58 PM : my_logging : 测试者玩</span><br><span class="line">2022-03-22 20:26:58 PM : my_logging : 运行还算正常</span><br><span class="line">2022-03-22 20:26:58 PM : my_logging : 可能要有bug了</span><br><span class="line">2022-03-22 20:26:58 PM : my_logging : 不好了，真出bug了</span><br><span class="line">2022-03-22 20:26:58 PM : my_logging : 推到重写</span><br></pre></td></tr></table></figure><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2022-03-26 11:32:48 AM - 访问日志 - INFO - my_logging: 运行还算正常</span><br><span class="line">2022-03-26 11:32:48 AM - 访问日志 - WARNING - my_logging: 可能要有bug了</span><br><span class="line">2022-03-26 11:32:48 AM - 访问日志 - ERROR - my_logging: 不好了，真出bug了</span><br><span class="line">2022-03-26 11:32:48 AM - 访问日志 - CRITICAL - my_logging: 推到重写</span><br></pre></td></tr></table></figure><h2 id="日志的继承关系（了解）"><a href="#日志的继承关系（了解）" class="headerlink" title="日志的继承关系（了解）"></a>日志的继承关系（了解）</h2><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment">#1.Logger:产生日志</span></span><br><span class="line">logger1=logging.getLogger(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">logger2=logging.getLogger(<span class="string">&#x27;root.child1&#x27;</span>)</span><br><span class="line">logger3=logging.getLogger(<span class="string">&#x27;root.child1.child2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.Handler: 接收Logger传过来的日志，进行日志格式化，可以打印到终端，也可以打印到文件</span></span><br><span class="line">sh=logging.StreamHandler() <span class="comment">#打印到终端</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.Formatter：日志格式</span></span><br><span class="line">formatter1=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(module)s: %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.为Handler绑定日志格式</span></span><br><span class="line">sh.setFormatter(formatter1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.为logger 绑定handler</span></span><br><span class="line">logger1.addHandler(sh)</span><br><span class="line">logger2.addHandler(sh)</span><br><span class="line">logger3.addHandler(sh)</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.设置日志级别:logger 对象的日志级别应该&lt;=handler的日志级别</span></span><br><span class="line"><span class="comment">#logger1.setLevel(30)</span></span><br><span class="line">logger1.setLevel(<span class="number">10</span>)</span><br><span class="line">logger2.setLevel(<span class="number">10</span>)</span><br><span class="line">logger3.setLevel(<span class="number">10</span>)</span><br><span class="line">sh.setLevel(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.测试</span></span><br><span class="line">logger1.debug(<span class="string">&#x27;爷爷&#x27;</span>)</span><br><span class="line">logger2.debug(<span class="string">&#x27;爸爸&#x27;</span>)</span><br><span class="line">logger3.debug(<span class="string">&#x27;孙子&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2022-03-22 21:00:30 PM - root - DEBUG - my_logging_child: 爷爷</span><br><span class="line">2022-03-22 21:00:30 PM - root.child1 - DEBUG - my_logging_child: 爸爸</span><br><span class="line">2022-03-22 21:00:30 PM - root.child1 - DEBUG - my_logging_child: 爸爸</span><br><span class="line">2022-03-22 21:00:30 PM - root.child1.child2 - DEBUG - my_logging_child: 孙子</span><br><span class="line">2022-03-22 21:00:30 PM - root.child1.child2 - DEBUG - my_logging_child: 孙子</span><br><span class="line">2022-03-22 21:00:30 PM - root.child1.child2 - DEBUG - my_logging_child: 孙子</span><br></pre></td></tr></table></figure><p>去注释版</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger1=logging.getLogger(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">logger2=logging.getLogger(<span class="string">&#x27;root.child1&#x27;</span>)</span><br><span class="line">logger3=logging.getLogger(<span class="string">&#x27;root.child1.child2&#x27;</span>)</span><br><span class="line">sh=logging.StreamHandler()</span><br><span class="line"></span><br><span class="line">formatter1=logging.Formatter(</span><br><span class="line">    fmt=<span class="string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(module)s: %(message)s&#x27;</span>,</span><br><span class="line">    datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S %p&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">sh.setFormatter(formatter1)</span><br><span class="line"></span><br><span class="line">logger1.addHandler(sh)</span><br><span class="line">logger2.addHandler(sh)</span><br><span class="line">logger3.addHandler(sh)</span><br><span class="line"></span><br><span class="line"><span class="comment">#logger1.setLevel(30)</span></span><br><span class="line">logger1.setLevel(<span class="number">10</span>)</span><br><span class="line">logger2.setLevel(<span class="number">10</span>)</span><br><span class="line">logger3.setLevel(<span class="number">10</span>)</span><br><span class="line">sh.setLevel(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logger1.debug(&#x27;爷爷&#x27;)</span><br><span class="line">logger2.debug(&#x27;爸爸&#x27;)</span><br><span class="line">logger3.debug(&#x27;孙子&#x27;)</span><br></pre></td></tr></table></figure><h2 id="日志模块应用"><a href="#日志模块应用" class="headerlink" title="日志模块应用"></a>日志模块应用</h2><p>模拟购物小程序，选择转账时记录日志。</p><h3 id="整体项目结构"><a href="#整体项目结构" class="headerlink" title="整体项目结构"></a>整体项目结构</h3><p><img src="/img/postimages/%E8%B4%AD%E7%89%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84.webp" alt="购物小程序整体结构"></p><h3 id="每个目录简单介绍"><a href="#每个目录简单介绍" class="headerlink" title="每个目录简单介绍"></a>每个目录简单介绍</h3><p><code>bin</code>目录：存放用户交互程序</p><p><code>conf</code>目录：设置相关</p><p><code>core</code>：核心功能</p><p><code>db</code>:用户认证相关</p><p><code>lib</code>:常用功能</p><p><code>log</code>：日志文件</p><p><code>README</code>:项目介绍</p><h3 id="相关源码"><a href="#相关源码" class="headerlink" title="相关源码"></a>相关源码</h3><p><code>start.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"><span class="comment">#print(os.path.abspath(__file__))</span></span><br><span class="line"><span class="comment">#print(os.path.dirname(os.path.abspath(__file__)))</span></span><br><span class="line"><span class="comment">#print(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))</span></span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">sys.path.append(BASE_DIR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> core <span class="keyword">import</span> src</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    src.run()</span><br></pre></td></tr></table></figure><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">LOG_PATH = os.path.join(BASE_DIR, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;access.log&#x27;</span>)</span><br><span class="line">DB_PATH = os.path.join(BASE_DIR, <span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;user&#x27;</span>)</span><br><span class="line">COLLECT_PATH = os.path.join(BASE_DIR, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;collect.log&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(LOG_PATH)</span><br><span class="line"><span class="built_in">print</span>(DB_PATH)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义三种日志输出格式 开始</span></span><br><span class="line"></span><br><span class="line">standard_format = <span class="string">&#x27;[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]&#x27;</span> \</span><br><span class="line">                  <span class="string">&#x27;[%(levelname)s][%(message)s]&#x27;</span> <span class="comment">#其中name为getlogger指定的名字</span></span><br><span class="line"></span><br><span class="line">simple_format = <span class="string">&#x27;[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s&#x27;</span></span><br><span class="line"></span><br><span class="line">id_simple_format = <span class="string">&#x27;[%(levelname)s][%(asctime)s] %(message)s&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># log配置字典</span></span><br><span class="line">LOGGING_DIC = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&#x27;formatters&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;standard&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: standard_format</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: simple_format</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;id_simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: id_simple_format</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;filters&#x27;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">#打印到终端的日志</span></span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.StreamHandler&#x27;</span>,  <span class="comment"># 打印到屏幕</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">#打印到文件的日志,收集info及以上的日志</span></span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: LOG_PATH,  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">5</span>,  <span class="comment"># 日志大小 5M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,  <span class="comment"># 日志文件的编码，再也不用担心中文log乱码了</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: COLLECT_PATH,  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">5</span>,  <span class="comment"># 日志大小 5M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,  <span class="comment"># 日志文件的编码，再也不用担心中文log乱码了</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;collect&#x27;</span>],  <span class="comment"># 这里把上面定义的两个handler都加上，即log数据既写入文件又打印到屏幕</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">False</span>,  <span class="comment"># 向上（更高level的logger）传递</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>src.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lib <span class="keyword">import</span> common</span><br><span class="line"><span class="keyword">from</span> lib <span class="keyword">import</span> sql</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shop</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;购物&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_balance</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;查看余额....&#x27;</span>)</span><br><span class="line">    <span class="comment">#res = sql.execute(&#x27;select balance from user where id=3&#x27;)</span></span><br><span class="line">    <span class="comment">#print(res)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">transfer_account</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;转账....&#x27;</span>)</span><br><span class="line">    <span class="comment">#记录日志</span></span><br><span class="line">    log_msg = <span class="string">&#x27;jack give smith ten yuan&#x27;</span></span><br><span class="line">    <span class="comment">#调用日志功能</span></span><br><span class="line">    loggers = common.logger_handle(<span class="string">&#x27;transfer_account&#x27;</span>)</span><br><span class="line">    loggers.debug(log_msg)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    msg = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    1.购物</span></span><br><span class="line"><span class="string">    2.查看余额</span></span><br><span class="line"><span class="string">    3.转账</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(msg)</span><br><span class="line">        choice = <span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> choice:<span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            shop()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            check_balance()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            transfer_account()</span><br></pre></td></tr></table></figure><p><code>user</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alex,<span class="number">18</span>,male,<span class="number">10000</span></span><br><span class="line">egon,<span class="number">18</span>,male,<span class="number">1000000</span></span><br></pre></td></tr></table></figure><p><code>common.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line"><span class="comment"># def logger(msg):</span></span><br><span class="line"><span class="comment">#     with open(settings.LOG_PATH, &#x27;a&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span></span><br><span class="line"><span class="comment">#         f.write(&#x27;%s\n&#x27; %msg)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logger_handle</span>(<span class="params">log_name</span>):</span><br><span class="line">    logging.config.dictConfig(settings.LOGGING_DIC)  <span class="comment"># 导入上面定义的logging配置</span></span><br><span class="line">    logger = logging.getLogger(log_name)  <span class="comment"># 生成一个log实例</span></span><br><span class="line">    logger.info(<span class="string">&#x27;It works!&#x27;</span>)  <span class="comment"># 记录该文件的运行状态</span></span><br></pre></td></tr></table></figure><p><code>sql.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">execute</span>(<span class="params">sql</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;解析&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;执行sql&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>access.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jack给smith转账了10元</span><br><span class="line">[2022-03-22 22:01:20,767][MainThread:2600][task_id:转账][common.py:10][INFO][It works!]</span><br><span class="line">[2022-03-22 22:04:08,963][MainThread:14184][task_id:转账][common.py:10][INFO][It works!]</span><br><span class="line">[2022-03-22 22:06:59,656][MainThread:15740][task_id:transfer_account][common.py:10][INFO][It works!]</span><br><span class="line">[2022-03-26 11:41:33,154][MainThread:12820][task_id:transfer_account][common.py:10][INFO][It works!]</span><br></pre></td></tr></table></figure><p><code>collect.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO][2022-03-22 22:01:20,767][common.py:10]It works!</span><br><span class="line">[INFO][2022-03-22 22:04:08,963][common.py:10]It works!</span><br><span class="line">[INFO][2022-03-22 22:06:59,656][common.py:10]It works!</span><br><span class="line">[INFO][2022-03-26 11:41:33,154][common.py:10]It works!</span><br></pre></td></tr></table></figure><h2 id="re模块-正则表达式"><a href="#re模块-正则表达式" class="headerlink" title="re模块-正则表达式"></a>re模块-正则表达式</h2><h3 id="什么是正则？"><a href="#什么是正则？" class="headerlink" title="什么是正则？"></a>什么是正则？</h3><p>正则就是用一些具有特殊含义的符号组合到一起（称为正则表达式）来描述字符或者字符串的方法。或者说：正则就是用来描述一类事物的规则。（在Python中）它内嵌在Python中，并通过 re 模块实现。正则表达式模式被编译成一系列的字节码，然后由用 C 编写的匹配引擎执行。</p><h3 id="常用匹配模式-元字符"><a href="#常用匹配模式-元字符" class="headerlink" title="常用匹配模式(元字符)"></a>常用匹配模式(元字符)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\w&#x27;</span>, <span class="string">&#x27;jack 123 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\W&#x27;</span>, <span class="string">&#x27;jack 123 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\s&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\S&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\d&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\D&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + hello _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;^j&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + hello _ - *&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;o$&#x27;</span>, <span class="string">&#x27;jack\tn 12\n3 + _ * hello&#x27;</span>))</span><br></pre></td></tr></table></figure><p>重复<code>./?/*/+/&#123;m,n&#125;/.*/.*?</code></p><h4 id="点"><a href="#点" class="headerlink" title="点"></a>点</h4><p><code>.</code>能匹配换行符(<code>\n)</code>以外的任意一个字符 (以<code>a</code>开头的都没匹配上，直到遇到<code>aab</code>符合<code>a.b</code>匹配规则，所以结果是<code>aab</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a.b&#x27;</span>, <span class="string">&#x27;a1b a b a-b aaaaaaaab&#x27;</span>)) <span class="comment"># [&#x27;a1b&#x27; ,&#x27;a b&#x27; , &#x27;a-b&#x27;, &#x27;aab&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a.b&#x27;</span>, <span class="string">&#x27;a1b a b a\nb aaaaaaaab&#x27;</span>)) <span class="comment"># [&#x27;a1b&#x27;,&#x27;a b&#x27;, &#x27;aab&#x27;]</span></span><br><span class="line">                        <span class="comment">#a.b</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a.b&#x27;</span>, <span class="string">&#x27;a1b a b a\nb aaaaaaaab&#x27;</span>, re.DOTALL)) <span class="comment">#[&#x27;a1b&#x27;,&#x27;a b&#x27;, &#x27;a\nb&#x27;,&#x27;aab&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="问号"><a href="#问号" class="headerlink" title="问号"></a>问号</h4><p><code>?</code>代表<code>?</code>左边的字符出现0次或者1次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab?&#x27;</span>, <span class="string">&#x27;a ab abb abbbb a1b&#x27;</span>)) <span class="comment">#[&#x27;a&#x27; ,&#x27;ab&#x27; ,&#x27;ab&#x27;,&#x27;ab&#x27;,&#x27;a&#x27;]</span></span><br></pre></td></tr></table></figure><p>分析过程:</p><p>要匹配<code>ab?</code>。<code>b</code>可以出现1个也可以不出现。即<code>&#39;a&#39;</code>或者<code>&#39;ab&#39;.字母a开头</code>的只要能匹配就取出来。</p><h4 id="星"><a href="#星" class="headerlink" title="星"></a>星</h4><p><code>*</code>代表<code>*</code>左边的字符出现0次或者无穷次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab*&#x27;</span>, <span class="string">&#x27;a ab abb abbbb a1b&#x27;</span>)) <span class="comment">#[&#x27;a&#x27;, &#x27;ab&#x27;, &#x27;abb&#x27;,&#x27;abbbb&#x27;,&#x27;a&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="加号"><a href="#加号" class="headerlink" title="加号"></a>加号</h4><p><code>+</code>代表<code>+</code>号左边的字符出现1次或者无穷次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab+&#x27;</span>, <span class="string">&#x27;a ab abb abbbbb a1b&#x27;</span>)) <span class="comment">#[&#x27;ab&#x27;,&#x27;abb&#x27;,&#x27;abbbbb&#x27;]</span></span><br></pre></td></tr></table></figure><p>分析过程:</p><p>要匹配<code>ab+</code>,<code>b</code>可以出现1个或者无穷次但不能不出现。即<code>&#39;ab&#39;或者&#39;a无穷个b&#39;</code>.需要以字母<code>ab</code>开头的才能匹配，注意和问号、星号做对比。</p><h4 id="大括号"><a href="#大括号" class="headerlink" title="大括号"></a>大括号</h4><p><code>&#123;m,n&#125;</code>：代表左边的字符出现<code>m</code>次到<code>n</code>次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab&#123;0,1&#125;&#x27;</span>, <span class="string">&#x27;a ab abb abbbb a1b&#x27;</span>)) <span class="comment">#等同于?效果。0次到1次</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab&#123;0,&#125;&#x27;</span>, <span class="string">&#x27;a ab abb abbbb a1b&#x27;</span>)) <span class="comment">#等同于*效果。0次到无穷次</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab&#123;1,&#125;&#x27;</span>, <span class="string">&#x27;a ab abb abbbb a1b&#x27;</span>)) <span class="comment">#等同于+效果。1次到无穷次</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;ab&#123;2,4&#125;&#x27;</span>, <span class="string">&#x27;a ab abb abbbb abbbbbbbbbbbb  a1b&#x27;</span>))</span><br><span class="line"><span class="comment">#2次到4次，即匹配abb,abbb,abbbb ,如果出现4个以上的b只取到4个。结果为[&#x27;abb&#x27;,&#x27;abbbb&#x27;,&#x27;abbbb&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="点星"><a href="#点星" class="headerlink" title="点星"></a>点星</h4><p><code>.*</code>代表要么不出现，要么出现无穷次。（贪婪匹配）通常匹配的不够精准。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a.*b&#x27;</span>, <span class="string">&#x27;xxxxy123a123b456b&#x27;</span>)) <span class="comment">#[&#x27;a123b456b&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="点星问号"><a href="#点星问号" class="headerlink" title="点星问号"></a>点星问号</h4><p><code>.*?</code>非贪婪匹配和.*对应。（爬虫经常用！！！）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a.*?b&#x27;</span>, <span class="string">&#x27;xxxxy123a123b456b&#x27;</span>)) <span class="comment">#[&#x27;a123b&#x27;]</span></span><br></pre></td></tr></table></figure><p>分析:有多个<code>b</code>时，匹配最近的一个<code>b</code></p><h4 id="斜杠"><a href="#斜杠" class="headerlink" title="斜杠"></a>斜杠</h4><p><code>/</code>或者</p><h4 id="小括号"><a href="#小括号" class="headerlink" title="小括号"></a>小括号</h4><p><code>()</code>分组，<code>findall()</code>只取分组里面的字符。<code>(?:)</code>代表分组外面的字符也保留。是固定写法！</p><p>需求:找出所有<code>compan</code>开头的英文字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;compan(y|ies)&#x27;</span>, <span class="string">&#x27;Too many companies have gone bankrupt, and the next one is my company&#x27;</span>))</span><br><span class="line"><span class="comment">#结果：[&#x27;ies&#x27;,&#x27;y&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;compan(?:y|ies)&#x27;</span>, <span class="string">&#x27;Too many companies have gone bankrupt, and the next one is my company&#x27;</span>))</span><br><span class="line"><span class="comment">#结果：[&#x27;companies&#x27;,&#x27;company&#x27;]</span></span><br></pre></td></tr></table></figure><p>应用取出网页中的链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;href=&quot;(.*?)&quot;&#x27;</span>, <span class="string">&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;点击我&lt;/a&gt;&#x27;</span>))</span><br></pre></td></tr></table></figure><p>结果:</p><p><code>[&#39;http://www.baidu.com&#39;]</code></p><p><code>rawstring</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a\\c&#x27;</span>, <span class="string">&#x27;a\\c a1c aBc&#x27;</span>)) <span class="comment">#a\\c -&gt;a\c [&#x27;a\\c&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="中括号"><a href="#中括号" class="headerlink" title="中括号"></a>中括号</h4><p><code>[]</code>取中括号内任意一个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[a-z]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a-b a+b&#x27;</span>)) <span class="comment">#[&#x27;axb&#x27;,&#x27;azb&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[A-Z]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a-b a+b&#x27;</span>)) <span class="comment">#[&#x27;aAb&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[a-zA-Z]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a-b a+b&#x27;</span>)) <span class="comment">#[&#x27;axb&#x27;, &#x27;azb&#x27;, &#x27;aAb&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[0-9]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a+b a9b&#x27;</span>)) <span class="comment">#[&#x27;a1b&#x27;, &#x27;a9b&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[-+*/]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a+b a9b&#x27;</span>)) <span class="comment">#[&#x27;a-b&#x27;, &#x27;a+b&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;a[^-+*/]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a+b a9b&#x27;</span>)) <span class="comment">#[&#x27;axb&#x27;, &#x27;azb&#x27;, &#x27;aAb&#x27;, &#x27;a1b&#x27;, &#x27;a9b&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="re模块的其他用法"><a href="#re模块的其他用法" class="headerlink" title="re模块的其他用法"></a>re模块的其他用法</h3><p><code>re.search</code>匹配成功一次就返回,取不到就返回<code>None</code>,加<code>.group()</code>返回结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.search(<span class="string">&#x27;a[*]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a+b aaab&#x27;</span>)) <span class="comment">#None</span></span><br><span class="line"><span class="built_in">print</span>(re.search(<span class="string">&#x27;a[a-z]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a+b aaab&#x27;</span>).group()) <span class="comment"># axb</span></span><br></pre></td></tr></table></figure><p><code>re.match</code>：从开头取,开头没有就为<code>None</code>,只取一次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.match(<span class="string">&#x27;a[0-9]b&#x27;</span>, <span class="string">&#x27;axb azb aAb a1b a-b a2b a+b&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(re.match(<span class="string">&#x27;a[0-9]b&#x27;</span>, <span class="string">&#x27;a9b a8b  axb azb aAb a1b a-b a2b a+b&#x27;</span>).group())</span><br><span class="line"><span class="built_in">print</span>(re.search(<span class="string">&#x27;^a[0-9]b&#x27;</span>, <span class="string">&#x27;a9b a8b  axb azb aAb a1b a-b a2b a+b&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p><code>re.split</code>:分割</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.split(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;root:x:0:0::/root:/bin/bash&#x27;</span>,maxsplit=<span class="number">1</span>))</span><br><span class="line"><span class="comment">#结果为：[&#x27;root&#x27;,&#x27;x:0:0::/root:/bin/bash&#x27;]</span></span><br><span class="line"><span class="comment">#&#x27;root:x:0:0::/root:/bin/bash&#x27;.split(&#x27;:&#x27;)</span></span><br></pre></td></tr></table></figure><p><code>re.sub:替换</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.sub(<span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;root:x:0:0::/root:/bin/bash&#x27;</span>)) <span class="comment">#都替换</span></span><br><span class="line"><span class="built_in">print</span>(re.sub(<span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;root:x:0:0::/root:/bin/bash&#x27;</span>, <span class="number">1</span>)) <span class="comment">#只换一次</span></span><br></pre></td></tr></table></figure><p>需求：文本前后倒转</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.sub(<span class="string">&#x27;^([a-z]+)([^a-z]+)(.*?)([^a-z]+)([a-z]+)$&#x27;</span>, <span class="string">r&#x27;\5\2\3\4\1&#x27;</span>, <span class="string">&#x27;root:x:0:0::/root:/bin/bash&#x27;</span>)) </span><br><span class="line"><span class="comment">#只换一次</span></span><br></pre></td></tr></table></figure><p>解析：</p><p><code>^</code>以…开头 </p><p><code>$</code>以…结尾 </p><p><code>([a-z]+)</code> 分组匹配单词</p><p> <code>([^a-z]+)</code>分组匹配非单词</p><p><code>(.*?)</code>分组匹配任意字符</p><p>正则整体表示：以单词开头，并且以单词结尾。<code>r</code>表示显示字符原本含义不进行转义，<code>\5</code>表示第五个分组。<code>r&#39;\5\2\3\4\1&#39;</code> 整体表示第<code>5</code>个分组和第一个分组的内容调换<br>并且斜杠使用原本含义不做转义。</p><p><code>re.compile</code> :它将正则表达式转化为对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">&#x27;a\d&#123;2&#125;b&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(obj.findall(<span class="string">&#x27;a12b a123b a12345b abbb&#x27;</span>)) <span class="comment">#[&#x27;a12b&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(obj.search(<span class="string">&#x27;a12b a123b a12345b abbb&#x27;</span>).group()) <span class="comment">#a12b</span></span><br></pre></td></tr></table></figure><p>常用正则表</p><p><img src="https://images-1316789231.cos.ap-shanghai.myqcloud.com/%E7%BC%96%E7%A8%8B/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8.png" alt="常用正则表"></p><h2 id="时间模块"><a href="#时间模块" class="headerlink" title="时间模块"></a>时间模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="built_in">print</span>(time.time()) <span class="comment">#时间戳格式：1648026287.9298368</span></span><br><span class="line"><span class="built_in">print</span>(time.localtime().tm_mday) <span class="comment">#23</span></span><br><span class="line"><span class="built_in">print</span>(time.localtime()) <span class="comment">#结构化时间</span></span><br><span class="line"><span class="built_in">print</span>(time.gmtime()) <span class="comment">#结构化时间</span></span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line"><span class="comment">#time.struct_time(tm_year=2022, tm_mon=3, tm_mday=23, tm_hour=17, tm_min=5, tm_sec=26, tm_wday=2, tm_yday=82, tm_isdst=0)</span></span><br><span class="line"><span class="comment">#time.struct_time(tm_year=2022, tm_mon=3, tm_mday=23, tm_hour=9, tm_min=5, tm_sec=26, tm_wday=2, tm_yday=82, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)) <span class="comment">#2022-03-23 17:07:47</span></span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %X&#x27;</span>)) <span class="comment">#2022-03-23 17:07:47</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#了解</span></span><br><span class="line"><span class="built_in">print</span>(time.localtime(<span class="number">1111111111</span>))</span><br><span class="line"><span class="built_in">print</span>(time.localtime(time.time()))</span><br><span class="line"><span class="built_in">print</span>(time.gmtime(time.time()))</span><br><span class="line"><span class="built_in">print</span>(time.mktime(time.localtime()))</span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>, time.localtime()))</span><br><span class="line"><span class="built_in">print</span>(time.strptime(<span class="string">&#x27;2020-03-01&#x27;</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(time.asctime()) <span class="comment">#Wed Mar 23 17:15:40 2022</span></span><br><span class="line"><span class="built_in">print</span>(time.ctime()) <span class="comment">#Wed Mar 23 17:15:40 2022</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(time.asctime(time.localtime())) <span class="comment">#Wed Mar 23 17:16:32 2022</span></span><br><span class="line"><span class="built_in">print</span>(time.ctime(<span class="number">111111111</span>)) <span class="comment">#Tue Jul 10 08:11:51 1973</span></span><br><span class="line"><span class="built_in">print</span>(time.ctime(<span class="number">1648027065.7651727</span>)) <span class="comment">#Wed Mar 23 17:17:45 2022</span></span><br><span class="line"><span class="built_in">print</span>(time.time()) <span class="comment">#时间戳格式：1648026287.9298368</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#datetime</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now()) <span class="comment">#当前时间：2022-03-23 17:20:11.964584</span></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.fromtimestamp(<span class="number">111111111</span>)) <span class="comment">#1973-07-10 08:11:51</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now()+datetime.timedelta(days=<span class="number">3</span>)) <span class="comment">#当前时间开始的三天后。2022-03-26 17:22:35.581422</span></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now()+datetime.timedelta(days=-<span class="number">3</span>)) <span class="comment">#当前时间开始的三天前。2022-03-20 17:22:35.581422</span></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now()+datetime.timedelta(minutes=<span class="number">3</span>)) <span class="comment">#当前时间开始的三分钟后。2022-03-23 17:25:35.581422</span></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now()+datetime.timedelta(seconds=<span class="number">3</span>)) <span class="comment">#当前时间开始的三秒后。2022-03-23 17:22:38.581422</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.now().replace(year=<span class="number">2000</span>)) <span class="comment">#将当前时间中年替换成2000. 2000-03-23 17:25:04.696554</span></span><br></pre></td></tr></table></figure><h2 id="random模块"><a href="#random模块" class="headerlink" title="random模块"></a>random模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="built_in">print</span>(random.random()) <span class="comment">#(0,1) --float 大于0且小于1之间的小数 0.8266764258093519</span></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#[1,3] 大于等于1且小于等于3之间的整数</span></span><br><span class="line"><span class="built_in">print</span>(random.randrange(<span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#[1,3) 大于等于1且小于3之间的整数</span></span><br><span class="line"><span class="built_in">print</span>(random.choice([<span class="number">1</span>, <span class="string">&#x27;23&#x27;</span>, [<span class="number">4</span>,<span class="number">5</span>]])) <span class="comment">#1或者23或者[4,5]</span></span><br><span class="line"><span class="built_in">print</span>(random.sample([<span class="number">1</span>,<span class="string">&#x27;23&#x27;</span>,[<span class="number">4</span>,<span class="number">5</span>]],<span class="number">2</span>)) <span class="comment">#列表元素任意2个组合 [[4, 5], &#x27;23&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(random.uniform(<span class="number">1</span>,<span class="number">3</span>)) <span class="comment">#大于1小于3的小数 2.3344194593026546</span></span><br><span class="line"></span><br><span class="line">l=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>]</span><br><span class="line">random.shuffle(l) <span class="comment">#列表中元素随机打乱顺序。[5, 1, 3, 4, 2]</span></span><br><span class="line"><span class="built_in">print</span>(l)</span><br><span class="line"></span><br><span class="line"><span class="comment">#随机验证码。数字+字母</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_code</span>(<span class="params">n</span>):</span><br><span class="line">    res=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        s1=<span class="built_in">str</span>(random.randint(<span class="number">0</span>,<span class="number">9</span>))</span><br><span class="line">        s2=<span class="built_in">chr</span>(random.randint(<span class="number">65</span>,<span class="number">90</span>))</span><br><span class="line">        res+=random.choice([s1,s2])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="built_in">print</span>(make_code(<span class="number">6</span>))</span><br></pre></td></tr></table></figure><h2 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">os.getcwd() 获取当前工作目录，即当前python脚本工作的目录路径</span><br><span class="line">os.chdir(<span class="string">&quot;dirname&quot;</span>)  改变当前脚本工作目录；相当于shell下cd</span><br><span class="line">os.curdir  返回当前目录: (<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">os.pardir  获取当前目录的父目录字符串名：(<span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">os.makedirs(<span class="string">&#x27;dirname1/dirname2&#x27;</span>)    可生成多层递归目录</span><br><span class="line">os.removedirs(<span class="string">&#x27;dirname1&#x27;</span>)    若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推</span><br><span class="line">os.mkdir(<span class="string">&#x27;dirname&#x27;</span>)    生成单级目录；相当于shell中mkdir dirname</span><br><span class="line">os.rmdir(<span class="string">&#x27;dirname&#x27;</span>)    删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirname</span><br><span class="line">os.listdir(<span class="string">&#x27;dirname&#x27;</span>)    列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印</span><br><span class="line">os.remove()  删除一个文件</span><br><span class="line">os.rename(<span class="string">&quot;oldname&quot;</span>,<span class="string">&quot;newname&quot;</span>)  重命名文件/目录</span><br><span class="line">os.stat(<span class="string">&#x27;path/filename&#x27;</span>)  获取文件/目录信息</span><br><span class="line">os.sep    输出操作系统特定的路径分隔符，win下为<span class="string">&quot;\\&quot;</span>,Linux下为<span class="string">&quot;/&quot;</span></span><br><span class="line">os.linesep    输出当前平台使用的行终止符，win下为<span class="string">&quot;\t\n&quot;</span>,Linux下为<span class="string">&quot;\n&quot;</span></span><br><span class="line">os.pathsep    输出用于分割文件路径的字符串 win下为;,Linux下为:</span><br><span class="line">os.name    输出字符串指示当前使用平台。win-&gt;<span class="string">&#x27;nt&#x27;</span>; Linux-&gt;<span class="string">&#x27;posix&#x27;</span></span><br><span class="line">os.system(<span class="string">&quot;bash command&quot;</span>)  运行shell命令，直接显示</span><br><span class="line">os.environ  获取系统环境变量</span><br><span class="line">os.path.abspath(path)  返回path规范化的绝对路径</span><br><span class="line">os.path.split(path)  将path分割成目录和文件名二元组返回</span><br><span class="line">os.path.dirname(path)  返回path的目录。其实就是os.path.split(path)的第一个元素</span><br><span class="line">os.path.basename(path)  返回path最后的文件名。如何path以／或\结尾，那么就会返回空值。即os.path.split(path)的第二个元素</span><br><span class="line">os.path.exists(path)  如果path存在，返回<span class="literal">True</span>；如果path不存在，返回<span class="literal">False</span></span><br><span class="line">os.path.isabs(path)  如果path是绝对路径，返回<span class="literal">True</span></span><br><span class="line">os.path.isfile(path)  如果path是一个存在的文件，返回<span class="literal">True</span>。否则返回<span class="literal">False</span></span><br><span class="line">os.path.isdir(path)  如果path是一个存在的目录，则返回<span class="literal">True</span>。否则返回<span class="literal">False</span></span><br><span class="line">os.path.join(path1[, path2[, ...]])  将多个路径组合后返回，第一个绝对路径之前的参数将被忽略</span><br><span class="line">os.path.getatime(path)  返回path所指向的文件或者目录的最后存取时间</span><br><span class="line">os.path.getmtime(path)  返回path所指向的文件或者目录的最后修改时间</span><br><span class="line">os.path.getsize(path) 返回path的大小</span><br><span class="line">在Linux和Mac平台上，该函数会原样返回path，在windows平台上会将路径中所有字符转换为小写，并将所有斜杠转换为反斜杠。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.normcase(<span class="string">&#x27;c:/windows\\system32\\&#x27;</span>)   </span><br><span class="line"><span class="string">&#x27;c:\\windows\\system32\\&#x27;</span>  </span><br><span class="line">规范化路径，如..和/</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.normpath(<span class="string">&#x27;c://windows\\System32\\../Temp/&#x27;</span>)   </span><br><span class="line"><span class="string">&#x27;c:\\windows\\Temp&#x27;</span>   </span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="string">&#x27;/Users/jieli/test1/\\\a1/\\\\aa.py/../..&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(os.path.normpath(a))</span><br><span class="line">/Users/jieli/test1</span><br></pre></td></tr></table></figure><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line"><span class="built_in">print</span>(os.stat(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(os.stat(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>).st_size)</span><br><span class="line"><span class="built_in">print</span>(os.path.getsize(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>))</span><br><span class="line">os.system(<span class="string">&#x27;tasklist&#x27;</span>) <span class="comment">#看系统进程,有编码问题。</span></span><br><span class="line"><span class="built_in">print</span>(os.path.split(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>)) <span class="comment">#(&#x27;D:\\pccharmcode&#x27;, &#x27;oracle.py&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(os.path.dirname(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>)) <span class="comment">#D:\pccharmcode</span></span><br><span class="line"><span class="built_in">print</span>(os.path.basename(<span class="string">r&#x27;D:\pccharmcode\oracle.py&#x27;</span>)) <span class="comment">#oracle.py</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(os.path.isabs(<span class="string">r&#x27;C:\\a123123123&#x27;</span>)) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(os.path.isabs(<span class="string">r&#x27;/root/123.txt&#x27;</span>)) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(os.path.join(<span class="string">&#x27;C:&#x27;</span>, <span class="string">&#x27;D:\\&#x27;</span>, <span class="string">&#x27;dir1&#x27;</span>, <span class="string">&#x27;dir2&#x27;</span>, <span class="string">&#x27;dir3&#x27;</span>)) <span class="comment">#D:dir1\dir2\dir3</span></span><br><span class="line"><span class="built_in">print</span>(os.path.normcase(<span class="string">&#x27;c:/windows\\SYstem32\\&#x27;</span>)) <span class="comment">#c:\windows\system32\</span></span><br><span class="line"><span class="built_in">print</span>(os.path.normpath(<span class="string">&#x27;c://windows\\System32\\../Temp/&#x27;</span>)) <span class="comment">#c:\windows\Temp</span></span><br></pre></td></tr></table></figure><p>路径：<code>D:\pccharmcode\api_key\__init__.py</code><br>要求获取到根开始的第一级路径。</p><p>方法1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(os.path.dirname(os.path.dirname(<span class="string">r&#x27;D:\pccharmcode\api_key\__init__.py&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">res = os.path.normpath(os.path.join(</span><br><span class="line">    os.path.abspath(<span class="string">r&#x27;D:\pccharmcode\api_key\__init__.py&#x27;</span>),</span><br><span class="line">    os.pardir,</span><br><span class="line">    os.pardir</span><br><span class="line">))</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>方法3：</p><p>先将原路径拼接成一个新路径(用<code>os.path.join()</code>)。 <code>D:\pccharmcode\api_key\__init__.py\..\..</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BASE_DIR = os.path.normpath(</span><br><span class="line">os.path.join(</span><br><span class="line">    os.path.abspath(<span class="string">r&#x27;D:\pccharmcode\api_key\__init__.py&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;..&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;..&#x27;</span></span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(BASE_DIR)</span><br></pre></td></tr></table></figure><h2 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h2><p>主要掌握</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sys.argv</span><br><span class="line">sys.exit(0)</span><br><span class="line">sys.path</span><br></pre></td></tr></table></figure><p>其他</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sys.argv           命令行参数List，第一个元素是程序本身路径</span><br><span class="line">sys.exit(n)        退出程序，正常退出时exit(0)</span><br><span class="line">sys.version        获取Python解释程序的版本信息</span><br><span class="line">sys.maxint         最大的Int值</span><br><span class="line">sys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</span><br><span class="line">sys.platform       返回操作系统平台名称</span><br></pre></td></tr></table></figure><p>模拟下载进度条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*1))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*2))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*3))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*4))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*5))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*6))</span><br><span class="line">print((&#x27;[%%-%ds]&#x27; %50) %(&#x27;#&#x27;*7))</span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[#                                                 ]</span><br><span class="line">[##                                                ]</span><br><span class="line">[###                                               ]</span><br><span class="line">[####                                              ]</span><br><span class="line">[#####                                             ]</span><br><span class="line">[######                                            ]</span><br><span class="line">[#######                                           ]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">progress</span>(<span class="params">percent,width=<span class="number">50</span></span>):</span><br><span class="line">    <span class="keyword">if</span> percent &gt;= <span class="number">1</span>:</span><br><span class="line">        percent=<span class="number">1</span></span><br><span class="line">    show_str = (<span class="string">&#x27;[%%-%ds]&#x27;</span> % width) % (<span class="string">&#x27;#&#x27;</span> * <span class="built_in">int</span>(width*percent))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\r%s %d%%&#x27;</span> %(show_str,<span class="built_in">int</span>(<span class="number">100</span>*percent)),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">recv_size=<span class="number">0</span></span><br><span class="line">total_size=<span class="number">10241</span></span><br><span class="line"><span class="keyword">while</span> recv_size &lt; total_size:</span><br><span class="line">    time.sleep(<span class="number">0.1</span>) <span class="comment">#模拟数据的传输延迟</span></span><br><span class="line">    recv_size+=<span class="number">1024</span> <span class="comment">#每次收1024</span></span><br><span class="line">    progress(recv_size/total_size)</span><br></pre></td></tr></table></figure><h2 id="shutil模块"><a href="#shutil模块" class="headerlink" title="shutil模块"></a>shutil模块</h2><p>高级的文件、文件夹、压缩包 处理模块。</p><p>格式：</p><p><code>shutil.copyfileobj(fsrc, fdst[, length])</code></p><p>将文件内容拷贝到另一个文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.copyfileobj(<span class="built_in">open</span>(<span class="string">&#x27;old.xml&#x27;</span>,<span class="string">&#x27;r&#x27;</span>), <span class="built_in">open</span>(<span class="string">&#x27;new.xml&#x27;</span>, <span class="string">&#x27;w&#x27;</span>))</span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.copyfile(src, dst)</code></p><p>拷贝文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.copyfile(<span class="string">&#x27;f1.log&#x27;</span>, <span class="string">&#x27;f2.log&#x27;</span>) <span class="comment">#目标文件无需存在</span></span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.copymode(src, dst)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">仅拷贝权限。内容、组、用户均不变</span><br><span class="line">shutil.copymode(<span class="string">&#x27;f1.log&#x27;</span>, <span class="string">&#x27;f2.log&#x27;</span>) <span class="comment">#目标文件必须存在</span></span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.copystat(src, dst)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">仅拷贝状态的信息，包括：mode bits, atime, mtime, flags</span><br><span class="line">shutil.copystat(<span class="string">&#x27;f1.log&#x27;</span>, <span class="string">&#x27;f2.log&#x27;</span>) <span class="comment">#目标文件必须存在</span></span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.copy(src, dst)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">拷贝文件和权限</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.copy(<span class="string">&#x27;f1.log&#x27;</span>, <span class="string">&#x27;f2.log&#x27;</span>)</span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.copy2(src, dst)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">拷贝文件和状态信息</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.copy2(<span class="string">&#x27;f1.log&#x27;</span>, <span class="string">&#x27;f2.log&#x27;</span>)</span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.ignore_patterns(*patterns) shutil.copytree(src, dst, symlinks=False, ignore=None)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">递归的去拷贝文件夹</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.copytree(<span class="string">&#x27;folder1&#x27;</span>, <span class="string">&#x27;folder2&#x27;</span>, ignore=shutil.ignore_patterns(<span class="string">&#x27;*.pyc&#x27;</span>, <span class="string">&#x27;tmp*&#x27;</span>)) <span class="comment">#目标目录不能存在，注意对folder2目录父级目录要有可写权限，ignore的意思是排除 </span></span><br></pre></td></tr></table></figure><p>拷贝软连接:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.copytree(<span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;f2&#x27;</span>, symlinks=<span class="literal">True</span>, ignore=shutil.ignore_patterns(<span class="string">&#x27;*.pyc&#x27;</span>, <span class="string">&#x27;tmp*&#x27;</span>))</span><br></pre></td></tr></table></figure><p>通常的拷贝都把软连接拷贝成硬链接，即对待软连接来说，创建新的文件.</p><p>格式：</p><p><code>shutil.rmtree(path[, ignore_errors[, onerror]])</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">递归的去删除文件</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">shutil.rmtree(<span class="string">&#x27;folder1&#x27;</span>)</span><br></pre></td></tr></table></figure><p>格式：</p><p><code>shutil.move(src, dst)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">递归的去移动文件，它类似mv命令，其实就是重命名。</span><br><span class="line">shutil.move(&#x27;folder1&#x27;, &#x27;folder3&#x27;)</span><br></pre></td></tr></table></figure><p>压缩与解压缩</p><p>格式：</p><p><code>shutil.make_archive(base_name, format,...)</code></p><p>创建压缩包并返回文件路径，例如：zip、tar.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">base_name： 压缩包的文件名，也可以是压缩包的路径。只是文件名时，则保存至当前目录，否则保存至指定路径，</span><br><span class="line">如 data_bak                       =&gt;保存至当前路径</span><br><span class="line">如：/tmp/data_bak =&gt;保存至/tmp/</span><br><span class="line">format： 压缩包种类，“zip”, “tar”, “bztar”，“gztar”</span><br><span class="line">root_dir： 要压缩的文件夹路径（默认当前目录）</span><br><span class="line">owner： 用户，默认当前用户</span><br><span class="line">group： 组，默认当前组</span><br><span class="line">logger： 用于记录日志，通常是logging.Logger对象</span><br></pre></td></tr></table></figure><p>将 <code>/data</code> 下的文件打包放置当前程序目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">ret = shutil.make_archive(<span class="string">&quot;data_bak&quot;</span>, <span class="string">&#x27;gztar&#x27;</span>, root_dir=<span class="string">&#x27;/data&#x27;</span>)</span><br></pre></td></tr></table></figure><p>将 <code>/data</code>下的文件打包放置 <code>/tmp/</code>目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line">ret = shutil.make_archive(<span class="string">&quot;/tmp/data_bak&quot;</span>, <span class="string">&#x27;gztar&#x27;</span>, root_dir=<span class="string">&#x27;/data&#x27;</span>) </span><br></pre></td></tr></table></figure><p><code>shutil </code>对压缩包的处理是调用 <code>ZipFile</code> 和 <code>TarFile</code> 两个模块来进行的.</p><p>详细：</p><p>压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">z = zipfile.ZipFile(<span class="string">&#x27;laxi.zip&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">z.write(<span class="string">&#x27;a.log&#x27;</span>)</span><br><span class="line">z.write(<span class="string">&#x27;data.data&#x27;</span>)</span><br><span class="line">z.close()</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">z = zipfile.ZipFile(<span class="string">&#x27;laxi.zip&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">z.extractall(path=<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">z.close()</span><br></pre></td></tr></table></figure><p>使用<code>tarfile</code>压缩与解压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import tarfile</span><br></pre></td></tr></table></figure><p>压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t=tarfile.<span class="built_in">open</span>(<span class="string">&#x27;/tmp/egon.tar&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">t.add(<span class="string">&#x27;/test1/a.py&#x27;</span>,arcname=<span class="string">&#x27;a.bak&#x27;</span>)</span><br><span class="line">t.add(<span class="string">&#x27;/test1/b.py&#x27;</span>,arcname=<span class="string">&#x27;b.bak&#x27;</span>)</span><br><span class="line">t.close()</span><br></pre></td></tr></table></figure><p>解压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t=tarfile.<span class="built_in">open</span>(<span class="string">&#x27;/tmp/egon.tar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">t.extractall(<span class="string">&#x27;/egon&#x27;</span>)</span><br><span class="line">t.close()</span><br></pre></td></tr></table></figure><p>练习：</p><p>将<code>ATM</code>文件夹以<code>tar.gz</code>方式压缩，然后解压到<code>aaa</code>文件夹内。最后删除<code>aaa</code>文件夹。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"><span class="comment">#压缩</span></span><br><span class="line">shutil.make_archive(<span class="string">&quot;backup&quot;</span>, <span class="string">&#x27;gztar&#x27;</span>, root_dir=<span class="string">r&#x27;D:\pccharmcode\ATM&#x27;</span>)</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">o = tarfile.<span class="built_in">open</span>(<span class="string">&#x27;backup.tar.gz&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">o.extractall(<span class="string">r&#x27;D:\pccharmcode\aaa&#x27;</span>)</span><br><span class="line">o.close()</span><br><span class="line"><span class="comment">#删除aaa文件夹</span></span><br><span class="line">shutil.rmtree(<span class="string">r&#x27;D:\pccharmcode\aaa&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="xml模块"><a href="#xml模块" class="headerlink" title="xml模块"></a>xml模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from xml.etree import ElementTree</span><br><span class="line">tree = ElementTree.parse(&#x27;a.xml&#x27;)</span><br><span class="line">root = tree.getroot()</span><br><span class="line"># print(root.tag)</span><br><span class="line"># print(root.attrib)</span><br><span class="line"># print(root.text)</span><br></pre></td></tr></table></figure><p>三种查找方式</p><p>从子节点中查找</p><p>显示一种</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(root.find(<span class="string">&#x27;country&#x27;</span>)) <span class="comment">#&lt;Element &#x27;country&#x27; at 0x000001E26EDCC130&gt;</span></span><br><span class="line"><span class="comment">#加.tag .attrib .text就可以显示内容</span></span><br></pre></td></tr></table></figure><p>显示所有。以列表的形式显示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(root.findall(<span class="string">&#x27;country&#x27;</span>)) </span><br><span class="line"><span class="comment">#[&lt;Element &#x27;country&#x27; at 0x0000027D6F00C0E0&gt;, &lt;Element &#x27;country&#x27; at 0x0000027D6F00C2C0&gt;, &lt;Element &#x27;country&#x27; at 0x0000027D6F00C450&gt;]</span></span><br></pre></td></tr></table></figure><p>注意：如果找不到就会显示<code> None</code></p><p>从树形结构中查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root.<span class="built_in">iter</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(root.<span class="built_in">iter</span>(<span class="string">&#x27;country&#x27;</span>)))</span><br></pre></td></tr></table></figure><h3 id="遍历文档"><a href="#遍历文档" class="headerlink" title="遍历文档"></a>遍历文档</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> xml.etree <span class="keyword">import</span> ElementTree</span><br><span class="line">tree = ElementTree.parse(<span class="string">&#x27;a.xml&#x27;</span>)</span><br><span class="line">root = tree.getroot()</span><br><span class="line"><span class="keyword">for</span> country <span class="keyword">in</span> root:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;==========&gt;&#x27;</span>, country.tag, country.attrib, country.attrib[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">    <span class="keyword">for</span> rank <span class="keyword">in</span> country:</span><br><span class="line">        <span class="built_in">print</span>(rank.tag, rank.attrib, rank.text)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">==========&gt; country &#123;&#x27;name&#x27;: &#x27;Liechtenstein&#x27;&#125; Liechtenstein</span><br><span class="line">rank &#123;&#x27;updated&#x27;: &#x27;yes&#x27;&#125; 2</span><br><span class="line">year &#123;&#125; 2008</span><br><span class="line">gdppc &#123;&#125; 141100</span><br><span class="line">neighbor &#123;&#x27;name&#x27;: &#x27;Austria&#x27;, &#x27;direction&#x27;: &#x27;E&#x27;&#125; None</span><br><span class="line">neighbor &#123;&#x27;name&#x27;: &#x27;Switzerland&#x27;, &#x27;direction&#x27;: &#x27;W&#x27;&#125; None</span><br><span class="line">==========&gt; country &#123;&#x27;name&#x27;: &#x27;Singapore&#x27;&#125; Singapore</span><br><span class="line">rank &#123;&#x27;updated&#x27;: &#x27;yes&#x27;&#125; 5</span><br><span class="line">year &#123;&#125; 2011</span><br><span class="line">gdppc &#123;&#125; 59900</span><br><span class="line">neighbor &#123;&#x27;name&#x27;: &#x27;Malaysia&#x27;, &#x27;direction&#x27;: &#x27;N&#x27;&#125; None</span><br><span class="line">==========&gt; country &#123;&#x27;name&#x27;: &#x27;Panama&#x27;&#125; Panama</span><br><span class="line">rank &#123;&#x27;updated&#x27;: &#x27;yes&#x27;&#125; 69</span><br><span class="line">year &#123;&#125; 2011</span><br><span class="line">gdppc &#123;&#125; 13600</span><br><span class="line">neighbor &#123;&#x27;name&#x27;: &#x27;Costa Rica&#x27;, &#x27;direction&#x27;: &#x27;W&#x27;&#125; None</span><br><span class="line">neighbor &#123;&#x27;name&#x27;: &#x27;Colombia&#x27;, &#x27;direction&#x27;: &#x27;E&#x27;&#125; None</span><br></pre></td></tr></table></figure><h4 id="只遍历year节点"><a href="#只遍历year节点" class="headerlink" title="只遍历year节点"></a>只遍历year节点</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> root.<span class="built_in">iter</span>(<span class="string">&#x27;year&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(year.tag, year.text)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">year 2008</span><br><span class="line">year 2011</span><br><span class="line">year 2011</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> root.<span class="built_in">iter</span>(<span class="string">&#x27;year&#x27;</span>):</span><br><span class="line">    new_year = <span class="built_in">int</span>(c.text)+<span class="number">1</span></span><br><span class="line">    c.text = <span class="built_in">str</span>(new_year)</span><br><span class="line">    c.<span class="built_in">set</span>(<span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">    c.<span class="built_in">set</span>(<span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;1.0&#x27;</span>)</span><br><span class="line">tree.write(<span class="string">&#x27;b.xml&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> country <span class="keyword">in</span> root.findall(<span class="string">&#x27;country&#x27;</span>):</span><br><span class="line">    rank = <span class="built_in">int</span>(country.find(<span class="string">&#x27;rank&#x27;</span>).text)</span><br><span class="line">    <span class="keyword">if</span> rank &gt; <span class="number">50</span>:</span><br><span class="line">        root.remove(country)</span><br><span class="line">tree.write(<span class="string">&#x27;output.xml&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在<code>country</code>内添加<code>（append）</code>节点<code>year2</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> country <span class="keyword">in</span> root.findall(<span class="string">&#x27;country&#x27;</span>):</span><br><span class="line">    <span class="keyword">for</span> year <span class="keyword">in</span> country.findall(<span class="string">&#x27;year&#x27;</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(year.text) &gt; <span class="number">2000</span>:</span><br><span class="line">            year2 = ElementTree.Element(<span class="string">&#x27;year2&#x27;</span>)</span><br><span class="line">            year2.text = <span class="string">&#x27;happy-new-year&#x27;</span></span><br><span class="line">            year2.attrib = &#123;<span class="string">&#x27;update&#x27;</span>:<span class="string">&#x27;yes&#x27;</span>&#125;</span><br><span class="line">            country.append(year2) <span class="comment">#往country节点下添加子节点</span></span><br><span class="line">tree.write(<span class="string">&#x27;a.xml.swap&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="configerparser模块"><a href="#configerparser模块" class="headerlink" title="configerparser模块"></a>configerparser模块</h2><p><code>[mysqld]</code>叫做<code>section</code></p><p><code>port</code>、<code>basedir</code>等等叫做<code>option</code></p><p>练习配置文件<code>my.ini</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">basedir = D:\\softnew\\MYSQL\\mysql-5.7.20-winx64</span><br><span class="line">max_connections = 200</span><br><span class="line">character-set-server = utf8</span><br><span class="line">default-storage-engine = INNODB</span><br><span class="line">skip-grant-table = True</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">user = root</span><br><span class="line">password = 123</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line">config = configparser.ConfigParser()</span><br><span class="line">config.read(<span class="string">&#x27;my.ini&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(config.sections()) <span class="comment">#查看所有的标题</span></span><br><span class="line"><span class="built_in">print</span>(config.options(<span class="string">&#x27;mysqld&#x27;</span>)) <span class="comment">#查看标题mysqld下所有key=value的key</span></span><br><span class="line"><span class="built_in">print</span>(config.get(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;port&#x27;</span>)) <span class="comment">#查看标题mysqld下port的值=&gt;字符串格式</span></span><br></pre></td></tr></table></figure><p>判断有没有名字为<code>aaa</code>的<code>option</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> config.has_option(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(config.get(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;aaaa&#x27;</span>))</span><br></pre></td></tr></table></figure><p>查看值的类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(config.get(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;skip-grant-table&#x27;</span>))) <span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>转换成布尔类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(config.getboolean(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;skip-grant-table&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(config.getint(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;port&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(config.getfloat(<span class="string">&#x27;mysqld&#x27;</span>, <span class="string">&#x27;port&#x27;</span>))</span><br></pre></td></tr></table></figure><p>向文件中添加section和option</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config.add_section(<span class="string">&#x27;client1&#x27;</span>)</span><br><span class="line">config.<span class="built_in">set</span>(<span class="string">&#x27;client1&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>)</span><br><span class="line">config.<span class="built_in">set</span>(<span class="string">&#x27;client1&#x27;</span>, <span class="string">&#x27;port&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>)</span><br><span class="line">config.write(<span class="built_in">open</span>(<span class="string">&#x27;my.ini&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p><code>my.ini</code>文件</p><p><img src="/img/postimages/image-20220326204239624.webp" alt="image-20220326204239624"></p><p>将<code>section（client1）</code>中<code>option(port)</code>对应的值<code>2000</code>改为<code>3000</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">config.<span class="built_in">set</span>(<span class="string">&#x27;client1&#x27;</span>, <span class="string">&#x27;port&#x27;</span>, <span class="string">&#x27;3000&#x27;</span>)</span><br><span class="line">config.write(<span class="built_in">open</span>(<span class="string">&#x27;my.ini&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>查看<code>my.ini</code>文件，<code>port</code>对应的值已经改变。</p><h2 id="hashlib模块"><a href="#hashlib模块" class="headerlink" title="hashlib模块"></a>hashlib模块</h2><h3 id="什么叫hash"><a href="#什么叫hash" class="headerlink" title="什么叫hash?"></a>什么叫hash?</h3><p>hash是一种算法（<code>3.x</code>里代替了<code>md5模块</code>和<code>sha模块</code>，主要提供 <code>SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法</code>），该算法接受传入的内容，经过运算得到一串hash值。</p><h3 id="hash值的特点"><a href="#hash值的特点" class="headerlink" title="hash值的特点"></a>hash值的特点</h3><p>只要传入的内容一样，得到的hash值必然一样&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;要用明文传输密码文件完整性校验。</p><p>不能由hash值返解成内容&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》把密码做成hash值，不应该在网络传输明文密码。</p><p>只要使用的hash算法不变，无论校验的内容有多大，得到的hash值长度是固定的。</p><p>hash算法就像一座工厂，工厂接收你送来的原材料（可以用<code>m.update()</code>为工厂运送原材料），经过加工返回的产品就是<code>hash值</code>。</p><p><img src="/img/postimages/image-20220326213810288.webp" alt="image-20220326213810288"></p><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">m = hashlib.md5() <span class="comment"># m=hashlib.sha256()</span></span><br><span class="line">m.update(<span class="string">&#x27;jack&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m.hexdigest()) <span class="comment">#4ff9fc6e4e5d5f590c4f2134a8cc96d1</span></span><br><span class="line"></span><br><span class="line">m.update(<span class="string">&#x27;j&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m.hexdigest()) <span class="comment">#636a4e0a176a6cbb43dd00aec17e64ab</span></span><br><span class="line"></span><br><span class="line">m2 = hashlib.sha3_256()</span><br><span class="line">m2.update(<span class="string">&#x27;jack123&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m2.hexdigest()) <span class="comment">#1183ac670862872ae3315c178a68dddd6166a004b0086bfa23f70e780fe7545c</span></span><br><span class="line"></span><br><span class="line">m2.update(<span class="string">&#x27;j&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m2.hexdigest()) <span class="comment">#fe50db7bfb8a1e79934413625d2024114de0afd62bd17c3e9d97aee74f8553c6</span></span><br></pre></td></tr></table></figure><p>注意：把一段很长的数据<code>update多次</code>，与一次<code>update</code>这段长数据，得到的结果一样。但是<code>update</code>多次为校验大文件提供了可能。</p><p>以上加密算法虽然依然非常厉害，但时候存在缺陷，即：通过撞库可以反解。所以，有必要对加密算法中添加自定义key再来做加密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="built_in">hash</span> = hashlib.sha256(<span class="string">&#x27;898oaFs09f&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">hash</span>.update(<span class="string">&#x27;alvin&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>.hexdigest()) <span class="comment">#e79e68f070cdedcfe63eaf1a2e92c83b4cfb1b5c6bc452d214c1b7e77cdfd1c7</span></span><br></pre></td></tr></table></figure><p>模拟用户登录并把密码哈希</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;user&gt;&gt;: &#x27;</span>)</span><br><span class="line">pwd = <span class="built_in">input</span>(<span class="string">&#x27;password&gt;&gt;: &#x27;</span>)</span><br><span class="line">m = hashlib.md5()</span><br><span class="line">m.update(pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">pwd = m.hexdigest()</span><br><span class="line"><span class="built_in">print</span>(name, pwd) <span class="comment"># jack 1d6c1e168e362bc0092f247399003a88(jack123)</span></span><br></pre></td></tr></table></figure><p>模拟撞库，先生成字典。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cryt_pwd = <span class="string">&#x27;1d6c1e168e362bc0092f247399003a88&#x27;</span></span><br><span class="line">pwds=[</span><br><span class="line">    <span class="string">&#x27;jack1234&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jack456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jack123&#x27;</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mack_dic</span>(<span class="params">pwds</span>):</span><br><span class="line">    dic = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> pwd <span class="keyword">in</span> pwds:</span><br><span class="line">        m = hashlib.md5(pwd.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        dic[pwd] = m.hexdigest()</span><br><span class="line">    <span class="keyword">return</span> dic</span><br><span class="line">dic = mack_dic(pwds)</span><br><span class="line"><span class="keyword">for</span> pwd <span class="keyword">in</span> dic:</span><br><span class="line">    <span class="keyword">if</span> dic[pwd] == cryt_pwd:</span><br><span class="line">        <span class="built_in">print</span>(pwd)</span><br></pre></td></tr></table></figure><p><code>结果：jack123</code></p><p>python 还有一个 <code>hmac 模块</code>，它内部对我们创建 <code>key</code> 和 内容 进行进一步的处理然后再加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">h1=hmac.new(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>),digestmod=<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">h1.update(<span class="string">&#x27;world&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(h1.hexdigest())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">m = hmac.new(key=<span class="string">&#x27;加盐&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>), msg=<span class="string">&#x27;jack123&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>), digestmod=hashlib.sha1)</span><br><span class="line"><span class="built_in">print</span>(m.hexdigest())</span><br></pre></td></tr></table></figure><p>要想保证<code>hmac</code>最终结果一致，必须保证：<br><code>hmac.new</code>括号内指定的初始key一样<br>无论<code>update</code>多少次，校验的内容累加到一起是一样的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 操作一</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">h1=hmac.new(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>),digestmod=<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">h1.update(<span class="string">&#x27;world&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(h1.hexdigest()) <span class="comment"># 0e2564b7e100f034341ea477c23f283b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作二</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">h2=hmac.new(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>),digestmod=<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">h2.update(<span class="string">&#x27;w&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">h2.update(<span class="string">&#x27;orld&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(h1.hexdigest()) <span class="comment"># 0e2564b7e100f034341ea477c23f283b</span></span><br></pre></td></tr></table></figure><h2 id="subprocess模块"><a href="#subprocess模块" class="headerlink" title="subprocess模块"></a>subprocess模块</h2><p>在<code>linux</code>中使用<code>subporcess</code>模块可以实现shell命令效果。</p><p>在<code>windows</code>中使用可以实现<code>windows平台</code>下的命令。</p><p>举例：在<code>Linux</code>下查找<code>/root路径</code>下所有以<code>.txt</code>结尾的文件。</p><p>shell 实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /root | grep txt$</span><br></pre></td></tr></table></figure><p><code>subprocess模块</code>实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">res1=subprocess.Popen(<span class="string">&#x27;ls /root&#x27;</span>, shell=<span class="literal">True</span>,stdout=subprocess.PIPE)</span><br><span class="line">res=subprocess.Popen(<span class="string">&#x27;grep txt$&#x27;</span>, shell=<span class="literal">True</span>, stdin=res1.stdout, stdout=subprocess.PIPE)</span><br><span class="line"><span class="built_in">print</span>(res.stdout.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>解析：</p><p><code>subprocess.Popen()</code>执行命令<code>ls /root</code>并传入管道（<code>subprocess.PIPE</code>）并赋值给<code>res1</code></p><p><code>shell=True</code>指定用<code>shell</code>来执行。</p><p><code>subprocess.Popen()</code>执行命令<code>grep txt$</code>先把<code>res1</code>传进来，然后再把整个命令作为输出，最后赋值给res。</p><p>读输出的内容，<code>linux平台</code>默认编码为<code>utf-8</code>。</p><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a.txt</span><br><span class="line">output.txt</span><br><span class="line">url.txt</span><br></pre></td></tr></table></figure><p>windows平台</p><p>查看当前系统所有任务</p><p><code>shell</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br></pre></td></tr></table></figure><p>使用<code>subprocess</code>实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">res=subprocess.Popen(<span class="string">&#x27;tasklist&#x27;</span>, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line"><span class="built_in">print</span>(res.stdout.read().decode(<span class="string">&#x27;gbk&#x27;</span>))</span><br></pre></td></tr></table></figure><p>注意：windows下默认编码为<code>gbk</code>。使用其他编码会出现乱码情况。</p><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">映像名称                       PID 会话名              会话#       内存使用 </span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">System Idle Process              0 Services                   0          8 K</span><br><span class="line">System                           4 Services                   0        148 K</span><br><span class="line">Secure System                   88 Services                   0     73,304 K</span><br><span class="line">Registry                       156 Services                   0    108,364 K</span><br><span class="line">smss.exe                       532 Services                   0      1,232 K</span><br><span class="line">csrss.exe                      868 Services                   0      5,128 K</span><br><span class="line">Everything.exe               14296 Console                    1    110,268 K</span><br><span class="line">LogiOptions.exe               2244 Console                    1     15,932 K</span><br><span class="line">conhost.exe                   6812 Console                    1     11,480 K</span><br><span class="line">python.exe                    9740 Console                    1     10,116 K</span><br><span class="line">cmd.exe                       3740 Console                    1      4,852 K</span><br><span class="line">tasklist.exe                 15428 Console                    1      9,824 K</span><br></pre></td></tr></table></figure><p>官方文档<a href="https://docs.python.org/2/library/subprocess.html?highlight=subprocess#frequently-used-arguments">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块与包</title>
      <link href="/2022/03/26/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/"/>
      <url>/2022/03/26/%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是模块？"><a href="#什么是模块？" class="headerlink" title="什么是模块？"></a>什么是模块？</h2><p>最常见的场景，一个模块就是包含了一组功能的python文件，例如<code>module.py</code>,模块名是module。可以使用<code>import module</code>。</p><p>四个通用类别：</p><p>使用python编写的<code>.py</code>文件</p><p>已被编译为共享库或DLL的c或c++扩展</p><p>把一系列模块组织到一起的文件夹（注意：文件夹下有一个<code>__init__.py</code>文件，该文件夹称之为包）</p><p>使用C编写并连接到python解释器的内置模块</p><h2 id="为什么要使用模块？"><a href="#为什么要使用模块？" class="headerlink" title="为什么要使用模块？"></a>为什么要使用模块？</h2><p>从文件级别组织程序，更方便管理。</p><p>拿来主义，提升开发效率。</p><h2 id="如何使用模块？"><a href="#如何使用模块？" class="headerlink" title="如何使用模块？"></a>如何使用模块？</h2><p><code>import 模块名</code></p><p>调用模块里面的函数 <code>模块名.函数名</code></p><p>第一次导入模块，会发生3件事，重复导入只会引用之前加载好的结果。</p><p>1.产生一个新的名称空间。</p><p>2.运行<code>spam.py</code>源文件代码，产生的名字都存放于1的名称空间中,运行过程中<code>global关键字</code>指向的就是该名称空间。</p><p>3.在当前名称空间拿到一个名字<code>spam</code>，该名字指向1的名称空间。引用<code>spam.py</code>中名字的方式：<code>spam.名字</code></p><p>强调：被导入的模块在执行过程中使用自己的独立的名称空间作为全局名称空间。</p><h3 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h3><p><code>import spam as sm</code> </p><h3 id="一行导入多个模块"><a href="#一行导入多个模块" class="headerlink" title="一行导入多个模块"></a>一行导入多个模块</h3><p><code>import time,sys,spam</code></p><h3 id="另一种使用模块的方法"><a href="#另一种使用模块的方法" class="headerlink" title="另一种使用模块的方法"></a>另一种使用模块的方法</h3><p><code>from 模块名 import 名字</code></p><p>优点：引用时不用加前缀，简单<br>缺点：容易与当名称空间的名字冲突</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> spam <span class="keyword">import</span> money <span class="keyword">as</span> m</span><br><span class="line"><span class="keyword">from</span> spam <span class="keyword">import</span> money,read1,read2</span><br><span class="line"><span class="keyword">from</span> spam <span class="keyword">import</span> * <span class="comment">#*包含除了下划线开头以外所有的名字。</span></span><br></pre></td></tr></table></figure><h3 id="python文件的两种用途"><a href="#python文件的两种用途" class="headerlink" title="python文件的两种用途"></a>python文件的两种用途</h3><p>1.当作脚本执行</p><p><code>__name__ == &#39;__main__&#39;</code></p><p>2.当作模块被导入使用</p><p><code>__name__ == &#39;模块名&#39;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="模块搜索路径顺序"><a href="#模块搜索路径顺序" class="headerlink" title="模块搜索路径顺序"></a>模块搜索路径顺序</h3><p>内存-》内置模块–》<code>sys.path</code>(当前执行文件路径)</p><h2 id="什么是包"><a href="#什么是包" class="headerlink" title="什么是包"></a>什么是包</h2><p>包就是一个包含了<code>__init__.py</code>文件的文件夹（可以往该文件夹下放一堆子模块）</p><h2 id="包的使用"><a href="#包的使用" class="headerlink" title="包的使用"></a>包的使用</h2><p>注意：但凡是在导入时，出现<code>.</code>，这是导入包才有的语法，<code>.</code>的左边必须是一个包，使用的时候没有这种限制。</p><p>#把所有要导入的<code>.py</code>模块到放到一个包中，然后只需要导入包名就可以使用了。</p><p><code>import package1</code></p><p>练习：</p><p>在根目录下创建python package 名字为<code>package1</code>，默认会自动创建<code>__init__.py</code><br>在和<code>package1</code>同级的目录下<code>import.py</code>中导入<code>package1</code>,可以使用<code>package1</code>中定义的模块.<br>在<code>package1</code>中创建模块<code>func.py</code>。</p><p><code>func.py</code>内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Welcome to my f1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;from func.py&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>__init__.py</code>内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;__init__.py yeah&#x27;</span>)</span><br></pre></td></tr></table></figure><p>使用<code>package1</code>包中模块<code>func.py</code>中的<code>f1()</code>函数（在<code>import.py</code>中导入）</p><p>方法1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> package1.func</span><br><span class="line">package1.func.f1()</span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> package1 <span class="keyword">import</span> func</span><br><span class="line">func.f1()</span><br></pre></td></tr></table></figure><p>结果:</p><p><code>__init__.py</code> yeah<br>from func.py<br>Welcome to my f1</p><p>分析：路径查找顺序</p><p><code>__init__.py</code>-&gt;<code>func.py</code>-&gt;<code>f1()</code></p><h3 id="如何在pycharm中创建包？"><a href="#如何在pycharm中创建包？" class="headerlink" title="如何在pycharm中创建包？"></a>如何在pycharm中创建包？</h3><p>new-&gt;Python Package</p><p>练习：</p><p>层级结构如下<br>&#x2F;root&#x2F;import.py<br>&#x2F;root&#x2F;package1<br>├── <strong>init</strong>.py<br>├── func.py<br>└── package2<br>    ├── <strong>init</strong>.py<br>    └── myfunc.py</p><p><code>/root/package1/func.py</code>中的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Welcome to my f1&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>/root/package1/package2/myfunc.py</code> 模块中内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">max1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;This is a test!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>需求：<br>1.在<code>/root/import.py</code>使用<code>/root/package1/package2/myfunc.py </code>模块中<code>max1()</code> 函数<br>2.在<code>/root/import.py</code>使用<code>/root/package1/func.py </code>模块中<code>f1() </code>函数</p><p>解决方法：</p><p>思路：<code>/root/package1/__init__.py</code>中先导入<code>max1() </code>函数,再导入<code>f1() </code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> package1.package2.myfunc <span class="keyword">import</span> max1</span><br><span class="line"><span class="keyword">from</span> package1.func <span class="keyword">import</span> f1</span><br></pre></td></tr></table></figure><p>然后在执行文件<code>/root/import.py</code>中只需要导入包<code>package1</code> 就可以直接使用<code>max1()</code>和<code>f1()</code>了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> package1 </span><br><span class="line"></span><br><span class="line">package1.max1()</span><br><span class="line">package1.f1()</span><br></pre></td></tr></table></figure><p>结果如下</p><p>This is a test!<br>Welcome to my f1</p><p>拓展：<br>层级目录结构如下：<br>&#x2F;root&#x2F;import.py<br>&#x2F;root&#x2F;package1<br>├── <strong>init</strong>.py<br>├── func.py<br>├── package2<br>│   ├── <strong>init</strong>.py<br>│   └── myfunc.py<br>└── package3<br>    ├── <strong>init</strong>.py<br>    └── myfunc1.py</p><p><code>/root/package1/package3/myfunc1.py </code>中的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f3</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;from package3 myfunc1.py&#x27;</span>)</span><br></pre></td></tr></table></figure><p>需求：在<code>/root/import.py</code>中使用<code>package3</code>中<code>myfunc1</code>模块中的<code>f3</code>函数（使用相对路径导入）</p><p>解决：</p><p>1.在<code>/root/package1/__init__.py</code> 中先导入<code>f3</code>函数(点表示在当前路径下)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .package3.myfunc1 <span class="keyword">import</span> f3</span><br></pre></td></tr></table></figure><p>2.在<code>/root/import.py</code>中导入<code>package1</code>包即可直接使用<code>f3</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> package1</span><br><span class="line">package1.f3()</span><br></pre></td></tr></table></figure><h3 id="新下载的模块aaa如何导入？"><a href="#新下载的模块aaa如何导入？" class="headerlink" title="新下载的模块aaa如何导入？"></a>新下载的模块<code>aaa</code>如何导入？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">r&#x27;aaa绝对路径&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="如何连接两个或者多个路径名？"><a href="#如何连接两个或者多个路径名？" class="headerlink" title="如何连接两个或者多个路径名？"></a>如何连接两个或者多个路径名？</h3><p>使用<code>os.path.join()</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(os.path.join(<span class="string">r&#x27;C:&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c.txt&#x27;</span>))</span><br></pre></td></tr></table></figure><p>结果</p><p>C:\a\b\c.txt</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s网路通信</title>
      <link href="/2022/03/25/k8s%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
      <url>/2022/03/25/k8s%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="基于k8s中cni插件calico网络原理使用总结"><a href="#基于k8s中cni插件calico网络原理使用总结" class="headerlink" title="基于k8s中cni插件calico网络原理使用总结"></a>基于k8s中cni插件calico网络原理使用总结</h2><h3 id="1-实验环境"><a href="#1-实验环境" class="headerlink" title="1.实验环境"></a>1.实验环境</h3><table><thead><tr><th align="center">name</th><th align="center">version</th><th align="center">ip</th><th align="center">cni</th></tr></thead><tbody><tr><td align="center">master</td><td align="center">v1.22.2</td><td align="center">ens33:10.4.7.60</td><td align="center">calico</td></tr><tr><td align="center">worker1</td><td align="center">v1.22.2</td><td align="center">ens33:10.4.7.61</td><td align="center">calico</td></tr><tr><td align="center">worker2</td><td align="center">v1.22.2</td><td align="center">ens33:10.4.7.62</td><td align="center">calico</td></tr></tbody></table><h3 id="2-实验整体拓扑"><a href="#2-实验整体拓扑" class="headerlink" title="2.实验整体拓扑"></a>2.实验整体拓扑</h3><p><img src="/img/postimages/%E6%95%B4%E4%BD%93%E6%8B%93%E6%89%91.webp" alt="整体拓扑"></p><h3 id="3-部署一个deployment"><a href="#3-部署一个deployment" class="headerlink" title="3.部署一个deployment"></a>3.部署一个deployment</h3><p><img src="/img/postimages/deploy1.webp" alt="deploy1"></p><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><p>pod的ip从哪里来？</p><p>由<code>kube-controller-manager</code>来分配。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@master:~# cat /etc/kubernetes/manifests/kube-controller-manager.yaml | grep cidr</span><br><span class="line">    - --allocate-node-cidrs=true</span><br><span class="line">    - --cluster-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><p>如何确定集群上正在使用的cni网络插件?</p><p>在master节点上查看</p><p><img src="/img/postimages/calico.webp" alt="calico"></p><h4 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h4><p>在k8s中，docker 使用的是bridge（网桥）模式，并且始终处于Down状态，那么calico使用的也是网桥模式码？</p><p>使用<code>ip -d a</code>可以查看网卡模式.</p><p>calico使用都是vxlan技术。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">root@master:~# ip -d a  </span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 promiscuity 0 minmtu 0 maxmtu 0 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:30:56:5c brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 46 maxmtu 16110 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet 10.4.7.60/24 brd 10.4.7.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe30:565c/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    link/ether 02:42:97:3a:db:c3 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    bridge forward_delay 1500 hello_time 200 max_age 2000 ageing_time 30000 stp_state 0 priority 32768 vlan_filtering 0 vlan_protocol 802.1Q bridge_id 8000.2:42:97:3a:db:c3 designated_root 8000.2:42:97:3a:db:c3 root_port 0 root_path_cost 0 topology_change 0 topology_change_detected 0 hello_timer    0.00 tcn_timer    0.00 topology_change_timer    0.00 gc_timer  102.44 vlan_default_pvid 1 vlan_stats_enabled 0 vlan_stats_per_port 0 group_fwd_mask 0 group_address 01:80:c2:00:00:00 mcast_snooping 1 mcast_router 1 mcast_query_use_ifaddr 0 mcast_querier 0 mcast_hash_elasticity 16 mcast_hash_max 4096 mcast_last_member_count 2 mcast_startup_query_count 2 mcast_last_member_interval 100 mcast_membership_interval 26000 mcast_querier_interval 25500 mcast_query_interval 12500 mcast_query_response_interval 1000 mcast_startup_query_interval 3124 mcast_stats_enabled 0 mcast_igmp_version 2 mcast_mld_version 1 nf_call_iptables 0 nf_call_ip6tables 0 nf_call_arptables 0 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: cali64bc2599f1b@if3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UP group default </span><br><span class="line">    link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 0 promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    veth numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet6 fe80::ecee:eeff:feee:eeee/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">5: cali186813c9403@if3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UP group default </span><br><span class="line">    link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 1 promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    veth numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet6 fe80::ecee:eeff:feee:eeee/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">6: calia0e2fa62436@if3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UP group default </span><br><span class="line">    link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 2 promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    veth numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet6 fe80::ecee:eeff:feee:eeee/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">7: calia67de3f32d9@if3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UP group default </span><br><span class="line">    link/ether ee:ee:ee:ee:ee:ee brd ff:ff:ff:ff:ff:ff link-netnsid 3 promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    veth numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet6 fe80::ecee:eeff:feee:eeee/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">10: vxlan.calico: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN group default </span><br><span class="line">    link/ether 66:4f:26:ae:af:db brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 68 maxmtu 65535 </span><br><span class="line">    vxlan id 4096 local 10.4.7.60 dev ens33 srcport 0 0 dstport 4789 nolearning ttl auto ageing 300 udpcsum noudp6zerocsumtx noudp6zerocsumrx numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 </span><br><span class="line">    inet 10.244.219.64/32 scope global vxlan.calico</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::644f:26ff:feae:afdb/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h4 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h4><p>pod通信网口和woker网口之间有什么关系？</p><p><img src="/img/postimages/pod%E7%BD%91%E7%BB%9C.webp" alt="pod网络"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">worker1:</span><br><span class="line">my-dep-5b7868d854-4rlld   eth0@if14 10.244.235.135/32  --&gt;对应worker1 上 14: cali6ff8e3ade03@if3  网卡</span><br></pre></td></tr></table></figure><p><img src="/img/postimages/pod%E4%B8%8Eworker%E8%81%94%E7%B3%BB1.webp" alt="pod与worker联系1"></p><p><img src="/img/postimages/pod%E4%B8%8Eworker%E8%81%94%E7%B3%BB2.webp" alt="pod与worker联系2"></p><p><img src="/img/postimages/pod%E4%B8%8Eworker%E8%81%94%E7%B3%BB3.webp" alt="pod与worker联系3"></p><h4 id="问题5"><a href="#问题5" class="headerlink" title="问题5"></a>问题5</h4><p>pod上为什么会有169.254.1.1 的默认路由？地址可达吗？</p><p>地址不可达。calico使用了proxy arp 技术，地址不是真实存在的。</p><p><img src="/img/postimages/%E9%97%AE%E9%A2%985-1.webp" alt="问题5-1"></p><p><img src="/img/postimages/%E9%97%AE%E9%A2%985-2.webp" alt="问题5-2"></p><p><img src="/img/postimages/%E9%97%AE%E9%A2%985-3.webp" alt="问题5-3"></p><h4 id="问题6"><a href="#问题6" class="headerlink" title="问题6"></a>问题6</h4><p>相同worker之间的pod是如何通信的？</p><table><thead><tr><th align="center">pod</th><th align="center">ip</th><th align="center">pod interface</th><th align="center">node interface</th><th align="center">node</th></tr></thead><tbody><tr><td align="center">my-dep-5b7868d854-4rlld</td><td align="center">10.244.235.135</td><td align="center">3: eth0@if14</td><td align="center">14: cali6ff8e3ade03@if3</td><td align="center">worker1</td></tr><tr><td align="center">my-dep-5b7868d854-mzp9z</td><td align="center">10.244.235.140</td><td align="center">3: eth0@if15</td><td align="center">15: cali1292bd788a2@if3</td><td align="center">worker1</td></tr></tbody></table><p>从10.244.235.135ping 10.244.235.140。</p><p>分别在②、③、④上抓包查看网络接口数据包发送接收状态。</p><p>网络路径：</p><p><code>4rlld(10.244.235.135)-&gt;14: cali6ff8e3ade03@if3-&gt;15: cali1292bd788a2@if3-&gt;mzp9z(10.244.235.140) </code></p><p>​                    ①                                        ②                                        ③                                        ④</p><p><img src="/img/postimages/%E7%9B%B8%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A11.webp" alt="相同worker的pod之间通信1"></p><p><img src="/img/postimages/%E7%9B%B8%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1135.webp" alt="相同worker的pod之间通信135"></p><p><img src="/img/postimages/%E7%9B%B8%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1worker14.webp" alt="相同worker的pod之间通信worker14"></p><p><img src="/img/postimages/%E7%9B%B8%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1worker15.webp" alt="相同worker的pod之间通信worker15"></p><p><img src="/img/postimages/%E7%9B%B8%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1140.webp" alt="相同worker的pod之间通信140"></p><h4 id="问题7"><a href="#问题7" class="headerlink" title="问题7"></a>问题7</h4><p>不同worker之间的pod是如何通信的？</p><p>worker1 的pod1和worker2的pod3通信过程。跨子网使用vxlan进行通信。</p><table><thead><tr><th align="center">pod</th><th align="center">ip</th><th align="center">pod interface</th><th align="center">node interface</th><th align="center">node</th></tr></thead><tbody><tr><td align="center">my-dep-5b7868d854-4rlld</td><td align="center">10.244.235.135&#x2F;32</td><td align="center">3:eth0@if14</td><td align="center">14: cali6ff8e3ade03@if3</td><td align="center">worker1</td></tr><tr><td align="center">my-dep-5b7868d854-4dj4p</td><td align="center">10.244.189.91&#x2F;32</td><td align="center">3:eth0@if15</td><td align="center">15: calic18ddbeaf18@if3</td><td align="center">worker2</td></tr></tbody></table><p>从10.244.235.135ping 10.244.189.91。</p><p>网络路径：</p><p><code>4rlld(10.244.235.135)-&gt;vxlan.calico(10.244.235.128)-&gt;14: cali6ff8e3ade03@if3-&gt;vxlan.calico(10.244.189.64)-&gt;15: calic18ddbeaf18@if3-&gt;4dj4p(10.244.189.91)</code></p><p><code>4rlld</code>上的路由信息</p><p><img src="/img/postimages/%E4%B8%8D%E5%90%8Cworker%E7%9A%84pod%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1135.webp" alt="不同worker的pod之间通信135"></p><p><img src="https://images-1316789231.cos.ap-shanghai.myqcloud.com/%E4%BA%91%E8%AE%A1%E7%AE%97/pod1%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF.webp" alt="pod1路由信息"></p><p>根据路由信息，ping 10.244.189.91，会匹配到第一条。第一条路由的意思是：去往任何网段的数据包都发往网管169.254.1.1，然后从eth0网卡发送出去。</p><p>路由表中Flags标志的含义：</p><p>U up表示当前为启动状态</p><p>H host表示该路由为一个主机，多为达到数据包的路由</p><p>G Gateway 表示该路由是一个网关，如果没有说明目的地是直连的</p><p>D Dynamicaly 表示该路由是重定向报文修改</p><p>M 表示该路由已被重定向报文修改</p><p>worker1上路由信息</p><p><img src="/img/postimages/worker1%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF.webp" alt="worker1路由信息"></p><p>当ping包来到worker1节点上，会匹配到路由eth3。该路由的意思是：去往10.244.189.64&#x2F;26的网段的数据包都发往网关10.4.7.62。因为pod1在7.61，pod3在7.62。所以数据包就通过设备eth3发往到worker2节点上。 </p><p>worker2上路由信息</p><p><img src="/img/postimages/worker2%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF.webp" alt="worker2路由信息"></p><p>当worker2节点网卡收到数据包之后，发现发往的目的ip为10.244.189.91，于是匹配到红线的路由。该路由的意思是：10.244.189.91是本机直连设备，去往设备的数据包发往calic18ddbeaf18。</p><p>绿色框是回程路由。</p><p>那么该设备是什么呢？这个设备就是veth pair的一端。在创建pod3时calico会给pod3创建一个veth pair设备。一端是pod3的网卡，另一端就是我们看到的calic18ddbeaf18。下面我们验证一下。在pod3中安装ethtool工具，然后使用ethtool -S eth0,查看veth pair另一端的设备号。</p><p><img src="/img/postimages/pod3%E4%B8%8A%E5%AF%B9%E7%AB%AFveth.webp" alt="pod3上对端veth"></p><p>pod3 网卡另一端的设备好号是15，在worker2上查看编号为15的网络设备，可以发现该网络设备就是calic18ddbeaf18。</p><p><img src="/img/postimages/worker2%E4%B8%8Aveth.webp" alt="worker2上veth"></p><p>所以，worker2上的路由，发送calic18ddbeaf18的数据其实就是发送到pod3的网卡中。ping包的旅行到这里就到了目的地。</p><p>查看一下pod3中的路由信息，发现该路由信息和pod1中是一样的。</p><p><img src="/img/postimages/pod3%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF.webp" alt="pod3路由信息"></p><h4 id="问题8"><a href="#问题8" class="headerlink" title="问题8"></a>问题8</h4><p>pod是如何访问互联网的？</p><p>演示：worker1中pod1访问baidu.com</p><p><img src="/img/postimages/pod1%E5%A4%96%E7%BD%91%E6%B5%8B%E8%AF%951.webp" alt="pod1外网测试1"></p><p>查看coredns</p><p><img src="/img/postimages/pod1%E5%A4%96%E7%BD%91%E6%B5%8B%E8%AF%952.webp" alt="pod1外网测试2"></p><p>cluster dns由kubelet分配。</p><p><img src="/img/postimages/pod1%E5%A4%96%E7%BD%91%E6%B5%8B%E8%AF%953.webp" alt="pod1外网测试3"></p><p>worker1节点收到pod1的ping请求后数据包从eth3网卡发往baidu.com</p><p><img src="/img/postimages/pod1%E5%A4%96%E7%BD%91%E6%B5%8B%E8%AF%954.webp" alt="pod1外网测试4"></p><p>查看iptable转发规则</p><p><code>iptables -nvL -t nat </code></p><p><img src="/img/postimages/pod1%E5%A4%96%E7%BD%91%E6%B5%8B%E8%AF%955.webp" alt="pod1外网测试5"></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pam模块限制登录</title>
      <link href="/2022/03/16/pam%E6%A8%A1%E5%9D%97%E9%99%90%E5%88%B6%E7%99%BB%E5%BD%95/"/>
      <url>/2022/03/16/pam%E6%A8%A1%E5%9D%97%E9%99%90%E5%88%B6%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 ~]# uname -a </span><br><span class="line">Linux 43f873a76b81 4.18.0-147.5.1.el8_1.x86_64 #1 SMP Wed Feb 5 02:00:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@43f873a76b81 ~]# cat /etc/*release*</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">Derived from Red Hat Enterprise Linux 7.9 (Source)</span><br><span class="line">NAME=&quot;CentOS Linux&quot;</span><br><span class="line">VERSION=&quot;7 (Core)&quot;</span><br><span class="line">ID=&quot;centos&quot;</span><br><span class="line">ID_LIKE=&quot;rhel fedora&quot;</span><br><span class="line">VERSION_ID=&quot;7&quot;</span><br><span class="line">PRETTY_NAME=&quot;CentOS Linux 7 (Core)&quot;</span><br><span class="line">ANSI_COLOR=&quot;0;31&quot;</span><br><span class="line">CPE_NAME=&quot;cpe:/o:centos:centos:7&quot;</span><br><span class="line">HOME_URL=&quot;https://www.centos.org/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.centos.org/&quot;</span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT=&quot;CentOS-7&quot;</span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION=&quot;7&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT=&quot;centos&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;7&quot;</span><br><span class="line"></span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">cpe:/o:centos:centos:7</span><br></pre></td></tr></table></figure><h3 id="检查是否有ssh服务-没有则需要安装openssh-server服务"><a href="#检查是否有ssh服务-没有则需要安装openssh-server服务" class="headerlink" title="检查是否有ssh服务,没有则需要安装openssh-server服务"></a>检查是否有ssh服务,没有则需要安装openssh-server服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 ~]# rpm -qa| grep ssh </span><br><span class="line">openssh-7.4p1-22.el7_9.x86_64</span><br><span class="line">openssh-server-7.4p1-22.el7_9.x86_64</span><br><span class="line">libssh2-1.8.0-4.el7.x86_64</span><br><span class="line">[root@43f873a76b81 ~]# yum install -y openssh-server </span><br></pre></td></tr></table></figure><h3 id="编辑vi-x2F-etc-x2F-ssh-x2F-sshd-config-文件，禁用root用户直接登录，1分钟无操作自动退出系统。"><a href="#编辑vi-x2F-etc-x2F-ssh-x2F-sshd-config-文件，禁用root用户直接登录，1分钟无操作自动退出系统。" class="headerlink" title="编辑vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config 文件，禁用root用户直接登录，1分钟无操作自动退出系统。"></a>编辑vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config 文件，禁用root用户直接登录，1分钟无操作自动退出系统。</h3><h3 id="主要配置文件，其他全注释掉。"><a href="#主要配置文件，其他全注释掉。" class="headerlink" title="主要配置文件，其他全注释掉。"></a>主要配置文件，其他全注释掉。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Port 22</span><br><span class="line">LoginGraceTime 1m</span><br><span class="line">PermitRootLogin no</span><br><span class="line">AuthorizedKeysFile.ssh/authorized_keys</span><br><span class="line">UsePAM yes</span><br><span class="line">X11Forwarding yes</span><br><span class="line">AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES</span><br><span class="line">AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT</span><br><span class="line">AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE</span><br><span class="line">AcceptEnv XMODIFIERS</span><br><span class="line">Subsystemsftp/usr/libexec/openssh/sftp-server</span><br><span class="line">Protocol 2</span><br></pre></td></tr></table></figure><h3 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Port 22 #使用22端口连接</span><br><span class="line">LoginGraceTime 1m #登录系统后1分钟内不操作自动退出。设置空闲会话超时时长。</span><br><span class="line">PermitRootLogin no #禁止root用户直接登录</span><br><span class="line">UsePAM yes #使用pam模块</span><br><span class="line">X11Forwarding yes # 开启GUI界面</span><br><span class="line">Subsystemsftp/usr/libexec/openssh/sftp-server </span><br><span class="line">Protocol 2 #使用版本2更加安全。</span><br></pre></td></tr></table></figure><h3 id="添加一个普通用户admin并设置密码admin"><a href="#添加一个普通用户admin并设置密码admin" class="headerlink" title="添加一个普通用户admin并设置密码admin"></a>添加一个普通用户admin并设置密码admin</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd admin </span><br><span class="line">passwd admin</span><br></pre></td></tr></table></figure><h3 id="更改pam模块设置，密码输错后等待120s后重试。"><a href="#更改pam模块设置，密码输错后等待120s后重试。" class="headerlink" title="更改pam模块设置，密码输错后等待120s后重试。"></a>更改pam模块设置，密码输错后等待120s后重试。</h3><h3 id="一定要加在第一行。"><a href="#一定要加在第一行。" class="headerlink" title="一定要加在第一行。"></a>一定要加在第一行。</h3><p>vi &#x2F;etc&#x2F;pam.d&#x2F;login</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#%PAM-1.0</span><br><span class="line">auth required pam_tally2.so onerr=fail deny=3 unlock_time=120 even_deny_root root_unlock_time=120</span><br></pre></td></tr></table></figure><p>vi &#x2F;etc&#x2F;pam.d&#x2F;sshd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#%PAM-1.0</span><br><span class="line">auth required pam_tally2.so onerr=fail deny=3 unlock_time=120 even_deny_root root_unlock_time=120</span><br></pre></td></tr></table></figure><h3 id="最后重启ssh服务"><a href="#最后重启ssh服务" class="headerlink" title="最后重启ssh服务"></a>最后重启ssh服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh admin@172.16.0.3</span><br><span class="line">Account locked due to 27 failed logins</span><br><span class="line">Password: </span><br><span class="line">Account locked due to 29 failed logins</span><br><span class="line">Password: </span><br></pre></td></tr></table></figure><h3 id="查看登陆信息"><a href="#查看登陆信息" class="headerlink" title="查看登陆信息"></a>查看登陆信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@43f873a76b81 ~]# pam_tally2 --user </span><br><span class="line">Login           Failures Latest failure     From</span><br><span class="line">root                3    03/16/22 06:04:08  gateway</span><br><span class="line">admin              36    03/16/22 06:04:17  gateway</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 信息查询命令</title>
      <link href="/2022/02/25/Linux-%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/25/Linux-%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-信息查询命令"><a href="#Linux-信息查询命令" class="headerlink" title="Linux 信息查询命令"></a>Linux 信息查询命令</h1><h2 id="硬件查询"><a href="#硬件查询" class="headerlink" title="硬件查询"></a>硬件查询</h2><p>查看 CPU 信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure><p>查看物理 CPU 数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo |grep &quot;physical id&quot;|sort |uniq|wc -l</span><br></pre></td></tr></table></figure><p>查看逻辑 CPU 数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo |grep &quot;processor&quot;|wc -l</span><br></pre></td></tr></table></figure><p>查看每个 CPU 中 core 的数量 (核心数)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo |grep &quot;cores&quot;|uniq</span><br></pre></td></tr></table></figure><p>查看 CPU 的主频</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo |grep MHz|uniq</span><br></pre></td></tr></table></figure><p>查看操作系统内核信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p>查看 CPU 型号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</span><br><span class="line"><span class="meta"># </span><span class="language-bash">8 Intel(R) Core(TM) i7-4770 CPU  @ 3.40GHz 前面 8 代表 CPU 数量.</span></span><br></pre></td></tr></table></figure><p>查看 CPU 运行在 32bit 或 64bit 模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getconf LONG_BIT</span><br><span class="line"><span class="meta"># </span><span class="language-bash">64 说明当前 CPU 运行在 64bit 模式下,但并不代表不支持 32bit,反之亦然.</span></span><br></pre></td></tr></table></figure><p>查看 CPU 是否支持 64bit 计算</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo | grep flags | grep &#x27; lm &#x27; | wc -l</span><br><span class="line"><span class="meta"># </span><span class="language-bash">8 (结果大于 0, 说明支持 64bit 计算. lm 指 long mode, 支持 lm 则是 64bit)</span></span><br></pre></td></tr></table></figure><p>查看机器型号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmidecode | grep &quot;Product Name&quot; </span><br></pre></td></tr></table></figure><p>查看网卡信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep -i eth </span><br></pre></td></tr></table></figure><p>查看内存信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/meminfo </span><br></pre></td></tr></table></figure><p>查看内存总量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep MemTotal /proc/meminfo</span><br></pre></td></tr></table></figure><p>查看空闲内存总量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep MemFree /proc/meminfo</span><br></pre></td></tr></table></figure><p>查看指定目录的大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh &lt;目录名&gt;  </span><br></pre></td></tr></table></figure><p>查看各分区使用情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>查看系统运行时间、用户数、负载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uptime</span><br></pre></td></tr></table></figure><p>查看操作系统版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n 1 /etc/issue</span><br></pre></td></tr></table></figure><p>查看环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env</span><br></pre></td></tr></table></figure><p>查看计算机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 升级内核</title>
      <link href="/2022/02/25/CentOS7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
      <url>/2022/02/25/CentOS7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-7-升级内核"><a href="#CentOS-7-升级内核" class="headerlink" title="CentOS 7 升级内核"></a>CentOS 7 升级内核</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看内核</span></span><br><span class="line">yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span><br><span class="line">yum  --disablerepo=&quot;*&quot;  --enablerepo=&quot;elrepo-kernel&quot;  list  available</span><br><span class="line">yum  --enablerepo=elrepo-kernel  install  -y  kernel-lt</span><br><span class="line">awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /boot/grub2/grub.cfg</span><br><span class="line">yum install -y grub2-pc</span><br><span class="line">grub2-set-default 0</span><br><span class="line">vim /etc/default/grub</span><br><span class="line"><span class="meta"># </span><span class="language-bash">修改 GRUB_DEFAULT=0</span></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">reboot</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重启</span></span><br><span class="line">uname -r</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看内核</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">############################# 以下可选 ##############################</span></span></span><br><span class="line">yum remove kernel-tools-libs.x86_64 kernel-tools.x86_64</span><br><span class="line"><span class="meta"># </span><span class="language-bash">删除版本工具包</span></span><br><span class="line">yum --disablerepo=\* --enablerepo=elrepo-kernel install -y kernel-lt-tools.x86_64</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装新版本工具包</span></span><br><span class="line">rpm -qa | grep kernel</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看已安装内核</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 常规命令</title>
      <link href="/2022/02/25/CentOS7-%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/25/CentOS7-%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-7-常规命令"><a href="#CentOS-7-常规命令" class="headerlink" title="CentOS 7 常规命令"></a>CentOS 7 常规命令</h1><h2 id="文件类"><a href="#文件类" class="headerlink" title="文件类"></a>文件类</h2><h3 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h3><p>tar 打包解包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar cvf FileName.tar DirName or FileName</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打包</span></span><br><span class="line">tar xvf FileName.tar -C 指定位置目录</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解包</span></span><br></pre></td></tr></table></figure><p>tar gz 打包压缩</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf FileName.tar.gz DirName or FileName</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打包并压缩</span></span><br><span class="line">tar zxvf FileName.tar.gz -C 指定位置目录</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解包</span></span><br></pre></td></tr></table></figure><p>zip 压缩解压缩</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zip FileName.zip FileName</span><br><span class="line"><span class="meta"># </span><span class="language-bash">压缩文件</span></span><br><span class="line">zip -r DirName.zip DirName</span><br><span class="line"><span class="meta"># </span><span class="language-bash">压缩目录</span></span><br><span class="line">unzip xxx.zip</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解压缩</span></span><br></pre></td></tr></table></figure><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><p>下载覆盖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://xxx.com/xxx.zip -O /xxx/xxx.zip</span><br><span class="line"><span class="meta"># </span><span class="language-bash">-O 重命名并直接覆盖</span></span><br></pre></td></tr></table></figure><p>下载指定路径比对新旧直接覆盖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -P /xxx/xxx -N https://xxx.com/xxx.zip</span><br><span class="line"><span class="meta"># </span><span class="language-bash">-P 指定下载路径,如不存在则自动创建.</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">-N 只下载比本地新的文件并覆盖</span></span><br></pre></td></tr></table></figure><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><p>文件下载 - 从远程服务器下载文件到本服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 22 root@8.8.8.8:/root/1.zip /root</span><br></pre></td></tr></table></figure><p>文件上传 - 上传本地文件到远程服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 22 /root/st/1.zip root@8.8.8.8:/root</span><br></pre></td></tr></table></figure><p>目录下载 - 从远程服务器下载文件夹到本服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 22 root@8.8.8.8:/root/xx /root</span><br></pre></td></tr></table></figure><p>目录上传 - 上传本地文件夹到远程服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 22 /root/xx root@8.8.8.8:/root</span><br></pre></td></tr></table></figure><h3 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h3><p>查询当前目录下及所有子目录下的某文件,并拷贝到当前文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . -name &quot;*.txt&quot; | xargs -I&#123;&#125; cp &#123;&#125; ./</span><br><span class="line">find . -name &quot;*.*&quot; | xargs -I&#123;&#125; cp &#123;&#125; ./</span><br></pre></td></tr></table></figure><p>查询当前目录下及所有子目录下的某文件,并删除.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name &quot;.DS_Store&quot; | xargs -I&#123;&#125; rm &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="运维类"><a href="#运维类" class="headerlink" title="运维类"></a>运维类</h2><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>允许 root 登陆及修改端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">Port 22222</span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置端口</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">ClientAliveInterval 30</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重启 sshd</span></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><p>yum 源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br><span class="line">yum repolist all</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看 yum 源</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line"><span class="meta"># </span><span class="language-bash">如无 epel/x86_64 推荐先安装 epel 源</span></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"><span class="meta"># </span><span class="language-bash">清除并重建缓存</span></span><br><span class="line">yum update -y</span><br><span class="line"><span class="meta"># </span><span class="language-bash">更新</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">如需使用 epel 源国内阿里云镜像加速,执行以下命令:</span></span><br><span class="line">mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>修改网络信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd  /etc/sysconfig/network-scripts</span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">ls</span> 查看当前网卡信息,可能为 ifcfg-eth0 ifcfg-ens192 等等.</span></span><br><span class="line">vi ifcfg-eth0</span><br><span class="line"><span class="meta"># </span><span class="language-bash">编辑修改网络信息</span></span><br><span class="line">service network restart</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重启网络服务</span></span><br></pre></td></tr></table></figure><p>时区及 ntp 时间同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tzselect</span><br><span class="line"><span class="meta"># </span><span class="language-bash">选择时区</span></span><br><span class="line">mv /etc/localtime /etc/localtime.bak</span><br><span class="line"><span class="meta"># </span><span class="language-bash">备份 localtime</span></span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="meta"># </span><span class="language-bash">创建时区软链接,再次 <span class="built_in">date</span> 检查时区.</span></span><br><span class="line">yum -y install ntpdate</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 ntpdate</span></span><br><span class="line">ntpdate cn.pool.ntp.org</span><br><span class="line"><span class="meta"># </span><span class="language-bash">同步时间</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">备选 ntp 服务器</span></span><br><span class="line">cn.pool.ntp.org</span><br><span class="line">ntp.aliyun.com</span><br><span class="line">ntp1.aliyun.com</span><br><span class="line">time1.cloud.tencent.com</span><br></pre></td></tr></table></figure><p>screen 常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">yum -y install screen</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 screen</span></span><br><span class="line">screen -S xxx</span><br><span class="line"><span class="meta"># </span><span class="language-bash">新建名为 xxx 的 session</span></span><br><span class="line">screen -ls</span><br><span class="line"><span class="meta"># </span><span class="language-bash">列出当前所有 session</span></span><br><span class="line">screen -r xxx</span><br><span class="line"><span class="meta"># </span><span class="language-bash">恢复到 xxx 这个 session</span></span><br><span class="line">screen -d xxx</span><br><span class="line"><span class="meta"># </span><span class="language-bash">远程分离 xxx 这个 session</span></span><br><span class="line">screen -d -r xxx</span><br><span class="line"><span class="meta"># </span><span class="language-bash">结束当前 session 并恢复到 xxx 这个 session</span></span><br><span class="line">screen -S xxx -X quit</span><br><span class="line"><span class="meta"># </span><span class="language-bash">远程删除 session</span></span><br></pre></td></tr></table></figure><h3 id="常规查询"><a href="#常规查询" class="headerlink" title="常规查询"></a>常规查询</h3><p>清除历史登录记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &gt; /var/log/wtmp</span><br></pre></td></tr></table></figure><p>清除历史命令记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history -c &amp;&amp; history -w</span><br></pre></td></tr></table></figure><p>一键清除并退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &gt; /var/log/wtmp &amp;&amp; history -c &amp;&amp; history -w &amp;&amp; exit</span><br></pre></td></tr></table></figure><p>查看目录占用空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h --max-depth=1 /home</span><br></pre></td></tr></table></figure><p>端口占用查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp</span><br><span class="line">netstat -ntlp | grep 80</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查询80端口占用</span></span><br></pre></td></tr></table></figure><p>CPU内存占用查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps aux|head -1;ps aux|grep -v PID|sort -rn -k +3|head</span><br><span class="line"><span class="meta"># </span><span class="language-bash">获取占用CPU资源最多的10个进程</span></span><br><span class="line">ps aux|head -1;ps aux|grep -v PID|sort -rn -k +4|head</span><br><span class="line"><span class="meta"># </span><span class="language-bash">获取占用内存资源最多的10个进程</span></span><br></pre></td></tr></table></figure><p>重新加载systemctl</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>使用 iptables 需禁用默认防火墙 firewalld</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">yum -y install iptables-services</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 iptables iptables-services</span></span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">禁用 firewall</span></span><br><span class="line"></span><br><span class="line">systemctl start iptables</span><br><span class="line">systemctl status iptables</span><br><span class="line">systemctl enable iptables</span><br><span class="line"><span class="meta"># </span><span class="language-bash">启用 iptables</span></span><br><span class="line"></span><br><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">iptables -F </span><br><span class="line">service iptables save</span><br><span class="line"><span class="meta"># </span><span class="language-bash">设置默认规则并清空所有规则,保存设置.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">以下为快速执行</span></span><br><span class="line">iptables -P INPUT ACCEPT &amp;&amp; \</span><br><span class="line">iptables -P OUTPUT ACCEPT &amp;&amp; \</span><br><span class="line">iptables -P FORWARD ACCEPT &amp;&amp; \</span><br><span class="line">iptables -F &amp;&amp; \</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><h4 id="常规命令"><a href="#常规命令" class="headerlink" title="常规命令"></a>常规命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --add-service=http --permanent</span><br><span class="line">sudo firewall-cmd --add-service=https --permanent</span><br><span class="line">sudo firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">sudo firewall-cmd --add-port=443/tcp --permanent</span><br><span class="line">sudo firewall-cmd --add-port=4000-5000/tcp --permanent</span><br><span class="line">sudo firewall-cmd --remove-port=XXXX/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line">sudo firewall-cmd --list-all</span><br></pre></td></tr></table></figure><h4 id="更多命令"><a href="#更多命令" class="headerlink" title="更多命令"></a>更多命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">查看是否开启</span></span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打开防火墙</span></span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"><span class="meta"># </span><span class="language-bash">停用防火墙</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">禁用防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">开机启动</span></span><br><span class="line">systemctl enable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">取消开机启动</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看运行状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看接口信息</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">更新防火墙规则方法1:无需断开连接，动态更改规则</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="meta"># </span><span class="language-bash">更新防火墙规则方法2:断开连接，以重启的方式更改规则</span></span><br><span class="line">firewall-cmd --complete-reload</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看帮助</span></span><br><span class="line">firewall-cmd --help</span><br><span class="line">--zone=NAME # 指定 Zone</span><br><span class="line">--permanent # 为永久生效</span><br><span class="line">--timeout=seconds # 持续一段时间，到期后自动移除，经常用于调试，且不能与 --permanent 同时使用</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">追加一个8181端口，永久有效</span></span><br><span class="line">firewall-cmd --add-port=8181/tcp --permanent</span><br><span class="line"><span class="meta"># </span><span class="language-bash">追加一段端口范围</span></span><br><span class="line">firewall-cmd --add-port=6000-6600/tcp</span><br><span class="line"><span class="meta"># </span><span class="language-bash">开放 ftp 服务</span></span><br><span class="line">firewall-cmd --add-service=ftp</span><br><span class="line"><span class="meta"># </span><span class="language-bash">添加eth0 接口至 public 信任等级，永久有效</span></span><br><span class="line">firewall-cmd --zone=public --add-interface=eth0 --permanent</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置 public zone 的端口转发</span></span><br><span class="line">firewall-cmd --zone=public --add-masquerade</span><br><span class="line"><span class="meta"># </span><span class="language-bash">然后转发 tcp 22 端口至 9527</span></span><br><span class="line">firewall-cmd --zone=public --add-forward-port=port=22:proto=tcp:toport=9527</span><br><span class="line"><span class="meta"># </span><span class="language-bash">转发 22 端口数据至另一个 ip 的相同端口上</span></span><br><span class="line">firewall-cmd --zone=public --add-forward-port=port=22:proto=tcp:toaddr=192.168.1.123</span><br><span class="line"><span class="meta"># </span><span class="language-bash">转发 22 端口数据至另一 ip 的 9527 端口上</span></span><br><span class="line">firewall-cmd --zone=public --add-forward-port=port=22:proto=tcp:toport=9527:toaddr=192.168.1.100</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">IP 封禁</span></span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;192.168.1.123&#x27; reject&quot;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">通过 ipset 来封禁 ip</span></span><br><span class="line">firewall-cmd --permanent --zone=public --new-ipset=blacklist --type=hash:ip</span><br><span class="line">firewall-cmd --permanent --zone=public --ipset=blacklist --add-entry=192.168.1.123</span><br><span class="line"><span class="meta"># </span><span class="language-bash">封禁网段</span></span><br><span class="line">firewall-cmd --permanent --zone=public --new-ipset=blacklist --type=hash:net</span><br><span class="line">firewall-cmd --permanent --zone=public --ipset=blacklist --add-entry=192.168.1.0/24</span><br><span class="line"><span class="meta"># </span><span class="language-bash">倒入 ipset 规则 blacklist，然后封禁 blacklist</span></span><br><span class="line">firewall-cmd --permanent --zone=public --new-ipset-from-file=/path/blacklist.xml</span><br><span class="line">firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule source ipset=blacklist drop&#x27;</span><br></pre></td></tr></table></figure><h2 id="系统类"><a href="#系统类" class="headerlink" title="系统类"></a>系统类</h2><h3 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h3><h4 id="磁盘分区格式化"><a href="#磁盘分区格式化" class="headerlink" title="磁盘分区格式化"></a>磁盘分区格式化</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看到新硬盘 /dev/sdb</span></span><br><span class="line">fdisk /dev/sdb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">为磁盘分区,选择 n 开始分区,其他直接回车保持默认,结尾 w 保存.</span></span><br><span class="line">mkfs.ext4 /dev/sdb1</span><br><span class="line"><span class="meta"># </span><span class="language-bash">格式化分区</span></span><br></pre></td></tr></table></figure><h4 id="磁盘挂载-1"><a href="#磁盘挂载-1" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">创建挂载目录</span></span><br><span class="line">mount /dev/sdb1 /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">挂载至 /data</span></span><br><span class="line">vi /etc/fstab</span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置开机自动挂载</span></span><br><span class="line">/dev/sdb1 /data ext4 defaults 0 0</span><br><span class="line"><span class="meta"># </span><span class="language-bash">添加启动项后保存</span></span><br><span class="line">umount /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">取消挂载,同时需再次编辑 /etc/fstab 删除开机自动挂载命令.</span></span><br></pre></td></tr></table></figure><h3 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h3><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl enable rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line">systemctl enable nfs</span><br></pre></td></tr></table></figure><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/exports</span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置挂载权限</span></span><br><span class="line">/share *(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line"><span class="meta"># </span><span class="language-bash">所有网段</span></span><br><span class="line">/share 192.168.1.0/24(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line"><span class="meta"># </span><span class="language-bash">指定网段</span></span><br><span class="line">/share 192.168.1.9(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line"><span class="meta"># </span><span class="language-bash">指定 IP</span></span><br><span class="line">exportfs -r</span><br><span class="line"><span class="meta"># </span><span class="language-bash">刷新配置</span></span><br></pre></td></tr></table></figure><h4 id="客户端挂载"><a href="#客户端挂载" class="headerlink" title="客户端挂载"></a>客户端挂载</h4><p>用于挂载局域网内群晖 NFS 共享文件夹,需在群晖 DSM 内开启 NFS 服务,并编辑需挂载的共享文件夹,添加 NFS 权限设置<code>服务器名称或 IP 地址</code>为 <strong><code>\*</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 NFS 工具</span></span><br><span class="line">mkdir /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">创建本地目录</span></span><br><span class="line">mount -t nfs 192.168.1.8:/volume1/Downloads /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">挂载目录</span></span><br><span class="line">vi /etc/fstab</span><br><span class="line"><span class="meta"># </span><span class="language-bash">设置开机自动挂载</span></span><br><span class="line">192.168.1.8:/volume1/Downloads /data nfs defaults 0 0</span><br><span class="line"><span class="meta"># </span><span class="language-bash">尾行添加挂载命令</span></span><br><span class="line">umount /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">取消挂载,同时需再次编辑 /etc/fstab 删除开机自动挂载命令.</span></span><br></pre></td></tr></table></figure><h3 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h3><h4 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h4><h5 id="安装启动"><a href="#安装启动" class="headerlink" title="安装启动"></a>安装启动</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install samba</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装</span></span><br><span class="line">systemctl start smb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">启动</span></span><br><span class="line">systemctl status smb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">状态</span></span><br><span class="line">systemctl enable smb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">开机自启动</span></span><br><span class="line">systemctl restart smb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重启</span></span><br></pre></td></tr></table></figure><h5 id="共享文件夹"><a href="#共享文件夹" class="headerlink" title="共享文件夹"></a>共享文件夹</h5><p>本文为匿名共享文件夹,无需配置账号密码.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">创建共享文件夹</span></span><br><span class="line">chown -R nobody:nobody /data</span><br><span class="line"><span class="meta"># </span><span class="language-bash">赋予文件夹匿名用户权限</span></span><br><span class="line">vi /etc/sysconfig/selinux</span><br><span class="line"><span class="meta"># </span><span class="language-bash">OR</span></span><br><span class="line">vi /etc/selinux/config</span><br><span class="line"><span class="meta"># </span><span class="language-bash">修改 SELINUX=disabled 后重启服务器</span></span><br></pre></td></tr></table></figure><h5 id="配置-smb-conf"><a href="#配置-smb-conf" class="headerlink" title="配置 smb.conf"></a>配置 smb.conf</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/samba/smb.conf</span><br><span class="line"><span class="meta"># </span><span class="language-bash">参考以下编辑 conf 文件:</span></span><br><span class="line">[global]</span><br><span class="line">    workgroup = WORKGROUP</span><br><span class="line">    security = user</span><br><span class="line">    map to guest = Bad User</span><br><span class="line">[data]</span><br><span class="line">    comment = date</span><br><span class="line">    path = /data</span><br><span class="line">    public = yes</span><br><span class="line">    read only = No</span><br></pre></td></tr></table></figure><h5 id="配置账号密码"><a href="#配置账号密码" class="headerlink" title="配置账号密码"></a>配置账号密码</h5><p><a href="https://cloud.tencent.com/developer/article/1691026">参考链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">useradd stille</span><br><span class="line">smbpasswd -a stille</span><br><span class="line">chown -R nobody:nobody share</span><br><span class="line">chmod -R 777 share</span><br><span class="line"></span><br><span class="line">vi /etc/samba/smb.conf</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">    security = user</span><br><span class="line">    workgroup = SAMBA</span><br><span class="line">    passdb backend = tdbsam</span><br><span class="line">    </span><br><span class="line">[share]</span><br><span class="line">    comment = share</span><br><span class="line">    path = /share</span><br><span class="line">    writable = no</span><br><span class="line">    create mask = 0644</span><br><span class="line">    directory mask = 02755</span><br><span class="line">    valid users = stille</span><br><span class="line">    write list = stille</span><br></pre></td></tr></table></figure><h5 id="检查语法"><a href="#检查语法" class="headerlink" title="检查语法"></a>检查语法</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">testparm</span><br><span class="line"><span class="meta"># </span><span class="language-bash">检查语法</span></span><br><span class="line">systemctl restart smb</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重启 smb 服务</span></span><br></pre></td></tr></table></figure><h5 id="avahi"><a href="#avahi" class="headerlink" title="avahi"></a>avahi</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yum install avahi-tools</span><br><span class="line">systemctl start avahi-daemon</span><br><span class="line">systemctl enable avahi-daemon</span><br><span class="line">vi /etc/avahi/services/smb.service</span><br><span class="line"></span><br><span class="line">&lt;service-group&gt;</span><br><span class="line">&lt;name&gt;CENTOS&lt;/name&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">&lt;type&gt;_device-info._tcp&lt;/type&gt;</span><br><span class="line">&lt;txt-record&gt;model=Xserve&lt;/txt-record&gt;</span><br><span class="line">&lt;/service&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">&lt;type&gt;_smb._tcp&lt;/type&gt;</span><br><span class="line">&lt;port&gt;445&lt;/port&gt;</span><br><span class="line">&lt;/service&gt;</span><br><span class="line">&lt;/service-group&gt;</span><br><span class="line"></span><br><span class="line">systemctl restart avahi-daemon</span><br></pre></td></tr></table></figure><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><h5 id="匿名挂载"><a href="#匿名挂载" class="headerlink" title="匿名挂载"></a>匿名挂载</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount -t cifs -o guest //192.168.1.8/share /share</span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置开机自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">//192.168.1.8/share  /share          cifs    defaults,guest  0 0</span><br></pre></td></tr></table></figure><h5 id="用户密码挂载"><a href="#用户密码挂载" class="headerlink" title="用户密码挂载"></a>用户密码挂载</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount -t cifs -o username=xxxxx,password=&#x27;xxxxx&#x27;,iocharset=utf-8 //192.168.1.8/share /share</span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置开机自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">//192.168.1.8/share  /share          cifs    defaults,username=xxxxx,password=xxxxx</span><br></pre></td></tr></table></figure><h5 id="umount"><a href="#umount" class="headerlink" title="umount"></a>umount</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">umount /share</span><br><span class="line"><span class="meta"># </span><span class="language-bash">遇到无法 umount 时</span></span><br><span class="line">yum install psmisc</span><br><span class="line">fuser -mv /share</span><br><span class="line">kill -9 xxxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本常用参考</title>
      <link href="/2022/02/25/Shell%20%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/"/>
      <url>/2022/02/25/Shell%20%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Shell-脚本常用参考"><a href="#Shell-脚本常用参考" class="headerlink" title="Shell 脚本常用参考"></a>Shell 脚本常用参考</h1><h2 id="echo-cat-read-sed-awk"><a href="#echo-cat-read-sed-awk" class="headerlink" title="echo cat read sed awk"></a>echo cat read sed awk</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /path/$&#123;TEMP&#125;/account.conf&lt;&lt;EOF</span><br><span class="line">export $&#123;API_ID_HEADER&#125;=&quot;$&#123;API_ID_INPUT&#125;&quot;</span><br><span class="line">export $&#123;API_KEY_HEADER&#125;=&quot;$&#123;API_KEY_INPUT&#125;&quot;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"># </span><span class="language-bash">单引号转译内容</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">cat</span> &gt; /path/<span class="variable">$&#123;TEMP&#125;</span>/account.conf&lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span></span><br></pre></td></tr></table></figure><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sed -i \</span><br><span class="line">    -e &#x27;/Port 22/a\Port 22222&#x27; \</span><br><span class="line">    -e &#x27;/^PasswordAuthentication.*yes$/s/yes/no/g&#x27; \</span><br><span class="line">    -e &#x27;/^PermitRootLogin.*no$/s/no/yes/g&#x27; \</span><br><span class="line">    -e &#x27;/^#PermitRoot.*yes$/s/#PermitRoot/PermitRoot/g&#x27; \</span><br><span class="line">    -e &#x27;/#ClientAliveInterval/s/#ClientAliveInterval 0/ClientAliveInterval 30/g&#x27; \</span><br><span class="line">    -e &#x27;/#MaxSessions/s/#MaxSessions 10/MaxSessions 100/g&#x27; \</span><br><span class="line">    /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><p>从文件获取 分隔符 &#x3D; 如果第一列含有 DOMAIN 打印第二列</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOMAIN=$(cat /conf/account.conf | awk -F= &#x27;&#123;if($1~&quot;DOMAIN&quot;)print $2&#125;&#x27;)</span><br></pre></td></tr></table></figure><h3 id="read"><a href="#read" class="headerlink" title="read"></a>read</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;请输入:&quot; INPUT</span><br></pre></td></tr></table></figure><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">case &quot;$INPUT&quot; in</span><br><span class="line">    1)</span><br><span class="line">    echo &quot;1&quot;</span><br><span class="line">    ;;</span><br><span class="line">    2)</span><br><span class="line">    echo &quot;2&quot;</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">    echo &quot;其他&quot;</span><br><span class="line">    exit 0</span><br><span class="line">    esac</span><br></pre></td></tr></table></figure><h2 id="if-判断"><a href="#if-判断" class="headerlink" title="if 判断"></a>if 判断</h2><p>字符串对比判断</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;$INPUT&quot; == &quot;3&quot; ]; then</span><br><span class="line">    echo &quot;变量等于 3&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>判断变量是否存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ ! -n &quot;$&#123;INPUT&#125;&quot; ]; then</span><br><span class="line">    echo &quot;变量不存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>判断目录是否存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -d /data/test ]; then</span><br><span class="line">    echo &quot;目录存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>判断文件是否存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -f /data/test ]; then</span><br><span class="line">    echo &quot;目录存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>服务器软件判断</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if type docker-compose &gt;/dev/null 2&gt;&amp;1; then</span><br><span class="line">    echo &quot;已安装 docker-compose&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;未安装 docker-compose&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>判断是否是root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if [[ $EUID -ne 0 ]]; then</span><br><span class="line">    echo &quot;非 root 用户&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>判断 OpenVZ</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if [[ -d &quot;/proc/vz&quot; ]]; then</span><br><span class="line">    echo -e &quot;这是 OpenVZ,非 KVM&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>数值比较判断</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ $TIMES -eq 3 ]; then</span><br><span class="line">    echo &quot;Times 大于 3&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">val=`expr $a + $b`</span><br><span class="line">echo &quot;a + b : $val&quot;</span><br><span class="line">val=`expr $a - $b`</span><br><span class="line">echo &quot;a - b : $val&quot;</span><br><span class="line">val=`expr $a \* $b`</span><br><span class="line">echo &quot;a * b : $val&quot;</span><br><span class="line">val=`expr $b / $a`</span><br><span class="line">echo &quot;b / a : $val&quot;</span><br><span class="line">val=`expr $b % $a`</span><br><span class="line">echo &quot;b % a : $val&quot;</span><br><span class="line">if [ $a == $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;a is equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;a is not equal to b&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>+</td><td>加法</td><td><code>expr $a + $b</code> 结果为 30。</td></tr><tr><td>-</td><td>减法</td><td><code>expr $a - $b</code> 结果为 10。</td></tr><tr><td>*</td><td>乘法</td><td><code>expr $a \* $b</code> 结果为 200。</td></tr><tr><td>&#x2F;</td><td>除法</td><td><code>expr $b / $a</code> 结果为 2。</td></tr><tr><td>%</td><td>取余</td><td><code>expr $b % $a</code> 结果为 0。</td></tr><tr><td>&#x3D;</td><td>赋值</td><td>a&#x3D;$b 将把变量 b 的值赋给 a。</td></tr><tr><td>&#x3D;&#x3D;</td><td>相等。用于比较两个数字，相同则返回 true。</td><td>[ $a &#x3D;&#x3D; $b ] 返回 false。</td></tr><tr><td>!&#x3D;</td><td>不相等。用于比较两个数字，不相同则返回 true。</td><td>[ $a !&#x3D; $b ] 返回 true。</td></tr></tbody></table><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [ $a -eq $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -eq $b : a is equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -eq $b: a is not equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -ne $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -ne $b: a is not equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -ne $b : a is equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -gt $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -gt $b: a is greater than b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -gt $b: a is not greater than b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -lt $b: a is less than b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -lt $b: a is not less than b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -ge $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -ge $b: a is greater or  equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -ge $b: a is not greater or equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -le $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -le $b: a is less or  equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -le $b: a is not less or equal to b&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>关系运算符列表</p><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>-eq</td><td>检测两个数是否相等，相等返回 true。</td><td>[ $a -eq $b ] 返回 true。</td></tr><tr><td>-ne</td><td>检测两个数是否相等，不相等返回 true。</td><td>[ $a -ne $b ] 返回 true。</td></tr><tr><td>-gt</td><td>检测左边的数是否大于右边的，如果是，则返回 true。</td><td>[ $a -gt $b ] 返回 false。</td></tr><tr><td>-lt</td><td>检测左边的数是否小于右边的，如果是，则返回 true。</td><td>[ $a -lt $b ] 返回 true。</td></tr><tr><td>-ge</td><td>检测左边的数是否大等于右边的，如果是，则返回 true。</td><td>[ $a -ge $b ] 返回 false。</td></tr><tr><td>-le</td><td>检测左边的数是否小于等于右边的，如果是，则返回 true。</td><td>[ $a -le $b ] 返回 true。</td></tr></tbody></table><h3 id="布尔运算符"><a href="#布尔运算符" class="headerlink" title="布尔运算符"></a>布尔运算符</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a != $b : a is not equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a != $b: a is equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 100 -a $b -gt 15 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -lt 100 -a $b -gt 15 : returns true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -lt 100 -a $b -gt 15 : returns false&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 100 -o $b -gt 100 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -lt 100 -o $b -gt 100 : returns true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -lt 100 -o $b -gt 100 : returns false&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 5 -o $b -gt 100 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -lt 100 -o $b -gt 100 : returns true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -lt 100 -o $b -gt 100 : returns false&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>!</td><td>非运算，表达式为 true 则返回 false，否则返回 true。</td><td>[ ! false ] 返回 true。</td></tr><tr><td>-o</td><td>或运算，有一个表达式为 true 则返回 true。</td><td>[ $a -lt 20 -o $b -gt 100 ] 返回 true。</td></tr><tr><td>-a</td><td>与运算，两个表达式都为 true 才返回 true。</td><td>[ $a -lt 20 -a $b -gt 100 ] 返回 false。</td></tr></tbody></table><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">a=&quot;abc&quot;</span><br><span class="line">b=&quot;efg&quot;</span><br><span class="line">if [ $a = $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a = $b : a is equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a = $b: a is not equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a != $b : a is not equal to b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a != $b: a is equal to b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -z $a ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;-z $a : string length is zero&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;-z $a : string length is not zero&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -n $a ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;-n $a : string length is not zero&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;-n $a : string length is zero&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a : string is not empty&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a : string is empty&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>&#x3D;</td><td>检测两个字符串是否相等，相等返回 true。</td><td>[ $a &#x3D; $b ] 返回 false。</td></tr><tr><td>!&#x3D;</td><td>检测两个字符串是否相等，不相等返回 true。</td><td>[ $a !&#x3D; $b ] 返回 true。</td></tr><tr><td>-z</td><td>检测字符串长度是否为0，为0返回 true。</td><td>[ -z $a ] 返回 false。</td></tr><tr><td>-n</td><td>检测字符串长度是否为0，不为0返回 true。</td><td>[ -z $a ] 返回 true。</td></tr><tr><td>str</td><td>检测字符串是否为空，不为空返回 true。</td><td>[ $a ] 返回 true。</td></tr></tbody></table><h3 id="文件测试运算符列表"><a href="#文件测试运算符列表" class="headerlink" title="文件测试运算符列表"></a>文件测试运算符列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">file=&quot;/var/www/tutorialspoint/unix/test.sh&quot;</span><br><span class="line">if [ -r $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File has read access&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;File does not have read access&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -w $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File has write permission&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;File does not have write permission&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -x $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File has execute permission&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;File does not have execute permission&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -f $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File is an ordinary file&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;This is sepcial file&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -d $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File is a directory&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;This is not a directory&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -s $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File size is not zero&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;File size is zero&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -e $file ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;File exists&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;File does not exist&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><table><thead><tr><th>操作符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>-b file</td><td>检测文件是否是块设备文件，如果是，则返回 true。</td><td>[ -b $file ] 返回 false。</td></tr><tr><td>-c file</td><td>检测文件是否是字符设备文件，如果是，则返回 true。</td><td>[ -b $file ] 返回 false。</td></tr><tr><td>-d file</td><td>检测文件是否是目录，如果是，则返回 true。</td><td>[ -d $file ] 返回 false。</td></tr><tr><td>-f file</td><td>检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。</td><td>[ -f $file ] 返回 true。</td></tr><tr><td>-g file</td><td>检测文件是否设置了 SGID 位，如果是，则返回 true。</td><td>[ -g $file ] 返回 false。</td></tr><tr><td>-k file</td><td>检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。</td><td>[ -k $file ] 返回 false。</td></tr><tr><td>-p file</td><td>检测文件是否是具名管道，如果是，则返回 true。</td><td>[ -p $file ] 返回 false。</td></tr><tr><td>-u file</td><td>检测文件是否设置了 SUID 位，如果是，则返回 true。</td><td>[ -u $file ] 返回 false。</td></tr><tr><td>-r file</td><td>检测文件是否可读，如果是，则返回 true。</td><td>[ -r $file ] 返回 true。</td></tr><tr><td>-w file</td><td>检测文件是否可写，如果是，则返回 true。</td><td>[ -w $file ] 返回 true。</td></tr><tr><td>-x file</td><td>检测文件是否可执行，如果是，则返回 true。</td><td>[ -x $file ] 返回 true。</td></tr><tr><td>-s file</td><td>检测文件是否为空（文件大小是否大于0），不为空返回 true。</td><td>[ -s $file ] 返回 true。</td></tr><tr><td>-e file</td><td>检测文件（包括目录）是否存在，如果是，则返回 true。</td><td>[ -e $file ] 返回 true。</td></tr></tbody></table><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p><a href="http://c.biancheng.net/cpp/view/2739.html">参考liunk</a></p><table><thead><tr><th>变量</th><th>含义</th></tr></thead><tbody><tr><td>$0</td><td>当前脚本的文件名</td></tr><tr><td>$n</td><td>传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。</td></tr><tr><td>$#</td><td>传递给脚本或函数的参数个数。</td></tr><tr><td>$*</td><td>传递给脚本或函数的所有参数。</td></tr><tr><td>$@</td><td>传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $* 稍有不同，下面将会讲到。</td></tr><tr><td>$?</td><td>上个命令的退出状态，或函数的返回值。</td></tr><tr><td>$$</td><td>当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。</td></tr></tbody></table><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>标准按次循环</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (( i=1;i&lt;=3;i++ )); do</span><br><span class="line">    xxx</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>for 文件循环 套 while 比对循环</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for LOG in $(ls -1 $&#123;LOG_PATH&#125;/*.log)</span><br><span class="line">do</span><br><span class="line">    SIZE=`ls -l $LOG | awk &#x27;&#123;print $5&#125;&#x27;`</span><br><span class="line">    while [ $SIZE -gt $MAX_SIZE ]</span><br><span class="line">    do</span><br><span class="line">        sed -i &#x27;1,100000d&#x27; $LOG</span><br><span class="line">        SIZE=`ls -l $LOG | awk &#x27;&#123;print $5&#125;&#x27;`</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables常用总结</title>
      <link href="/2022/02/25/iptables%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2022/02/25/iptables%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="iptables常用总结"><a href="#iptables常用总结" class="headerlink" title="iptables常用总结"></a>iptables常用总结</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h3 id="查询当前防火墙状态"><a href="#查询当前防火墙状态" class="headerlink" title="查询当前防火墙状态"></a>查询当前防火墙状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status iptables</span><br><span class="line"><span class="meta"># </span><span class="language-bash">检查 iptables 是否安装</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">检查 firewall 是否安装</span></span><br></pre></td></tr></table></figure><h3 id="停止并禁用firewalld"><a href="#停止并禁用firewalld" class="headerlink" title="停止并禁用firewalld"></a>停止并禁用firewalld</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">停止 firewalld 服务</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">禁用 firewalld 服务</span></span><br></pre></td></tr></table></figure><h3 id="安装iptables"><a href="#安装iptables" class="headerlink" title="安装iptables"></a>安装iptables</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y iptables</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 iptables</span></span><br><span class="line">yum install -y iptables-services</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装 iptables-services</span></span><br></pre></td></tr></table></figure><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl start iptables</span><br><span class="line">systemctl enable iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl restart iptables</span><br><span class="line">systemctl reload iptables</span><br></pre></td></tr></table></figure><h3 id="默认开放规则"><a href="#默认开放规则" class="headerlink" title="默认开放规则"></a>默认开放规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line"><span class="meta">#</span><span class="language-bash">清空规则</span></span><br><span class="line">iptables -F </span><br></pre></td></tr></table></figure><h3 id="保存配置"><a href="#保存配置" class="headerlink" title="保存配置"></a>保存配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br><span class="line"><span class="meta"># </span><span class="language-bash">手动修改</span></span><br><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><h3 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h3><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t 表名 &lt;-A/I/D/R&gt; 规则链名 [规则号] &lt;-i/o 网卡名&gt;  &lt;-s 源IP/源子网&gt; --sport 源端口 -p 协议名 &lt;-d 目标IP/目标子网&gt; --dport 目标端口 -j 动作</span><br></pre></td></tr></table></figure><h3 id="工作机制"><a href="#工作机制" class="headerlink" title="工作机制"></a>工作机制</h3><p>规则链名包括「也被称为五个钩子函数(hook functions)」：</p><ul><li><strong>INPUT链</strong> ：处理输入数据包。</li><li><strong>OUTPUT链</strong> ：处理输出数据包。</li><li><strong>FORWARD链</strong> ：处理转发数据包。</li><li><strong>PREROUTING链</strong> ：用于目标地址转换（DNAT）。</li><li><strong>POSTOUTING链</strong> ：用于源地址转换（SNAT）。</li></ul><h4 id="防火墙策略"><a href="#防火墙策略" class="headerlink" title="防火墙策略"></a>防火墙策略</h4><p>防火墙策略一般分为两种，一种叫通策略，一种叫堵策略，通策略，默认门是关着的，必须要定义谁能进。堵策略则是，大门是洞开的，但是你必须有身份认证，否则不能进。所以我们要定义，让进来的进来，让出去的出去，所以通，是要全通，而堵，则是要选择。当我们定义的策略的时候，要分别定义多条功能，其中：定义数据包中允许或者不允许的策略，filter过滤的功能，而定义地址转换的功能的则是nat选项。为了让这些功能交替工作，我们制定出了“表”这个定义，来定义、区分各种不同的工作功能和处理方式。</p><p><strong>我们现在用的比较多个功能有3个：</strong></p><ol><li>filter 定义允许或者不允许的，只能做在3个链上：INPUT ，FORWARD ，OUTPUT</li><li>nat 定义地址转换的，也只能做在3个链上：PREROUTING ，OUTPUT ，POSTROUTING</li><li>mangle功能:修改报文原数据，是5个链都可以做：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING</li></ol><p>我们修改报文原数据就是来修改TTL的。能够实现将数据包的元数据拆开，在里面做标记&#x2F;修改内容的。而防火墙标记，其实就是靠mangle来实现的。</p><p><strong>小扩展:</strong></p><ul><li>对于filter来讲一般只能做在3个链上：INPUT ，FORWARD ，OUTPUT</li><li>对于nat来讲一般也只能做在3个链上：PREROUTING ，OUTPUT ，POSTROUTING</li><li>而mangle则是5个链都可以做：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING</li></ul><p>iptables&#x2F;netfilter（这款软件）是工作在用户空间的，它可以让规则进行生效的，本身不是一种服务，而且规则是立即生效的。而我们iptables现在被做成了一个服务，可以进行启动，停止的。启动，则将规则直接生效，停止，则将规则撤销。</p><p>iptables还支持自己定义链。但是自己定义的链，必须是跟某种特定的链关联起来的。在一个关卡设定，指定当有数据的时候专门去找某个特定的链来处理，当那个链处理完之后，再返回。接着在特定的链中继续检查。</p><p><strong>注意：规则的次序非常关键，谁的规则越严格，应该放的越靠前，而检查规则的时候，是按照从上往下的方式进行检查的。</strong></p><p>表名包括：</p><ul><li><strong>raw</strong> ：高级功能，如：网址过滤。</li><li><strong>mangle</strong> ：数据包修改（QOS），用于实现服务质量。</li><li><strong>nat</strong> ：地址转换，用于网关路由器。</li><li><strong>filter</strong> ：包过滤，用于防火墙规则。</li></ul><p>动作包括：</p><ul><li><strong>ACCEPT</strong> ：接收数据包。</li><li><strong>DROP</strong> ：丢弃数据包。</li><li><strong>REDIRECT</strong> ：重定向、映射、透明代理。</li><li><strong>SNAT</strong> ：源地址转换。</li><li><strong>DNAT</strong> ：目标地址转换。</li><li><strong>MASQUERADE</strong> ：IP伪装（NAT），用于ADSL。</li><li><strong>LOG</strong> ：日志记录。</li></ul><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-t, --table table 对指定的表 table 进行操作， table 必须是 raw， nat，filter，mangle 中的一个。如果不指定此选项，默认的是 filter 表。</span><br><span class="line"># 通用匹配：源地址目标地址的匹配</span><br><span class="line">-p：指定要匹配的数据包协议类型；</span><br><span class="line">-s, --source [!] address[/mask] ：把指定的一个／一组地址作为源地址，按此规则进行过滤。当后面没有 mask 时，address 是一个地址，比如：192.168.1.1；当 mask 指定时，可以表示一组范围内的地址，比如：192.168.1.0/255.255.255.0。</span><br><span class="line">-d, --destination [!] address[/mask] ：地址格式同上，但这里是指定地址为目的地址，按此进行过滤。</span><br><span class="line">-i, --in-interface [!] &lt;网络接口name&gt; ：指定数据包的来自来自网络接口，比如最常见的 eth0 。注意：它只对 INPUT，FORWARD，PREROUTING 这三个链起作用。如果没有指定此选项， 说明可以来自任何一个网络接口。同前面类似，&quot;!&quot; 表示取反。</span><br><span class="line">-o, --out-interface [!] &lt;网络接口name&gt; ：指定数据包出去的网络接口。只对 OUTPUT，FORWARD，POSTROUTING 三个链起作用。</span><br><span class="line"># 查看管理命令</span><br><span class="line">-L, --list [chain] 列出链 chain 上面的所有规则，如果没有指定链，列出表上所有链的所有规则。</span><br><span class="line"># 规则管理命令</span><br><span class="line">-A, --append chain rule-specification 在指定链 chain 的末尾插入指定的规则，也就是说，这条规则会被放到最后，最后才会被执行。规则是由后面的匹配来指定。</span><br><span class="line">-I, --insert chain [rulenum] rule-specification 在链 chain 中的指定位置插入一条或多条规则。如果指定的规则号是1，则在链的头部插入。这也是默认的情况，如果没有指定规则号。</span><br><span class="line">-D, --delete chain rule-specification -D, --delete chain rulenum 在指定的链 chain 中删除一个或多个指定规则。</span><br><span class="line">-R num：Replays替换/修改第几条规则</span><br><span class="line"># 链管理命令（这都是立即生效的）</span><br><span class="line">-P, --policy chain target ：为指定的链 chain 设置策略 target。注意，只有内置的链才允许有策略，用户自定义的是不允许的。</span><br><span class="line">-F, --flush [chain] 清空指定链 chain 上面的所有规则。如果没有指定链，清空该表上所有链的所有规则。</span><br><span class="line">-N, --new-chain chain 用指定的名字创建一个新的链。</span><br><span class="line">-X, --delete-chain [chain] ：删除指定的链，这个链必须没有被其它任何规则引用，而且这条上必须没有任何规则。如果没有指定链名，则会删除该表中所有非内置的链。</span><br><span class="line">-E, --rename-chain old-chain new-chain ：用指定的新名字去重命名指定的链。这并不会对链内部造成任何影响。</span><br><span class="line">-Z, --zero [chain] ：把指定链，或者表中的所有链上的所有计数器清零。</span><br><span class="line">-j, --jump target &lt;指定目标&gt; ：即满足某条件时该执行什么样的动作。target 可以是内置的目标，比如 ACCEPT，也可以是用户自定义的链。</span><br><span class="line">-h：显示帮助信息；</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-P</td><td>设置默认策略:iptables -P INPUT (DROP)</td></tr><tr><td>-F</td><td>清空规则链</td></tr><tr><td>-L</td><td>查看规则链</td></tr><tr><td>-A</td><td>在规则链的末尾加入新规则</td></tr><tr><td>-I</td><td>num 在规则链的头部加入新规则</td></tr><tr><td>-D</td><td>num 删除某一条规则</td></tr><tr><td>-s</td><td>匹配来源地址IP&#x2F;MASK，加叹号”!”表示除这个IP外。</td></tr><tr><td>-d</td><td>匹配目标地址</td></tr><tr><td>-i</td><td>网卡名称 匹配从这块网卡流入的数据</td></tr><tr><td>-o</td><td>网卡名称 匹配从这块网卡流出的数据</td></tr><tr><td>-p</td><td>匹配协议,如tcp,udp,icmp</td></tr><tr><td>–dport num</td><td>匹配目标端口号</td></tr><tr><td>–sport num</td><td>匹配来源端口号</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h3 id="清空当前所有规则和计数"><a href="#清空当前所有规则和计数" class="headerlink" title="清空当前所有规则和计数"></a>清空当前所有规则和计数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F  # 清空所有的防火墙规则</span><br><span class="line">iptables -X  # 删除用户自定义的空链</span><br><span class="line">iptables -Z  # 清空计数</span><br></pre></td></tr></table></figure><h3 id="配置允许ssh端口连接"><a href="#配置允许ssh端口连接" class="headerlink" title="配置允许ssh端口连接"></a>配置允许ssh端口连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="meta"># </span><span class="language-bash">22为你的ssh端口， -s 192.168.1.0/24表示允许这个网段的机器来连接，其它网段的ip地址是登陆不了你的机器的。 -j ACCEPT表示接受这样的请求</span></span><br></pre></td></tr></table></figure><h3 id="允许本地回环地址可以正常使用"><a href="#允许本地回环地址可以正常使用" class="headerlink" title="允许本地回环地址可以正常使用"></a>允许本地回环地址可以正常使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"><span class="meta"># </span><span class="language-bash">本地回环地址就是127.0.0.1，是本机上使用的,它进与出都设置为允许</span></span><br><span class="line">iptables -A OUTPUT -o lo -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="设置默认规则"><a href="#设置默认规则" class="headerlink" title="设置默认规则"></a>设置默认规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -P INPUT DROP # 配置默认的不让进</span><br><span class="line">iptables -P FORWARD DROP # 默认的不允许转发</span><br><span class="line">iptables -P OUTPUT ACCEPT # 默认的可以出去</span><br></pre></td></tr></table></figure><h3 id="配置白名单"><a href="#配置白名单" class="headerlink" title="配置白名单"></a>配置白名单</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p all -s 192.168.1.0/24 -j ACCEPT # 允许机房内网机器可以访问</span><br><span class="line">iptables -A INPUT -p all -s 192.168.140.0/24 -j ACCEPT  # 允许机房内网机器可以访问</span><br><span class="line">iptables -A INPUT -p tcp -s 183.121.3.7 --dport 3380 -j ACCEPT # 允许183.121.3.7访问本机的3380端口</span><br></pre></td></tr></table></figure><h2 id="开启相应的服务端口"><a href="#开启相应的服务端口" class="headerlink" title="开启相应的服务端口"></a>开启相应的服务端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT # 开启80端口，因为web对外都是这个端口</span><br><span class="line">iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT # 允许被ping</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT # 已经建立的连接得让它进来</span><br></pre></td></tr></table></figure><h3 id="配置多端口"><a href="#配置多端口" class="headerlink" title="配置多端口"></a>配置多端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">同一目的IP多个不连续端口</span></span><br><span class="line">iptables -t nat -A PREROUTING -i eth0 -s 0.0.0.0/0 -d 192.168.255.1 -p tcp -m multiport --dport 8082,8083,10728 -j DNAT --to 172.29.110.107</span><br><span class="line">iptables -t nat -A POSTROUTING -o bond0 -d 172.29.110.107 -p tcp -m multiport --dport 8082,8083,10728 -j SNAT --to 172.13.202.100</span><br><span class="line"><span class="meta">#</span><span class="language-bash">同一目的ip多个连续端口</span></span><br><span class="line">iptables -t nat -A PREROUTING -i eth0 -s 0.0.0.0/0 -d 192.168.255.1 -p tcp --dport 47110:47122 -j DNAT --to 172.12.43.70</span><br><span class="line">iptables -t nat -A POSTROUTING -o bond0 -d 172.12.43.70 -p tcp --dport 47110:47122 -j SNAT --to 172.13.202.101</span><br></pre></td></tr></table></figure><h3 id="保存规则到配置文件中"><a href="#保存规则到配置文件中" class="headerlink" title="保存规则到配置文件中"></a>保存规则到配置文件中</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/sysconfig/iptables /etc/sysconfig/iptables.bak # 任何改动之前先备份，请保持这一优秀的习惯</span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br><span class="line">cat /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><h3 id="列出已设置的规则"><a href="#列出已设置的规则" class="headerlink" title="列出已设置的规则"></a>列出已设置的规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L [-t 表名] [链名]</span><br></pre></td></tr></table></figure><ul><li>四个表名 raw，nat，filter，mangle</li><li>五个规则链名 INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING</li><li>filter表包含INPUT、OUTPUT、FORWARD三个规则链</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -t nat                  # 列出 nat 上面的所有规则</span><br><span class="line"><span class="meta"># </span><span class="language-bash">           ^ -t 参数指定，必须是 raw， nat，filter，mangle 中的一个</span></span><br><span class="line">iptables -L -t nat  --line-numbers  # 规则带编号</span><br><span class="line">iptables -L INPUT</span><br><span class="line">iptables -L -nv  # 查看，这个列表看起来更详细</span><br></pre></td></tr></table></figure><h3 id="清除已有规则"><a href="#清除已有规则" class="headerlink" title="清除已有规则"></a>清除已有规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -F INPUT  # 清空指定链 INPUT 上面的所有规则</span><br><span class="line">iptables -X INPUT  # 删除指定的链，这个链必须没有被其它任何规则引用，而且这条上必须没有任何规则。</span><br><span class="line">                   # 如果没有指定链名，则会删除该表中所有非内置的链。</span><br><span class="line">iptables -Z INPUT  # 把指定链，或者表中的所有链上的所有计数器清零。</span><br></pre></td></tr></table></figure><h3 id="删除已添加的规则"><a href="#删除已添加的规则" class="headerlink" title="删除已添加的规则"></a>删除已添加的规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 192.168.1.5 -j DROP</span><br><span class="line"><span class="meta"># </span><span class="language-bash">添加一条规则</span></span><br></pre></td></tr></table></figure><p>将所有iptables以序号标记显示，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n --line-numbers</span><br></pre></td></tr></table></figure><p>比如要删除INPUT里序号为8的规则，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -D INPUT 8</span><br></pre></td></tr></table></figure><h3 id="开放指定的端口"><a href="#开放指定的端口" class="headerlink" title="开放指定的端口"></a>开放指定的端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT               #允许本地回环接口(即运行本机访问本机)</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT    #允许已建立的或相关连的通行</span><br><span class="line">iptables -A OUTPUT -j ACCEPT      # 允许所有本机向外的访问</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT    # 允许访问22端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT    # 允许访问80端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT    # 允许ftp服务的21端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT    # 允许FTP服务的20端口</span><br><span class="line">iptables -A INPUT -j REJECT       # 禁止其他未允许的规则访问</span><br><span class="line">iptables -A FORWARD -j REJECT     # 禁止其他未允许的规则访问</span><br></pre></td></tr></table></figure><h3 id="屏蔽端口"><a href="#屏蔽端口" class="headerlink" title="屏蔽端口"></a>屏蔽端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 12345 -j DROP</span><br><span class="line"><span class="meta"># </span><span class="language-bash">屏蔽访问 12345 端口</span></span><br></pre></td></tr></table></figure><h3 id="屏蔽域名"><a href="#屏蔽域名" class="headerlink" title="屏蔽域名"></a>屏蔽域名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A OUTPUT -m string --string &quot;ysp8.cc&quot; --algo bm --to 65535 -j DROP</span><br><span class="line"><span class="meta"># </span><span class="language-bash">屏蔽服务器内域名访问</span></span><br></pre></td></tr></table></figure><h3 id="屏蔽IP"><a href="#屏蔽IP" class="headerlink" title="屏蔽IP"></a>屏蔽IP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m tcp -s 192.168.0.8 -j DROP  # 屏蔽恶意主机（比如，192.168.0.8</span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP       # 屏蔽单个IP的命令</span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP      # 封整个段即从123.0.0.1到123.255.255.254的命令</span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP    # 封IP段即从123.45.0.1到123.45.255.254的命令</span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP    # 封IP段即从123.45.6.1到123.45.6.254的命令是</span><br></pre></td></tr></table></figure><h3 id="指定数据包出去的网络接口"><a href="#指定数据包出去的网络接口" class="headerlink" title="指定数据包出去的网络接口"></a>指定数据包出去的网络接口</h3><p>只对 OUTPUT，FORWARD，POSTROUTING 三个链起作用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A FORWARD -o eth0</span><br></pre></td></tr></table></figure><h3 id="查看已添加的规则"><a href="#查看已添加的规则" class="headerlink" title="查看已添加的规则"></a>查看已添加的规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n -v</span><br><span class="line">Chain INPUT (policy DROP 48106 packets, 2690K bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"> 191K   90M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:22</span><br><span class="line">1499K  133M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:80</span><br><span class="line">4364K 6351M ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED</span><br><span class="line"> 6256  327K ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 3382K packets, 1819M bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure><h3 id="启动网络转发规则"><a href="#启动网络转发规则" class="headerlink" title="启动网络转发规则"></a>启动网络转发规则</h3><p>公网210.14.67.7让内网192.168.188.0&#x2F;24上网</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.188.0/24 -j SNAT --to-source 210.14.67.127</span><br></pre></td></tr></table></figure><h3 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h3><p>本机的 2222 端口映射到内网 虚拟机的22 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 210.14.67.127 -p tcp --dport 2222  -j DNAT --to-dest 192.168.188.115:22</span><br></pre></td></tr></table></figure><h3 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h3><p>比如，我们要过滤所有TCP连接中的字符串test，一旦出现它我们就终止这个连接，我们可以这么做：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m string --algo kmp --string &quot;test&quot; -j REJECT --reject-with tcp-reset</span><br><span class="line">iptables -L</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Chain INPUT (policy ACCEPT)</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">REJECT     tcp  --  anywhere             anywhere            STRING match <span class="string">&quot;test&quot;</span> ALGO name kmp TO 65535 reject-with tcp-reset</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Chain FORWARD (policy ACCEPT)</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Chain OUTPUT (policy ACCEPT)</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br></pre></td></tr></table></figure><h3 id="阻止Windows蠕虫的攻击"><a href="#阻止Windows蠕虫的攻击" class="headerlink" title="阻止Windows蠕虫的攻击"></a>阻止Windows蠕虫的攻击</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -j DROP -p tcp -s 0.0.0.0/0 -m string --algo kmp --string &quot;cmd.exe&quot;</span><br></pre></td></tr></table></figure><h3 id="防止SYN洪水攻击"><a href="#防止SYN洪水攻击" class="headerlink" title="防止SYN洪水攻击"></a>防止SYN洪水攻击</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --syn -m limit --limit 5/second -j ACCEPT</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jupyter更改登录密码</title>
      <link href="/2022/02/24/jupyter%E6%9B%B4%E6%94%B9%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/"/>
      <url>/2022/02/24/jupyter%E6%9B%B4%E6%94%B9%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>长时间不登陆jupyter竟然忘记了密码，所以记录下jupyter容器中更改密码过程。</p><h2 id="更改过程"><a href="#更改过程" class="headerlink" title="更改过程"></a>更改过程</h2><p>进入jupyter容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it vk-jupyter bash</span><br><span class="line"><span class="built_in">cd</span> .jupyter/</span><br><span class="line">vi jupyter_notebook_config.json</span><br></pre></td></tr></table></figure><p>生成新密码哈希值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipython</span><br></pre></td></tr></table></figure><p>复制新的哈希值替换jupyter_notebook_config.json文件中的哈希值</p><p>重启jupyter容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart vk-jupyter</span><br></pre></td></tr></table></figure><p>尝试用新密码登录</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基础</title>
      <link href="/2022/02/24/docker%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/02/24/docker%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装及命令"><a href="#安装及命令" class="headerlink" title="安装及命令"></a>安装及命令</h2><h3 id="Docker命令"><a href="#Docker命令" class="headerlink" title="Docker命令"></a>Docker命令</h3><h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker version  </span><br><span class="line">docker info  </span><br><span class="line">docker pull  </span><br><span class="line">docker login  </span><br><span class="line">docker logout  </span><br><span class="line">docker images  </span><br><span class="line">docker ps -a  </span><br><span class="line">docker start|stop|restart  </span><br><span class="line">docker rm xxxx  </span><br><span class="line">docker rmi xxxx  </span><br><span class="line">docker exec -it `name OR id` /bin/bash</span><br></pre></td></tr></table></figure><h4 id="批量停止删除容器和镜像"><a href="#批量停止删除容器和镜像" class="headerlink" title="批量停止删除容器和镜像"></a>批量停止删除容器和镜像</h4><p>停止所有容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>删除所有的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>删除所有的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure><h4 id="Docker目录拷贝"><a href="#Docker目录拷贝" class="headerlink" title="Docker目录拷贝"></a>Docker目录拷贝</h4><p>本机<code>/root/test</code>目录拷贝到容器内<code>/root</code>目录内</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp /root/test 28a186bbebd4:/root/</span><br></pre></td></tr></table></figure><p>本机<code>/root/test</code>目录拷贝到容器内,并更名为<code>/test123</code>.注意命令后没有<code>/</code>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp /root/test 28a186bbebd4:/test123</span><br></pre></td></tr></table></figure><p>将容器内的<code>/test</code>目录拷贝到主机的<code>/root</code>目录内.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp  28a186bbebd4:/test /root/</span><br></pre></td></tr></table></figure><h4 id="Docker-文件拷贝"><a href="#Docker-文件拷贝" class="headerlink" title="Docker 文件拷贝"></a>Docker 文件拷贝</h4><p>本机<code>1.db</code>文件拷贝到容器内<code>root</code>目录内.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 1.db 28a186bbebd4:/root/</span><br></pre></td></tr></table></figure><p>将容器内的<code>/root/1.db</code>文件拷贝到主机的当前目录.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 28a186bbebd4:/root/1.db .</span><br></pre></td></tr></table></figure><h4 id="Docker命令补全"><a href="#Docker命令补全" class="headerlink" title="Docker命令补全"></a>Docker命令补全</h4><p>安装 bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y bash-completion</span><br></pre></td></tr></table></figure><p>根据官方文档进一步配置</p><p><a href="https://gdevillele.github.io/compose/completion/">官网链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/docker/compose/$(docker-compose version --short)/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose</span><br></pre></td></tr></table></figure><p>重新进入终端即可补全命令。</p><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><h4 id="容器创建镜像"><a href="#容器创建镜像" class="headerlink" title="容器创建镜像"></a>容器创建镜像</h4><p>通过容器提交生成镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit 容器名 镜像名</span><br></pre></td></tr></table></figure><p>保存镜像到文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save 镜像名 &gt; 文件名.tar </span><br></pre></td></tr></table></figure><p>从文件恢复到镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; 文件名.tar</span><br></pre></td></tr></table></figure><p>通过镜像启动新容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name 容器名 相关参数 最后接新的镜像名</span><br></pre></td></tr></table></figure><p>例如</p><p>赋予容器所有权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name test -d --privileged=true centos:7.6.1810 /usr/sbin/init </span><br></pre></td></tr></table></figure><p>容器暴露端口给外面访问,容器内20、80，容器外2000、8080</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name test -p 2000:20 -p 8080:80 -d centos:7.6.1810 /usr/sbin/init</span><br></pre></td></tr></table></figure><p>容器不间断运行，docker重启容器会自动重启不用人工干预。</p><p>做数据持久化存储。本地目录容器目录映射。容器内端口5000 容器外端口5000。</p><p>容器内目录：&#x2F;var&#x2F;lib&#x2F;registry</p><p>容器外目录：&#x2F;opt&#x2F;registry</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name registry -v /opt/registry:/var/lib/registry -p 5000:5000 --restart=always registry</span><br></pre></td></tr></table></figure><p>退出容器后立即销毁</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm --name test2 alpine sh</span><br></pre></td></tr></table></figure><p>进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器名/容器id /bin/bash </span><br></pre></td></tr></table></figure><h3 id="导入导出镜像"><a href="#导入导出镜像" class="headerlink" title="导入导出镜像"></a>导入导出镜像</h3><p>导出镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看IMAGE ID</span></span><br><span class="line">docker save bb2b73d4a4a6 &gt; xxx.tar</span><br></pre></td></tr></table></figure><p>导入镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; xxx.tar</span><br></pre></td></tr></table></figure><p>修改镜像名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag bb2b73d4a4a6 xxx/xxx:latest</span><br></pre></td></tr></table></figure><h3 id="Docker-hub"><a href="#Docker-hub" class="headerlink" title="Docker hub"></a>Docker hub</h3><h4 id="上传本地镜像"><a href="#上传本地镜像" class="headerlink" title="上传本地镜像"></a>上传本地镜像</h4><p>登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u 用户名 ip/域名 -p 密码</span><br></pre></td></tr></table></figure><p>上传镜像前打标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag SOURCE_IMAGE[:TAG] harbor.lhp.com/images/IMAGE[:TAG]</span><br></pre></td></tr></table></figure><p>上传镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push harbor.lhp.com/images/IMAGE[:TAG]</span><br></pre></td></tr></table></figure><p>下载镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull harbor.lhp.com/images/alpine:latest</span><br></pre></td></tr></table></figure><p>登录成功信息查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /root/.docker/config.json</span><br><span class="line">auth后面字段可以用base64进行解码</span><br><span class="line"><span class="meta">#</span><span class="language-bash">加密</span></span><br><span class="line">echo test|base64</span><br><span class="line">dGVzdAo=</span><br><span class="line"><span class="meta">#</span><span class="language-bash">解密</span></span><br><span class="line">echo &quot;YWRtaW46SGFyYm9yMTIzNDU=&quot; | base64 -d</span><br></pre></td></tr></table></figure><h4 id="自动构建镜像"><a href="#自动构建镜像" class="headerlink" title="自动构建镜像"></a>自动构建镜像</h4><p>Docker hub创建仓库</p><ul><li>链接 GitHub</li><li>配置 Build Rules</li></ul><table><thead><tr><th><strong>Source Type</strong></th><th><strong>Source</strong></th><th><strong>Docker Tag</strong></th><th><strong>Dockerfile location</strong></th></tr></thead><tbody><tr><td>Branch</td><td>Master</td><td>Latest</td><td>&#x2F;</td></tr><tr><td>Tag</td><td>&#x2F;^v([0-9.]+)$&#x2F;</td><td>{\1}</td><td>&#x2F;</td></tr></tbody></table><p>Tag</p><p>Github Tag</p><ul><li><code>/^v([0-9.]+)$/</code> 对应 v1.0 或 v1.0.0</li><li><code>/^([0-9.]+)$/</code> 对应 1.0 或 1.0.0</li><li><code>/^([0-9]+)$/</code> 对应 20210101</li></ul><p>Docker Tag</p><ul><li><code>&#123;sourceref&#125;</code> 对应 Github Tag</li><li><code>&#123;\1&#125;</code> 对应 Github Tag 去除 v</li></ul><p>Github push </p><ul><li>正常 commit 并 push 到 GitHub</li><li>Docker Hub 自动构建 master 分支为 latest 镜像</li><li>本地 tag commit 并 push tag</li><li>Docker Hub 自动构建 tag 标签为 tag名 镜像</li></ul><p>创建标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line"><span class="meta"># </span><span class="language-bash">复制 commit ID</span></span><br><span class="line">git tag -a v1.0.0 commitID -m &quot;v1.0.0&quot;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">本地 tag 版本号标签</span></span><br><span class="line">git push origin v1.0.0 </span><br><span class="line"><span class="meta"># </span><span class="language-bash">提交本地标签到 GitHub</span></span><br></pre></td></tr></table></figure><p>删除标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag -d 标签名</span><br><span class="line">git push origin :refs/tags/标签名</span><br></pre></td></tr></table></figure><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><h4 id="Docker官方脚本安装"><a href="#Docker官方脚本安装" class="headerlink" title="Docker官方脚本安装"></a>Docker官方脚本安装</h4><p>下载一键安装脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure><p>运行一键安装脚本(阿里云加速镜像)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure><h4 id="Docker官方手动升级"><a href="#Docker官方手动升级" class="headerlink" title="Docker官方手动升级"></a>Docker官方手动升级</h4><p>升级yum</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p>安装依赖包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></table></figure><p>配置仓库(国内用户推荐使用下面阿里云加速镜像)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>配置仓库(阿里云加速镜像)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>排序查看仓库内文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p>安装最新版Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h3 id="Docker启动命令"><a href="#Docker启动命令" class="headerlink" title="Docker启动命令"></a>Docker启动命令</h3><p>启动Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">或</span><br><span class="line">sudo /etc/init.d/docker restart</span><br></pre></td></tr></table></figure><p>查看Docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p>设置Docker开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h3 id="Docker-compose-安装"><a href="#Docker-compose-安装" class="headerlink" title="Docker-compose 安装"></a>Docker-compose 安装</h3><ol><li>官方安装 - 速度慢,有可能被DNS污染导致失败.</li><li>手动安装 - 手动下载,离线安装.</li><li>PIP 在线安装 - 使用 Python 的 pip 包管理工具在线安装.</li></ol><h4 id="官方安装"><a href="#官方安装" class="headerlink" title="官方安装"></a>官方安装</h4><p>官网选择版本 <a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a><br><strong>以下命令手动修改版本号,例如<code>v2.2.3</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>检查 docker compose 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><p>官网选择版本 <a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a><br>选择相应版本,下载到本地或者服务器中.<br>更名为<code>docker-compose</code>,并移动到<code>/usr/local/bin</code>目录下.</p><p>添加执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>检查 docker compose 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h4 id="pip在线安装"><a href="#pip在线安装" class="headerlink" title="pip在线安装"></a>pip在线安装</h4><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><p>安装 PIP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-pip</span><br></pre></td></tr></table></figure><p>升级 PIP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>升级报错</p><p>You are using pip version 8.1.2, however version 22.0.3 is available</p><p>解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/pip/2.7/get-pip.py &gt;&gt; get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p>3.6版本的get-pip.py</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py &gt;&gt; get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p>检查 PIP 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br><span class="line">pip 21.3.1 from /usr/local/lib/python3.6/site-packages/pip (python 3.6)</span><br></pre></td></tr></table></figure><p>安装 docker compose。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U docker-compose</span><br></pre></td></tr></table></figure><p>检查 docker compose 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version</span><br><span class="line"></span><br><span class="line">docker-compose version 1.29.2, build unknown</span><br><span class="line">docker-py version: 5.0.3</span><br><span class="line">CPython version: 3.6.8</span><br><span class="line">OpenSSL version: OpenSSL 1.0.2k-fips  26 Jan 2017</span><br></pre></td></tr></table></figure><h3 id="Docker配置镜像加速及私有仓库"><a href="#Docker配置镜像加速及私有仓库" class="headerlink" title="Docker配置镜像加速及私有仓库"></a>Docker配置镜像加速及私有仓库</h3><p>配置保存命令</p><p>配置<code>daemon.json</code>需要重载并重启生效</p><p>编辑 daemon.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>重新加载 daemon.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>重启 Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="配置镜像加速"><a href="#配置镜像加速" class="headerlink" title="配置镜像加速"></a>配置镜像加速</h3><p>公共镜像加速</p><p>添加<code>Docker 中国官方镜像加速</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更多公共镜像加速服务</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://reg-mirror.qiniu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://dockerhub.azk8s.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="私有镜像加速"><a href="#私有镜像加速" class="headerlink" title="私有镜像加速"></a>私有镜像加速</h3><p>可使用<code>IP</code>或<code>反向代理域名</code>来配置私有镜像加速服务.<br>请注意镜像加速的 HTTP&#x2F;HTTPS 协议,以及开放防火墙端口.</p><p>私有域名镜像加速</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">      &quot;https://registry.yourdomain.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>私有IP镜像加速</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">      &quot;http://101.102.103.104:5000&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置私有仓库"><a href="#配置私有仓库" class="headerlink" title="配置私有仓库"></a>配置私有仓库</h3><p>私有仓库可以使用<code>内网 IP</code>和<code>公网 IP</code>的形式配置.</p><p>使用反向代理配置了域名的私有仓库无需配置<code>daemon.json</code>.</p><p>内网IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;insecure-registries&quot;: [</span><br><span class="line">      &quot;192.168.1.5:5000&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>公网IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;insecure-registries&quot;: [</span><br><span class="line">      &quot;101.102.103.104:5000&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时配置镜像加速和私有仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;https://registry.yourdomain.com&quot;],</span><br><span class="line">    &quot;insecure-registries&quot;: [&quot;192.168.1.5:5000&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的镜像加速服务和私有仓库</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;https://registry.yourdomain.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;192.168.1.5:5000&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;101.102.103.104:5000&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Docker迁移-x2F-var-x2F-lib-x2F-docker目录"><a href="#Docker迁移-x2F-var-x2F-lib-x2F-docker目录" class="headerlink" title="Docker迁移&#x2F;var&#x2F;lib&#x2F;docker目录"></a>Docker迁移&#x2F;var&#x2F;lib&#x2F;docker目录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>由于<code>/var/lib/docker/overlay2</code>目录占用磁盘空间过大,即使使用<code>docker system prune -a</code>命令也无法清理<code>overlay2</code>目录下的文件,手动删除则会导致容器无法启动.所以只有将 docker 根目录迁移至空间更大的目录.</p><h4 id="迁移流程"><a href="#迁移流程" class="headerlink" title="迁移流程"></a>迁移流程</h4><p>停止docker服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h4 id="迁移目录"><a href="#迁移目录" class="headerlink" title="迁移目录"></a>迁移目录</h4><p>创建新的 docker 根目录,确保创建的目录空间容量够大.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/docker/lib</span><br></pre></td></tr></table></figure><p>迁移<code>/var/lib/docker</code>目录至<code>/home/docker/lib</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz /var/lib/docker /home/docker/lib/</span><br></pre></td></tr></table></figure><p>配置<code>devicemapper.conf</code>,先查看该文件是否存在.如不存在则新建.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/systemd/system/docker.service.d/</span><br><span class="line">vi /etc/systemd/system/docker.service.d/devicemapper.conf</span><br></pre></td></tr></table></figure><p>写入以下代码保存:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/usr/bin/dockerd  --graph=/home/docker/lib/docker</span><br></pre></td></tr></table></figure><p>重加载 docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h4 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h4><p>执行以下命令检查</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><p>确认显示信息中 Docker Root Dir 路径正确</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Docker Root Dir<span class="punctuation">:</span> /home/docker/lib/docker</span><br><span class="line">Debug Mode<span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">Registry<span class="punctuation">:</span> https<span class="punctuation">:</span><span class="comment">//index.docker.io/v1/</span></span><br></pre></td></tr></table></figure><h4 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h4><p>再次启动容器,检查无误后可删除原路径<code>/var/lib/docker/</code>中的文件.</p><h3 id="Docker-私有镜像仓库"><a href="#Docker-私有镜像仓库" class="headerlink" title="Docker 私有镜像仓库"></a>Docker 私有镜像仓库</h3><h4 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h4><p><strong>本文以部署至公网,开启账号密码,并配置域名反向代理为例.</strong><br>命令参数过多,为方便配置参数,建议使用<code>docker compose</code>部署.</p><p>创建htpasswd账号密码</p><p>启动一个一次性容器用于创建账号密码.密码文件路径以<code>/root/registry/htpasswd</code>为例,账号密码以<code>admin</code>和<code>12345678</code>为例.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --entrypoint \</span><br><span class="line">    htpasswd httpd:2 -Bbn \</span><br><span class="line">    admin 12345678 &gt; /root/registry/htpasswd</span><br></pre></td></tr></table></figure><p>docker-compose.yml </p><p><strong>volumes</strong> 挂载<code>htpasswd</code>密码文件,数据目录,时区文件.配置文件<code>config.yml</code>作为高级用户可选挂载.<br><strong>environment</strong> 环境变量开启认证,并开启删除镜像功能.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  registry:</span><br><span class="line">    image: registry:2</span><br><span class="line">    container_name: registry</span><br><span class="line">    volumes:</span><br><span class="line">      # - ./config.yml:/etc/docker/registry/config.yml</span><br><span class="line">      - ./htpasswd:/auth/htpasswd</span><br><span class="line">      - ./registry:/var/lib/registry</span><br><span class="line">      - /etc/localtime:/etc/localtime</span><br><span class="line">    ports:</span><br><span class="line">      - 5000:5000</span><br><span class="line">    environment:</span><br><span class="line">      - REGISTRY_AUTH=htpasswd</span><br><span class="line">      - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd</span><br><span class="line">      - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm</span><br><span class="line">      - REGISTRY_STORAGE_DELETE_ENABLED=true</span><br><span class="line">    networks:</span><br><span class="line">      - registry</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  registry:</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>成功启动后私有镜像仓库内网地址为: <strong>192.168.1.5:5000</strong><br>可根据需求使用域名配置反向代理,例如: <strong><a href="https://registry.yourdomain.com/">https://registry.yourdomain.com</a></strong></p><p>注意需开放防火墙 5000 端口</p><h3 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h3><p>以<code>CentOS</code>为例,创建或修改<code>/etc/docker/daemon.json</code>文件.</p><p><strong>注意,如使用域名配置反向代理并开启<code>HTTPS</code>,则无需配<code>daemon.json</code>文件.</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;192.168.1.5:5000&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;101.102.103.104:5000&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker login registry.yourdomain.com</span><br><span class="line">docker login 192.168.1.5:5000</span><br><span class="line">docker login 101.102.103.104:5000</span><br><span class="line"><span class="meta"># </span><span class="language-bash">使用上文创建的账号密码 admin 12345678 登录</span></span><br></pre></td></tr></table></figure><h4 id="登出"><a href="#登出" class="headerlink" title="登出"></a>登出</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker logout registry.yourdomain.com</span><br><span class="line">docker logout 192.168.1.5:5000</span><br><span class="line">docker logout 101.102.103.104:5000</span><br></pre></td></tr></table></figure><h4 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h4><p>将现有镜像 tag 为私有仓库镜像名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line"><span class="meta"># </span><span class="language-bash">获取现有镜像的 IMAGE ID</span></span><br><span class="line">docker tag 102816b1ee7d registry.yourdomain.com/mysql:8.0.13</span><br><span class="line">docker tag 102816b1ee7d 192.168.1.5:5000/mysql:8.0.13</span><br><span class="line">docker tag 102816b1ee7d 101.102.103.104:5000/mysql:8.0.13</span><br></pre></td></tr></table></figure><p>Push 至私有镜像仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker push registry.yourdomain.com/mysql:8.0.13</span><br><span class="line">docker push 192.168.1.5:5000/mysql:8.0.13</span><br><span class="line">docker push 101.102.103.104:5000/mysql:8.0.13</span><br></pre></td></tr></table></figure><h4 id="Pull"><a href="#Pull" class="headerlink" title="Pull"></a>Pull</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.yourdomain.com/mysql:8.0.13</span><br><span class="line">docker pull 192.168.1.5:5000/mysql:8.0.13</span><br><span class="line">docker pull 101.102.103.104:5000/mysql:8.0.13</span><br></pre></td></tr></table></figure><h4 id="查看镜像仓库清单"><a href="#查看镜像仓库清单" class="headerlink" title="查看镜像仓库清单"></a>查看镜像仓库清单</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:12345678 -X GET https://registry.yourdomain.com/v2/_catalog</span><br></pre></td></tr></table></figure><h4 id="查看镜像-tag-清单"><a href="#查看镜像-tag-清单" class="headerlink" title="查看镜像 tag 清单"></a>查看镜像 tag 清单</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:12345678 -X GET https://registry.yourdomain.com/v2/mysql/tags/list</span><br></pre></td></tr></table></figure><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose.yml`环境变量中开启`REGISTRY_STORAGE_DELETE_ENABLED=true</span><br></pre></td></tr></table></figure><h5 id="获取镜像-digest-hash"><a href="#获取镜像-digest-hash" class="headerlink" title="获取镜像 digest hash"></a>获取镜像 digest hash</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:12345678 --header &quot;Accept: application/vnd.docker.distribution.manifest.v2+json&quot; -I -X GET https://registry.yourdomain.com/v2/mysql/manifests/8.0.13</span><br><span class="line"><span class="meta"># </span><span class="language-bash">获取 digest <span class="built_in">hash</span> 如下</span></span><br><span class="line">sha256:45a2a291xxx223123fc03d9be551e362b460exxs56787736919baa</span><br></pre></td></tr></table></figure><h5 id="删除镜像清单"><a href="#删除镜像清单" class="headerlink" title="删除镜像清单"></a>删除镜像清单</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:12345678 -I -X DELETE https://registry.yourdomain.com/v2/mysql/manifests/sha256:45a2a291xxx223123fc03d9be551e362b460exxs56787736919baa</span><br></pre></td></tr></table></figure><h5 id="清理磁盘空间"><a href="#清理磁盘空间" class="headerlink" title="清理磁盘空间"></a>清理磁盘空间</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure><h5 id="手动删除目录"><a href="#手动删除目录" class="headerlink" title="手动删除目录"></a>手动删除目录</h5><p>完成上述操作后还可以删除存储目录中的空目录文件,如不删除依旧可以被上述<code>查看镜像仓库</code>的命令查询到结果.<br><strong>依照上文示例,挂载存储目录路径如下:</strong></p><p>.&#x2F;registry&#x2F;docker&#x2F;registry&#x2F;v2&#x2F;repositories</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor使用自签名证书实现https登录</title>
      <link href="/2022/02/21/harbor%E4%BD%BF%E7%94%A8%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E7%99%BB%E5%BD%95/"/>
      <url>/2022/02/21/harbor%E4%BD%BF%E7%94%A8%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上次安装了Harbor，并没有开启https，不太安全，这次记录下自签名证书来实现https登录。</p><h2 id="自签名证书创建过程"><a href="#自签名证书创建过程" class="headerlink" title="自签名证书创建过程"></a>自签名证书创建过程</h2><p>创建证书目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/ca -p</span><br><span class="line"><span class="built_in">cd</span> /root/ca</span><br><span class="line"><span class="comment">#以下命令创建CA证书</span></span><br><span class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt</span><br></pre></td></tr></table></figure><p>其中：（req：申请证书签署请求；-newkey 新密钥 ；-x509：可以用来显示证书的内容，转换其格式，给CSR签名等X.509证书的管理工作，这里用来自签名。）<br>一路回车出现Common Name 输入IP或域名:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:harbor.lhp.com</span></span><br></pre></td></tr></table></figure><h3 id="生成证书签名请求"><a href="#生成证书签名请求" class="headerlink" title="生成证书签名请求"></a>生成证书签名请求</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout harbor.lhp.com.key</span><br><span class="line">一路回车出现Common Name 输入IP或域名</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:harbor.lhp.com</span></span><br></pre></td></tr></table></figure><h3 id="生成x509-v3-扩展文件"><a href="#生成x509-v3-扩展文件" class="headerlink" title="生成x509 v3 扩展文件"></a>生成x509 v3 扩展文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; v3.ext &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">authorityKeyIdentifier=keyid,issuer</span></span><br><span class="line"><span class="string">basicConstraints=CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span><br><span class="line"><span class="string">extendedKeyUsage = serverAuth</span></span><br><span class="line"><span class="string">subjectAltName = DNS:harbor.lhp.com</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="生成主机证书"><a href="#生成主机证书" class="headerlink" title="生成主机证书"></a>生成主机证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -sha512 -days 3650 \</span><br><span class="line">    -extfile v3.ext \</span><br><span class="line">    -CA ca.crt -CAkey ca.key -CAcreateserial \</span><br><span class="line">    -<span class="keyword">in</span> harbor.lhp.com.csr \</span><br><span class="line">    -out harbor.lhp.com.crt</span><br></pre></td></tr></table></figure><h3 id="增加docker证书可信"><a href="#增加docker证书可信" class="headerlink" title="增加docker证书可信"></a>增加docker证书可信</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform PEM -<span class="keyword">in</span> harbor.lhp.com.crt -out harbor.lhp.com.cert</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/docker/certs.d/</span><br><span class="line"><span class="built_in">cp</span> harbor.lhp.com.cert /etc/docker/certs.d/harbor.lhp.com/</span><br><span class="line"><span class="built_in">cp</span> harbor.lhp.com.key /etc/docker/certs.d/harbor.lhp.com/</span><br><span class="line"><span class="built_in">cp</span> ca.crt /etc/docker/certs.d/harbor.lhp.com/</span><br></pre></td></tr></table></figure><h3 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/docker restart </span><br></pre></td></tr></table></figure><h3 id="配置harbor-yml"><a href="#配置harbor-yml" class="headerlink" title="配置harbor.yml"></a>配置harbor.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set hostname</span></span><br><span class="line">hostname = harbor.lhp.com     <span class="comment">#域名或ip</span></span><br><span class="line"><span class="comment">#set ui_url_protocol</span></span><br><span class="line">uiurlprotocol = https    <span class="comment">#这里改为https****</span></span><br><span class="line">......</span><br><span class="line"><span class="comment">#The path of cert and key files for nginx, they are applied only the protocol is set to https</span></span><br><span class="line">ssl_cert = /root/ca/harbor.lhp.com.crt     <span class="comment">#crt位置</span></span><br><span class="line">ssl_cert_key = /root/ca/harbor.lhp.com.key  <span class="comment">#key的位置</span></span><br></pre></td></tr></table></figure><h3 id="配置启动harbor"><a href="#配置启动harbor" class="headerlink" title="配置启动harbor"></a>配置启动harbor</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#到harbor安装目录下更新配置文件</span></span><br><span class="line">./prepare </span><br><span class="line"><span class="comment">#启动harbor</span></span><br><span class="line">docker-compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><a href="https://harbor.lhp.com/">https://harbor.lhp.com</a></p><h3 id="重新登录harbor报错-x509"><a href="#重新登录harbor报错-x509" class="headerlink" title="重新登录harbor报错 x509"></a>重新登录harbor报错 x509</h3><p>重新编辑&#x2F;etc&#x2F;docker&#x2F;daemon.json文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://jliunkl7.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;harbor.lhp.com&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启docker即可.</p><p><a href="https://goharbor.io/docs/2.1.0/install-config/configure-https/">官方参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网中其他主机访问本机wsl2中的服务</title>
      <link href="/2022/02/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%AC%E6%9C%BAwsl2%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/02/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%AC%E6%9C%BAwsl2%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于我使用的ubuntu20.04中docker所启动的服务除了本机能访问，局域网中其他设备都无法访问。容器端口和windows本机端口不相通，需要windows开启端口转发。网上找了好多资料发现有位github用户开发的脚本简单易用并且能完美解决端口转发问题。</p><h3 id="windows上使用"><a href="#windows上使用" class="headerlink" title="windows上使用"></a>windows上使用</h3><p><a href="https://github.com/HobaiRiku/wsl2-auto-portproxy/releases/download/v1.0.0/wslpp.exe">链接</a></p><p>下载wslpp.exe即可使用，默认所有IP都能访问本机的docker生成的服务端口，并且不用配置。</p><h3 id="linux中使用"><a href="#linux中使用" class="headerlink" title="linux中使用"></a>linux中使用</h3><p>环境</p><p>wsl中必须安装net-tools工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install net-tools</span><br></pre></td></tr></table></figure><p>在Windows PowerShell中, 将其clone到本地:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HobaiRiku/wsl2-auto-portproxy.git</span><br></pre></td></tr></table></figure><p>在WSL2中, 编译此项目,注意,是需要Go的环境的, 而且这一步骤需要在Windows的管理员模式进行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install golang-go</span><br><span class="line"><span class="built_in">cd</span> /mnt/c/Users/`windows-user-name`/wsl2-auto-portproxy/</span><br><span class="line">make build</span><br></pre></td></tr></table></figure><p>配置wslpp的配置文件, 在WSL中执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/c/Users/14408/.wslpp</span><br><span class="line">vim  /mnt/c/Users/14408/.wslpp/config.json</span><br><span class="line"></span><br><span class="line">输入:</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;onlyPredefined&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;predefined&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;tcp&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;22:22&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ignore&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;tcp&quot;</span>: [</span><br><span class="line">      445</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;:</span><br></pre></td></tr></table></figure><p>回到Windows PowerShell中, 执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> .\wsl2-auto-portproxy\dist\</span><br><span class="line">.\wslpp.exe</span><br></pre></td></tr></table></figure><p>此外, WSL操作Windows的文件,是需要在管理员模式下进行的.</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor安装与简单使用</title>
      <link href="/2022/02/18/harbor%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/18/harbor%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Harbor 是一个开源的容器镜像仓库，它提供用户权限管理、镜像复制等功能，提高使用的registry的效率。确保镜像被扫描并且没有漏洞，并将镜像标记为可信。</p><h2 id="harbor架构"><a href="#harbor架构" class="headerlink" title="harbor架构"></a>harbor架构</h2><p><img src="/img/postimages/harbor%E6%9E%B6%E6%9E%84%E5%9B%BE.webp" alt="harbor架构图"></p><p>主要组件包括proxy，他是一个nginx前端代理，主要是分发前端页面ui访问和镜像上传和下载流量，上图中通过深蓝色先标识；<br>ui提供了一个web管理页面，当然还包括了一个前端页面和后端API，底层使用mysql数据库。<br>registry是镜像仓库，负责存储镜像文件，当镜像上传完毕后通过hook通知ui创建repository，上图通过红色线标识，当然registry的token认证也是通过ui组件完成。<br>adminserver是系统的配置管理中心附带检查存储用量，ui和jobserver启动时候回需要加载adminserver的配置，通过灰色线标识。jobsevice是负责镜像复制工作的，他和registry通信，从一个registry pull镜像然后push到另一个registry，并记录job_log，上图通过紫色线标识。<br>log是日志汇总组件，通过docker的log-driver把日志汇总到一起，通过浅蓝色线条标识。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>运行环境</p><ul><li>Ubuntu  20.04 LTS</li><li>docker-ce：20.10.12</li><li>docker-compose：v2.2.3</li><li>harbor-offline：v1.10.10</li></ul><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>官方安装<a href="https://docs.docker.com/engine/install/ubuntu/">参考</a></p><p>我是在wsl2中使用ubuntu 20.04系统安装docker的。</p><h4 id="删除旧版docker"><a href="#删除旧版docker" class="headerlink" title="删除旧版docker"></a>删除旧版docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><p>如果之前安装过docker,那么所有配置文件都在<code>/var/lib/docker/</code>中,包括images, containers, volumes, and networks。</p><p>不用可以删除。</p><h4 id="开始安装设置repo源"><a href="#开始安装设置repo源" class="headerlink" title="开始安装设置repo源"></a>开始安装设置repo源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br></pre></td></tr></table></figure><h4 id="添加Docker的官方GPG-key"><a href="#添加Docker的官方GPG-key" class="headerlink" title="添加Docker的官方GPG key"></a>添加Docker的官方GPG key</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><h4 id="设置稳定版repo源"><a href="#设置稳定版repo源" class="headerlink" title="设置稳定版repo源"></a>设置稳定版repo源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><h4 id="安装docker-ce"><a href="#安装docker-ce" class="headerlink" title="安装docker-ce"></a>安装docker-ce</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h4 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h4><p>harbor需要用docker-compose来管理。</p><p>源码地址：<a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a></p><p>下载指定版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>添加执行权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>验证一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$docker</span>-compose --version</span><br><span class="line"> </span><br><span class="line">输出：</span><br><span class="line">Docker Compose version v2.2.3</span><br></pre></td></tr></table></figure><h2 id="安装-harbor"><a href="#安装-harbor" class="headerlink" title="安装 harbor"></a>安装 harbor</h2><p>源码地址：<a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases</a></p><p>项目分有在线版，以及离线版，这里使用离线版的安装。</p><h3 id="下载安装包。"><a href="#下载安装包。" class="headerlink" title="下载安装包。"></a>下载安装包。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/goharbor/harbor/releases/download/v1.10.10/harbor-offline-installer-v1.10.10.tgz</span><br></pre></td></tr></table></figure><p>或许用迅雷下载，速度更佳。</p><p>解压安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p softwere</span><br><span class="line"><span class="built_in">cd</span> /root/softwere</span><br><span class="line"><span class="built_in">mv</span> harbor-offline-installer-v1.10.10.tgz /root/softwere</span><br><span class="line">tar xvf harbor-offline-installer-v1.10.10.tgz</span><br><span class="line"><span class="built_in">ls</span> harbor</span><br><span class="line">LICENSE  common  common.sh  docker-compose.yml  harbor.v1.10.10.tar.gz  harbor.yml  install.sh  prepare</span><br></pre></td></tr></table></figure><h3 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h3><p>这里使用域名+5000端口来访问，关闭https。完整配置如下：</p><p>vim harbor.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Configuration file of Harbor</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The IP address or hostname to access admin UI and registry service.</span></span><br><span class="line"><span class="comment"># DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span></span><br><span class="line">hostname: harbor.lhp.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># http related config</span></span><br><span class="line">http:</span><br><span class="line">  <span class="comment"># port for http, default is 80. If https enabled, this port will redirect to https port</span></span><br><span class="line">  port: 5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># https related config</span></span><br><span class="line"><span class="comment"># https:</span></span><br><span class="line">  <span class="comment"># https port for harbor, default is 443</span></span><br><span class="line">  <span class="comment"># port: 443</span></span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line">  <span class="comment"># certificate: /your/certificate/path</span></span><br><span class="line">  <span class="comment"># private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment external_url if you want to enable external proxy</span></span><br><span class="line"><span class="comment"># And when it enabled the hostname will no longer used</span></span><br><span class="line"><span class="comment"># external_url: https://reg.mydomain.com:8433</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The initial password of Harbor admin</span></span><br><span class="line"><span class="comment"># It only works in first time to install harbor</span></span><br><span class="line"><span class="comment"># Remember Change the admin password from UI after launching Harbor.</span></span><br><span class="line">harbor_admin_password: Toor12345</span><br><span class="line"></span><br><span class="line"><span class="comment"># Harbor DB configuration</span></span><br><span class="line">database:</span><br><span class="line">  <span class="comment"># The password for the root user of Harbor DB. Change this before any production use.</span></span><br><span class="line">  password: root123</span><br><span class="line">  <span class="comment"># The maximum number of connections in the idle connection pool. If it &lt;=0, no idle connections are retained.</span></span><br><span class="line">  max_idle_conns: 50</span><br><span class="line">  <span class="comment"># The maximum number of open connections to the database. If it &lt;= 0, then there is no limit on the number of open connections.</span></span><br><span class="line">  <span class="comment"># Note: the default number of connections is 100 for postgres.</span></span><br><span class="line">  max_open_conns: 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># The default data volume</span></span><br><span class="line">data_volume: /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># Harbor Storage settings by default is using /data dir on local filesystem</span></span><br><span class="line"><span class="comment"># Uncomment storage_service setting If you want to using external storage</span></span><br><span class="line"><span class="comment"># storage_service:</span></span><br><span class="line"><span class="comment">#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore</span></span><br><span class="line"><span class="comment">#   # of registry&#x27;s and chart repository&#x27;s containers.  This is usually needed when the user hosts a internal storage with self signed certificate.</span></span><br><span class="line"><span class="comment">#   ca_bundle:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss</span></span><br><span class="line"><span class="comment">#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/</span></span><br><span class="line"><span class="comment">#   filesystem:</span></span><br><span class="line"><span class="comment">#     maxthreads: 100</span></span><br><span class="line"><span class="comment">#   # set disable to true when you want to disable registry redirect</span></span><br><span class="line"><span class="comment">#   redirect:</span></span><br><span class="line"><span class="comment">#     disabled: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clair configuration</span></span><br><span class="line">clair:</span><br><span class="line">  <span class="comment"># The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.</span></span><br><span class="line">  updaters_interval: 12</span><br><span class="line"></span><br><span class="line">jobservice:</span><br><span class="line">  <span class="comment"># Maximum number of job workers in job service</span></span><br><span class="line">  max_job_workers: 10</span><br><span class="line"></span><br><span class="line">notification:</span><br><span class="line">  <span class="comment"># Maximum retry count for webhook job</span></span><br><span class="line">  webhook_job_max_retry: 10</span><br><span class="line"></span><br><span class="line">chart:</span><br><span class="line">  <span class="comment"># Change the value of absolute_url to enabled can enable absolute url in chart</span></span><br><span class="line">  absolute_url: disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># Log configurations</span></span><br><span class="line"><span class="built_in">log</span>:</span><br><span class="line">  <span class="comment"># options are debug, info, warning, error, fatal</span></span><br><span class="line">  level: info</span><br><span class="line">  <span class="comment"># configs for logs in local storage</span></span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    <span class="comment"># Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.</span></span><br><span class="line">    rotate_count: 50</span><br><span class="line">    <span class="comment"># Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in</span></span><br><span class="line">kilobytes.</span><br><span class="line">    <span class="comment"># If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G</span></span><br><span class="line">    <span class="comment"># are all valid.</span></span><br><span class="line">    rotate_size: 200M</span><br><span class="line">    <span class="comment"># The directory on your host that store log</span></span><br><span class="line">    location: /var/log/harbor</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uncomment following lines to enable external syslog endpoint.</span></span><br><span class="line">  <span class="comment"># external_endpoint:</span></span><br><span class="line">  <span class="comment">#   # protocol used to transmit log to external endpoint, options is tcp or udp</span></span><br><span class="line">  <span class="comment">#   protocol: tcp</span></span><br><span class="line">  <span class="comment">#   # The host of external endpoint</span></span><br><span class="line">  <span class="comment">#   host: localhost</span></span><br><span class="line">  <span class="comment">#   # Port of external endpoint</span></span><br><span class="line">  <span class="comment">#   port: 5140</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!</span></span><br><span class="line">_version: 1.10.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment external_database if using external database.</span></span><br><span class="line"><span class="comment"># external_database:</span></span><br><span class="line"><span class="comment">#   harbor:</span></span><br><span class="line"><span class="comment">#     host: harbor_db_host</span></span><br><span class="line"><span class="comment">#     port: harbor_db_port</span></span><br><span class="line"><span class="comment">#     db_name: harbor_db_name</span></span><br><span class="line"><span class="comment">#     username: harbor_db_username</span></span><br><span class="line"><span class="comment">#     password: harbor_db_password</span></span><br><span class="line"><span class="comment">#     ssl_mode: disable</span></span><br><span class="line"><span class="comment">#     max_idle_conns: 2</span></span><br><span class="line"><span class="comment">#     max_open_conns: 0</span></span><br><span class="line"><span class="comment">#   clair:</span></span><br><span class="line"><span class="comment">#     host: clair_db_host</span></span><br><span class="line"><span class="comment">#     port: clair_db_port</span></span><br><span class="line"><span class="comment">#     db_name: clair_db_name</span></span><br><span class="line"><span class="comment">#     username: clair_db_username</span></span><br><span class="line"><span class="comment">#     password: clair_db_password</span></span><br><span class="line"><span class="comment">#     ssl_mode: disable</span></span><br><span class="line"><span class="comment">#   notary_signer:</span></span><br><span class="line"><span class="comment">#     host: notary_signer_db_host</span></span><br><span class="line"><span class="comment">#     port: notary_signer_db_port</span></span><br><span class="line"><span class="comment">#     db_name: notary_signer_db_name</span></span><br><span class="line"><span class="comment">#     username: notary_signer_db_username</span></span><br><span class="line"><span class="comment">#     password: notary_signer_db_password</span></span><br><span class="line"><span class="comment">#     ssl_mode: disable</span></span><br><span class="line"><span class="comment">#   notary_server:</span></span><br><span class="line"><span class="comment">#     host: notary_server_db_host</span></span><br><span class="line"><span class="comment">#     port: notary_server_db_port</span></span><br><span class="line"><span class="comment">#     db_name: notary_server_db_name</span></span><br><span class="line"><span class="comment">#     username: notary_server_db_username</span></span><br><span class="line"><span class="comment">#     password: notary_server_db_password</span></span><br><span class="line"><span class="comment">#     ssl_mode: disable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment external_redis if using external Redis server</span></span><br><span class="line"><span class="comment"># external_redis:</span></span><br><span class="line"><span class="comment">#   host: redis</span></span><br><span class="line"><span class="comment">#   port: 6379</span></span><br><span class="line"><span class="comment">#   password:</span></span><br><span class="line"><span class="comment">#   # db_index 0 is for core, it&#x27;s unchangeable</span></span><br><span class="line"><span class="comment">#   registry_db_index: 1</span></span><br><span class="line"><span class="comment">#   jobservice_db_index: 2</span></span><br><span class="line"><span class="comment">#   chartmuseum_db_index: 3</span></span><br><span class="line"><span class="comment">#   clair_db_index: 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.</span></span><br><span class="line"><span class="comment"># uaa:</span></span><br><span class="line"><span class="comment">#   ca_file: /path/to/ca</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global proxy</span></span><br><span class="line"><span class="comment"># Config http proxy for components, e.g. http://my.proxy.com:3128</span></span><br><span class="line"><span class="comment"># Components doesn&#x27;t need to connect to each others via http proxy.</span></span><br><span class="line"><span class="comment"># Remove component from `components` array if want disable proxy</span></span><br><span class="line"><span class="comment"># for it. If you want use proxy for replication, MUST enable proxy</span></span><br><span class="line"><span class="comment"># for core and jobservice, and set `http_proxy` and `https_proxy`.</span></span><br><span class="line"><span class="comment"># Add domain to the `no_proxy` field, when you want disable proxy</span></span><br><span class="line"><span class="comment"># for some special registry.</span></span><br><span class="line">proxy:</span><br><span class="line">  http_proxy:</span><br><span class="line">  https_proxy:</span><br><span class="line">  <span class="comment"># no_proxy endpoints will appended to 127.0.0.1,localhost,.local,.internal,log,db,redis,nginx,core,portal,postgresql,jobservice,registry,registryctl,clair,chartmuseum,notary-server</span></span><br><span class="line">  no_proxy:</span><br><span class="line">  components:</span><br><span class="line">    - core</span><br><span class="line">    - jobservice</span><br><span class="line">    - clair</span><br></pre></td></tr></table></figure><h3 id="添加映射关系"><a href="#添加映射关系" class="headerlink" title="添加映射关系"></a>添加映射关系</h3><p>vi &#x2F;etc&#x2F;hosts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">172.28.238.43   harbor.lhp.com</span><br></pre></td></tr></table></figure><h3 id="windows也需要添加映射关系"><a href="#windows也需要添加映射关系" class="headerlink" title="windows也需要添加映射关系"></a>windows也需要添加映射关系</h3><p>用管理员用户编辑<code>C:\Windows\System32\drivers\etc\hosts</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#同样添加下面内容</span></span><br><span class="line">172.28.238.43   harbor.lhp.com</span><br></pre></td></tr></table></figure><h3 id="修改后刷新"><a href="#修改后刷新" class="headerlink" title="修改后刷新"></a>修改后刷新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><p>配置daemon.json，docker登录harbor时需要。</p><p>vi &#x2F;etc&#x2F;docker&#x2F;daemon.json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://jliunkl7.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;harbor.lhp.com:5000&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service docker stop</span><br><span class="line">service docker start</span><br></pre></td></tr></table></figure><h3 id="执行install-sh脚本安装"><a href="#执行install-sh脚本安装" class="headerlink" title="执行install.sh脚本安装"></a>执行install.sh脚本安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><h3 id="测试访问harbor"><a href="#测试访问harbor" class="headerlink" title="测试访问harbor"></a>测试访问harbor</h3><p><a href="http://harbor.lhp.com:5000/">http://harbor.lhp.com:5000</a></p><p>用户名：admin</p><p>密码：Toor12345</p><p><img src="/img/postimages/harbor%E7%99%BB%E5%BD%95.webp" alt="harbor登录"></p><h3 id="docker登录harbor"><a href="#docker登录harbor" class="headerlink" title="docker登录harbor"></a>docker登录harbor</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u admin http://harbor.lhp.com:5000</span><br></pre></td></tr></table></figure><h3 id="harbor创建项目"><a href="#harbor创建项目" class="headerlink" title="harbor创建项目"></a>harbor创建项目</h3><p><img src="/img/postimages/harbor%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE.webp" alt="harbor新建项目"></p><h3 id="测试上传和下载到harbor"><a href="#测试上传和下载到harbor" class="headerlink" title="测试上传和下载到harbor"></a>测试上传和下载到harbor</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#push</span></span><br><span class="line">docker tag alpine:latest harbor.lhp.com:5000/images/alpine:latest</span><br><span class="line">docker push harbor.lhp.com:5000/images/alpine:latest</span><br><span class="line"><span class="comment">#pull</span></span><br><span class="line">docker pull harbor.lhp.com:5000/images/alpine:latest</span><br></pre></td></tr></table></figure><p>portainer中添加harbor仓库。以后就可以在portainer中可视化上传和下载镜像啦！</p><h2 id="登录portainer并新增仓库"><a href="#登录portainer并新增仓库" class="headerlink" title="登录portainer并新增仓库"></a>登录portainer并新增仓库</h2><p><img src="/img/postimages/portainer%E6%B7%BB%E5%8A%A0harbor%E4%BB%93%E5%BA%931.webp" alt="portainer添加harbor仓库1"></p><p><img src="/img/postimages/portainer%E6%B7%BB%E5%8A%A0harbor%E4%BB%93%E5%BA%932.webp" alt="portainer添加harbor仓库2"></p><h3 id="测试上传和下载。"><a href="#测试上传和下载。" class="headerlink" title="测试上传和下载。"></a>测试上传和下载。</h3><p>镜像打tag时注意要在镜像前加harbor项目文件夹，文中的为images。</p><p>将busybox:latest上传到harbor的images中。</p><p><img src="/img/postimages/portainer%E4%B8%8A%E4%BC%A0%E5%88%B0harbor1.webp" alt="portainer上传到harbor1"></p><p>进入busybox镜像并打tag，注意格式。</p><p><img src="/img/postimages/portainer%E4%B8%8A%E4%BC%A0%E5%88%B0harbor2.webp" alt="portainer上传到harbor2"></p><p>上传镜像到harbor仓库</p><p><img src="/img/postimages/portainer%E4%B8%8A%E4%BC%A0%E5%88%B0harbor3.webp" alt="portainer上传到harbor3"></p><p>harbor中查看</p><p><img src="/img/postimages/portainer%E4%B8%8A%E4%BC%A0%E5%88%B0harbor5.webp" alt="portainer上传到harbor5"></p><p>harbor上拉取镜像操作</p><p>选择要拉取的镜像并拉取。</p><p><img src="/img/postimages/harbor%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%961.webp" alt="harbor仓库镜像拉取1"></p><h2 id="harbor登录时遇到的坑"><a href="#harbor登录时遇到的坑" class="headerlink" title="harbor登录时遇到的坑"></a>harbor登录时遇到的坑</h2><p>如果显示harbor登录失败，而密码又是harbor.yml中设置的密码。此时需要停止harbor所有相关镜像。进入到harbor安装目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/softwere/harbor</span><br><span class="line"><span class="comment">#停止harbor所有相关镜像</span></span><br><span class="line">docker-compose down -v</span><br><span class="line"><span class="comment">#开启harbor所有相关镜像</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>停止docker服务，删除harbor的数据卷,清除日志，路径在<code>harbor.yml</code>中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /data</span><br><span class="line"><span class="built_in">rm</span> -rf /var/log/harbor</span><br><span class="line"><span class="comment">#path</span></span><br><span class="line">data_volume: /data</span><br><span class="line">location: /var/log/harbor</span><br></pre></td></tr></table></figure><p>最后删除harbor文件夹，重新解压安装即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /root/softwere/harbor</span><br><span class="line"><span class="built_in">cd</span> /root/softwere/</span><br><span class="line">tar -xf harbor.v1.10.10.tar.gz</span><br></pre></td></tr></table></figure><h2 id="其他功能-Harbor镜像漏洞扫描"><a href="#其他功能-Harbor镜像漏洞扫描" class="headerlink" title="其他功能-Harbor镜像漏洞扫描"></a>其他功能-Harbor镜像漏洞扫描</h2><p>安装harbor自带的漏洞扫描</p><h4 id="添加扫描模块"><a href="#添加扫描模块" class="headerlink" title="添加扫描模块"></a>添加扫描模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入到harbor目录中操作</span></span><br><span class="line">./prepare --with-clair</span><br><span class="line"></span><br><span class="line">prepare base <span class="built_in">dir</span> is <span class="built_in">set</span> to /root/softwere/harbor</span><br><span class="line">/usr/src/app/utils/configs.py:100: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please <span class="built_in">read</span> https://msg.pyyaml.org/load <span class="keyword">for</span> full details.</span><br><span class="line">  configs = yaml.load(f)</span><br><span class="line">WARNING:root:WARNING: HTTP protocol is insecure. Harbor will deprecate http protocol <span class="keyword">in</span> the future. Please make sure to upgrade to httpsClearing the configuration file: /config/db/env</span><br><span class="line">Clearing the configuration file: /config/jobservice/env</span><br><span class="line">Clearing the configuration file: /config/jobservice/config.yml</span><br><span class="line">Clearing the configuration file: /config/nginx/nginx.conf</span><br><span class="line">Clearing the configuration file: /config/registryctl/env</span><br><span class="line">Clearing the configuration file: /config/registryctl/config.yml</span><br><span class="line">Clearing the configuration file: /config/registry/root.crt</span><br><span class="line">Clearing the configuration file: /config/registry/config.yml</span><br><span class="line">Clearing the configuration file: /config/core/env</span><br><span class="line">Clearing the configuration file: /config/core/app.conf</span><br><span class="line">Clearing the configuration file: /config/log/rsyslog_docker.conf</span><br><span class="line">Clearing the configuration file: /config/log/logrotate.conf</span><br><span class="line">Generated configuration file: /config/log/logrotate.conf</span><br><span class="line">Generated configuration file: /config/log/rsyslog_docker.conf</span><br><span class="line">Generated configuration file: /config/nginx/nginx.conf</span><br><span class="line">Generated configuration file: /config/core/env</span><br><span class="line">Generated configuration file: /config/core/app.conf</span><br><span class="line">Generated configuration file: /config/registry/config.yml</span><br><span class="line">Generated configuration file: /config/registryctl/env</span><br><span class="line">Generated configuration file: /config/db/env</span><br><span class="line">Generated configuration file: /config/jobservice/env</span><br><span class="line">Generated configuration file: /config/jobservice/config.yml</span><br><span class="line">loaded secret from file: /secret/keys/secretkey</span><br><span class="line">Generated configuration file: /config/clair/postgres_env</span><br><span class="line">Generated configuration file: /config/clair/config.yaml</span><br><span class="line">Generated configuration file: /config/clair/clair_env</span><br><span class="line">Generated configuration file: /config/clair-adapter/env</span><br><span class="line">Generated configuration file: /compose_location/docker-compose.yml</span><br><span class="line">/usr/src/app/utils/configs.py:90: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please <span class="built_in">read</span> https://msg.pyyaml.org/load <span class="keyword">for</span> full details.</span><br><span class="line">  versions = yaml.load(f)</span><br><span class="line">Clean up the input <span class="built_in">dir</span></span><br><span class="line"><span class="comment">#会自动生成docker-compose.yml文件</span></span><br><span class="line">➜  harbor <span class="built_in">ls</span></span><br><span class="line">LICENSE  common  common.sh  docker-compose.yml  harbor.v1.10.10.tar.gz  harbor.yml  install.sh  prepare</span><br></pre></td></tr></table></figure><h4 id="重启启动harbor服务（注意这里要指定docker-compose-yaml文件）"><a href="#重启启动harbor服务（注意这里要指定docker-compose-yaml文件）" class="headerlink" title="重启启动harbor服务（注意这里要指定docker-compose.yaml文件）"></a>重启启动harbor服务（注意这里要指定docker-compose.yaml文件）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><h4 id="测试扫描"><a href="#测试扫描" class="headerlink" title="测试扫描"></a>测试扫描</h4><p>可以看到在项目里面已经显示安装好了扫描器插件，不安装这里是没有的。</p><p><img src="/img/postimages/harbor%E6%89%AB%E6%8F%8F%E5%99%A81.webp" alt="harbor扫描器1"></p><p>选择镜像我们就可以进行扫描了。</p><p>镜像未扫描前</p><p><img src="/img/postimages/harbor%E6%89%AB%E6%8F%8F%E5%99%A82.webp" alt="harbor扫描器2"></p><p>镜像扫描后</p><p><img src="/img/postimages/harbor%E6%89%AB%E6%8F%8F%E5%99%A83.webp" alt="harbor扫描器3"></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2中Portainer容器可视化管理工具的安装与使用</title>
      <link href="/2022/02/17/wsl2%E4%B8%ADPortainer%E5%AE%B9%E5%99%A8%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/17/wsl2%E4%B8%ADPortainer%E5%AE%B9%E5%99%A8%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Portainer是一款轻量级的Docker图形化管理的方案，相比k8s和k3s，只需要创建一个容器！</p><p><strong>功能点：</strong></p><ul><li>多平台支持：Linux&#x2F;Windows&#x2F;OSX</li><li>控制面板分类展示</li><li>技术栈分类展示：使用swarm或docker-compose等启动的服务&#x2F;集群会在这里出现</li><li>管理容器生命周期</li><li>应用模板快速部署</li><li>管理Swarm集群或多服务器的镜像&#x2F;容器&#x2F;卷&#x2F;网络</li><li>操作事件日志记录</li><li>容器控制台日志展示</li><li>使用多个Docker仓库私服pull&#x2F;push镜像</li><li>用户权限管理功能（需付费$9.9）</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://docs.portainer.io/v/ce-2.9/start/install/server/docker/wsl">官方文档</a></p><p>首先，创建 Portainer Server 将用于存储其数据库的卷：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br></pre></td></tr></table></figure><p>然后，下载并安装 Portainer Server 容器:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8000:8000 -p 9000:9000 -p 9443:9443 \</span><br><span class="line">    --name=portainer --restart=always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    -v portainer_data:/data \</span><br><span class="line">    portainer/portainer-ce:2.11.1</span><br></pre></td></tr></table></figure><p>查看是否启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND      CREATED          STATUS   PORTS   NAMES</span><br><span class="line">bb2b73d4a4a6   portainer/portainer-ce:2.11.1   <span class="string">&quot;/portainer&quot;</span>             2 hours ago      Up About an hour   0.0.0.0:8000-&gt;8000/tcp, :::8000-&gt;8000/tcp, 0.0.0.0:9443-&gt;9443/tcp, :::9443-&gt;9443/tcp, 9000/tcp   portainer</span><br></pre></td></tr></table></figure><p>登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://localhost:9443</span><br></pre></td></tr></table></figure><p>注意:localhost可以改成IP</p><p>第一次登录需要初始化环境，创建超级管理员用户名和密码。</p><p><img src="/img/postimages/portainer1.webp" alt="portainer1"></p><p>进入后会自动扫描容器环境</p><p><img src="/img/postimages/portainer2.webp" alt="portainer2"></p><p>升级参考<a href="https://docs.portainer.io/v/ce-2.11/start/upgrade/docker">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用脚本获取本机IP并复制到registry配置文件中</title>
      <link href="/2022/02/17/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP%E5%B9%B6%E5%A4%8D%E5%88%B6%E5%88%B0registry%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD/"/>
      <url>/2022/02/17/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAIP%E5%B9%B6%E5%A4%8D%E5%88%B6%E5%88%B0registry%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于wsl2每次启动IP都会改变，查阅微软官方文档后发现wsl2无法设置静态IP。然而dockers私有仓库registry中IP配置是固定的。所以需要自定义脚本实时获取wsl2本机IP，并复制到&#x2F;etc&#x2F;docker&#x2F;daemon.json中对应的IP位置。还需要创建系统服务启动脚本。以下内容均在ubuntu 20.04 LTS中实现。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>要想实现需求，可以使用bash中多脚本之间变量传递。<a href="https://blog.csdn.net/xixihahalelehehe/article/details/104935683?spm=1035.2023.3001.6557&utm_medium=distribute.pc_relevant_bbs_down_v2.none-task-blog-2~default~OPENSEARCH~Rate-2.pc_relevant_bbs_down_v2_default&depth_1-utm_source=distribute.pc_relevant_bbs_down_v2.none-task-blog-2~default~OPENSEARCH~Rate-2.pc_relevant_bbs_down_v2_default">参考</a></p><h3 id="获取wsl2本机IP"><a href="#获取wsl2本机IP" class="headerlink" title="获取wsl2本机IP"></a>获取wsl2本机IP</h3><p>vi &#x2F;root&#x2F;init_code&#x2F;get-ip.sh &amp;&amp; chmod +x &#x2F;root&#x2F;init_code&#x2F;get-ip.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=`hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br></pre></td></tr></table></figure><h3 id="查看文本格式"><a href="#查看文本格式" class="headerlink" title="查看文本格式"></a>查看文本格式</h3><p>cat &#x2F;etc&#x2F;docker&#x2F;daemon.json </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://8xpk5wnt.mirror.aliyuncs.com&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;172.26.133.115:5000&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="创建脚本来更改daemon-json中对应IP"><a href="#创建脚本来更改daemon-json中对应IP" class="headerlink" title="创建脚本来更改daemon.json中对应IP"></a>创建脚本来更改daemon.json中对应IP</h3><p>vi chang-daemon.sh &amp;&amp; chmod +x chang-daemon.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/init_code/get-ip.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">  \&quot;registry-mirrors\&quot;: [\&quot;https://8xpk5wnt.mirror.aliyuncs.com\&quot;],</span></span><br><span class="line"><span class="string">  \&quot;insecure-registries\&quot;: [\&quot;<span class="variable">$var</span>:5000\&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;</span> &gt; /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在脚本2中使用source 来引用脚本1中的变量。如何打印出双引号？双引号前加反斜杠。</p><p>例如：</p><p>打印出”Hello World!”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;Hello World!&quot;</span>\&quot;</span><br></pre></td></tr></table></figure><h3 id="创建开机自启动脚本"><a href="#创建开机自启动脚本" class="headerlink" title="创建开机自启动脚本"></a>创建开机自启动脚本</h3><p>vi &#x2F;root&#x2F;init_code&#x2F;init_myservice.sh </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动ssh服务和docker服务</span></span><br><span class="line">sudo service ssh restart</span><br><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure><h3 id="创建查看仓库中镜像脚本"><a href="#创建查看仓库中镜像脚本" class="headerlink" title="创建查看仓库中镜像脚本"></a>创建查看仓库中镜像脚本</h3><p>vi &#x2F;root&#x2F;init_code&#x2F;watch-myregistry.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/init_code/get-ip.sh</span><br><span class="line">curl -XGET http://<span class="variable">$var</span>:5000/v2/_catalog</span><br></pre></td></tr></table></figure><p>搭建私有仓库命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name registry -v /opt/registry:/var/lib/registry -p 5000:5000 --restart=always registry</span><br></pre></td></tr></table></figure><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><p>wsl2中使用systemctl启动服务报错如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ systemctl restart docker</span><br><span class="line">System has not been booted with systemd as init system (PID 1). Can&#x27;t operate.</span><br><span class="line">Failed to connect to bus: Host is down</span><br></pre></td></tr></table></figure><p>wsl2中默认使用System V init 来管理系统服务，而不是systemd。所以不能运行systemd中的命令。</p><p><strong>Systemd command</strong>和<strong>Sysvinit command</strong>命令对照表</p><table><thead><tr><th align="center"><strong>Systemd command</strong></th><th align="center"><strong>Sysvinit command</strong></th></tr></thead><tbody><tr><td align="center">systemctl start service_name</td><td align="center">service service_name start</td></tr><tr><td align="center">systemctl stop service_name</td><td align="center">service service_name stop</td></tr><tr><td align="center">systemctl restart service_name</td><td align="center">service service_name restart</td></tr><tr><td align="center">systemctl status service_name</td><td align="center">service service_name status</td></tr><tr><td align="center">systemctl enable service_name</td><td align="center">chkconfig service_name on</td></tr><tr><td align="center">systemctl disable service_name</td><td align="center">chkconfig service_name off</td></tr></tbody></table><p>wsl2中使用chkconfig  命令设置服务开机自启动没效果，所以最后还是使用脚本来实现。</p><p>查看当前系统服务管理机制</p><p>使用sysvinit管理服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ps -p 1 -o <span class="built_in">comm</span>=</span><br><span class="line">init</span><br></pre></td></tr></table></figure><p>使用systemd管理服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -p 1 -o comm=</span></span><br><span class="line">systemd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下混杂模式判断</title>
      <link href="/2022/02/14/linux%E4%B8%8B%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%88%A4%E6%96%AD/"/>
      <url>/2022/02/14/linux%E4%B8%8B%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>混杂模式就是接收所有经过网卡的数据包，包括不是发给本机的包，即不验证MAC地址。普通模式下网卡只接收发给本机的包（包括广播包）传递给上层程序，其它的包一律丢弃。</p><p>一般来说，混杂模式不会影响网卡的正常工作，多在网络监听工具上使用。</p><h2 id="网卡工作模式"><a href="#网卡工作模式" class="headerlink" title="网卡工作模式"></a>网卡工作模式</h2><p>广播模式（Broad Cast Model）:它的物理地址（MAC）地址是 0Xffffff 的帧为广播帧，工作在广播模式的网卡接收广播帧。 </p><p>多播传送（MultiCast Model）：多播传送地址作为目的物理地址的帧可以被组内的其它主机同时接收，而组外主机却接收不到。但是，如果将网卡设置为多播传送模式，它可以接收所有的多播传送帧，而不论它是不是组内成员。 </p><p>直接模式（Direct Model）:工作在直接模式下的网卡只接收目地址是自己 Mac地址的帧。 </p><p>混杂模式（Promiscuous Model）:工作在混杂模式下的网卡接收所有的流过网卡的帧，信包捕获程序就是在这种模式下运行的。</p><p><strong>网卡的缺省工作模式包含广播模式和直接模式，即它只接收广播帧和发给自己的帧。如果采用混杂模式，一个站点的网卡将接受同一网络内所有站点所发送的数据包这样就可以到达对于网络信息监视捕获的目的。</strong></p><h2 id="开启混杂模式"><a href="#开启混杂模式" class="headerlink" title="开启混杂模式"></a>开启混杂模式</h2><p>Linux下设置把网卡设置成混杂模式的命令也很简单。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig ens33 promisc</span><br><span class="line">cat /sys/class/net/ens33/flags</span><br></pre></td></tr></table></figure><p><img src="/img/postimages/%E5%BC%80%E5%90%AF%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F.webp" alt="开启混杂模式"></p><h2 id="取消混杂模式"><a href="#取消混杂模式" class="headerlink" title="取消混杂模式"></a>取消混杂模式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig ens33 -promisc</span><br><span class="line">cat /sys/class/net/ens33/flags</span><br></pre></td></tr></table></figure><p><img src="/img/postimages/%E5%85%B3%E9%97%AD%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F.webp" alt="关闭混杂模式"></p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>使用tcpdump工具抓包时，抓包的网口会临时变成混杂模式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx140 ~]# tcpdump -i ens33 -vv -nn -w ./test.cap </span><br><span class="line">tcpdump: listening on ens33, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">^C537 packets captured</span><br><span class="line">540 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>抓包的同时查看对应网卡标志位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx140 ~]# cat /sys/class/net/ens33/flags </span><br><span class="line">0x1103</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>当网卡的标志位为<code>0x1003</code>时，没有开启混杂模式。而网卡标志位为<code>0x1103</code>时，说明该网卡开启了混杂模式。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redhat6.3 yum源失效解决</title>
      <link href="/2022/02/12/redhat6.3yum%E6%BA%90%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3/"/>
      <url>/2022/02/12/redhat6.3yum%E6%BA%90%E5%A4%B1%E6%95%88%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="备份原repo"><a href="#备份原repo" class="headerlink" title="备份原repo"></a>备份原repo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/rhel-source.repo /etc/yum.repos.d/rhel-source.repo-old</span><br></pre></td></tr></table></figure><h2 id="新建repo文件"><a href="#新建repo文件" class="headerlink" title="新建repo文件"></a>新建repo文件</h2><p>vi &#x2F;etc&#x2F;yum.repos.d&#x2F;rhel-source.repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">CentOS-Base.repo</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># The mirror system uses the connecting IP address of the client and the</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">update status of each mirror to pick mirrors that are updated to and</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">geographically close to the client.  You should use this <span class="keyword">for</span> CentOS updates</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">unless you are manually picking other mirrors.</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># If the mirrorlist= does not work for you, as a fall back you can try the</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">remarked out baseurl= line instead.</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-6.5 - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos-vault/6.5/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos-vault/RPM-GPG-KEY-CentOS-6</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">released updates</span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-6.5 - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos-vault/6.5/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos-vault/RPM-GPG-KEY-CentOS-6</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-6.5 - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos-vault/6.5/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos-vault/RPM-GPG-KEY-CentOS-6</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">additional packages that extend functionality of existing packages</span></span><br><span class="line">[centos-vaultplus]</span><br><span class="line">name=CentOS-6.5 - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos-vault/6.5/centos-vaultplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos-vault/RPM-GPG-KEY-CentOS-6</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">contrib - packages by Centos Users</span></span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-6.5 - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos-vault/6.5/contrib/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos-vault/RPM-GPG-KEY-CentOS-6</span><br></pre></td></tr></table></figure><h2 id="清除缓存并重建缓存"><a href="#清除缓存并重建缓存" class="headerlink" title="清除缓存并重建缓存"></a>清除缓存并重建缓存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用logrotate进行日志切割</title>
      <link href="/2022/02/12/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
      <url>/2022/02/12/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>logrotate 程序是一个日志文件管理工具。用于分割日志文件，删除旧的日志文件，并创建新的日志文件，起到“转储”作用。可以节省磁盘空间。下面就对 logrotate 日志轮转操作做一梳理记录。</p><p>logrotate 是基于 crontab 运行的，所以这个时间点是由 crontab 控制的，具体可以查询 crontab 的配置文件 &#x2F;etc&#x2F;anacrontab。 系统会按照计划的频率运行 logrotate，通常是每天。在大多数的 Linux 发行版本上，计划每天运行的脚本位于  &#x2F;etc&#x2F;cron.daily&#x2F;logrotate。</p><p>主流 Linux 发行版上都默认安装有 logrotate 包，如果你的 linux 系统中找不到 logrotate, 可以使用 apt-get 或 yum 命令来安装。</p><h1 id="logrotate运行机制"><a href="#logrotate运行机制" class="headerlink" title="logrotate运行机制"></a>logrotate运行机制</h1><p>logrotate 在很多 Linux 发行版上都是默认安装的。系统会定时运行 logrotate，一般是每天一次。系统是这么实现按天执行的。crontab 会每天定时执行 &#x2F;etc&#x2F;cron.daily 目录下的脚本，而这个目录下有个文件叫 logrotate。在 centos 上脚本内容是这样的：</p><p>系统自带 cron task：<code>/etc/cron.daily/logrotate</code>，每天运行一次。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost logrotate.d]# cat /etc/cron.daily/logrotate</span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line">/usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>可以看到这个脚本主要做的事就是以 <code>/etc/logrotate.conf</code> 为配置文件执行了 logrotate。就是这样实现了每天执行一次 logrotate。</p><h1 id="自定义周期滚动日志"><a href="#自定义周期滚动日志" class="headerlink" title="自定义周期滚动日志"></a>自定义周期滚动日志</h1><p>因为我的系统执行 <code>/etc/cron.daily</code> 目录下的脚本不是我想滚动日志的时间，所以我把 <code>/etc/cron.daily/logrotate</code> 拷了出来，改了一下 logrotate 配置文件的路径，然后在 crontab 里加上一条指定时间执行这个脚本的记录，自定义周期滚动日志就大功告成了。这种自定义的方式有两点要注意：</p><ol><li>配置文件里一定要配置 <code>rotate 文件数目</code>这个参数。如果不配置默认是 0 个，也就是只允许存在一份日志，刚切分出来的日志会马上被删除。</li><li>执行 logrotate 命令最好加 <code>-f</code> 参数，不然有时候配置文件修改的内容不生效。</li></ol><p>很多程序的会用到 logrotate 滚动日志，比如 nginx。它们安装后，会在 <code>/etc/logrotate.d</code> 这个目录下增加自己的 logrotate 的配置文件。logrotate 什么时候执行 <code>/etc/logrotate.d</code> 下的配置呢？看到 <code>/etc/logrotate.conf</code> 里这行，一切就不言而喻了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include /etc/logrotate.d</span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先检查服务器有没有安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep crontab</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vixie-cron</span><br><span class="line">yum -y install crontabs</span><br></pre></td></tr></table></figure><p>简单说明：<br>vixie-cron 是 cron 的主程序；<br>crontabs 是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。</p><p>安装好后启动和配置服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service crond start     //启动服务</span><br><span class="line">service crond stop      //关闭服务</span><br><span class="line">service crond restart   //重启服务</span><br><span class="line">service crond reload    //重新载入配置</span><br><span class="line">service crond status    //查看crontab服务状态</span><br></pre></td></tr></table></figure><p>设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 345 crond on</span><br></pre></td></tr></table></figure><p>简单定时脚本</p><p>[root@localhost ~]# vim test.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nowtime=`date +&quot;%Y-%m-%d %H:%M:%S&quot;`</span><br><span class="line">echo &quot;hello cron &quot;$nowtime</span><br></pre></td></tr></table></figure><p>添加执行权限<br>[root@localhost~]# chmod +x test.sh<br>运行：<br>[root@localhost ~]# .&#x2F;test.sh<br>hello cron 2022-01-09 19:54:30</p><p>添加定时任务。每一分钟执行一次</p><p>运行crontab -e </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /root/test.sh  &gt;&gt; /root/test.log</span><br></pre></td></tr></table></figure><h1 id="配置文件介绍"><a href="#配置文件介绍" class="headerlink" title="配置文件介绍"></a>配置文件介绍</h1><p>Linux系统默认安装logrotate工具，它默认的配置文件在：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/logrotate.conf</span><br><span class="line">/etc/logrotate.d/</span><br></pre></td></tr></table></figure><p>logrotate.conf 才是主要的配置文件，logrotate.d 是一个目录，该目录里的所有文件都会被主动的读入&#x2F;etc&#x2F;logrotate.conf中执行。另外，如果 &#x2F;etc&#x2F;logrotate.d&#x2F; 里面的文件中没有设定一些细节，则会以&#x2F;etc&#x2F;logrotate.conf这个文件的设定来作为默认值。</p><p>Logrotate是基于CRON来运行的，其脚本是&#x2F;etc&#x2F;cron.daily&#x2F;logrotate，日志轮转是系统自动完成的。实际运行时，Logrotate会调用配置文件&#x2F;etc&#x2F;logrotate.conf。可以在&#x2F;etc&#x2F;logrotate.d目录里放置自定义好的配置文件，用来覆盖Logrotate的缺省值。</p><p>[root@localhost ~]# cat &#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">/usr/sbin/logrotate /etc/logrotate.conf &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">  /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>如果等不及cron自动执行日志轮转，想手动强制切割日志，需要加-f参数；不过正式执行前最好通过Debug选项来验证一下（-d参数），这对调试也很重要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/logrotate -f /etc/logrotate.d/nginx</span><br><span class="line">/usr/sbin/logrotate -d -f /etc/logrotate.d/nginx</span><br></pre></td></tr></table></figure><p>logrotate 命令格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">logrotate [OPTION...] &lt;configfile&gt;</span><br><span class="line"></span><br><span class="line">-d, --debug ：debug模式，测试配置文件是否有错误。</span><br><span class="line">-f, --force ：强制转储文件。</span><br><span class="line">-m, --mail=command ：压缩日志后，发送日志到指定邮箱。</span><br><span class="line">-s, --state=statefile ：使用指定的状态文件。</span><br><span class="line">-v, --verbose ：显示转储过程。</span><br></pre></td></tr></table></figure><p>根据日志切割设置进行操作，并显示详细信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /usr/sbin/logrotate -v /etc/logrotate.conf</span><br><span class="line">[root@localhost ~]# /usr/sbin/logrotate -v /etc/logrotate.d/php</span><br></pre></td></tr></table></figure><p>根据日志切割设置进行执行，并显示详细信息,但是不进行具体操作，debug模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /usr/sbin/logrotate -d /etc/logrotate.conf</span><br><span class="line">[root@localhost ~]# /usr/sbin/logrotate -d /etc/logrotate.d/nginx</span><br></pre></td></tr></table></figure><p>查看各log文件的具体执行情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /var/lib/logrotate.status</span><br></pre></td></tr></table></figure><h1 id="切割介绍"><a href="#切割介绍" class="headerlink" title="切割介绍"></a>切割介绍</h1><p>比如以系统日志&#x2F;var&#x2F;log&#x2F;message做切割来简单说明下：</p><ul><li>第一次执行完rotate(轮转)之后，原本的messages会变成messages.1，而且会制造一个空的messages给系统来储存日志；</li><li>第二次执行之后，messages.1会变成messages.2，而messages会变成messages.1，又造成一个空的messages来储存日志！</li></ul><p>如果仅设定保留三个日志（即轮转3次）的话，那么执行第三次时，则 messages.3这个档案就会被删除，并由后面的较新的保存日志所取代！也就是会保存最新的几个日志。</p><p>日志究竟轮换几次，这个是根据配置文件中的dateext 参数来判定的。</p><h2 id="logrotate-conf配置"><a href="#logrotate-conf配置" class="headerlink" title="logrotate.conf配置"></a>logrotate.conf配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/logrotate.conf</span><br></pre></td></tr></table></figure><p>底下的设定是 “logrotate 的默认值” ，如果別的文件设定了其他的值，就会以其它文件的设定为主</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">weekly//默认每一周执行一次rotate轮转工作</span><br><span class="line">rotate 4// 保留多少个日志文件(轮转几次).默认保留四个.就是指定日志文件删除之前轮转的次数，0 指没有备份</span><br><span class="line">create//自动创建新的日志文件，新的日志文件具有和原来的文件相同的权限；因为日志被改名,因此要创建一个新的来继续存储之前的日志</span><br><span class="line">dateext// 这个参数很重要！就是切割后的日志文件以当前日期为格式结尾，如xxx.log-20131216这样,如果注释掉,切割出来是按数字递增,即前面说的 xxx.log-1这种格式</span><br><span class="line">compress //是否通过gzip压缩转储以后的日志文件，如xxx.log-20131216.gz ；如果不需要压缩，注释掉就行</span><br><span class="line">include /etc/logrotate.d  //将 /etc/logrotate.d/ 目录中的所有文件都加载进来</span><br><span class="line"></span><br><span class="line">/var/log/wtmp &#123;         //仅针对 /var/log/wtmp 所设定的参数</span><br><span class="line">monthly          //每月一次切割,取代默认的一周</span><br><span class="line">minsize 1M       //文件大小超过 1M 后才会切割</span><br><span class="line">create 0664 root utmp      //指定新建的日志文件权限以及所属用户和组</span><br><span class="line">rotate 1          //只保留一个日志.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个 wtmp 可记录用户登录系统及系统重启的时间.因为有 minsize 的参数，因此不见得每个月一定会执行一次,要看文件大小。</p><p>由这个文件的设定可以知道&#x2F;etc&#x2F;logrotate.d其实就是由&#x2F;etc&#x2F;logrotate.conf 所规划出来的目录，虽然可以将所有的配置都写入 &#x2F;etc&#x2F;logrotate.conf ，但是这样一来这个文件就实在是太复杂了，尤其是当使用很多的服务在系统上面时， 每个服务都要去修改 &#x2F;etc&#x2F;logrotate.conf 的设定也似乎不太合理了。</p><p>所以，如果独立出来一个目录，那么每个要切割日志的服务， 就可以独自成为一个文件，并且放置到 &#x2F;etc&#x2F;logrotate.d&#x2F; 当中。</p><p>其他重要参数说明：</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">compress</td><td align="center">通过gzip 压缩转储以后的日志</td></tr><tr><td align="center">nocompress</td><td align="center">不做gzip压缩处理</td></tr><tr><td align="center">copytruncate</td><td align="center">用于还在打开中的日志文件，把当前日志备份并截断；是先拷贝再清空的方式，拷贝和清空之间有一个时间差，可能会丢失部分日志数据。</td></tr><tr><td align="center">nocopytruncate</td><td align="center">备份日志文件不过不截断</td></tr><tr><td align="center">create mode owner group</td><td align="center">轮转时指定创建新文件的属性，如create 0777 nobody nobody</td></tr><tr><td align="center">nocreate</td><td align="center">不建立新的日志文件</td></tr><tr><td align="center">delaycompress</td><td align="center">和compress 一起使用时，转储的日志文件到下一次转储时才压缩</td></tr><tr><td align="center">nodelaycompress</td><td align="center">覆盖 delaycompress 选项，转储同时压缩。</td></tr><tr><td align="center">missingok</td><td align="center">如果日志丢失，不报错继续滚动下一个日志</td></tr><tr><td align="center">errors address</td><td align="center">转储时的错误信息发送到指定的Email 地址</td></tr><tr><td align="center">ifempty</td><td align="center">即使日志文件为空文件也做轮转，这个是logrotate的缺省选项。</td></tr><tr><td align="center">notifempty</td><td align="center">当日志文件为空时，不进行轮转</td></tr><tr><td align="center">mail address</td><td align="center">把转储的日志文件发送到指定的E-mail 地址</td></tr><tr><td align="center">nomail</td><td align="center">转储时不发送日志文件</td></tr><tr><td align="center">olddir directory</td><td align="center">转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</td></tr><tr><td align="center">noolddir</td><td align="center">转储后的日志文件和当前日志文件放在同一个目录下</td></tr><tr><td align="center">sharedscripts</td><td align="center">运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本</td></tr><tr><td align="center">prerotate</td><td align="center">在logrotate转储之前需要执行的指令，例如修改文件的属性等动作；必须独立成行</td></tr><tr><td align="center">postrotate</td><td align="center">在logrotate转储之后需要执行的指令，例如重新启动 (kill -HUP) 某个服务！必须独立成行</td></tr><tr><td align="center">daily</td><td align="center">指定转储周期为每天</td></tr><tr><td align="center">weekly</td><td align="center">指定转储周期为每周</td></tr><tr><td align="center">monthly</td><td align="center">指定转储周期为每月</td></tr><tr><td align="center">rotate count</td><td align="center">指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份</td></tr><tr><td align="center">dateext</td><td align="center">使用当期日期作为命名格式</td></tr><tr><td align="center">dateformat .%s</td><td align="center">配合dateext使用，紧跟在下一行出现，定义文件切割后的文件名，必须配合dateext使用，只支持 %Y %m %d %s 这四个参数</td></tr><tr><td align="center">size(或minsize) log-size</td><td align="center">当日志文件到达指定的大小时才转储，log-size能指定bytes(缺省)及KB (sizek)或MB(sizem).</td></tr><tr><td align="center"></td><td align="center">当日志文件 &gt;&#x3D; log-size 的时候就转储。 以下为合法格式：（其他格式的单位大小写没有试过） size &#x3D; 5 或 size 5 （&gt;&#x3D; 5 个字节就转储） size &#x3D; 100k 或 size 100k size &#x3D; 100M 或 size 100M</td></tr></tbody></table><h3 id="切割nginx日志的配置"><a href="#切割nginx日志的配置" class="headerlink" title="切割nginx日志的配置"></a>切割nginx日志的配置</h3><p>[root@localhost ~]# vim &#x2F;etc&#x2F;logrotate.d&#x2F;nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/logs/*.log &#123;</span><br><span class="line">daily</span><br><span class="line">rotate 7</span><br><span class="line">missingok</span><br><span class="line">notifempty</span><br><span class="line">dateext</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">if [ -f /usr/local/nginx/logs/nginx.pid ]; then</span><br><span class="line">kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`</span><br><span class="line">fi</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于-USR1-信号解释"><a href="#关于-USR1-信号解释" class="headerlink" title="关于 USR1 信号解释"></a>关于 USR1 信号解释</h2><p>USR1 通常被用来告知应用程序重载配置文件；例如，向 Apache HTTP 服务器发送一个 USR1 信号将导致以下步骤的发生：停止接受新的连接，等待当前连接停止，重新载入配置文件，重新打开日志文件，重启服务器，从而实现相对平滑的不关机的更改。</p><p>对于 USR1 和 2 都可以用户自定义的，在 POSIX 兼容的平台上，SIGUSR1 和 SIGUSR2 是发送给一个进程的信号，它表示了用户定义的情况。它们的符号常量在头文件 signal.h 中定义。在不同的平台上，信号的编号可能发生变化，因此需要使用符号名称。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -HUP pid</span><br><span class="line">killall -HUP pName</span><br></pre></td></tr></table></figure><p>其中 pid 是进程标识，pName 是进程的名称。</p><p>如果想要更改配置而不需停止并重新启动服务，可以使用上面两个命令。在对配置文件作必要的更改后，发出该命令以动态更新服务配置。根据约定，当你发送一个挂起信号 (信号 1 或 HUP) 时，大多数服务器进程 (所有常用的进程) 都会进行复位操作并重新加载它们的配置文件。</p><h3 id="分享一例曾经使用过的nginx日志切割处理脚本："><a href="#分享一例曾经使用过的nginx日志切割处理脚本：" class="headerlink" title="分享一例曾经使用过的nginx日志切割处理脚本："></a><strong>分享一例曾经使用过的nginx日志切割处理脚本：</strong></h3><h4 id="logrotate日志分割配置"><a href="#logrotate日志分割配置" class="headerlink" title="logrotate日志分割配置"></a><strong>logrotate日志分割配置</strong></h4><p>[root@localhost ~# vim &#x2F;etc&#x2F;logrotate.d&#x2F;nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/data/nginx_logs/*.access_log</span><br><span class="line">&#123;</span><br><span class="line">nocompress                  </span><br><span class="line">daily                 </span><br><span class="line">copytruncate                 </span><br><span class="line">create               </span><br><span class="line">ifempty                  </span><br><span class="line">olddir /data/nginx_logs/days      </span><br><span class="line">rotate 0                    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="日志分割脚本"><a href="#日志分割脚本" class="headerlink" title="日志分割脚本"></a><strong>日志分割脚本</strong></h4><p>[root@localhost ~# vim &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;logrotate-nginx.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">创建转储日志压缩存放目录</span></span><br><span class="line">mkdir -p /data/nginx_logs/days</span><br><span class="line"><span class="meta">#</span><span class="language-bash">手工对nginx日志进行切割转换</span></span><br><span class="line">/usr/sbin/logrotate -vf /etc/logrotate.d/nginx</span><br><span class="line"><span class="meta">#</span><span class="language-bash">当前时间</span></span><br><span class="line">time=$(date -d &quot;yesterday&quot; +&quot;%Y-%m-%d&quot;)</span><br><span class="line"><span class="meta">#</span><span class="language-bash">进入转储日志存放目录</span></span><br><span class="line">cd /data/nginx_logs/days</span><br><span class="line"><span class="meta">#</span><span class="language-bash">对目录中的转储日志文件的文件名进行统一转换</span></span><br><span class="line">for i in $(ls ./ | grep &quot;^\(.*\)\.[[:digit:]]$&quot;)</span><br><span class="line">do</span><br><span class="line">mv $&#123;i&#125; ./$(echo $&#123;i&#125;|sed -n &#x27;s/^\(.*\)\.\([[:digit:]]\)$/\1/p&#x27;)-$(echo $time)</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="language-bash">对转储的日志文件进行压缩存放，并删除原有转储的日志文件，只保存压缩后的日志文件。以节约存储空间</span></span><br><span class="line">for i in $(ls ./ | grep &quot;^\(.*\)\-\([[:digit:]-]\+\)$&quot;)</span><br><span class="line">do</span><br><span class="line">tar jcvf $&#123;i&#125;.bz2 ./$&#123;i&#125;</span><br><span class="line">rm -rf ./$&#123;i&#125;</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="language-bash">只保留最近7天的压缩转储日志文件</span></span><br><span class="line">find /data/nginx_logs/days/* -name &quot;*.bz2&quot; -mtime 7 -type f -exec rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="crontab定时执行"><a href="#crontab定时执行" class="headerlink" title="crontab定时执行"></a><strong>crontab定时执行</strong></h4><p>[root@localhost ~# crontab -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">logrotate</span></span><br><span class="line"></span><br><span class="line">0 0 * * * /bin/bash -x /usr/local/sbin/logrotate-nginx.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><strong>手动执行脚本，测试下看看：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~# /bin/bash -x /usr/local/sbin/logrotate-nginx.sh</span><br><span class="line"></span><br><span class="line">[root@localhost ~# cd /data/nginx_logs/days</span><br><span class="line"></span><br><span class="line">[root@localhost days# ls</span><br><span class="line"></span><br><span class="line">huantest.access_log-2017-01-18.bz2</span><br></pre></td></tr></table></figure><h4 id="php脚本切割"><a href="#php脚本切割" class="headerlink" title="php脚本切割"></a><strong>php脚本切割</strong></h4><p>[root@localhost ~]# cat &#x2F;etc&#x2F;logrotate.d&#x2F;php</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/Data/logs/php/*log &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 365</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    compress</span><br><span class="line">    dateext</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">        if [ -f /Data/app/php5.6.26/var/run/php-fpm.pid ]; then</span><br><span class="line">            kill -USR1 `cat /Data/app/php5.6.26/var/run/php-fpm.pid`</span><br><span class="line">        fi</span><br><span class="line">    endscript</span><br><span class="line">    postrotate</span><br><span class="line">        /bin/chmod 644 /Data/logs/php/*gz</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /Data/app/php5.6.26/var/run/php-fpm.pid</span><br><span class="line">-rw-r--r-- 1 root root 4 Dec 28 17:03 /Data/app/php5.6.26/var/run/php-fpm.pid</span><br><span class="line">[root@localhost ~]# cd /Data/logs/php</span><br><span class="line"></span><br><span class="line">[root@localhost php]# ll</span><br><span class="line"></span><br><span class="line">total 25676</span><br><span class="line"></span><br><span class="line">-rw-r--r-- 1 root  root     0 Jun 1 2016 error.log</span><br><span class="line">-rw-r--r-- 1 nobody nobody   182 Aug 30 2015 error.log-20150830.gz</span><br><span class="line">-rw-r--r-- 1 nobody nobody   371 Sep 1 2015 error.log-20150901.gz</span><br><span class="line">-rw-r--r-- 1 nobody nobody   315 Sep 7 2015 error.log-20150907.gz</span><br></pre></td></tr></table></figure><h4 id="nginx日志切割一例"><a href="#nginx日志切割一例" class="headerlink" title="nginx日志切割一例"></a><strong>nginx日志切割一例</strong></h4><p>[root@localhost ~]# cat &#x2F;etc&#x2F;logrotate.d&#x2F;nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/Data/logs/nginx/*/*log &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 365</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    compress</span><br><span class="line">    dateext</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">    /etc/init.d/nginx reload</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /Data/logs/nginx/www.huanqiu.com/</span><br><span class="line">..........</span><br><span class="line">-rw-r--r-- 1 root root      1652 Jan  1 00:00 error.log-20170101.gz</span><br><span class="line">-rw-r--r-- 1 root root      1289 Jan  2 00:00 error.log-20170102.gz</span><br><span class="line">-rw-r--r-- 1 root root      1633 Jan  3 00:00 error.log-20170103.gz</span><br><span class="line">-rw-r--r-- 1 root root      3239 Jan  4 00:00 error.log-20170104.gz</span><br></pre></td></tr></table></figure><h4 id="系统日志切割一例"><a href="#系统日志切割一例" class="headerlink" title="系统日志切割一例"></a><strong>系统日志切割一例</strong></h4><p>[root@localhost ~]# cat &#x2F;etc&#x2F;logrotate.d&#x2F;syslog</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/var/log/cron</span><br><span class="line">/var/log/maillog</span><br><span class="line">/var/log/messages</span><br><span class="line">/var/log/secure</span><br><span class="line">/var/log/spooler</span><br><span class="line">&#123;</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">    /bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` 2&gt; /dev/null || true</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /var/log/messages*</span><br><span class="line">-rw------- 1 root root 34248975 Jan 19 18:42 /var/log/messages</span><br><span class="line">-rw------- 1 root root 51772994 Dec 25 03:11 /var/log/messages-20161225</span><br><span class="line">-rw------- 1 root root 51800210 Jan  1 03:05 /var/log/messages-20170101</span><br><span class="line">-rw------- 1 root root 51981366 Jan  8 03:36 /var/log/messages-20170108</span><br><span class="line">-rw------- 1 root root 51843025 Jan 15 03:40 /var/log/messages-20170115</span><br><span class="line">[root@localhost ~]# ll /var/log/cron*</span><br><span class="line">-rw------- 1 root root 2155681 Jan 19 18:43 /var/log/cron</span><br><span class="line">-rw------- 1 root root 2932618 Dec 25 03:11 /var/log/cron-20161225</span><br><span class="line">-rw------- 1 root root 2939305 Jan  1 03:06 /var/log/cron-20170101</span><br><span class="line">-rw------- 1 root root 2951820 Jan  8 03:37 /var/log/cron-20170108</span><br><span class="line">-rw------- 1 root root 3203992 Jan 15 03:41 /var/log/cron-20170115</span><br><span class="line">[root@localhost ~]# ll /var/log/secure*</span><br><span class="line">-rw------- 1 root root  275343 Jan 19 18:36 /var/log/secure</span><br><span class="line">-rw------- 1 root root 2111936 Dec 25 03:06 /var/log/secure-20161225</span><br><span class="line">-rw------- 1 root root 2772744 Jan  1 02:57 /var/log/secure-20170101</span><br><span class="line">-rw------- 1 root root 1115543 Jan  8 03:26 /var/log/secure-20170108</span><br><span class="line">-rw------- 1 root root  731599 Jan 15 03:40 /var/log/secure-20170115</span><br><span class="line">[root@localhost ~]# ll /var/log/spooler*</span><br><span class="line">-rw------- 1 root root 0 Jan 15 03:41 /var/log/spooler</span><br><span class="line">-rw------- 1 root root 0 Dec 18 03:21 /var/log/spooler-20161225</span><br><span class="line">-rw------- 1 root root 0 Dec 25 03:11 /var/log/spooler-20170101</span><br><span class="line">-rw------- 1 root root 0 Jan  1 03:06 /var/log/spooler-20170108</span><br><span class="line">-rw------- 1 root root 0 Jan  8 03:37 /var/log/spooler-20170115</span><br></pre></td></tr></table></figure><h4 id="tomcat日志切割一例"><a href="#tomcat日志切割一例" class="headerlink" title="tomcat日志切割一例"></a><strong>tomcat日志切割一例</strong></h4><p>[root@localhost ~]# cat &#x2F;etc&#x2F;logrotate.d&#x2F;tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/Data/app/tomcat-7-huanqiu/logs/catalina.out &#123;</span><br><span class="line">rotate 14</span><br><span class="line">daily</span><br><span class="line">copytruncate</span><br><span class="line">compress</span><br><span class="line">notifempty</span><br><span class="line">missingok</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /Data/app/tomcat-7-huanqiu/logs/catalina.*</span><br><span class="line">-rw-r--r--. 1 root root     0 Jan 19 19:11 /Data/app/tomcat-7-huanqiu/logs/catalina.out</span><br><span class="line">-rw-r--r--. 1 root root 95668 Jan 19 19:11 /Data/app/tomcat-7-huanqiu/logs/catalina.out.1.gz</span><br></pre></td></tr></table></figure><h4 id="早期用过的nginx日志处理一例"><a href="#早期用过的nginx日志处理一例" class="headerlink" title="早期用过的nginx日志处理一例"></a><strong>早期用过的nginx日志处理一例</strong></h4><p>[root@localhost ~]# vim &#x2F;letv&#x2F;sh&#x2F;cut_nginx_log.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">你的日志文件存放目录</span></span><br><span class="line">logs_path=&quot;/letv/logs/&quot;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">日志文件的名字，多个需要空格隔开</span></span><br><span class="line">logs_names=(error access pv_access)</span><br><span class="line">dates=`date -d &quot;yesterday&quot; +&quot;%Y%m%d&quot;`</span><br><span class="line">mkdir -p $&#123;logs_path&#125;$dates/</span><br><span class="line">num=$&#123;#logs_names[@]&#125;</span><br><span class="line">for((i=0;i&lt;num;i++));do</span><br><span class="line">mv $&#123;logs_path&#125;$&#123;logs_names[i]&#125;.log $&#123;logs_path&#125;$dates/$&#123;logs_names[i]&#125;.log</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="language-bash">nginx平滑重启</span></span><br><span class="line">kill -USR1 `cat /letv/logs/nginx/nginx.pid` </span><br></pre></td></tr></table></figure><p>结合crontab定时执行</p><p>[root@localhost ~]# crontab -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">nginx日志切割</span></span><br><span class="line">00 00 * * * cd /letv/logs;/bin/bash /letv/sh/cut_nginx_log.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h3 id="尝试解决logrotate无法自动轮询日志的办法"><a href="#尝试解决logrotate无法自动轮询日志的办法" class="headerlink" title="尝试解决logrotate无法自动轮询日志的办法"></a><strong>尝试解决logrotate无法自动轮询日志的办法</strong></h3><p>现象说明：</p><p>使用logrotate轮询nginx日志，配置好之后，发现nginx日志连续两天没被切割，这是为什么呢？？</p><p>然后开始检查日志切割的配置文件是否有问题，检查后确定配置文件一切正常。</p><p>于是怀疑是logrotate预定的cron没执行，查看了cron的日志，发现有一条Dec 7 04:02:01 www crond[18959]: (root) CMD (run-parts &#x2F;etc&#x2F;cron.daily)这样的日志，证明cron在04:02分时已经执行&#x2F;etc&#x2F;cron.daily目录下的程序。</p><p>接着查看&#x2F;etc &#x2F;cron.daily&#x2F;logrotate（这是logrotate自动轮转的脚本）的内容：</p><p>[root@localhost~]# cat &#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">/usr/sbin/logrotate /etc/logrotate.conf &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>没有发现异常，配置好的日志轮转操作都是由这个脚本完成的，一切运行正常，脚本应该就没问题。</p><p>直接执行命令：</p><p>[root@localhost ~]# &#x2F;usr&#x2F;sbin&#x2F;logrotate &#x2F;etc&#x2F;logrotate.conf</p><p>这些系统日志是正常轮询了，但nginx日志却还是没轮询。接着强行启动记录文件维护操作，纵使logrotate指令认为没有需要，应该有可能是logroate认为nginx日志太小，不进行轮询。</p><p>故需要强制轮询，即在&#x2F;etc&#x2F;cron.daily&#x2F;logrotate脚本中将 -t 参数替换成 -f 参数</p><p>[root@localhost ~]# cat &#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">/usr/sbin/logrotate /etc/logrotate.conf &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">/usr/bin/logger -f logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit </span><br></pre></td></tr></table></figure><p>最后重启下cron服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /etc/init.d/crond restart</span><br><span class="line"></span><br><span class="line">Stopping crond: [ OK ]</span><br><span class="line">Starting crond: [ OK ]</span><br></pre></td></tr></table></figure><p><strong>logrotate默认自动切割生效时间</strong></p><p>Logrotate是基于CRON来运行的，其脚本是&#x2F;etc&#x2F;cron.daily&#x2F;logrotate，实际运行时，Logrotate会调用配置文件&#x2F;etc&#x2F;logrotate.conf。</p><p>[root@test ~]# cat &#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">/usr/sbin/logrotate /etc/logrotate.conf</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>时间是由CRON控制的，具体可以查询CRON的配置文件&#x2F;etc&#x2F;anacrontab（老版本的文件是&#x2F;etc&#x2F;crontab）</p><p>[root@test ~]# cat &#x2F;etc&#x2F;anacrontab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">/etc/anacrontab: configuration file <span class="keyword">for</span> anacron</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">See anacron(8) and anacrontab(5) <span class="keyword">for</span> details.</span></span><br><span class="line"></span><br><span class="line">SHELL=/bin/sh</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"><span class="meta"># </span><span class="language-bash">the maximal random delay added to the base delay of the <span class="built_in">jobs</span></span></span><br><span class="line">RANDOM_DELAY=45                                                                  //这个是随机的延迟时间，表示最大45分钟</span><br><span class="line"><span class="meta"># </span><span class="language-bash">the <span class="built_in">jobs</span> will be started during the following hours only</span></span><br><span class="line">START_HOURS_RANGE=3-22                                                           //这个是开始时间</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">period <span class="keyword">in</span> days   delay <span class="keyword">in</span> minutes   job-identifier   <span class="built_in">command</span></span></span><br><span class="line">1 5 cron.daily    nice run-parts /etc/cron.daily</span><br><span class="line">7 25  cron.weekly   nice run-parts /etc/cron.weekly</span><br><span class="line">@monthly 45 cron.monthly    nice run-parts /etc/cron.monthly</span><br></pre></td></tr></table></figure><p>第一个是Recurrence period</p><p>第二个是延迟时间</p><p>所以cron.daily会在3:22+(5,45)这个时间段执行，&#x2F;etc&#x2F;cron.daily是个文件夹.</p><p>通过默认&#x2F;etc&#x2F;anacrontab文件配置，会发现logrotate自动切割日志文件的默认时间是凌晨3点多。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>现在需要将切割时间调整到每天的晚上12点，即每天切割的日志是前一天的0-24点之间的内容。</p><p>操作如下：</p><p>[root@localhost ~]# mv &#x2F;etc&#x2F;anacrontab &#x2F;etc&#x2F;anacrontab.bak     &#x2F;&#x2F;取消日志自动轮转的设置</p><p>[root@localhost logrotate.d]# cat nstc_nohup.out</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/data/nstc/nohup.out &#123;</span><br><span class="line">rotate 30</span><br><span class="line">dateext</span><br><span class="line">daily</span><br><span class="line">copytruncate</span><br><span class="line">compress</span><br><span class="line">notifempty</span><br><span class="line">missingok</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[root@localhost logrotate.d]# cat syslog</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/var/log/cron</span><br><span class="line">/var/log/maillog</span><br><span class="line">/var/log/messages</span><br><span class="line">/var/log/secure</span><br><span class="line">/var/log/history</span><br><span class="line">&#123;</span><br><span class="line">    sharedscripts</span><br><span class="line">    compress</span><br><span class="line">    rotate 30</span><br><span class="line">    daily</span><br><span class="line">    dateext</span><br><span class="line">    postrotate</span><br><span class="line">    /bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` 2&gt; /dev/null || true</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结合crontab进行自定义的定时轮转操作</p><p>[root@localhost ~]# crontab -l</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#log logrotate</span><br><span class="line">59 23 * * * /usr/sbin/logrotate -f /etc/logrotate.d/syslog &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">59 23 * * * /usr/sbin/logrotate -f /etc/logrotate.d/nstc_nohup.out &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /data/nstc/nohup.out*</span><br><span class="line">-rw------- 1 app app 33218 1月  25 09:43 /data/nstc/nohup.out</span><br><span class="line">-rw------- 1 app app 67678 1月  25 23:59 /data/nstc/nohup.out-20180125.gz</span><br></pre></td></tr></table></figure><p>除了利用自带的Logrotate工具实现日志切割之外，还可以编写python脚本或shell脚本以实现日志切割。下面就简单列出几个实例说明下：</p><h3 id="其他工具实现日志切割"><a href="#其他工具实现日志切割" class="headerlink" title="其他工具实现日志切割"></a>其他工具实现日志切割</h3><h4 id="Python脚本实现日志切割"><a href="#Python脚本实现日志切割" class="headerlink" title="Python脚本实现日志切割"></a><strong>Python脚本实现日志切割</strong></h4><p>实例1：对jumpserver日志进行切割</p><p>[root@localhost mnt]# cat log_rotate.py</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/usr/bin/env python</span></span><br><span class="line">import datetime,os,sys,shutil</span><br><span class="line">log_path = &#x27;/opt/jumpserver/logs/&#x27;</span><br><span class="line">log_file = &#x27;jumpserver.log&#x27;</span><br><span class="line">yesterday = (datetime.datetime.now() - datetime.timedelta(days = 1))</span><br><span class="line">try:</span><br><span class="line">    os.makedirs(log_path + yesterday.strftime(&#x27;%Y&#x27;) + os.sep + \</span><br><span class="line">                yesterday.strftime(&#x27;%m&#x27;))</span><br><span class="line">except OSError,e:</span><br><span class="line">    print</span><br><span class="line">    print e</span><br><span class="line">    sys.exit()</span><br><span class="line">shutil.move(log_path + log_file,log_path \</span><br><span class="line">            + yesterday.strftime(&#x27;%Y&#x27;) + os.sep \</span><br><span class="line">            + yesterday.strftime(&#x27;%m&#x27;) + os.sep \</span><br><span class="line">            + log_file + &#x27;_&#x27; + yesterday.strftime(&#x27;%Y%m%d&#x27;) + &#x27;.log&#x27;)</span><br><span class="line">os.popen(&quot;sudo /opt/jumpserver/service.sh restart&quot;)</span><br></pre></td></tr></table></figure><p>手动执行这个脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]# chmod 755 log_rotate.py</span><br><span class="line">[root@localhost mnt]# python log_rotate.py</span><br></pre></td></tr></table></figure><p>查看日志切割后的效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]# ls /opt/jumpserver/logs/</span><br><span class="line">2017  jumpserver.log </span><br><span class="line">[root@localhost mnt]# ls /opt/jumpserver/logs/2017/</span><br><span class="line">09</span><br><span class="line">[root@localhost mnt]# ls /opt/jumpserver/logs/2017/09/</span><br><span class="line">jumpserver.log_20170916.log</span><br></pre></td></tr></table></figure><p>然后做每日的定时切割任务：</p><p>[root@localhost mnt]# crontab -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 1 * * * /usr/bin/python /mnt/log_rotate.py &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>实例2:对nginx日志进行切割</p><p>[root@localhost mnt]# vim log_rotate.py</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/usr/bin/env python</span></span><br><span class="line">import datetime,os,sys,shutil</span><br><span class="line">log_path = &#x27;/app/nginx/logs/&#x27;</span><br><span class="line">log_file = &#x27;www_access.log&#x27;</span><br><span class="line">yesterday = (datetime.datetime.now() - datetime.timedelta(days = 1))</span><br><span class="line">try:</span><br><span class="line">    os.makedirs(log_path + yesterday.strftime(&#x27;%Y&#x27;) + os.sep + \</span><br><span class="line">                yesterday.strftime(&#x27;%m&#x27;))</span><br><span class="line">except OSError,e:</span><br><span class="line">    print</span><br><span class="line">    print e</span><br><span class="line">    sys.exit()</span><br><span class="line">shutil.move(log_path + log_file,log_path \</span><br><span class="line">            + yesterday.strftime(&#x27;%Y&#x27;) + os.sep \</span><br><span class="line">            + yesterday.strftime(&#x27;%m&#x27;) + os.sep \</span><br><span class="line">            + log_file + &#x27;_&#x27; + yesterday.strftime(&#x27;%Y%m%d&#x27;) + &#x27;.log&#x27;)</span><br><span class="line">os.popen(&quot;sudo kill -USR1 `cat /app/nginx/logs/nginx.pid`&quot;)</span><br></pre></td></tr></table></figure><h4 id="shell脚本实现日志切割"><a href="#shell脚本实现日志切割" class="headerlink" title="shell脚本实现日志切割"></a><strong>shell脚本实现日志切割</strong></h4><p>[root@localhost ~]# cat &#x2F;app&#x2F;script&#x2F;log_rotate.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">function rotate() &#123;</span><br><span class="line">logs_path=$1</span><br><span class="line">echo Rotating Log: $1</span><br><span class="line">cp $&#123;logs_path&#125; $&#123;logs_path&#125;.$(date -d &quot;yesterday&quot; +&quot;%Y%m%d&quot;)</span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash"><span class="variable">$&#123;logs_path&#125;</span></span></span><br><span class="line">    rm -f $&#123;logs_path&#125;.$(date -d &quot;7 days ago&quot; +&quot;%Y%m%d&quot;)</span><br><span class="line">&#125;</span><br><span class="line">for i in $*</span><br><span class="line">do</span><br><span class="line">        rotate $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>每天定时切割日志的任务制定（比如对python的一个业务&#x2F;data&#x2F;log&#x2F;xcspam&#x2F;下的日志进行切割，0K的日志不进行切割）：</p><p>[root@localhost ~]# crontab -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">xcspam 日志切割</span></span><br><span class="line">30 0 * * * find /data/log/xcspam/ -size +0 -name &#x27;*.log&#x27; | xargs /app/script/log_rotate.sh</span><br></pre></td></tr></table></figure><p>手动执行切割：</p><p>[root@localhost ~]# find &#x2F;data&#x2F;log&#x2F;xcspam&#x2F; -size +0 -name ‘*.log’ | xargs &#x2F;app&#x2F;script&#x2F;log_rotate.sh</p><p>切割后的日志效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@qd-vpc-op-consumer01 ~]# ls /data/log/xcspam/</span><br><span class="line">xcspam_error.log xcspam_error.log-20170926</span><br></pre></td></tr></table></figure><p>比如对maridb日志进行切割</p><p>[root@localhost ~]# crontab -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">xcspam 日志切割</span></span><br><span class="line">30 0 * * * find /var/log/mariadb/ -size +0 -name &#x27;*.log&#x27; | xargs /app/script/log_rotate.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# find /var/log/mariadb/ -size +0 -name &#x27;*.log&#x27; | xargs /app/script/log_rotate.sh</span><br><span class="line">[root@localhost ~]# ll /var/log/mariadb/</span><br><span class="line">总用量 8</span><br><span class="line">-rw-r-----. 1 mysql mysql    0 9月  17 20:31 mariadb.log</span><br><span class="line">-rw-r-----. 1 root  root  4532 9月  17 20:31 mariadb.log.20170916</span><br></pre></td></tr></table></figure><p>日志压缩脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls /var/log/fss/nginx/</span><br><span class="line"></span><br><span class="line">nginx.20190506.log nginx.20190507.log nginx.20190508.log</span><br></pre></td></tr></table></figure><p>[root@localhost ~]# cat &#x2F;root&#x2F;log_clean.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/usr/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">根据系统/服务/日志保留天数三个参数压缩日志</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">usage: sh clearlog.sh sysname appname keepdays</span></span><br><span class="line">sysName=$1</span><br><span class="line">appName=$2</span><br><span class="line">keepDay=$3</span><br><span class="line">logDir=/var/log/$&#123;sysName&#125;/$&#123;appName&#125;</span><br><span class="line">logFile=$&#123;appName&#125;.*[0-9][0-9].log</span><br><span class="line">cd $&#123;logDir&#125;</span><br><span class="line">find ./ -name &quot;$&#123;logFile&#125;&quot; -mtime -$&#123;keepDay&#125; -exec gzip &#123;&#125; \;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# sh /root/log_clean.sh fss nginx 3</span><br><span class="line">[root@localhost ~]# ls /var/log/fss/nginx/</span><br><span class="line">nginx.20190506.log.gz  nginx.20190507.log.gz  nginx.20190508.log.gz</span><br></pre></td></tr></table></figure><p>还可以针对日志保留策略，调整成日志清理脚本。</p><p>推荐用的Nginx日志轮转方法   [部署在nginx的日志目录下]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">yesterday=`date -d &quot;-1 days&quot; +&#x27;%Y%m%d&#x27;`</span><br><span class="line">cd `dirname $0`</span><br><span class="line">basedir=`pwd`</span><br><span class="line">logdir=&quot;$&#123;basedir&#125;/bak&quot;</span><br><span class="line">bindir=&quot;$&#123;basedir%/*&#125;/sbin&quot;</span><br><span class="line">mkdir -p $&#123;logdir&#125;</span><br><span class="line">for log in `ls *.log 2&gt;/dev/null`</span><br><span class="line">do</span><br><span class="line">    mv $&#123;log&#125; $&#123;logdir&#125;/$&#123;log&#125;.$&#123;yesterday&#125;.bak</span><br><span class="line">    # gzip $&#123;logdir&#125;/$&#123;log&#125;.$&#123;yesterday&#125;</span><br><span class="line">done</span><br><span class="line"><span class="meta">$</span><span class="language-bash">&#123;bindir&#125;/nginx -s reload</span></span><br><span class="line">cd $&#123;logdir&#125;</span><br><span class="line">find . -type f -name &quot;*.bak&quot; -mtime +7 | xargs rm -f</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux 日志分割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows结束进程</title>
      <link href="/2022/02/06/windows%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B/"/>
      <url>/2022/02/06/windows%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="所有的端口使用情况"><a href="#所有的端口使用情况" class="headerlink" title="所有的端口使用情况"></a>所有的端口使用情况</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><h2 id="查看占用端口应用"><a href="#查看占用端口应用" class="headerlink" title="查看占用端口应用"></a>查看占用端口应用</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr <span class="string">&quot;端口号&quot;</span></span><br></pre></td></tr></table></figure><h2 id="通过id查找对应的进程名称"><a href="#通过id查找对应的进程名称" class="headerlink" title="通过id查找对应的进程名称"></a>通过id查找对应的进程名称</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tasklist | findstr <span class="string">&quot;进程id号&quot;</span> <span class="comment">#列出进程名称</span></span><br><span class="line">taskkill /f /t /im <span class="string">&quot;进程id或者进程名称&quot;</span> <span class="comment">#结束进程</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows结束进程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo文章发布和删除</title>
      <link href="/2022/02/06/hexo%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%92%8C%E5%88%A0%E9%99%A4/"/>
      <url>/2022/02/06/hexo%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%92%8C%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><ol><li><p>进入博客目录，在 &#x2F;source&#x2F;_posts 文件夹下直接建立一个.md文件</p><blockquote><p>hexo new “这里填入文章的标题”</p></blockquote></li><li><p>.md文件注意使用带有makedown语法的编辑器打开，对文章进行编辑，你可以在Hexo-&gt;Source-&gt;_post目录下看到你新创建的那个文章，还有一个配套的文件夹，里面放这边博文的图片资源</p><p> <strong>文章标题，日期，标签，分类</strong></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">layout: title</span><br><span class="line">title: hexo文章发布和删除</span><br><span class="line">date: 2022-02-06 17:42:04</span><br><span class="line">tags: 标签</span><br><span class="line">categories: 分类</span><br></pre></td></tr></table></figure></li><li><p>文章插入图片使用<strong>jsdelivr</strong>进行cdn加速使图片访问更快。</p><p> 图片格式：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Smithkenny/Myimage/img/zsh插件.png&quot;  /&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="发布新建文章"><a href="#发布新建文章" class="headerlink" title="发布新建文章"></a>发布新建文章</h3><p>文章写好后，直接在git bash中执行以下命令即可直接发布文章</p><blockquote><p>hexo d -g</p></blockquote><p>如果发布的时候出现错误</p><blockquote><p>ERROR Deployer not found: git</p></blockquote><p>执行</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p>或者直接使用git推送到远程仓库中,等待github action 自动部署网站。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m &quot;说明&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h3><p>删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><p>首先进入到source &#x2F; _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行</p><blockquote><p>hexo d -g</p></blockquote><p>再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo文章发布和删除 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2搭建全过程</title>
      <link href="/2022/02/05/wsl2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
      <url>/2022/02/05/wsl2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-WSL"><a href="#什么是-WSL" class="headerlink" title="什么是 WSL"></a>什么是 WSL</h2><p>WSL 的全称叫做：Windows Subsystem for Linux，即「适用于 Linux 的 Windows 子系统」。WSL 的诞生让 Windows 用户（开发人员）按原样运行 GNU&#x2F;Linux 环境 —— 包括大多数命令行工具、实用工具和应用程序 —— 且不会产生虚拟机开销。</p><h2 id="用-WSL-可以做什么？"><a href="#用-WSL-可以做什么？" class="headerlink" title="用 WSL 可以做什么？"></a>用 WSL 可以做什么？</h2><p>好的，在 Windows 上用 WSL 我们到底能干什么呢？</p><ul><li>你可以在 Windows 上「安装」你喜欢的 GNU&#x2F;Linux 发行版</li><li>你可以直接在 Windows 上运行 <code>grep</code>、<code>awk</code>、<code>sed</code> 等 Linux 原生可执行文件</li><li>你可以在 Windows 上直接使用 Vim、Emacs 等工具，直接使用 Linux 版本的 Javascript&#x2F;Node.js、Ruby、Python、C&#x2F;C++、Rust、Go 等语言进行开发，直接运行 MySQL、Apache 等 Linux 原生应用和服务等</li></ul><p>最为重要的是，利用 WSL 我们可以直接在 <strong>不抛弃 Windows 全部优秀工具的前提下</strong>，<strong>在没有因为虚拟机开销而牺牲太多性能的情况下</strong>，直接运行使用完整的 Linux 系统。</p><h2 id="WSL-2-中采用的新措施"><a href="#WSL-2-中采用的新措施" class="headerlink" title="WSL 2 中采用的新措施"></a>WSL 2 中采用的新措施</h2><ul><li>在 Windows 上实现完整的 Linux 原生系统调用（Full System Call Compatibility）</li><li>用 WSL 执行曾经 1.0 版本无法运行的 Linux 原生程序，比如依赖虚拟化技术的 Docker 容器。</li><li>极大的突破了 WSL 1.0 中出现的 I&#x2F;O 性能瓶颈：WSL 2 中，<code>git clone</code>、<code>npm install</code>、<code>apt update</code>、<code>apt upgrade</code> 等依赖文件系统性能的操作和命令的速度都有显著提高。</li><li>如果你在 WSL 2 中运行 Web 服务器，你会发现映射到 Windows 中的端口并不一样。不过这一不同并无大碍。</li><li>你会发现 WSL 2 中在 Windows 侧和 Linux 侧之间相互移动文件的速度会比 WSL 的 1.0 版本慢。因此，为了尽可能保证我们 WSL 文件系统的存储速度，<strong>我们应该将在 Linux 中使用的文件全部放在 Linux 文件系统下</strong>。</li><li>WSL 2 目前对硬件的支持有限，因此你可能无法直接通过 WSL 2 访问外设。不过，WSL 2 目前已经支持了 GPU 的连接,同时，我们也可以通过一些 hacky 的手段让 WSL 2 能够访问 USB 接口.</li><li>WSL 2 对 VMware 等虚拟机软件也有一些要求，也就是：你无法在运行 WSL 2 的情况下直接运行 VMware 或旧版本的 Virtual Box。这是因为 WSL 2 中的虚拟化技术依赖于 Hyper-V，而 VMware 和 6.0 版本之前的 Virtual Box 都和 Hyper-V 不兼容.</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>只有 Windows 10 才能安装使用 WSL。Windows 7、8 或之前的任何版本都无法使用，请及时将系统版本更新至最新。</p><p>只有 Windows 10 版本 16215 或以后的版本才能够正常运行 WSL。你可以在「Windows 设置 &gt; 系统 &gt; 关于」处找到你的 Windows 10 操作系统版本。</p><p><strong>只有 Windows 10 版本 18362 或 18363 以及以后的版本，或小版本号为 1049 的版本，才能够正常运行 WSL 2</strong>。需要明确，WSL 2 目前只能在 Windows 10 版本 1903、1909 和 2004 中使用（其中 1903 和 1909 仅支持 <strong>x64 系统</strong>），因此你需要将自己的 Windows 系统进行升级至合适的版本，才能使用正确的 Windows 10 版本安装 WSL 2。</p><h3 id="开启「适用于-Linux-的-Windows-子系统」的附加功能"><a href="#开启「适用于-Linux-的-Windows-子系统」的附加功能" class="headerlink" title="开启「适用于 Linux 的 Windows 子系统」的附加功能"></a>开启「适用于 Linux 的 Windows 子系统」的附加功能</h3><p>无论使用 WSL 1 还是 WSL 2，我们都需要开启「适用于 Linux 的 Windows 子系统」的附加功能：</p><ul><li>以管理员身份打开 PowerShell 终端</li><li>运行下面的命令：</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Enable-WindowsOptionalFeature</span> <span class="literal">-Online</span> <span class="literal">-FeatureName</span> Microsoft<span class="literal">-Windows-Subsystem-Linux</span></span><br></pre></td></tr></table></figure><ul><li>按照提示重启电脑</li></ul><h3 id="官方版本-WSL"><a href="#官方版本-WSL" class="headerlink" title="官方版本 WSL"></a>官方版本 WSL</h3><p>微软官方支持的 WSL Linux 发行版可以直接从微软商店下载。</p><p>官方支持的 Linux 发行版有：</p><ul><li>Ubuntu: <a href="https://www.microsoft.com/store/productId/9NBLGGH4MSV6">最新版</a>，<a href="https://www.microsoft.com/store/productId/9PJN388HP8C9">16.04 LTS</a>，<a href="https://www.microsoft.com/store/productId/9N9TNGVNDL3Q">18.04 LTS</a>，和 <a href="https://www.microsoft.com/p/ubuntu-2004-lts/9n6svws3rx71">20.04 LTS</a></li><li>OpenSUSE Leap: <a href="https://www.microsoft.com/store/productId/9NJVJTS82TJX">42</a>, <a href="https://www.microsoft.com/store/productId/9N1TB6FPVJ8C">15.0</a></li><li>SUSE Linux Enterprise Server: <a href="https://www.microsoft.com/store/productId/9P32MWBH6CNS">12</a>, <a href="https://www.microsoft.com/store/productId/9PMW35D7FNLX">15</a></li><li><a href="https://www.microsoft.com/store/productId/9MSVKQC78PK6">Debian GNU&#x2F;Linux</a></li><li><a href="https://www.microsoft.com/store/productId/9PKR34TNCV07">Kali Linux</a></li><li><a href="https://www.microsoft.com/store/productId/9NV1GV1PXZ6P">Pengwin</a> - <a href="https://github.com/WhitewaterFoundry/Pengwin">GitHub | WhitewaterFoundry&#x2F;Pengwin</a>付费</li><li><a href="https://www.microsoft.com/store/productId/9P804CRF0395">Alpine WSL</a> - <a href="https://github.com/agowa338/WSL-DistroLauncher-Alpine">GitHub | agowa338&#x2F;WSL-DistroLauncher-Alpine</a></li><li><a href="https://www.microsoft.com/en-us/p/fedora-remix-for-wsl/9n6gdm4k2hnc">Fedora Remix for WSL</a> - <a href="https://github.com/WhitewaterFoundry/Fedora-Remix-for-WSL">GitHub | WhitewaterFoundry&#x2F;Fedora-Remix-for-WSL</a> 付费</li></ul><h3 id="社区支持的-WSL"><a href="#社区支持的-WSL" class="headerlink" title="社区支持的 WSL"></a>社区支持的 WSL</h3><p>另外也有社区支持的 WSL Linux 发行版，社区支持的第三方 WSL 发行版：</p><ul><li><a href="https://github.com/yuk7/ArchWSL">Arch Linux</a></li><li><a href="https://github.com/yuk7/AlpineWSL">Alpine Linux</a></li></ul><p>第三方支持的发行版需要按照其官方使用说明进行安装。</p><p>下载成功后，我们需要对刚刚这一发行版进行初始化。在开始菜单中，没有意外的话，你应该看到刚刚下载完成的 Ubuntu 快捷方式，我们点击打开 Ubuntu，等待初始化完成即可。（初始化过程会将下载好的 Linux 发行版的文件解压缩，并存储在电脑上供你使用，往往会需要 1 分钟甚至更多。）</p><p>初始化完成之后，Linux 会提示你输入一个 UNIX 用户名并为之设置一个 UNIX 密码。这一用户名和密码与你的 Windows 登录账号密码完全无关，你可以任意设置。完成之后，你的 Ubuntu 发行版就安装成功了。</p><h2 id="WSL-2-的安装"><a href="#WSL-2-的安装" class="headerlink" title="WSL 2 的安装"></a>WSL 2 的安装</h2><p>WSL 2 需要在 WSL 已经安装完毕的基础之上才能进行安装。</p><h3 id="开启支持-WSL-2-的可选组件"><a href="#开启支持-WSL-2-的可选组件" class="headerlink" title="开启支持 WSL 2 的可选组件"></a>开启支持 WSL 2 的可选组件</h3><p>如果你希望安装 WSL 2，你需要确保你已安装「适用于 Linux 的 Windows 子系统」和「虚拟机平台」这两个可选组件。[<a href="https://dowww.spencerwoo.com/1-preparations/1-1-installation.html#fn1">1]</a>同样：</p><ul><li>以管理员身份打开 PowerShell 终端</li><li>运行下面的命令：</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows-Subsystem-Linux</span> /all /norestart</span><br><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure><ul><li>根据提示重启电脑</li></ul><h3 id="使用命令行设置需要由-WSL-2-支持的发行版"><a href="#使用命令行设置需要由-WSL-2-支持的发行版" class="headerlink" title="使用命令行设置需要由 WSL 2 支持的发行版"></a>使用命令行设置需要由 WSL 2 支持的发行版</h3><p>同样，用管理员身份打开 PowerShell 终端：</p><ul><li><p>执行下面命令找到你当前安装的 Linux 发行版及其名字：</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--list</span></span><br></pre></td></tr></table></figure></li><li><p>之后，执行下面的命令将你需要的发行版设置为由 WSL 2 支持，将其中的 <code>&lt;Distro&gt;</code> 修改为 Linux 发行版名称：</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-version</span> &lt;Distro&gt; <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>另外，你也可以通过下面的命令将之后新安装的发行版均设置为默认由 WSL 2 支持：</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-default-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>执行下面的命令，如果发现最后一列的 <code>VERSION</code> 数为 2，说明你的配置是成功的：</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--list</span> <span class="literal">--verbose</span></span><br></pre></td></tr></table></figure></li></ul><p>如果查询到的版本还是1，并且提示当前windows需要升级内核。则使用wsl_update_x64.rar工具升级并重启电脑。再次尝试，直到版本为2.</p><h2 id="安装Fluent-Terminal"><a href="#安装Fluent-Terminal" class="headerlink" title="安装Fluent Terminal"></a>安装Fluent Terminal</h2><p>Fluent Terminal 是目前相对稳定的非 Electron 构建的终端。得益于 UWP 技术，Fluent Terminal 能够同样拥有美丽的亚克力半透明背景，同时也支持 iTerm2 色彩主题。</p><p>安装Fluent Terminal之前先安装Scoop.</p><h3 id="自定义路径安装Scoop"><a href="#自定义路径安装Scoop" class="headerlink" title="自定义路径安装Scoop"></a>自定义路径安装Scoop</h3><p>用管理员运行powershell,创建scoop环境变量.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span>:SCOOP=<span class="string">&#x27;D:\Applications\Scoop&#x27;</span></span><br><span class="line">[Environment]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>,<span class="variable">$env</span>:SCOOP,<span class="string">&#x27;User&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">env</span>:SCOOP_GLOBAL=<span class="string">&#x27;D:\GlobalScoopApps&#x27;</span></span><br><span class="line">[Environment]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_GLOBAL&#x27;</span>,<span class="variable">$env</span>:SCOOP_GLOBAL,<span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure><p>windows环境变量查看方式：</p><p>设置-系统设置-高级系统设置-环境变量</p><p><img src="/img/postimages/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.webp" alt="环境变量"></p><h4 id="安装Scoop-包管理工具"><a href="#安装Scoop-包管理工具" class="headerlink" title="安装Scoop(包管理工具)"></a>安装Scoop(包管理工具)</h4><p><a href="https://scoop.sh/">Scoop官网</a></p><p><a href="https://sspai.com/post/52496">参考</a></p><p>需要设置代理才能安装：</p><p>暂时先用以下方法设置代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">使用下面的命令将当前 session（会话）的代理进行配置：</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://&lt;Windows 主机的 IP 地址&gt;:&lt;代理端口&gt;</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://&lt;Windows 主机的 IP 地址&gt;:&lt;代理端口&gt;</span><br><span class="line">使用下面的命令取消代理：</span><br><span class="line"><span class="built_in">unset</span> http_proxy https_proxy</span><br><span class="line">我们可以使用下面的命令检测自己的对外端口：</span><br><span class="line"><span class="comment"># 一个接口</span></span><br><span class="line">curl ipinfo.io</span><br><span class="line"><span class="comment"># 另一个接口</span></span><br><span class="line">curl cip.cc</span><br></pre></td></tr></table></figure><p>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iex (new-object net.webclient).downloadstring(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">iwr-useb get.scoop.sh|iex</span><br></pre></td></tr></table></figure><p>卸载命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop uninstall scoop</span><br><span class="line">这个卸载，会删除你配置的scoop下面的所有软件，非常危险。</span><br></pre></td></tr></table></figure><p>安装 Scoop 之后，我们在 PowerShell 中执行下面的命令，即可安装 Fluent Terminal：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add nonportable</span><br><span class="line">scoop install fluent-terminal-np</span><br></pre></td></tr></table></figure><h2 id="Shell-环境"><a href="#Shell-环境" class="headerlink" title="Shell 环境"></a>Shell 环境</h2><p>为了加速 Ubuntu 软件包在中国大陆的下载速度，我们将包管理工具 <code>apt</code> 源更换至清华 TUNA 软件源镜像。Ubuntu 的软件源配置文件是 <code>/etc/apt/sources.list</code>。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用 TUNA 的软件源镜像。</p><ul><li><p>备份原文件：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bac</span><br></pre></td></tr></table></figure></li><li><p>在配置文件 <code>/etc/apt/sources.list</code> 最前面添加下面的内容（下面内容为默认 Ubuntu 20.04 LTS 版本的内容）：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预发布软件源，不建议启用</span></span><br><span class="line"><span class="comment"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure></li><li><p>更新缓存：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure></li></ul><p>更多内容请参考：<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">Ubuntu 镜像使用帮助 - 清华大学开源软件镜像站</a></p><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><h3 id="安装、配置"><a href="#安装、配置" class="headerlink" title="安装、配置"></a>安装、配置</h3><p>安装 <code>zsh</code> 并将之设置为默认 Shell：</p><ul><li><p>利用 apt 安装 <code>zsh</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br></pre></td></tr></table></figure></li></ul><p>下载安装 <a href="https://ohmyz.sh/">oh-my-zsh</a>，可能是市面上最好的 <code>zsh</code> 配置管理工具：</p><ul><li><p>运行命令下载安装</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>将 <code>zsh</code> 作为默认的 Shell 环境（如果刚刚安装脚本没有这样做的话）：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br></pre></td></tr></table></figure></li></ul><p>安装zsh时如果报以下错误：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh always asking a password , and get `PAM: Authentication failure`</span><br></pre></td></tr></table></figure><p>解决方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将/etc/pam.d/chsh中</span><br><span class="line">auth       required   pam_shells.so </span><br><span class="line">改成</span><br><span class="line">auth       sufficient   pam_shells.so </span><br></pre></td></tr></table></figure><p>重新进入当前用户并重新安装zsh。</p><h3 id="插件、主题模板推荐"><a href="#插件、主题模板推荐" class="headerlink" title="插件、主题模板推荐"></a>插件、主题模板推荐</h3><p><code>zsh</code> 拥有相当丰富的主题、插件等拓展内容，这里我仅列举一些我常用的配置插件和主题模板：</p><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>在.zshrc中设置</p><p><img src="/img/postimages/zsh%E6%8F%92%E4%BB%B6.webp" alt="zsh插件"></p><ul><li><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a>：为 <code>zsh</code> 提供基于输入历史的自动命令提示</li><li><a href="https://github.com/wting/autojump">autojump</a>：快速跳转不同的目录、路径、文件夹</li><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a>：为 <code>zsh</code> 命令提供色彩高亮</li></ul><p>退出当前登录用户并重新进，如果发现提示插件需要重新安装。则用以下命令安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/wting/autojump ~/.oh-my-zsh/custom/plugins/autojump</span><br></pre></td></tr></table></figure><p>autojump代码仓库克隆后需要进入到autojump 手动安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line"><span class="built_in">cd</span> autojump</span><br><span class="line">./install.py </span><br><span class="line">卸载</span><br><span class="line">./uninstall.py</span><br></pre></td></tr></table></figure><h2 id="安装git进行版本控制"><a href="#安装git进行版本控制" class="headerlink" title="安装git进行版本控制"></a>安装git进行版本控制</h2><p><a href="https://dowww.spencerwoo.com/2-cli/2-3-cli-tools.html#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">参考</a></p><h3 id="使用脚本自动执行代理配置"><a href="#使用脚本自动执行代理配置" class="headerlink" title="使用脚本自动执行代理配置"></a>使用脚本自动执行代理配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">WINDOWS_IP=$(ip route | grep default | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>)</span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;WINDOWS_IP&#125;</span>:7890&quot;</span></span><br><span class="line">PROXY_SOCKS5=<span class="string">&quot;<span class="variable">$&#123;WINDOWS_IP&#125;</span>:7890&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set proxy</span></span><br><span class="line"><span class="function"><span class="title">set_proxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  proxy_git</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Unset proxy</span></span><br><span class="line"><span class="function"><span class="title">unset_proxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set alias</span></span><br><span class="line"><span class="built_in">alias</span> proxy=set_proxy</span><br><span class="line"><span class="built_in">alias</span> deproxy=unset_proxy</span><br></pre></td></tr></table></figure><p>实际上是先获取到网关IP，自动设置代理。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>开启代理：proxy</p><p>关闭代理：deproxy</p><p>IP检测：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我们可以使用下面的命令检测自己的对外端口：</span><br><span class="line"><span class="comment"># 一个接口</span></span><br><span class="line">curl ipinfo.io</span><br><span class="line"><span class="comment"># 另一个接口</span></span><br><span class="line">curl cip.cc</span><br></pre></td></tr></table></figure><h2 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h2><p>在 WSL 环境中安装 Python：</p><ul><li><p>使用 APT 安装最新版本的 Python 3：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装最新版本的 Python 3</span></span><br><span class="line">sudo apt install python-is-python3</span><br></pre></td></tr></table></figure></li><li><p>安装 Python 包管理 <code>pip</code> 工具：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-pip</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>pip</code> 包管理源为清华大学 TUNA 镜像源：[<a href="https://dowww.spencerwoo.com/3-vscode/3-3-python.html#fn1">1]</a></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 TUNA 镜像源更新 pip</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 pip 源设置为 TUNA</span></span><br><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装代码优化工具"><a href="#安装代码优化工具" class="headerlink" title="安装代码优化工具"></a>安装代码优化工具</h2><p>在上面安装完成 VS Code 的 Python 插件之后，如果顺利，那么 VS Code 应该提示你缺少 Python 代码检查工具（Python linter），如果你尝试格式化文档，那么 VS Code 还会提示你缺少 Python 代码格式化工具（Python code formatter）。我们需要手动安装这些组件。</p><ul><li><p>安装 Python 代码检查工具，VS Code 支持 Pylint（默认）、Flake8、mypy 等多个 Python linter，我更推荐大家使用 <a href="https://flake8.pycqa.org/en/latest/">Flake8</a>：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flake8</span><br></pre></td></tr></table></figure></li><li><p>安装 Python 格式化代码工具，VS Code 支持 autopep8（默认）、yapf 和 black，我更推荐大家使用 <a href="https://black.readthedocs.io/en/stable/">black</a> 来格式化代码：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install black</span><br></pre></td></tr></table></figure></li></ul><h2 id="用-Poetry-管理-Python-项目"><a href="#用-Poetry-管理-Python-项目" class="headerlink" title="用 Poetry 管理 Python 项目"></a>用 Poetry 管理 Python 项目</h2><blockquote><p>Poetry – Python packaging and dependency management made easy.[<a href="https://dowww.spencerwoo.com/3-vscode/3-3-python.html#fn2">2]</a></p></blockquote><p>熟悉 Python 项目开发的同学可能知道，Python 需要利用虚拟环境工具 <code>virtualenv</code> 来创建虚拟环境运行 Python 项目，也需要 <code>pip</code> 包管理工具来安装 Python 依赖。使用两个单独的工具管理一个项目可能会出现诸多问题，同时 <code>requirements.txt</code> 的管理也相当不优雅。因此我们用 Poetry 作为统一管理 Python 环境和依赖的工具。Poetry 之于 Python 就如 yarn &#x2F; npm 之于 Node.js、cargo 之于 Rust、composer 之于 PHP……</p><h3 id="安装-Poetry"><a href="#安装-Poetry" class="headerlink" title="安装 Poetry"></a>安装 Poetry</h3><p>在 WSL 中安装 Poetry：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python</span><br></pre></td></tr></table></figure><p>将 Tab 补全加入我们所使用的 Shell 环境，比如 zsh 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry completions zsh &gt; ~/.zfunc/_poetry</span><br></pre></td></tr></table></figure><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>我们可以用 Poetry 直接新建一个模板 Python 项目，比如叫做 <code>poetry-demo</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry new poetry-demo</span><br></pre></td></tr></table></figure><p>这一命令会在 <code>poetry-demo</code> 目录下生成如下的文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">poetry-demo</span><br><span class="line">├── pyproject.toml</span><br><span class="line">├── README.rst</span><br><span class="line">├── poetry_demo</span><br><span class="line">│   └── __init__.py</span><br><span class="line">└── tests</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    └── test_poetry_demo.py</span><br></pre></td></tr></table></figure><p>其中的 <code>pyproject.toml</code> 文件就是定义我们当前 Python 项目所使用依赖库的文件。</p><p>我们可以用下面的命令安装一个新的 Python 依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装一个依赖</span></span><br><span class="line">poetry add requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个仅在开发中使用的依赖（比如格式化工具 black）</span></span><br><span class="line">poetry add black --dev <span class="comment"># 或 -D</span></span><br></pre></td></tr></table></figure><p>对于一个已定义 <code>pyproject.toml</code> 的项目，我们可以用下面的命令安装所有依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装所有依赖</span></span><br><span class="line">poetry install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装除了仅限开发使用的依赖外的所有依赖库</span></span><br><span class="line">poetry install --no-dev</span><br></pre></td></tr></table></figure><p>使用 remove 关键词来移除某个依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry remove requests</span><br></pre></td></tr></table></figure><blockquote><p>更多 Poetry 命令行工具的使用，推荐大家参考 Poetry 官方文档：<a href="https://python-poetry.org/docs/cli/">Poetry - Commands</a>.</p></blockquote><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>版本更新</p><p>在开始之前，我先来介绍几个 Node.js 相关的概念：</p><ul><li>Node.js - A JavaScript runtime built on Chrome’s V8 JavaScript engine 是一个不依赖浏览器的 JavaScript 运行环境，大部分前端项目比如 Vue、React 和后端项目比如 Express、Koa 均依赖于 Node.js 生态系统；</li><li><code>n</code> - Interactively Manage Your Node.js Versions：是一个 Node.js 版本管理工具，我们可以使用 <code>n</code> 来安装不同版本的 Node.js 环境；</li><li>npm 和 yarn，分别是 Node.js 的包管理工具，其中我更推荐大家使用后者（yarn）来管理安装 Node.js 依赖；</li></ul><p>接下来，我们将在 WSL 中使用 <code>n</code> 来安装 Node.js 环境，并配置包管理工具 yarn 来管理 Node.js 环境中的依赖。</p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>建议大家使用 <a href="https://github.com/tj/n"><code>n</code></a> 来管理与安装 Node.js，便于切换版本和快捷安装。首先，我们使用 <a href="https://github.com/mklement0/n-install">n-install</a> 安装 <code>n</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://git.io/n-install | bash</span><br></pre></td></tr></table></figure><p>n-install（也就是上面的命令）默认会自动帮我们将 <code>n</code> 的重要环境变量 <code>PREFIX</code> 和 <code>N_PREFIX</code> 设置到 <code>$HOME/n</code>，并将 <code>n</code> 安装到 <code>$HOME/n/bin</code>。同时，n-install 会帮助我们更新当前我们所使用的 Shell（比如 zsh），在相应的配置文件中将 <code>$HOME/n/bin</code> 添加到 <code>PATH</code> 中。最后，n-install 会帮我们安装最新的 LTS 版本的 Node.js 环境。</p><blockquote><p>更多关于 n-install 的使用，请参考 <a href="https://github.com/mklement0/n-install">n-install 的 README 文档</a>。</p></blockquote><p>使用 n-install 安装好 <code>n</code> 以及 Node.js 之后，我们可以通过下面的命令进行验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证 n 的安装情况</span></span><br><span class="line">n --version</span><br><span class="line">6.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 Node.js 的安装情况</span></span><br><span class="line">node --version</span><br><span class="line">v12.18.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 npm 的安装情况</span></span><br><span class="line">npm --version</span><br><span class="line">6.14.6</span><br></pre></td></tr></table></figure><p>另外，我们也可以用 <code>n</code> 下载其他版本的 Node.js：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载最新的 LTS 版本 Node.js</span></span><br><span class="line">n lts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载特定版本的 Node.js</span></span><br><span class="line">n 10.16.0</span><br></pre></td></tr></table></figure><p>直接运行命令 <code>n</code> 也可以进入 interactive 界面，让我们选择使用某个版本的 Node.js。</p><blockquote><p>有关使用 <code>n</code> 下载安装与使用 Node.js 的命令和方法，请参考 <a href="https://github.com/tj/n">n 的官方 README 文档</a>。</p></blockquote><h2 id="配置-Node-js-包管理工具"><a href="#配置-Node-js-包管理工具" class="headerlink" title="配置 Node.js 包管理工具"></a>配置 Node.js 包管理工具</h2><p>接下来，我们安装 <a href="https://yarnpkg.com/">yarn</a>，推荐大家安装使用 yarn：这个更加现代、科学的 Node.js 包管理工具。刚刚下载的 Node.js 中包含有 npm，因此我们可以直接用 npm 来安装 yarn：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><p>此时我们安装的 yarn 实际上是 1.22.0：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn --version</span><br><span class="line"></span><br><span class="line">1.22.4</span><br></pre></td></tr></table></figure><p>此时我们安装的是 yarn 1.0 版本，也就是比较传统的管理安装 Node.js 依赖的工具，跟 npm 比较类似。yarn 在 2.0+ 版本中经历了重大的变化，因此如果我们需要对某个项目开启 yarn 的 2.0 版本，需要使用下面的命令手动开启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="built_in">set</span> version berry</span><br></pre></td></tr></table></figure><p>其中，yarn 2.0 所支持的 Plug and play - Plug’n’Play 功能是 yarn 2.0 的重磅功能，也是我们使用 yarn 2.0 的主要原因，Plug’n’Play 重点解决了 Node.js 的 <code>node_modules</code> 存在于每个项目中的问题，更多内容请见：<a href="https://yarnpkg.com/features/pnp">yarn - Plug’n’Play</a>。需要注意的是，并非不是所有的 Node.js 库均支持 yarn 2.0，因此推荐预先查看你所使用的库是否支持 yarn 2.0：<a href="https://yarnpkg.com/features/pnp#compatibility-table">Compatibility Table</a>。</p><blockquote><p>如果你之前使用 yarn 1.0 版本，推荐查看 yarn 官方的 1.0 至 2.0 版本迁移指南：<a href="https://yarnpkg.com/advanced/migration">Migrating from Yarn 1</a>。</p></blockquote><p>有关在 VS Code 中开发 Node.js 项目的方法，更多请参考：<a href="https://code.visualstudio.com/docs/nodejs/working-with-javascript">Node.js tutorial in Visual Studio Code - Visual Studio Code Docs</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022</title>
      <link href="/2022/01/31/2022happynewyear/"/>
      <url>/2022/01/31/2022happynewyear/</url>
      
        <content type="html"><![CDATA[<h4 id="2022-新年快乐！！！🎉🎉🎉✨"><a href="#2022-新年快乐！！！🎉🎉🎉✨" class="headerlink" title="2022 新年快乐！！！🎉🎉🎉✨"></a>2022 新年快乐！！！🎉🎉🎉✨</h4>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python方法和函数</title>
      <link href="/2022/01/15/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/"/>
      <url>/2022/01/15/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h4 id="方法的格式"><a href="#方法的格式" class="headerlink" title="方法的格式"></a>方法的格式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span>.method(arg1,arg2,etc...)</span><br></pre></td></tr></table></figure><p>让我们快速看一下列表的各种方法的例子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a simple list</span></span><br><span class="line">lst = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>通过iPython和Jupyter笔记本，我们可以使用tab键快速查看所有可能的方法。列表中的方法有</p><ul><li>append</li><li>count</li><li>extend</li><li>insert</li><li>pop</li><li>remove</li><li>reverse</li><li>sort</li></ul><h5 id="append-允许我们将元素添加到列表的末尾："><a href="#append-允许我们将元素添加到列表的末尾：" class="headerlink" title="append() 允许我们将元素添加到列表的末尾："></a>append() 允许我们将元素添加到列表的末尾：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst.append(<span class="number">6</span>)</span><br><span class="line">lst</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure><h5 id="count-方法将计算一个元素在列表中出现的次数。"><a href="#count-方法将计算一个元素在列表中出现的次数。" class="headerlink" title="count()方法将计算一个元素在列表中出现的次数。"></a>count()方法将计算一个元素在列表中出现的次数。</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找2在列表中出现的次数</span></span><br><span class="line">lst.count(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>你可以随时在Jupyter笔记本中使用Shift+Tab来获得更多关于该方法的帮助。在一般的Python中，你可以使用help()函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(lst.count)</span><br><span class="line">Help on built-<span class="keyword">in</span> function count:</span><br><span class="line"></span><br><span class="line">count(...) method of builtins.<span class="built_in">list</span> instance</span><br><span class="line">    L.count(value) -&gt; integer -- <span class="keyword">return</span> number of occurrences of value</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>从形式上看，函数是一个有用的工具，它将一组语句组合在一起，以便它们可以被多次运行。它们还可以让我们指定参数，作为函数的输入。<br>在一个更基本的层面上，函数使我们不必一次又一次地重复编写相同的代码。如果你还记得关于字符串和列表的课程，记得我们用函数len()来获取一个字符串的长度。由于检查一个序列的长度是一项常见的任务，你会想写一个能在命令下反复进行的函数。<br>函数将是在 Python 中重复使用代码的最基本层次之一，它也将使我们开始思考程序设计（当我们学习面向对象编程时，我们将更深入地研究设计的想法）。</p><p>简单地说，当你打算多次使用一个代码块时，你应该使用函数。函数将允许你调用同一个代码块，而不需要多次编写它。这反过来又允许你创建更复杂的 Python 脚本。不过要真正理解这一点，我们应该实际写出我们自己的函数!</p><h4 id="定义关键字"><a href="#定义关键字" class="headerlink" title="定义关键字"></a>定义关键字</h4><p>让我们看看如何在Python中构建出一个函数的语法。它有如下形式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">name_of_function</span>(<span class="params">arg1,arg2</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    This is where the function&#x27;s Document String (docstring) goes.</span></span><br><span class="line"><span class="string">    When you call help() on your function it will be printed out.</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># Do stuff here</span></span><br><span class="line">    <span class="comment"># Return desired result</span></span><br></pre></td></tr></table></figure><p>解释</p><p>我们以def开头，然后是一个空格，接着是函数的名称。尽量保持名字的相关性，例如 用len()来表示 length() 函数。同样要注意名字的使用，不要和Python中内置函数（如len）同名。<a href="https://docs.python.org/3/library/functions.html">内置关键字</a></p><p>接下来是一对圆括号，里面有一些用逗号分隔的参数。这些参数是你的函数的输入。你将能够在你的函数中使用这些输入并引用它们。在这之后你要加一个冒号。</p><p>这是最重要的一步，您必须缩进才能正确开始函数内的代码。 Python 利用空格来组织代码。许多其他编程语言不这样做，所以请记住这一点。</p><p>接下来您将看到文档字符串，这是您编写函数基本描述的地方。使用 Jupyter 和 Jupyter Notebooks，您可以通过在函数名称后按 Shift+Tab 来阅读这些文档字符串。简单函数不需要文档字符串，但最好将它们放入其中，以便您或其他人可以轻松理解您编写的代码。</p><p>最后，你开始写你想执行的代码。<br>学习函数的最好方法是通过实例来学习。因此，让我们试着通过与我们之前学习的各种对象和数据结构相关的例子。</p><h5 id="简单的函数"><a href="#简单的函数" class="headerlink" title="简单的函数"></a>简单的函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">say_hello</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure><p>用函数名和括号来调用函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">say_hello()</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br></pre></td></tr></table></figure><p>如果你忘记了小括号（），它将简单地显示 say_hello 是一个函数的事实。稍后我们将学习我们实际上可以将函数传入其他函数中！但现在，只需记住用（）调用函数就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">say_hello</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;function __main__.say_hello&gt;</span><br></pre></td></tr></table></figure><h5 id="接受参数"><a href="#接受参数" class="headerlink" title="接受参数"></a>接受参数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">greeting</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Hello <span class="subst">&#123;name&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>传入参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greeting(<span class="string">&#x27;Jose&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Jose</span><br></pre></td></tr></table></figure><p>注意这里如果不传入参数会报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greeting()</span><br></pre></td></tr></table></figure><p>报错如下，提示name 需要一个参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---------------------------------------------------------------------------</span><br><span class="line">TypeError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">5</span>-3ffcd7d44b66&gt; <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">----&gt; <span class="number">1</span> greeting()</span><br><span class="line"></span><br><span class="line">TypeError: greeting() missing <span class="number">1</span> required positional argument: <span class="string">&#x27;name&#x27;</span></span><br></pre></td></tr></table></figure><p>如果用如下写法，则可以不用传入参数。因为给name 指定了默认的参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">greeting</span>(<span class="params">name=‘smith’</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Hello <span class="subst">&#123;name&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greeting()</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello smith</span><br></pre></td></tr></table></figure><h5 id="使用return关键字"><a href="#使用return关键字" class="headerlink" title="使用return关键字"></a>使用return关键字</h5><p>到目前为止，我们只看到了 print() 的使用，但如果我们真的想保存结果变量，我们需要使用 return 关键字。让我们看一些使用 return 语句的示例。 return 允许函数返回一个结果，然后可以将其存储为变量，或以用户想要的任何方式使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_num</span>(<span class="params">num1,num2</span>):</span><br><span class="line">    <span class="keyword">return</span> num1+num2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_num(<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p>也可以把返回值作为变量存起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = add_num(<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p>如果输入两个字符串会发生什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_num(<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;onetwo&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="常见问题：print和return-有什么区别？"><a href="#常见问题：print和return-有什么区别？" class="headerlink" title="常见问题：print和return 有什么区别？"></a>常见问题：print和return 有什么区别？</h5><p>return关键字允许你将一个函数的输出结果实际保存为一个变量。print()函数只是向你显示输出结果，但并不为将来的使用而保存它。让我们更详细地探讨一下这个问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_result</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="built_in">print</span>(a+b)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">return_result</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_result(<span class="number">10</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><p>如果您在 .py 脚本中运行它，您将看不到任何输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return_result(<span class="number">10</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><p>将这个结果保存在变量中后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_print = print_result(<span class="number">20</span>,<span class="number">20</span>)</span><br><span class="line">my_print</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">40</span><br></pre></td></tr></table></figure><p>查看变量类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(my_print)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NoneType</span><br></pre></td></tr></table></figure><p>请注意! 注意print_result()并没有让你把结果保存到一个变量中去！它只是把它打印出来，而print()在赋值时返回None! 它只是把它打印出来，print()对赋值返回无。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_result = return_result(<span class="number">20</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_result</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">40</span><br></pre></td></tr></table></figure><p>查看变量类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(my_result)</span><br></pre></td></tr></table></figure><p>结果是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int</span><br></pre></td></tr></table></figure><p>变量可以重复使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_result1 + my_result1</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80</span><br></pre></td></tr></table></figure><h4 id="向内部函数中添加逻辑"><a href="#向内部函数中添加逻辑" class="headerlink" title="向内部函数中添加逻辑"></a>向内部函数中添加逻辑</h4><h5 id="验证数字是否是偶数"><a href="#验证数字是否是偶数" class="headerlink" title="验证数字是否是偶数"></a>验证数字是否是偶数</h5><p>如果一个数字是偶数，那么 mod 2 (% 2) 应该为零。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> % <span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span> % <span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span> % <span class="number">2</span> == <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span> % <span class="number">2</span> == <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><p>让我们用它来构造一个函数。是偶数返回True,不是则返回False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">even_check</span>(<span class="params">number</span>):</span><br><span class="line">    <span class="keyword">return</span> number % <span class="number">2</span> == <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">even_check(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>是偶数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">even_check(<span class="number">21</span>)</span><br></pre></td></tr></table></figure><p>不是偶数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><h5 id="验证列表中的数字是否是偶数"><a href="#验证列表中的数字是否是偶数" class="headerlink" title="验证列表中的数字是否是偶数"></a>验证列表中的数字是否是偶数</h5><p>让我们返回一个布尔值，指示列表中的任何数字是否为偶数。注意这里 return 如何跳出循环并退出函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_even_list</span>(<span class="params">num_list</span>):</span><br><span class="line">    <span class="comment"># Go through each number</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> num_list:</span><br><span class="line">        <span class="comment"># Once we get a &quot;hit&quot; on an even number, we return True</span></span><br><span class="line">        <span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># Otherwise we don&#x27;t do anything</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>如果都是奇数，那么没返回值了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>非常常见的错误，注意以下代码是错误的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_even_list</span>(<span class="params">num_list</span>):</span><br><span class="line">    <span class="comment"># Go through each number</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> num_list:</span><br><span class="line">        <span class="comment"># Once we get a &quot;hit&quot; on an even number, we return True</span></span><br><span class="line">        <span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># This is WRONG! This returns False at the very first odd number!</span></span><br><span class="line">        <span class="comment"># It doesn&#x27;t end up checking the other numbers in the list!</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只会检查列表中第一个位置的数字，如果第一个数字是奇数，返回False然后直接跳出循环了，不会再验证后面的数字。</span></span><br><span class="line">check_even_list([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><p>正确的做法是我们需要在运行完整个循环之后发起一个返回 False。注意缩进。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_even_list</span>(<span class="params">num_list</span>):</span><br><span class="line">    <span class="comment"># Go through each number</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> num_list:</span><br><span class="line">        <span class="comment"># Once we get a &quot;hit&quot; on an even number, we return True</span></span><br><span class="line">        <span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># Don&#x27;t do anything if its not even</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># Notice the indentation! This ensures we run through the entire for loop    </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><h5 id="返回列表中所有的偶数"><a href="#返回列表中所有的偶数" class="headerlink" title="返回列表中所有的偶数"></a>返回列表中所有的偶数</h5><p>返回列表中所有的偶数，如果没有偶数则返回空列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_even_list</span>(<span class="params">num_list</span>):</span><br><span class="line">    </span><br><span class="line">    even_numbers = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Go through each number</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> num_list:</span><br><span class="line">        <span class="comment"># Once we get a &quot;hit&quot; on an even number, we append the even number</span></span><br><span class="line">        <span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            even_numbers.append(number)</span><br><span class="line">        <span class="comment"># Don&#x27;t do anything if its not even</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># Notice the indentation! This ensures we run through the entire for loop    </span></span><br><span class="line">    <span class="keyword">return</span> even_numbers</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[2, 4, 6]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check_even_list([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[]</span><br></pre></td></tr></table></figure><h5 id="返回元组以进行解包"><a href="#返回元组以进行解包" class="headerlink" title="返回元组以进行解包"></a>返回元组以进行解包</h5><p>回想一下，我们可以遍历一个元组列表并“解包”其中的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock_prices = [(<span class="string">&#x27;AAPL&#x27;</span>,<span class="number">200</span>),(<span class="string">&#x27;GOOG&#x27;</span>,<span class="number">300</span>),(<span class="string">&#x27;MSFT&#x27;</span>,<span class="number">400</span>)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> stock_prices:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><p>结果</p><p>(‘AAPL’, 200)<br>(‘GOOG’, 300)<br>(‘MSFT’, 400)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> stock,price <span class="keyword">in</span> stock_prices:</span><br><span class="line">    <span class="built_in">print</span>(stock)</span><br></pre></td></tr></table></figure><p>结果</p><p>AAPL<br>GOOG<br>MSFT</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> stock,price <span class="keyword">in</span> stock_prices:</span><br><span class="line">    <span class="built_in">print</span>(price)</span><br></pre></td></tr></table></figure><p>结果</p><p>200<br>300<br>400</p><p>使用函数可以轻松返回多个结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">work_hours = [(<span class="string">&#x27;Abby&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;Billy&#x27;</span>,<span class="number">400</span>),(<span class="string">&#x27;Cassie&#x27;</span>,<span class="number">800</span>)]</span><br></pre></td></tr></table></figure><p>自定义函数实现工作时间最长的员工姓名和工作时长（根据工作小时数来判断）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">employee_check</span>(<span class="params">work_hours</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Set some max value to intially beat, like zero hours</span></span><br><span class="line">    current_max = <span class="number">0</span></span><br><span class="line">    <span class="comment"># Set some empty value before the loop</span></span><br><span class="line">    employee_of_month = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> employee,hours <span class="keyword">in</span> work_hours:</span><br><span class="line">        <span class="keyword">if</span> hours &gt; current_max:</span><br><span class="line">            current_max = hours</span><br><span class="line">            employee_of_month = employee</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Notice the indentation here</span></span><br><span class="line">    <span class="keyword">return</span> (employee_of_month,current_max)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">employee_check(work_hours)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#x27;Cassie&#x27;, 800)</span><br></pre></td></tr></table></figure><p>还可以分别查看姓名和工作时长</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name,hours = employee_check(work_hours)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name</span><br></pre></td></tr></table></figure><p>结果</p><p>‘Cassie’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hours</span><br></pre></td></tr></table></figure><p>800</p><h4 id="函数之间交互"><a href="#函数之间交互" class="headerlink" title="函数之间交互"></a>函数之间交互</h4><p>函数经常使用其他函数的结果，我们通过猜谜游戏来看一个简单的例子。列表中将有 3 个位置，其中一个是“O”，一个函数将对列表进行洗牌，另一个将接受玩家的猜测，最后另一个将检查它是否正确。这是基于经典的嘉年华游戏，即猜一个红球在哪个杯子下面。</p><h5 id="如何在python中打乱列表"><a href="#如何在python中打乱列表" class="headerlink" title="如何在python中打乱列表"></a>如何在python中打乱列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> shuffle</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Note shuffle is in-place</span></span><br><span class="line">shuffle(example)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[3, 1, 4, 5, 2]</span><br></pre></td></tr></table></figure><h5 id="下面来创建个简单的游戏"><a href="#下面来创建个简单的游戏" class="headerlink" title="下面来创建个简单的游戏"></a>下面来创建个简单的游戏</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27; &#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shuffle_list</span>(<span class="params">mylist</span>):</span><br><span class="line">    <span class="comment"># Take in list, and returned shuffle versioned</span></span><br><span class="line">    shuffle(mylist)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> mylist</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mylist </span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27; &#x27;, &#x27;O&#x27;, &#x27; &#x27;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shuffle_list(mylist)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27; &#x27;, &#x27; &#x27;, &#x27;O&#x27;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">player_guess</span>():</span><br><span class="line">    </span><br><span class="line">    guess = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> guess <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>]:</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Recall input() returns a string</span></span><br><span class="line">        guess = <span class="built_in">input</span>(<span class="string">&quot;Pick a number: 0, 1, or 2:  &quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(guess)    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">player_guess()</span><br><span class="line">Pick a number: <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">or</span> <span class="number">2</span>:  <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>现在我们将检查用户的猜测。请注意，我们只在此处打印，因为我们不需要保存用户的猜测或打乱的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_guess</span>(<span class="params">mylist,guess</span>):</span><br><span class="line">    <span class="keyword">if</span> mylist[guess] == <span class="string">&#x27;O&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Correct Guess!&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Wrong! Better luck next time&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(mylist)</span><br></pre></td></tr></table></figure><p>现在我们创建一个小的设置逻辑来运行所有的功能。注意它们是如何相互作用的！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initial List</span></span><br><span class="line">mylist = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27; &#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Shuffle It</span></span><br><span class="line">mixedup_list = shuffle_list(mylist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get User&#x27;s Guess</span></span><br><span class="line">guess = player_guess()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check User&#x27;s Guess</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment"># Notice how this function takes in the input </span></span><br><span class="line"><span class="comment"># based on the output of other functions!</span></span><br><span class="line">check_guess(mixedup_list,guess)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Pick a number: 0, 1, or 2:  1</span><br><span class="line">Wrong! Better luck next time</span><br><span class="line">[&#x27; &#x27;, &#x27; &#x27;, &#x27;O&#x27;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python语法</title>
      <link href="/2022/01/09/python%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/01/09/python%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="python-语法"><a href="#python-语法" class="headerlink" title="python 语法"></a>python 语法</h3><h4 id="if、elif、else-语句"><a href="#if、elif、else-语句" class="headerlink" title="if、elif、else 语句"></a>if、elif、else 语句</h4><p>嘿，如果发生这种情况，请执行一些操作。否则，如果发生其他情况，请执行其他操作。否则，如果上述情况均未发生，请执行此操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if case1:</span><br><span class="line">    perform action1</span><br><span class="line">elif case2:</span><br><span class="line">    perform action2</span><br><span class="line">else: </span><br><span class="line">    perform action3</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = False</span><br><span class="line"></span><br><span class="line">if x:</span><br><span class="line">    print(&#x27;x was True!&#x27;)</span><br><span class="line">else:</span><br><span class="line">    print(&#x27;I will be printed in any case where x is not true&#x27;)</span><br><span class="line">#I will be printed in any case where x is not true</span><br></pre></td></tr></table></figure><h4 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">loc = &#x27;Bank&#x27;</span><br><span class="line"></span><br><span class="line">if loc == &#x27;Auto Shop&#x27;:</span><br><span class="line">    print(&#x27;Welcome to the Auto Shop!&#x27;)</span><br><span class="line">elif loc == &#x27;Bank&#x27;:</span><br><span class="line">    print(&#x27;Welcome to the bank!&#x27;)</span><br><span class="line">else:</span><br><span class="line">    print(&#x27;Where are you?&#x27;)</span><br><span class="line"></span><br><span class="line">#Welcome to the bank!</span><br></pre></td></tr></table></figure><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4><p>for 循环在 Python 中充当迭代器；它遍历序列中的项目或任何其他可迭代项目。我们了解的可以迭代的对象包括字符串、列表、元组，甚至是字典的内置可迭代对象，例如键或值。</p><p>这是 Python 中 for 循环的一般格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for item in object:</span><br><span class="line">    statements to do stuff</span><br></pre></td></tr></table></figure><h5 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [1,2,3,4,5,6,7,8,9,10]</span><br><span class="line">for num in list1:</span><br><span class="line">    print(num)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>取余</p><p>用 % 来获取余数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 3 Remainder 1</span><br><span class="line">10 % 3</span><br><span class="line"># 1</span><br><span class="line"># 2 Remainder 4</span><br><span class="line">18 % 7</span><br><span class="line">#4</span><br><span class="line"># 2 no remainder</span><br><span class="line">4 % 2</span><br><span class="line">#0</span><br></pre></td></tr></table></figure><p>请注意，如果一个数可以完全整除且没有余数，则模调用的结果为 0。我们可以使用它来测试偶数，因为如果一个数模 2 等于 0，则意味着它是偶数！</p><h5 id="打印出list1中所有的偶数"><a href="#打印出list1中所有的偶数" class="headerlink" title="打印出list1中所有的偶数"></a>打印出list1中所有的偶数</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for num in list1:</span><br><span class="line">    if num % 2 == 0:</span><br><span class="line">        print(num)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>也可以加上else语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for num in list1:</span><br><span class="line">    if num % 2 == 0:</span><br><span class="line">        print(num)</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;Odd number&#x27;)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Odd number</span><br><span class="line">2</span><br><span class="line">Odd number</span><br><span class="line">4</span><br><span class="line">Odd number</span><br><span class="line">6</span><br><span class="line">Odd number</span><br><span class="line">8</span><br><span class="line">Odd number</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Start sum at zero</span><br><span class="line">list_sum = 0 </span><br><span class="line"></span><br><span class="line">for num in list1:</span><br><span class="line">    list_sum = list_sum + num</span><br><span class="line"></span><br><span class="line">print(list_sum)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure><p>另一种写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Start sum at zero</span><br><span class="line">list_sum = 0 </span><br><span class="line"></span><br><span class="line">for num in list1:</span><br><span class="line">    list_sum += num</span><br><span class="line"></span><br><span class="line">print(list_sum)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure><p>我们已经在列表中使用了 for 循环，那么使用字符串呢？请记住字符串是一个序列，因此当我们遍历它们时，我们将访问该字符串中的每个项目。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for letter in &#x27;This is a string.&#x27;:</span><br><span class="line">    print(letter)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">T</span><br><span class="line">h</span><br><span class="line">i</span><br><span class="line">s</span><br><span class="line"> </span><br><span class="line">i</span><br><span class="line">s</span><br><span class="line"> </span><br><span class="line">a</span><br><span class="line"> </span><br><span class="line">s</span><br><span class="line">t</span><br><span class="line">r</span><br><span class="line">i</span><br><span class="line">n</span><br><span class="line">g</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h5 id="现在让我们看看如何将-for-循环与元组一起使用"><a href="#现在让我们看看如何将-for-循环与元组一起使用" class="headerlink" title="现在让我们看看如何将 for 循环与元组一起使用."></a>现在让我们看看如何将 for 循环与元组一起使用.</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tup = (1,2,3,4,5)</span><br><span class="line"></span><br><span class="line">for t in tup:</span><br><span class="line">    print(t)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>当涉及到 for 循环时，元组具有特殊的品质。如果您正在遍历包含元组的序列，则该项目实际上可以是元组本身，这是元组解包的示例。在 for 循环中，我们将解压缩序列中的元组，我们可以访问该元组中的各个项目！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list2 = [(2,4),(6,8),(10,12)]</span><br><span class="line">for tup in list2:</span><br><span class="line">    print(tup)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(2, 4)</span><br><span class="line">(6, 8)</span><br><span class="line">(10, 12)</span><br></pre></td></tr></table></figure><p>拆包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for (t1,t2) in list2:</span><br><span class="line">    print(t1)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">6</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>使用序列中的元组，我们可以通过解包访问其中的项目！这是因为许多对象将通过元组传递它们的迭代。</p><h5 id="在字典中使用for循环"><a href="#在字典中使用for循环" class="headerlink" title="在字典中使用for循环"></a>在字典中使用for循环</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;&#x27;k1&#x27;:1,&#x27;k2&#x27;:2,&#x27;k3&#x27;:3&#125;</span><br><span class="line">for item in d:</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure><h5 id="关于字典的新方法-keys-values-and-items-的使用"><a href="#关于字典的新方法-keys-values-and-items-的使用" class="headerlink" title="关于字典的新方法 .keys(), .values() and .items() 的使用"></a>关于字典的新方法 <strong>.keys()</strong>, <strong>.values()</strong> and <strong>.items()</strong> 的使用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Create a dictionary view object</span><br><span class="line">d.items()</span><br><span class="line">dict_items([(&#x27;k1&#x27;, 1), (&#x27;k2&#x27;, 2), (&#x27;k3&#x27;, 3)])</span><br></pre></td></tr></table></figure><p>由于 .items() 方法支持迭代，我们可以执行字典解包以分离键和值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 字典拆包</span><br><span class="line">for k,v in d.items():</span><br><span class="line">    print(k)</span><br><span class="line">    print(v) </span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">k1</span><br><span class="line">1</span><br><span class="line">k2</span><br><span class="line">2</span><br><span class="line">k3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>如果你想获得一个真正的键、值或键&#x2F;值元组的列表，你可以将视图转换为一个列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(d.keys())</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;k1&#x27;, &#x27;k2&#x27;, &#x27;k3&#x27;]</span><br></pre></td></tr></table></figure><p>请记住，字典是无序的，键和值以任意顺序返回。您可以使用 sorted() 获取排序列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted(d.values())</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3]</span><br></pre></td></tr></table></figure><p>更多内容<a href="https://www.tutorialspoint.com/python/python_for_loop.htm">参考</a></p><h4 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h4><p>Python 中的 while 语句是执行迭代的最常用方法之一。只要条件为真，while 语句就会重复执行单个语句或一组语句。之所以称为“循环”，是因为代码语句一遍又一遍地循环，直到不再满足条件。</p><h5 id="常用格式"><a href="#常用格式" class="headerlink" title="常用格式"></a>常用格式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while test:</span><br><span class="line">    code statements</span><br><span class="line">else:</span><br><span class="line">    final code statements</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = 0</span><br><span class="line"></span><br><span class="line">while x &lt; 10:</span><br><span class="line">    print(&#x27;x is currently: &#x27;,x)</span><br><span class="line">    print(&#x27; x is still less than 10, adding 1 to x&#x27;)</span><br><span class="line">    x+=1</span><br><span class="line">    </span><br><span class="line">else:</span><br><span class="line">    print(&#x27;All Done!&#x27;)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">x is currently:  0</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  1</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  2</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  3</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  4</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  5</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  6</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  7</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  8</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x is currently:  9</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">All Done!</span><br></pre></td></tr></table></figure><p>注意一共执行10次循环，当x&#x3D;10时，while后条件为假，跳出循环，执行else语句。</p><h5 id="关键字break-continue-pass"><a href="#关键字break-continue-pass" class="headerlink" title="关键字break, continue,pass"></a>关键字break, continue,pass</h5><p>我们可以在循环中使用 break、continue 和 pass 语句来为各种情况添加额外的功能。这三个语句定义为</p><p>break：跳出当前最近的封闭循环。<br>continue：转到最近的封闭循环的顶部。<br>pass：什么都不做。</p><p>考虑 break 和 continue 语句，while 循环的一般格式如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">while test: </span><br><span class="line">    code statement</span><br><span class="line">    if test: </span><br><span class="line">        break</span><br><span class="line">    if test: </span><br><span class="line">        continue </span><br><span class="line">else:</span><br></pre></td></tr></table></figure><h5 id="break-和-continue-语句可以出现在循环体内的任何位置，但我们通常会将它们与-if-语句一起进一步嵌套，以根据某些条件执行操作。"><a href="#break-和-continue-语句可以出现在循环体内的任何位置，但我们通常会将它们与-if-语句一起进一步嵌套，以根据某些条件执行操作。" class="headerlink" title="break 和 continue 语句可以出现在循环体内的任何位置，但我们通常会将它们与 if 语句一起进一步嵌套，以根据某些条件执行操作。"></a>break 和 continue 语句可以出现在循环体内的任何位置，但我们通常会将它们与 if 语句一起进一步嵌套，以根据某些条件执行操作。</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = 0</span><br><span class="line"></span><br><span class="line">while x &lt; 10:</span><br><span class="line">    print(&#x27;x is currently: &#x27;,x)</span><br><span class="line">    print(&#x27; x is still less than 10, adding 1 to x&#x27;)</span><br><span class="line">    x+=1</span><br><span class="line">    if x==3:</span><br><span class="line">        print(&#x27;x==3&#x27;)</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;continuing...&#x27;)</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">x is currently:  0</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  1</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  2</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">x==3</span><br><span class="line">x is currently:  3</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  4</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  5</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  6</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  7</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  8</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  9</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br></pre></td></tr></table></figure><p>请注意当 x&#x3D;&#x3D;3 时我们如何打印语句，并且当我们继续通过外部 while 循环时打印出 continue。让我们在 x &#x3D;&#x3D;3 时暂停一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = 0</span><br><span class="line"></span><br><span class="line">while x &lt; 10:</span><br><span class="line">    print(&#x27;x is currently: &#x27;,x)</span><br><span class="line">    print(&#x27; x is still less than 10, adding 1 to x&#x27;)</span><br><span class="line">    x+=1</span><br><span class="line">    if x==3:</span><br><span class="line">        print(&#x27;Breaking because x==3&#x27;)</span><br><span class="line">        break</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;continuing...&#x27;)</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x is currently:  0</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  1</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">continuing...</span><br><span class="line">x is currently:  2</span><br><span class="line"> x is still less than 10, adding 1 to x</span><br><span class="line">Breaking because x==3</span><br></pre></td></tr></table></figure><p>请注意，当条件成立时，遇到break后会立刻跳出当前循环，即使后面有任何语句也不会执行。</p><h5 id="不过要注意一点！可以使用-while-语句创建一个无限运行的循环。例如"><a href="#不过要注意一点！可以使用-while-语句创建一个无限运行的循环。例如" class="headerlink" title="不过要注意一点！可以使用 while 语句创建一个无限运行的循环。例如"></a>不过要注意一点！可以使用 while 语句创建一个无限运行的循环。例如</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># DO NOT RUN THIS CODE!!!! </span><br><span class="line">while True:</span><br><span class="line">    print(&quot;I&#x27;m stuck in an infinite loop!&quot;)</span><br></pre></td></tr></table></figure><p>不要执行这个语句，不然只能重启机器。</p><h4 id="一些有用的操作"><a href="#一些有用的操作" class="headerlink" title="一些有用的操作"></a>一些有用的操作</h4><h5 id="range"><a href="#range" class="headerlink" title="range"></a>range</h5><p>range 函数可以让你快速生成一个整数列表，这个很方便，所以要注意如何使用它！您可以传递 3 个参数：开始、停止和步长。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">range(0,11)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">range(0, 11)</span><br></pre></td></tr></table></figure><p>请注意，这是一个生成器函数，因此要实际从中获取列表，我们需要将其转换为具有list（）的列表。什么是生成器？它是一种特殊类型的函数，可以生成信息，而无需将其保存到内存中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 从0到11 但不包含11，和切片一样。</span><br><span class="line">list(range(0,11))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 第三个参数是步长，它表示从开始的数字到下一个数字有多长。</span><br><span class="line">list(range(0,11,2))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 2, 4, 6, 8, 10]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(range(0,101,10))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]</span><br></pre></td></tr></table></figure><h5 id="枚举函数"><a href="#枚举函数" class="headerlink" title="枚举函数"></a>枚举函数</h5><p>枚举函数是一个与循环一起使用的非常有用的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index_count = 0</span><br><span class="line"></span><br><span class="line">for letter in &#x27;abcde&#x27;:</span><br><span class="line">    print(&quot;At index &#123;&#125; the letter is &#123;&#125;&quot;.format(index_count,letter))</span><br><span class="line">    index_count += 1</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">At index 0 the letter is a</span><br><span class="line">At index 1 the letter is b</span><br><span class="line">At index 2 the letter is c</span><br><span class="line">At index 3 the letter is d</span><br><span class="line">At index 4 the letter is e</span><br></pre></td></tr></table></figure><p>用枚举函数来追踪有多少循环是很常见的，这样就不用担心创建和更新index_count或letter变量了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Notice the tuple unpacking!</span><br><span class="line"></span><br><span class="line">for i,letter in enumerate(&#x27;abcde&#x27;):</span><br><span class="line">    print(&quot;At index &#123;&#125; the letter is &#123;&#125;&quot;.format(i,letter))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">At index 0 the letter is a</span><br><span class="line">At index 1 the letter is b</span><br><span class="line">At index 2 the letter is c</span><br><span class="line">At index 3 the letter is d</span><br><span class="line">At index 4 the letter is e</span><br></pre></td></tr></table></figure><h5 id="zip函数"><a href="#zip函数" class="headerlink" title="zip函数"></a>zip函数</h5><p>注意enumerate实际返回的格式，让我们通过将其转换为list()来看一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(enumerate(&#x27;abcde&#x27;))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(0, &#x27;a&#x27;), (1, &#x27;b&#x27;), (2, &#x27;c&#x27;), (3, &#x27;d&#x27;), (4, &#x27;e&#x27;)]</span><br></pre></td></tr></table></figure><p>它是一个元组的列表，意味着我们可以在for循环中使用元组解包。这种数据结构实际上在 Python 中非常常见，特别是在与外部库一起工作时。你可以使用 zip() 函数，通过将两个列表 “压缩 “起来，快速创建一个元组列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mylist1 = [1,2,3,4,5]</span><br><span class="line">mylist2 = [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个也是一个生成器! 我们稍后将对此进行解释，但现在让我们把它转化为一个列表。</span><br><span class="line">zip(mylist1,mylist2)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;zip at 0x1d205086f08&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(zip(mylist1,mylist2))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(1, &#x27;a&#x27;), (2, &#x27;b&#x27;), (3, &#x27;c&#x27;), (4, &#x27;d&#x27;), (5, &#x27;e&#x27;)]</span><br></pre></td></tr></table></figure><p>为了使用生成器，我们可以只使用一个for循环。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for item1, item2 in zip(mylist1,mylist2):</span><br><span class="line">    print(&#x27;For this tuple, first item was &#123;&#125; and second item was &#123;&#125;&#x27;.format(item1,item2))</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">For this tuple, first item was 1 and second item was a</span><br><span class="line">For this tuple, first item was 2 and second item was b</span><br><span class="line">For this tuple, first item was 3 and second item was c</span><br><span class="line">For this tuple, first item was 4 and second item was d</span><br><span class="line">For this tuple, first item was 5 and second item was e</span><br></pre></td></tr></table></figure><h5 id="in-操作符"><a href="#in-操作符" class="headerlink" title="in 操作符"></a>in 操作符</h5><p>我们已经在for循环中看到了in关键字，但我们也可以用它来快速检查一个对象是否在一个列表中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27; in [&#x27;x&#x27;,&#x27;y&#x27;,&#x27;z&#x27;]</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27; in [1,2,3]</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><h5 id="not-in"><a href="#not-in" class="headerlink" title="not in"></a>not in</h5><p>我们可以将 in 与 not 运算符结合使用，以检查列表中是否不存在某个对象或变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27; not in [&#x27;x&#x27;,&#x27;y&#x27;,&#x27;z&#x27;]</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27; not in [1,2,3]</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">True</span><br></pre></td></tr></table></figure><h5 id="min-和-max"><a href="#min-和-max" class="headerlink" title="min 和 max"></a>min 和 max</h5><p>用这些函数快速检查一个列表的最小值或最大值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mylist = [10,20,30,40,100]</span><br><span class="line">min(mylist)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max(mylist)</span><br><span class="line"># 100</span><br></pre></td></tr></table></figure><h5 id="random"><a href="#random" class="headerlink" title="random"></a>random</h5><p>Python有一个内置的随机库。这个随机库中包括很多函数，所以我们现在只向你展示两个有用的函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from random import shuffle</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 随机打乱顺序</span><br><span class="line">shuffle(mylist)</span><br><span class="line">mylist</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[40, 10, 100, 30, 20]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from random import randint</span><br><span class="line">randint(0,100)</span><br></pre></td></tr></table></figure><p>返回 [a, b] 范围内的随机整数，包括两个端点。</p><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25</span><br></pre></td></tr></table></figure><h5 id="input"><a href="#input" class="headerlink" title="input"></a>input</h5><p>交互</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input(&#x27;Enter Something into this box: &#x27;)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter Something into this box: great job!</span><br><span class="line">&#x27;great job!&#x27;</span><br></pre></td></tr></table></figure><h4 id="列表推导"><a href="#列表推导" class="headerlink" title="列表推导"></a>列表推导</h4><p>列表推导允许我们使用不同的符号构建列表。您可以将其本质上视为在括号内构建的单行 for 循环。举个简单的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 抓取字符串中每一个字母</span><br><span class="line">list = [x for x in &#x27;word&#x27;]</span><br><span class="line">list</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;w&#x27;, &#x27;o&#x27;, &#x27;r&#x27;, &#x27;d&#x27;]</span><br></pre></td></tr></table></figure><h5 id="for-前面可以是表达式"><a href="#for-前面可以是表达式" class="headerlink" title="for 前面可以是表达式"></a>for 前面可以是表达式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 在范围内的平方数并变成列表</span><br><span class="line">lst = [x**2 for x in range(0,11)]</span><br><span class="line">lst</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><h5 id="另一种写法如下"><a href="#另一种写法如下" class="headerlink" title="另一种写法如下"></a>另一种写法如下</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(0,11):</span><br><span class="line">list.append(x**2)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><h5 id="在if-语句中使用"><a href="#在if-语句中使用" class="headerlink" title="在if 语句中使用"></a>在if 语句中使用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 检查范围内的偶数</span><br><span class="line">lst = [x for x in range(11) if x % 2 == 0]</span><br><span class="line">lst</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 2, 4, 6, 8, 10]</span><br></pre></td></tr></table></figure><p>摄氏度和华氏度转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 摄氏度转华氏度</span><br><span class="line">celsius = [0,10,20.1,34.5]</span><br><span class="line"></span><br><span class="line">fahrenheit = [((9/5)*temp + 32) for temp in celsius ]</span><br><span class="line"></span><br><span class="line">fahrenheit</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[32.0, 50.0, 68.18, 94.1]</span><br></pre></td></tr></table></figure><h5 id="在嵌套中用列表推导"><a href="#在嵌套中用列表推导" class="headerlink" title="在嵌套中用列表推导"></a>在嵌套中用列表推导</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst = [ x**2 for x in [x**2 for x in range(11)]]</span><br><span class="line">lst</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0, 1, 16, 81, 256, 625, 1296, 2401, 4096, 6561, 10000]</span><br></pre></td></tr></table></figure><p>使用列表推导创建语句可读性不是很好，可以使用另一种写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 = []</span><br><span class="line">for x in range(11):</span><br><span class="line">    list1.append((x**2)**2)</span><br><span class="line">list1</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>for 前面可以是表达式，后面是要遍历的对象。in后面跟要遍历的语句。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python对象和数据结构基础</title>
      <link href="/2022/01/06/python%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/01/06/python%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><h4 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加 - 两个对象相加</td><td align="center">a + b 输出结果 30</td></tr><tr><td align="center">-</td><td align="center">减 - 得到负数或是一个数减去另一个数</td><td align="center">a - b 输出结果 -10</td></tr><tr><td align="center">*</td><td align="center">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td><td align="center">a * b 输出结果 200</td></tr><tr><td align="center">&#x2F;</td><td align="center">除 - x除以y</td><td align="center">b &#x2F; a 输出结果 2</td></tr><tr><td align="center">%</td><td align="center">取模 - 返回除法的余数</td><td align="center">b % a 输出结果 0</td></tr><tr><td align="center">**</td><td align="center">幂 - 返回x的y次幂</td><td align="center">a**b为10的20次方，输出结果100000000000000000000</td></tr><tr><td align="center">&#x2F;&#x2F;</td><td align="center">取整除一返回商的整数部分</td><td align="center">9&#x2F;&#x2F;2 输出结果 4 , 9.0&#x2F;&#x2F;2.0 输出结果 4.0</td></tr></tbody></table><h4 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">&#x3D;&#x3D;</td><td align="center">等于 - 比较对象是否相等</td><td align="center">(a &#x3D;&#x3D; b)返回True。</td></tr><tr><td align="center">!&#x3D;</td><td align="center">不等于 -  比较两个对象是否不相等</td><td align="center">(a !&#x3D; b) 返回 True.</td></tr><tr><td align="center">&lt;&gt;</td><td align="center">不等于 -  比较两个对象是否不相等</td><td align="center">(a &lt;&gt; b) 返回 True.这个运算符类似 !&#x3D; 。</td></tr><tr><td align="center">&gt;</td><td align="center">大于 - 返回a是否大于b</td><td align="center">(a &gt; b) 返回 True。</td></tr><tr><td align="center">&lt;</td><td align="center">小于 - 返回a是否小于b。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td><td align="center">(a &lt; b) 返回 True。</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">大于等于 - 返回a是否大于等于b。</td><td align="center">(a &gt;&#x3D; b) 返回 True。</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">小于等于 - 返回x是否小于等于y。</td><td align="center">(a &lt;&#x3D; b) 返回 True。</td></tr></tbody></table><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">布尔”与” - 如果a为False，a and b返回False，否则它返回b的计算值。</td><td align="center">(a and b) 返回 False。</td></tr><tr><td align="center">or</td><td align="center">布尔”或” - 如果a是True，它返回True，否则它返回b的计算值。</td><td align="center">(a or b) 返回True。</td></tr><tr><td align="center">not</td><td align="center">布尔”非” - 如果a为True，返回False。如果b为False，它返回True。</td><td align="center">not(a and b) 返回 Ture。</td></tr></tbody></table><h4 id="成员计算"><a href="#成员计算" class="headerlink" title="成员计算"></a>成员计算</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">in</td><td align="center">如果在指定的序列中找到值返回True，否则返回False.</td><td align="center">x 在 y 序列中，如果 x 在 y 序列中返回True</td></tr><tr><td align="center">not in</td><td align="center">如果在指定的序列中没有找到值返回True，否则返回False.</td><td align="center">x 不在 y 序列中，如果 x 不在 y 序列中返回True。</td></tr></tbody></table><p>Python运算符优先级，以下表格列出了从最高到最低优先级的所有运算符：</p><table><thead><tr><th align="center">运算符</th><th align="center"><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">**</td><td align="center">指数 (最高优先级)</td></tr><tr><td align="center">~ + -</td><td align="center">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td align="center">* &#x2F; % &#x2F;&#x2F;</td><td align="center">乘，除，取模和取整除</td></tr><tr><td align="center">+ -</td><td align="center">加法减法</td></tr><tr><td align="center">&gt;&gt; &lt;&lt;</td><td align="center">右移，左移运算符</td></tr><tr><td align="center">&amp;</td><td align="center">位 ‘AND’</td></tr><tr><td align="center">^ |</td><td align="center">位运算符</td></tr><tr><td align="center">&lt;&#x3D; &lt; &gt; &gt;&#x3D;</td><td align="center">比较运算符</td></tr><tr><td align="center">&lt;&gt; &#x3D;&#x3D; !&#x3D;</td><td align="center">等于运算符</td></tr><tr><td align="center">&#x3D; %&#x3D; &#x2F;&#x3D; &#x2F;&#x2F;&#x3D; -&#x3D; +&#x3D; *&#x3D; **&#x3D;</td><td align="center">赋值运算符</td></tr><tr><td align="center">is is not</td><td align="center">身份运算符</td></tr><tr><td align="center">in not in</td><td align="center">成员运算符</td></tr><tr><td align="center">not and or</td><td align="center">逻辑运算符</td></tr></tbody></table><h4 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h4><p>变量名的命名规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">名称不能以数字开头。</span><br><span class="line">名称中不能有空格，用_代替。</span><br><span class="line">不能使用这些符号：&#x27;&quot;,&lt;&gt;/?|\()!@#$%^&amp;*~-+</span><br><span class="line">名称小写被认为是最佳实践 (PEP8)。</span><br><span class="line">避免使用字符 &#x27;l&#x27;（小写字母 el）、&#x27;O&#x27;（大写字母 oh）或 &#x27;I&#x27;（大写字母眼睛）作为单字符变量名称。</span><br><span class="line">避免使用在 Python 中具有特殊含义的词，如“list”和“str”</span><br></pre></td></tr></table></figure><p>动态类型</p><p>例如1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_dog = <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(my_dog)</span><br><span class="line"><span class="comment"># 结果是 2</span></span><br></pre></td></tr></table></figure><p>例如2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_dogs = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(my_dog)</span><br><span class="line"><span class="comment"># 结果是[&#x27;a&#x27;,&#x27;b&#x27;]</span></span><br></pre></td></tr></table></figure><p>用name &#x3D; object 来表示变量，一个等号代表赋值运算。</p><p>例如1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 结果是1</span></span><br></pre></td></tr></table></figure><p>也可以重新赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a + a </span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 结果是2</span></span><br></pre></td></tr></table></figure><p>捷径。+&#x3D;，-&#x3D;，*&#x3D;，&#x2F;&#x3D;</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a += <span class="number">10</span> 相当于a = a + <span class="number">10</span></span><br></pre></td></tr></table></figure><p>用type()可以确定变量的类型。type()是内置函数。常见的类型有</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> (<span class="keyword">for</span> integer) <span class="comment">#整型</span></span><br><span class="line"><span class="built_in">float</span><span class="comment">#浮点型（小数）</span></span><br><span class="line"><span class="built_in">str</span> (<span class="keyword">for</span> string)<span class="comment">#字符串</span></span><br><span class="line"><span class="built_in">list</span><span class="comment">#列表</span></span><br><span class="line"><span class="built_in">tuple</span><span class="comment">#元组</span></span><br><span class="line"><span class="built_in">dict</span> (<span class="keyword">for</span> dictionary)<span class="comment">#字典</span></span><br><span class="line"><span class="built_in">set</span><span class="comment">#集合</span></span><br><span class="line"><span class="built_in">bool</span> (<span class="keyword">for</span> Boolean <span class="literal">True</span>/<span class="literal">False</span>)<span class="comment">#布尔型</span></span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">type</span>(a)</span><br><span class="line"><span class="comment">#结果：tuple</span></span><br><span class="line">c = &#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">type</span>(c)</span><br><span class="line"><span class="comment">#结果：set</span></span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>在python中用字符串记录文本信息例如名称。 Python 中的字符串实际上是一个序列，这基本上意味着 Python 将字符串中的每个元素作为一个序列进行跟踪。例如，Python 将字符串“hello”理解为按特定顺序排列的字母序列。这意味着我们将能够使用索引来获取特定的字母（如第一个字母或最后一个字母）。</p><p>要在 Python 中创建字符串，您需要使用单引号或双引号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="comment">#结果是相同的。hello</span></span><br></pre></td></tr></table></figure><p>当内容需要输出单引号时，用双引号括起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;I&#x27;m ready to use the single quotes inside a string!&quot;</span></span><br></pre></td></tr></table></figure><p>字符串长度检查len()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(<span class="string">&#x27;Hello World&#x27;</span>)</span><br><span class="line"><span class="comment">#结果 11，空格也算长度</span></span><br></pre></td></tr></table></figure><p>字符串索引index</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;Hello World&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment"># 结果 Hello World</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#结果H</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>])</span><br><span class="line"><span class="comment">#结果e</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>])</span><br><span class="line"><span class="comment">#结果l</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>:])</span><br><span class="line"><span class="comment">#结果ello World</span></span><br><span class="line"><span class="built_in">print</span>(s[:<span class="number">3</span>])</span><br><span class="line"><span class="comment">#结果Hel</span></span><br><span class="line"><span class="built_in">print</span>(s[:])</span><br><span class="line"><span class="comment">#结果Hello World</span></span><br><span class="line"><span class="built_in">print</span>(s[-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#结果d</span></span><br><span class="line"><span class="built_in">print</span>(s[:-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#结果 Hello Worl</span></span><br><span class="line"><span class="built_in">print</span>(s[::<span class="number">1</span>])</span><br><span class="line"><span class="comment">#结果 Hello World</span></span><br><span class="line"><span class="built_in">print</span>(s[::<span class="number">2</span>])</span><br><span class="line"><span class="comment">#结果 HloWrd</span></span><br><span class="line"><span class="built_in">print</span>(s[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#结果 dlroW olleH</span></span><br></pre></td></tr></table></figure><p>解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">H  e  l  l  o     W  o  r  l  d</span><br><span class="line"><span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>  <span class="number">10</span>     <span class="comment">#正序从0开始</span></span><br><span class="line">-<span class="number">11</span> -<span class="number">10</span> -<span class="number">9</span> -<span class="number">8</span> -<span class="number">7</span> -<span class="number">6</span> -<span class="number">5</span> -<span class="number">4</span> -<span class="number">3</span> -<span class="number">2</span> -<span class="number">1</span><span class="comment"># 倒序 从-1开始</span></span><br><span class="line"><span class="comment"># 规则前包括，后不包括</span></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">s = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">包括位置<span class="number">1</span>对应的内容，不包含位置<span class="number">3</span>对应的内容。所以结果为el</span><br><span class="line">倒序查找也是一样的。例如</span><br><span class="line"><span class="built_in">print</span>(s[-<span class="number">3</span>:-<span class="number">1</span>]) <span class="comment">#结果为ll</span></span><br><span class="line">两个冒号后面的数字是步长。</span><br><span class="line"><span class="built_in">print</span>(s[::<span class="number">2</span>]) <span class="comment">#结果为hlo </span></span><br></pre></td></tr></table></figure><p>字符串一旦被创建，就不能更改或替换其中的元素了。更改会报错。</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">s[<span class="number">0</span>] = <span class="string">&#x27;x&#x27;</span></span><br><span class="line"><span class="comment">#报错内容TypeError: &#x27;str&#x27; object does not support item assignment</span></span><br></pre></td></tr></table></figure><p>虽然不能更改元素内容，但字符串可以做拼接。</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">s = s + <span class="string">&#x27;world&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#结果 helloworld</span></span><br></pre></td></tr></table></figure><p>它也支持乘法</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">letter = <span class="string">&#x27;z&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(letter**<span class="number">10</span>)</span><br><span class="line"><span class="comment">#结果 zzzzzzzzzz</span></span><br></pre></td></tr></table></figure><h4 id="内置函数调用"><a href="#内置函数调用" class="headerlink" title="内置函数调用"></a>内置函数调用</h4><p>格式：</p><p>object.method(parameters)</p><p>对象.方法(参数)</p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">s.upper() <span class="comment">#大写</span></span><br><span class="line"><span class="comment"># 结果 &#x27;HELLO WORLD&#x27;</span></span><br><span class="line">s.lower() <span class="comment">#小写</span></span><br><span class="line"><span class="comment">#结果 &#x27;hello world&#x27;</span></span><br><span class="line">s.split(<span class="string">&#x27;w&#x27;</span>) <span class="comment">#分割，不包含被分割的元素</span></span><br><span class="line"><span class="comment">#结果 &#x27;hello &#x27;,&#x27;orld&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印格式化</p><p>我们可以使用 .format() 方法将格式化的对象添加到打印的字符串语句中。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Insert another string with curly brackets: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;The inserted string&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果&#x27;Insert another string with curly brackets: The inserted string&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h4><p>字符串格式化的三种实现方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">旧的方式是使用 % 充当占位符</span><br><span class="line">改进的方式是使用 .format()来实现</span><br><span class="line">Python 3.6 引入的最新方法使用格式化的字符串文字，称为 f-strings。</span><br></pre></td></tr></table></figure><p>举例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;I&#x27;m going to inject %s text here, and %s text here.&quot;</span> %(<span class="string">&#x27;some&#x27;</span>,<span class="string">&#x27;more&#x27;</span>))</span><br><span class="line"><span class="comment">#结果：I&#x27;m going to inject some text here, and more text here</span></span><br><span class="line"></span><br><span class="line">x, y = <span class="string">&#x27;some&#x27;</span>, <span class="string">&#x27;more&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;I&#x27;m going to inject %s text here, and %s text here.&quot;</span>%(x,y))</span><br><span class="line"><span class="comment"># 结果：I&#x27;m going to inject some text here, and more text here.</span></span><br></pre></td></tr></table></figure><h5 id="格式转换方法"><a href="#格式转换方法" class="headerlink" title="格式转换方法"></a>格式转换方法</h5><p>比较%s 和%r使用时的不同，%s 使用的是str() 函数，%r 使用的是repr()函数。%r 能够重新创建它所代表的对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I have a %r.&#x27;</span>%<span class="string">&#x27;pen&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果： I have a &#x27;pen&#x27;.</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I have a %s.&#x27;</span>%<span class="string">&#x27;pen&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果：I have a pen.</span></span><br></pre></td></tr></table></figure><p>使用%s 和%d 的区别，%s 运算符将它看到的任何内容转换为字符串，包括整数和浮点数。 %d 运算符首先将数字转换为整数，而不进行四舍五入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I have %d yuan&#x27;</span>%<span class="number">10.7</span>)</span><br><span class="line"><span class="comment">#结果：I have 10 yuan</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I have %s yuan&#x27;</span>%<span class="number">10.7</span>)</span><br><span class="line"><span class="comment"># 结果：I have 10.7 yuan</span></span><br></pre></td></tr></table></figure><p>在字符串中可以使用\t</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I once caught a fish %s.&#x27;</span> %<span class="string">&#x27;this \tbig&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果：I once caught a fish this big.</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I once caught a fish %r.&#x27;</span> %<span class="string">&#x27;this \tbig&#x27;</span>)</span><br><span class="line"><span class="comment"># 结果：I once caught a fish &#x27;this \tbig&#x27;.</span></span><br></pre></td></tr></table></figure><h5 id="浮点数的精度"><a href="#浮点数的精度" class="headerlink" title="浮点数的精度"></a>浮点数的精度</h5><p>浮点数使用格式 %5.2f。这里，5 是字符串应该包含的最小字符数；如果整个数字没有这么多数字，这些可能会用空格填充。在此旁边，.2f 代表小数点后要显示多少个数字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Floating point numbers: %5.2f&#x27;</span> %(<span class="number">13.144</span>))</span><br><span class="line"><span class="comment"># 结果：Floating point numbers: 13.14</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Floating point numbers: %1.0f&#x27;</span> %(<span class="number">13.144</span>))</span><br><span class="line"><span class="comment"># 结果：Floating point numbers: 13</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Floating point numbers: %1.5f&#x27;</span> %(<span class="number">13.144</span>))</span><br><span class="line"><span class="comment"># 结果：Floating point numbers: 13.14400</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Floating point numbers: %10.2f&#x27;</span> %(<span class="number">13.144</span>))</span><br><span class="line"><span class="comment"># 结果：Floating point numbers:      13.14</span></span><br></pre></td></tr></table></figure><p>更多格式<a href="https://docs.python.org/3/library/stdtypes.html#old-string-formatting">参考</a></p><p>多格式转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;First: %s, Second: %5.2f, Third: %r&#x27;</span> %(<span class="string">&#x27;hi!&#x27;</span>,<span class="number">3.1415</span>,<span class="string">&#x27;bye!&#x27;</span>))</span><br><span class="line"><span class="comment"># 结果：First: hi!, Second:  3.14, Third: &#x27;bye!&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="使用-format-方法"><a href="#使用-format-方法" class="headerlink" title="使用.format()方法"></a>使用.format()方法</h5><p>和%s 方法对比有以下几个优点：</p><p>1.插入位置可以根据索引位置调用</p><p>2.可以为插入的对象分配关键字</p><p>3.插入的对象可以重复使用，避免重复</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I want to play &#123;1&#125;,&#123;2&#125; and play &#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;basketball&#x27;</span>,<span class="string">&#x27;soccer&#x27;</span>,<span class="string">&#x27;ping-pong&#x27;</span>))</span><br><span class="line"><span class="comment"># 结果：I want to play soccer,ping-pong and play basketball</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I have &#123;a&#125; years old and My grandfather  have &#123;b&#125; years old!&#x27;</span>.<span class="built_in">format</span>(a=<span class="string">&#x27;20&#x27;</span>,b=<span class="string">&#x27;80&#x27;</span>))</span><br><span class="line"><span class="comment"># 结果:I have 20 years old and My grandfather  have 80 years old!</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A %s saved is a %s earned.&#x27;</span> %(<span class="string">&#x27;penny&#x27;</span>,<span class="string">&#x27;penny&#x27;</span>))</span><br><span class="line"><span class="comment"># vs.</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A &#123;p&#125; saved is a &#123;p&#125; earned.&#x27;</span>.<span class="built_in">format</span>(p=<span class="string">&#x27;penny&#x27;</span>))</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">A penny saved <span class="keyword">is</span> a penny earned.</span><br><span class="line">A penny saved <span class="keyword">is</span> a penny earned.</span><br></pre></td></tr></table></figure><p>使用 .format() 进行对齐、填充和精度</p><p>在花括号内可以设定字段长度、左对齐、右对齐等参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:8&#125; | &#123;1:9&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Fruit&#x27;</span>, <span class="string">&#x27;Quantity&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:8&#125; | &#123;1:9&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Apples&#x27;</span>, <span class="number">3.</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:8&#125; | &#123;1:9&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Oranges&#x27;</span>, <span class="number">10</span>))</span><br><span class="line"><span class="comment"># Fruit    | Quantity </span></span><br><span class="line"><span class="comment"># Apples   |       3.0</span></span><br><span class="line"><span class="comment"># Oranges  |        10</span></span><br></pre></td></tr></table></figure><p>默认情况下， .format() 将文本左对齐，数字右对齐。您可以传递可选的 &lt;、^ 或 &gt; 来设置左对齐、居中对齐或右对齐.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:&lt;8&#125; | &#123;1:^8&#125; | &#123;2:&gt;8&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Left&#x27;</span>,<span class="string">&#x27;Center&#x27;</span>,<span class="string">&#x27;Right&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:&lt;8&#125; | &#123;1:^8&#125; | &#123;2:&gt;8&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>))</span><br><span class="line"><span class="comment"># Left     |  Center  |    Right</span></span><br><span class="line"><span class="comment"># 11       |    22    |       33</span></span><br></pre></td></tr></table></figure><p>也可以在对齐运算符之前添加一个填充字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:=&lt;8&#125; | &#123;1:-^8&#125; | &#123;2:.&gt;8&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Left&#x27;</span>,<span class="string">&#x27;Center&#x27;</span>,<span class="string">&#x27;Right&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:=&lt;8&#125; | &#123;1:-^8&#125; | &#123;2:.&gt;8&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>))</span><br><span class="line">Left==== | -Center- | ...Right</span><br><span class="line"><span class="number">11</span>====== | ---<span class="number">22</span>--- | .....<span class="number">.33</span></span><br></pre></td></tr></table></figure><p>字段宽度和浮点精度的处理方式类似于占位符。以下两个打印语句是等价的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;This is my ten-character, two-decimal number:%10.2f&#x27;</span> %<span class="number">13.579</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;This is my ten-character, two-decimal number:&#123;0:10.2f&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">13.579</span>))</span><br><span class="line"><span class="comment">#This is my ten-character, two-decimal number:     13.58</span></span><br><span class="line"><span class="comment">#This is my ten-character, two-decimal number:     13.58</span></span><br></pre></td></tr></table></figure><p>解析：要求输出10个字符并且保留小数点后2位。13.58占5个字符，剩下的5个字符用空格填充。</p><p>更多.format()使用方法<a href="https://docs.python.org/3/library/string.html#formatstrings">参考</a></p><h5 id="使用f-strings"><a href="#使用f-strings" class="headerlink" title="使用f-strings"></a>使用f-strings</h5><p>在 Python 3.6 中引入的 f-strings 与上述较旧的 .format() 字符串方法相比有几个好处。一方面，您可以将外部变量立即带入字符串，而不是通过 .format(var) 将它们作为参数传递。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;Fred&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;He said his name is <span class="subst">&#123;name&#125;</span>.&quot;</span>)</span><br><span class="line"><span class="comment"># He said his name is Fred.</span></span><br></pre></td></tr></table></figure><p>通过 !r 获取字符串表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;He said his name is <span class="subst">&#123;name!r&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># He said his name is &#x27;Fred&#x27;</span></span><br></pre></td></tr></table></figure><p>浮点数使用以下格式 <code>&quot;result: &#123;value:&#123;width&#125;.&#123;precision&#125;&#125;&quot;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">23.45678</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My 10 character, four decimal number is:&#123;0:10.4f&#125;&quot;</span>.<span class="built_in">format</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;My 10 character, four decimal number is:<span class="subst">&#123;num:&#123;<span class="number">10</span>&#125;</span>.<span class="subst">&#123;<span class="number">6</span>&#125;</span>&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># My 10 character, four decimal number is:   23.4568</span></span><br><span class="line"><span class="comment"># My 10 character, four decimal number is:   23.4568</span></span><br></pre></td></tr></table></figure><p>请注意，对于 f-strings，精度是指总位数，而不仅仅是小数点后的位数。这更符合科学记数法和统计分析。不幸的是，即使精度允许，f-strings也不会填充到小数点的右侧.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">23.45</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My 10 character, four decimal number is:&#123;0:10.4f&#125;&quot;</span>.<span class="built_in">format</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;My 10 character, four decimal number is:<span class="subst">&#123;num:&#123;<span class="number">10</span>&#125;</span>.<span class="subst">&#123;<span class="number">6</span>&#125;</span>&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#My 10 character, four decimal number is:   23.4500</span></span><br><span class="line"><span class="comment">#My 10 character, four decimal number is:     23.45</span></span><br></pre></td></tr></table></figure><p>可以在f-strings 中使用.format()的语法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">23.45</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My 10 character, four decimal number is:&#123;0:10.4f&#125;&quot;</span>.<span class="built_in">format</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;My 10 character, four decimal number is:<span class="subst">&#123;num:<span class="number">10.4</span>f&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#My 10 character, four decimal number is:   23.4500</span></span><br><span class="line"><span class="comment">#My 10 character, four decimal number is:   23.4500</span></span><br></pre></td></tr></table></figure><p>更多用法<a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings">参考</a></p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><h5 id="与字符串不同，它们是可变的，这意味着列表中的元素可以更改！"><a href="#与字符串不同，它们是可变的，这意味着列表中的元素可以更改！" class="headerlink" title="与字符串不同，它们是可变的，这意味着列表中的元素可以更改！"></a>与字符串不同，它们是可变的，这意味着列表中的元素可以更改！</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将列表分配给名为my_list的变量</span></span><br><span class="line">my_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h5 id="列表可以保存不同类型的对象"><a href="#列表可以保存不同类型的对象" class="headerlink" title="列表可以保存不同类型的对象"></a>列表可以保存不同类型的对象</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">&#x27;A string&#x27;</span>,<span class="number">23</span>,<span class="number">100.232</span>,<span class="string">&#x27;o&#x27;</span>]</span><br></pre></td></tr></table></figure><h5 id="可以使用len-函数统计列表长度"><a href="#可以使用len-函数统计列表长度" class="headerlink" title="可以使用len()函数统计列表长度"></a>可以使用len()函数统计列表长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(my_list)</span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h5 id="索引和切片"><a href="#索引和切片" class="headerlink" title="索引和切片"></a>索引和切片</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;three&#x27;</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="comment"># 索引从0开始</span></span><br><span class="line">my_list[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># &#x27;one&#x27;</span></span><br><span class="line"><span class="comment">#抓取索引 1 和它之后的所有内容</span></span><br><span class="line">my_list[<span class="number">1</span>:]</span><br><span class="line"><span class="comment"># [&#x27;two&#x27;, &#x27;three&#x27;, 4, 5]</span></span><br><span class="line"><span class="comment"># 抓取索引 3 之前的所有内容</span></span><br><span class="line">my_list[:<span class="number">3</span>]</span><br><span class="line"><span class="comment"># [&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;]</span></span><br></pre></td></tr></table></figure><p>和字符串一样我们用+来连接列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_list + [<span class="string">&#x27;new item&#x27;</span>]</span><br><span class="line"><span class="comment"># [&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;, 4, 5, &#x27;new item&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="并没有改变初始的列表"><a href="#并没有改变初始的列表" class="headerlink" title="并没有改变初始的列表"></a>并没有改变初始的列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><h5 id="必须重新分配列表才能使更改永久化"><a href="#必须重新分配列表才能使更改永久化" class="headerlink" title="必须重新分配列表才能使更改永久化"></a>必须重新分配列表才能使更改永久化</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_list = my_list + [<span class="string">&#x27;add new item permanently&#x27;</span>]</span><br><span class="line">my_list</span><br><span class="line"><span class="comment"># [&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;, 4, 5, &#x27;add new item permanently&#x27;]</span></span><br></pre></td></tr></table></figure><p>我们还可以将 * 用于类似于字符串的复制方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_list * <span class="number">2</span></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;one&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;two&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;three&#x27;</span>,</span><br><span class="line"> <span class="number">4</span>,</span><br><span class="line"> <span class="number">5</span>,</span><br><span class="line"> <span class="string">&#x27;add new item permanently&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;one&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;two&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;three&#x27;</span>,</span><br><span class="line"> <span class="number">4</span>,</span><br><span class="line"> <span class="number">5</span>,</span><br><span class="line"> <span class="string">&#x27;add new item permanently&#x27;</span>]</span><br></pre></td></tr></table></figure><h5 id="字符串复制只是临时的，不是永久生效的。"><a href="#字符串复制只是临时的，不是永久生效的。" class="headerlink" title="字符串复制只是临时的，不是永久生效的。"></a>字符串复制只是临时的，不是永久生效的。</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_list</span><br><span class="line"><span class="comment">#[&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;, 4, 5, &#x27;add new item permanently&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="python中的列表有以下两个优点"><a href="#python中的列表有以下两个优点" class="headerlink" title="python中的列表有以下两个优点"></a>python中的列表有以下两个优点</h5><h6 id="没有固定大小（不用指定列表的大小）"><a href="#没有固定大小（不用指定列表的大小）" class="headerlink" title="没有固定大小（不用指定列表的大小）"></a>没有固定大小（不用指定列表的大小）</h6><h6 id="没有固定的类型约束"><a href="#没有固定的类型约束" class="headerlink" title="没有固定的类型约束"></a>没有固定的类型约束</h6><h5 id="append"><a href="#append" class="headerlink" title="append"></a>append</h5><p>使用append方法将一个项目永久添加到列表的末尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">list1.append(<span class="string">&#x27;append me!&#x27;</span>)</span><br><span class="line"><span class="comment"># Show</span></span><br><span class="line">list1</span><br><span class="line"><span class="comment"># [1, 2, 3, &#x27;append me!&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h5><p>使用 pop 从列表中“弹出”一个项目。默认情况下，pop 删除最后一个索引，但您也可以指定要弹出的索引。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1.pop(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">list1</span><br><span class="line"><span class="comment"># [2, 3, &#x27;append me!&#x27;]</span></span><br></pre></td></tr></table></figure><p>默认的弹出索引是-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">popped_item = list1.pop()</span><br><span class="line">popped_item</span><br><span class="line"><span class="comment"># &#x27;append me!&#x27;</span></span><br><span class="line">list1</span><br><span class="line"><span class="comment"># [2, 3]</span></span><br></pre></td></tr></table></figure><p>如果该索引处没有元素，则列表索引将返回错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list1[<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">IndexError                                Traceback (most recent call last)</span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">22</span>-af6d2015fa1f&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">----&gt; <span class="number">1</span> list1[<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line">IndexError: <span class="built_in">list</span> index out of <span class="built_in">range</span></span><br></pre></td></tr></table></figure><h5 id="sort-and-reverse"><a href="#sort-and-reverse" class="headerlink" title="sort and reverse"></a>sort and reverse</h5><p>使用sort排序（在这种情况下按字母顺序，但对于数字它将升序），使用reverse反转顺序（永久性的）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new_list = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">new_list</span><br><span class="line"><span class="comment"># [&#x27;a&#x27;, &#x27;e&#x27;, &#x27;x&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new_list.reverse()</span><br><span class="line">new_list</span><br><span class="line"># [&#x27;c&#x27;, &#x27;b&#x27;, &#x27;x&#x27;, &#x27;e&#x27;, &#x27;a&#x27;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new_list.sort()</span><br><span class="line">new_list</span><br><span class="line"><span class="comment"># [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;e&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h5><p>Python 数据结构的一大特点是它们支持嵌套。这意味着我们可以在数据结构中拥有数据结构。例如：列表中的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Let&#x27;s make three lists</span></span><br><span class="line">lst_1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">lst_2=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">lst_3=[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make a list of lists to form a matrix</span></span><br><span class="line">matrix = [lst_1,lst_2,lst_3]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">matrix</span><br><span class="line"><span class="comment"># [[1, 2, 3], [4, 5, 6], [7, 8, 9]]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 抓取matrix列表对象中的第一项</span></span><br><span class="line">matrix[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># [1, 2, 3]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 抓取matrix列表对象中的第一项中的第一项</span></span><br><span class="line">matrix[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 1</span></span><br></pre></td></tr></table></figure><p>通过解构 [] 中的 for 循环来构建列表理解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Build a list comprehension by deconstructing a for loop within a []</span></span><br><span class="line">first_col = [row[<span class="number">0</span>] <span class="keyword">for</span> row <span class="keyword">in</span> matrix]</span><br><span class="line">first_col</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [1, 4, 7]</span></span><br></pre></td></tr></table></figure><h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><p>映射是由键存储的对象的集合，与按相对位置存储对象的序列不同。这是一个重要的区别，因为映射不会保留顺序，因为它们具有由键定义的对象。</p><p>Python 字典由一个键和一个关联的值组成。该值几乎可以是任何 Python 对象。</p><p>用 {} 和 : 创建一个字典来表示一个键和一个值.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_dict = &#123;<span class="string">&#x27;key1&#x27;</span>:<span class="string">&#x27;value1&#x27;</span>,<span class="string">&#x27;key2&#x27;</span>:<span class="string">&#x27;value2&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="通过键来调用值"><a href="#通过键来调用值" class="headerlink" title="通过键来调用值"></a>通过键来调用值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_dict[<span class="string">&#x27;key2&#x27;</span>]</span><br><span class="line"><span class="comment"># &#x27;value2&#x27;</span></span><br></pre></td></tr></table></figure><p>字典可以保存任何类型的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_dict = &#123;<span class="string">&#x27;key1&#x27;</span>:<span class="number">123</span>,<span class="string">&#x27;key2&#x27;</span>:[<span class="number">12</span>,<span class="number">23</span>,<span class="number">33</span>],<span class="string">&#x27;key3&#x27;</span>:[<span class="string">&#x27;item0&#x27;</span>,<span class="string">&#x27;item1&#x27;</span>,<span class="string">&#x27;item2&#x27;</span>]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_dict[<span class="string">&#x27;key3&#x27;</span>]</span><br><span class="line"><span class="comment"># [&#x27;item0&#x27;, &#x27;item1&#x27;, &#x27;item2&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="通过索引来调用值"><a href="#通过索引来调用值" class="headerlink" title="通过索引来调用值"></a>通过索引来调用值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_dict[<span class="string">&#x27;key3&#x27;</span>][<span class="number">0</span>]</span><br><span class="line"><span class="comment"># &#x27;item0&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="甚至可以调用该值的方法"><a href="#甚至可以调用该值的方法" class="headerlink" title="甚至可以调用该值的方法"></a>甚至可以调用该值的方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_dict[<span class="string">&#x27;key3&#x27;</span>][<span class="number">0</span>].upper()</span><br><span class="line"><span class="comment"># &#x27;ITEM0&#x27;</span></span><br></pre></td></tr></table></figure><p>我们也可以影响键的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">my_dict[<span class="string">&#x27;key1&#x27;</span>]</span><br><span class="line"><span class="comment"># 123</span></span><br><span class="line">my_dict[<span class="string">&#x27;key1&#x27;</span>] = my_dict[<span class="string">&#x27;key1&#x27;</span>] - <span class="number">123</span></span><br><span class="line">my_dict[<span class="string">&#x27;key1&#x27;</span>]</span><br><span class="line"><span class="comment"># 0</span></span><br></pre></td></tr></table></figure><p>pyhton 有内置函数 -&#x3D; +&#x3D;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置对象等于自身减去123</span></span><br><span class="line">my_dict[<span class="string">&#x27;key1&#x27;</span>] -= <span class="number">123</span></span><br><span class="line">my_dict[<span class="string">&#x27;key1&#x27;</span>]</span><br><span class="line"><span class="comment"># -123</span></span><br></pre></td></tr></table></figure><p>我们也可以通过赋值来创建键。例如，如果我们从一个空字典开始，我们可以不断地添加。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;&#125;</span><br><span class="line">d[<span class="string">&#x27;animal&#x27;</span>] = <span class="string">&#x27;Dog&#x27;</span></span><br><span class="line">d[<span class="string">&#x27;answer&#x27;</span>] = <span class="number">42</span></span><br><span class="line">d</span><br><span class="line"><span class="comment"># &#123;&#x27;animal&#x27;: &#x27;Dog&#x27;, &#x27;answer&#x27;: 42&#125;</span></span><br></pre></td></tr></table></figure><h5 id="字典中的嵌套"><a href="#字典中的嵌套" class="headerlink" title="字典中的嵌套"></a>字典中的嵌套</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 嵌套在字典中的字典</span></span><br><span class="line">d = &#123;<span class="string">&#x27;key1&#x27;</span>:&#123;<span class="string">&#x27;nestkey&#x27;</span>:&#123;<span class="string">&#x27;subnestkey&#x27;</span>:<span class="string">&#x27;value&#x27;</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过键来调用值</span></span><br><span class="line">d[<span class="string">&#x27;key1&#x27;</span>][<span class="string">&#x27;nestkey&#x27;</span>][<span class="string">&#x27;subnestkey&#x27;</span>]</span><br><span class="line"><span class="comment"># &#x27;value&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="在字典上调用方法"><a href="#在字典上调用方法" class="headerlink" title="在字典上调用方法"></a>在字典上调用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建字典</span></span><br><span class="line">d = &#123;<span class="string">&#x27;key1&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;key2&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;key3&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line"><span class="comment">#列出所有键</span></span><br><span class="line">d.keys()</span><br><span class="line"><span class="comment">#dict_keys([&#x27;key1&#x27;, &#x27;key2&#x27;, &#x27;key3&#x27;])</span></span><br><span class="line"><span class="comment"># 获取所有值的方法</span></span><br><span class="line">d.values()</span><br><span class="line"><span class="comment">#dict_values([1, 2, 3])</span></span><br><span class="line"><span class="comment"># 返回所有项目的元组的方法</span></span><br><span class="line">d.items()</span><br><span class="line"><span class="comment">#dict_items([(&#x27;key1&#x27;, 1), (&#x27;key2&#x27;, 2), (&#x27;key3&#x27;, 3)])</span></span><br></pre></td></tr></table></figure><h4 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h4><p>在 Python 中，<strong>元组</strong>与列表非常相似，但是，与列表不同，它们是<strong>不可变</strong>的，这意味着它们不能更改。您将使用元组来表示不应更改的内容，例如一周中的几天或日历上的日期。</p><h5 id="元组的构造使用-和以逗号分隔的元素"><a href="#元组的构造使用-和以逗号分隔的元素" class="headerlink" title="元组的构造使用 () 和以逗号分隔的元素"></a>元组的构造使用 () 和以逗号分隔的元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个元组</span></span><br><span class="line">t = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 和列表一样检查长度</span></span><br><span class="line"><span class="built_in">len</span>(t)</span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 也可以混合对象类型</span></span><br><span class="line">t = (<span class="string">&#x27;one&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">t</span><br><span class="line"><span class="comment">#(&#x27;one&#x27;, 2)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 和列表一样可以用索引</span></span><br><span class="line">t[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#&#x27;one&#x27;</span></span><br><span class="line"><span class="comment"># 像列表一样切片</span></span><br><span class="line">t[-<span class="number">1</span>]</span><br><span class="line"><span class="comment">#2</span></span><br></pre></td></tr></table></figure><h5 id="元组有内置方法，但没有列表那么多。让我们看看其中的两个"><a href="#元组有内置方法，但没有列表那么多。让我们看看其中的两个" class="headerlink" title="元组有内置方法，但没有列表那么多。让我们看看其中的两个."></a>元组有内置方法，但没有列表那么多。让我们看看其中的两个.</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 .index 输入一个值并返回索引</span></span><br><span class="line">t.index(<span class="string">&#x27;one&#x27;</span>)</span><br><span class="line"><span class="comment">#0</span></span><br><span class="line"><span class="comment"># 使用 .count 计算一个值出现的次数</span></span><br><span class="line">t.count(<span class="string">&#x27;one&#x27;</span>)</span><br><span class="line"><span class="comment">#1</span></span><br></pre></td></tr></table></figure><h5 id="不变性"><a href="#不变性" class="headerlink" title="不变性"></a>不变性</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">t[<span class="number">0</span>]= <span class="string">&#x27;change&#x27;</span></span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">TypeError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">8</span>-1257c0aa9edd&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">----&gt; <span class="number">1</span> t[<span class="number">0</span>]= <span class="string">&#x27;change&#x27;</span></span><br><span class="line"></span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><p>由于这种不变性，元组不能增长。一旦创建了一个元组，我们就不能添加它。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">t.append(<span class="string">&#x27;nope&#x27;</span>)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">AttributeError                            Traceback (most recent call last)</span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">9</span>-b75f5b09ac19&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">----&gt; <span class="number">1</span> t.append(<span class="string">&#x27;nope&#x27;</span>)</span><br><span class="line"></span><br><span class="line">AttributeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;append&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="何时使用元组"><a href="#何时使用元组" class="headerlink" title="何时使用元组"></a>何时使用元组</h5><p>您可能想知道，“当元组可用的方法较少时，为什么还要使用元组呢？”老实说，元组在编程中不像列表那样经常使用，而是在需要不变性时使用。如果在您的程序中您正在传递一个对象并且需要确保它不会被更改，那么元组将成为您的解决方案。它提供了一个方便的数据完整性来源。</p><h4 id="集合和布尔值"><a href="#集合和布尔值" class="headerlink" title="集合和布尔值"></a>集合和布尔值</h4><p>集合是唯一元素的无序集合。我们可以使用 set() 函数来构造它们。让我们继续做一个设置，看看它是如何工作的。</p><h5 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="built_in">set</span>()</span><br><span class="line"><span class="comment"># 我们使用 add() 方法添加到集合</span></span><br><span class="line">x.add(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#Show</span></span><br><span class="line">x</span><br><span class="line"><span class="comment">#&#123;1&#125;</span></span><br></pre></td></tr></table></figure><p>注意大括号。这并不表示字典！尽管您可以将类比绘制为只有键的字典。</p><p>我们知道一个集合只有唯一的条目。那么当我们尝试添加已经在集合中的东西时会发生什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新增一个不同的元素</span></span><br><span class="line">x.add(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#Show</span></span><br><span class="line">x</span><br><span class="line"><span class="comment"># &#123;1, 2&#125;</span></span><br><span class="line"><span class="comment"># 尝试新增一个相同的元素</span></span><br><span class="line">x.add(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#Show</span></span><br><span class="line">x</span><br><span class="line"><span class="comment"># &#123;1, 2&#125;</span></span><br></pre></td></tr></table></figure><p>注意它不会在那里放置另一个 1 。那是因为一个集合只关心独特的元素！我们可以将具有多个重复元素的列表转换为一个集合以获取唯一元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a list with repeats</span></span><br><span class="line">list1 = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line"><span class="comment"># Cast as set to get unique values</span></span><br><span class="line"><span class="built_in">set</span>(list1)</span><br><span class="line"><span class="comment">#&#123;1, 2, 3, 4, 5, 6&#125;</span></span><br></pre></td></tr></table></figure><h5 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h5><p>Python 带有布尔值（预定义的 True 和 False 显示基本上只是整数 1 和 0）。它还有一个名为 None 的占位符对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set object to be a boolean</span></span><br><span class="line">a = <span class="literal">True</span></span><br><span class="line"><span class="comment">#Show</span></span><br><span class="line">a</span><br><span class="line"><span class="comment">#True</span></span><br></pre></td></tr></table></figure><p>我们还可以使用比较运算符来创建布尔值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Output is boolean</span></span><br><span class="line"><span class="number">1</span> &gt; <span class="number">2</span></span><br><span class="line"><span class="comment">#False</span></span><br></pre></td></tr></table></figure><p>我们可以使用 None 作为我们不想重新分配的对象的占位符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># None placeholder</span></span><br><span class="line">b = <span class="literal">None</span></span><br><span class="line"><span class="comment"># Show</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="comment">#None</span></span><br></pre></td></tr></table></figure><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><p>Python 有一个内置的 open 函数，它允许我们打开和播放基本的文件类型。首先，我们需要一个文件。</p><p>用Ipython创建一个文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%writefile test.txt</span><br><span class="line">Hello, this <span class="keyword">is</span> a quick test file.</span><br></pre></td></tr></table></figure><p>在jupyter notebooks中查看当前工作路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line"><span class="comment">#&#x27;/home/jovyan&#x27;</span></span><br></pre></td></tr></table></figure><p>也可以通过文件所在路径来打开文件。</p><h5 id="windows中使用2个斜杠-来表示路径"><a href="#windows中使用2个斜杠-来表示路径" class="headerlink" title="windows中使用2个斜杠\\来表示路径"></a>windows中使用2个斜杠\\来表示路径</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfile = <span class="built_in">open</span>(<span class="string">&quot;C:\\Users\\YourUserName\\Home\\Folder\\myfile.txt&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="linux中使用1个反斜杠-x2F-来表示路径"><a href="#linux中使用1个反斜杠-x2F-来表示路径" class="headerlink" title="linux中使用1个反斜杠&#x2F; 来表示路径"></a>linux中使用1个反斜杠&#x2F; 来表示路径</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfile = <span class="built_in">open</span>(<span class="string">&quot;/Users/YouUserName/Folder/myfile.txt&quot;</span>)</span><br></pre></td></tr></table></figure><p>打开之前创建的文件text.txt，并读取内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_file = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>)</span><br><span class="line">my_file.read()</span><br><span class="line"><span class="comment"># &#x27;Hello, this is a quick test file.&#x27;</span></span><br></pre></td></tr></table></figure><p>再次读取内容，发现读不到内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_file.read()</span><br><span class="line"><span class="comment">#&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>因为第一次内容读取之后光标位置在文件末尾并且不会还原到初始位置，所以第二次读取后，光标所在位置后面没内容，所以读不到内容。这时可以重置光标位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Seek to the start of file (index 0)</span></span><br><span class="line">my_file.seek(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#0</span></span><br></pre></td></tr></table></figure><p>再次读取内容就可以读到了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Now read again</span></span><br><span class="line">my_file.read()</span><br><span class="line"><span class="comment"># &#x27;Hello, this is a quick test file.&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="使用-readlines-方法逐行读取文件。"><a href="#使用-readlines-方法逐行读取文件。" class="headerlink" title="使用 readlines 方法逐行读取文件。"></a>使用 readlines 方法逐行读取文件。</h5><p>小心处理大文件，因为所有内容都将保存在内存中。</p><p>Readlines 返回文件中的行列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_file.seek(<span class="number">0</span>)</span><br><span class="line">my_file.readlines()</span><br><span class="line"><span class="comment">#[&#x27;Hello, this is a quick test file.&#x27;]</span></span><br></pre></td></tr></table></figure><p>使用完文件后，最好关闭它。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_file.close()</span><br></pre></td></tr></table></figure><h5 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h5><p>默认情况下，open() 函数只允许我们读取文件。</p><h5 id="我们需要传递参数“w”来覆盖文件。"><a href="#我们需要传递参数“w”来覆盖文件。" class="headerlink" title="我们需要传递参数“w”来覆盖文件。"></a>我们需要传递参数“w”来覆盖文件。</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向函数添加第二个参数“w”，它代表写入。传递 &#x27;w+&#x27; 让我们读取和写入文件</span></span><br><span class="line">my_file = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>打开带有 ‘w’ 或 ‘w+’ 的文件会截断原始文件，这意味着原始文件中的所有内容都将被删除！</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Write to the file</span></span><br><span class="line">my_file.write(<span class="string">&#x27;This is a new line&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read the file</span></span><br><span class="line">my_file.seek(<span class="number">0</span>)</span><br><span class="line">my_file.read()</span><br><span class="line"><span class="comment">#&#x27;This is a new line&#x27;</span></span><br><span class="line">my_file.close()  <span class="comment"># 当不再使用文件时记得关闭文件</span></span><br></pre></td></tr></table></figure><p>传递参数 ‘a’ 会打开文件并将指针放在末尾，因此写入的任何内容都会被附加。像 ‘w+’ 一样，’a+’ 让我们可以读取和写入文件。如果该文件不存在，将创建一个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my_file = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">my_file.write(<span class="string">&#x27;\nThis is text being appended to test.txt&#x27;</span>)</span><br><span class="line">my_file.write(<span class="string">&#x27;\nAnd another line here.&#x27;</span>)</span><br><span class="line"><span class="comment"># 23</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">my_file.seek(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(my_file.read())</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> a new line</span><br><span class="line">This <span class="keyword">is</span> text being appended to test.txt</span><br><span class="line">And another line here.</span><br><span class="line"></span><br><span class="line">my_file.close()</span><br></pre></td></tr></table></figure><h5 id="用-writefile-方式来附加内容"><a href="#用-writefile-方式来附加内容" class="headerlink" title="用%%writefile 方式来附加内容"></a>用<code>%%writefile</code> 方式来附加内容</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%%writefile -a test.txt</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> text being appended to test.txt</span><br><span class="line">And another line here.</span><br><span class="line"><span class="comment">#Appending to test.txt</span></span><br></pre></td></tr></table></figure><p>如果您希望第一行从自己的行开始，请添加一个空格，因为 Jupyter 无法识别转义序列，如 \n。</p><h5 id="遍历文件"><a href="#遍历文件" class="headerlink" title="遍历文件"></a>遍历文件</h5><p>让我们通过遍历文本文件来快速预览 for 循环。首先让我们用一些 IPython Magic 创建一个新的文本文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%%writefile test.txt</span><br><span class="line">First Line</span><br><span class="line">Second Line</span><br><span class="line"><span class="comment">#Overwriting test.txt</span></span><br></pre></td></tr></table></figure><p>现在用for循环来告诉程序每一行需要做什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">First Line</span><br><span class="line"></span><br><span class="line">Second Line</span><br></pre></td></tr></table></figure><p>注意</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们可以将“line”对象称为任何东西（参见下面的示例）。</span><br><span class="line">不使用.read()方法读取文件，就不会将整个文件存储在内存中</span><br><span class="line">注意第二行打印的缩进。这个空格在 Python 中是必需的。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pertaining to the first point above</span></span><br><span class="line"><span class="keyword">for</span> asdf <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(asdf)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">First Line</span><br><span class="line"></span><br><span class="line">Second Line</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不同架构平台下doker官方镜像包查找说明</title>
      <link href="/2022/01/04/%E4%B8%8D%E5%90%8C%E6%9E%B6%E6%9E%84%E5%B9%B3%E5%8F%B0%E4%B8%8Bdoker%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E5%8C%85%E6%9F%A5%E6%89%BE%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/01/04/%E4%B8%8D%E5%90%8C%E6%9E%B6%E6%9E%84%E5%B9%B3%E5%8F%B0%E4%B8%8Bdoker%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E5%8C%85%E6%9F%A5%E6%89%BE%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h3 id="问题出现的原因"><a href="#问题出现的原因" class="headerlink" title="问题出现的原因"></a>问题出现的原因</h3><p>我的服务器的平台架构是IBM-Z无法拉取默认的x86平台的镜像，所以需要到docker-hub上找到IBM-Z对应的镜像才能使用。</p><p>首先进入<a href="https://registry.hub.docker.com/search?q=&type=image">Docker Hub</a>查找所需镜像<br>例如我需要下载mysql镜像的IBM-Z版本</p><p>搜索mysql ，左侧筛选IBM Z.</p><p><img src="/img/postimages/%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%961.webp" alt="不同平台镜像拉取1"></p><p>选择ibmcom&#x2F;mysql-s390x</p><p><img src="/img/postimages/%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%962.webp" alt="不同平台镜像拉取2"></p><p>选择tags</p><p><img src="/img/postimages/%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%963.webp" alt="不同平台镜像拉取3"></p><p>复制5.7.34版本的下载路径，粘贴到服务器中即可下载。</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql的user表详解</title>
      <link href="/2022/01/03/mysql%E7%9A%84user%E8%A1%A8%E8%AF%A6%E8%A7%A3/"/>
      <url>/2022/01/03/mysql%E7%9A%84user%E8%A1%A8%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>mysql中引用了一张表来存储mysql的用户信息 <code>mysql.user</code></p><h3 id="基础字段"><a href="#基础字段" class="headerlink" title="基础字段"></a>基础字段</h3><p>Host：  访问数据库客户端机器的IP地址。’%’:通配符，匹配所有的ip地址<br>User：  用户名。超级管理员为root<br>authentication_string：     密码的加密字符串</p><p>要注意的是，mysql是通过用户名（user）和客户端ip（host）来唯一确定一个用户。即，可以设置同一个用户名在不同的客户端登陆时的密码不同，登陆后的权限也不同。通过查看mysql.user的表结构也可以看出，host和user是作为联合主键存在的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">desc mysql.user;</span></span><br><span class="line">+------------------------+-----------------------------------+------+-----+-----------------------+-------+</span><br><span class="line">| Field                  | Type                              | Null | Key | Default               | Extra |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+-----------------------+-------+</span><br><span class="line">| Host                   | char(60)                          | NO   | PRI |                       |       |</span><br><span class="line">| User                   | char(32)                          | NO   | PRI |                       |       |</span><br><span class="line">| Select_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Insert_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Update_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Delete_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Drop_priv              | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Reload_priv            | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Shutdown_priv          | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Process_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| File_priv              | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Grant_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| References_priv        | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Index_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Alter_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Show_db_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Super_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_tmp_table_priv  | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Lock_tables_priv       | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Execute_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Repl_slave_priv        | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Repl_client_priv       | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_view_priv       | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Show_view_priv         | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_routine_priv    | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Alter_routine_priv     | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_user_priv       | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Event_priv             | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Trigger_priv           | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| Create_tablespace_priv | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| ssl_type               | enum(&#x27;&#x27;,&#x27;ANY&#x27;,&#x27;X509&#x27;,&#x27;SPECIFIED&#x27;) | NO   |     |                       |       |</span><br><span class="line">| ssl_cipher             | blob                              | NO   |     | NULL                  |       |</span><br><span class="line">| x509_issuer            | blob                              | NO   |     | NULL                  |       |</span><br><span class="line">| x509_subject           | blob                              | NO   |     | NULL                  |       |</span><br><span class="line">| max_questions          | int(11) unsigned                  | NO   |     | 0                     |       |</span><br><span class="line">| max_updates            | int(11) unsigned                  | NO   |     | 0                     |       |</span><br><span class="line">| max_connections        | int(11) unsigned                  | NO   |     | 0                     |       |</span><br><span class="line">| max_user_connections   | int(11) unsigned                  | NO   |     | 0                     |       |</span><br><span class="line">| plugin                 | char(64)                          | NO   |     | mysql_native_password |       |</span><br><span class="line">| authentication_string  | text                              | YES  |     | NULL                  |       |</span><br><span class="line">| password_expired       | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">| password_last_changed  | timestamp                         | YES  |     | NULL                  |       |</span><br><span class="line">| password_lifetime      | smallint(5) unsigned              | YES  |     | NULL                  |       |</span><br><span class="line">| account_locked         | enum(&#x27;N&#x27;,&#x27;Y&#x27;)                     | NO   |     | N                     |       |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+-----------------------+-------+</span><br></pre></td></tr></table></figure><h3 id="权限字段"><a href="#权限字段" class="headerlink" title="权限字段"></a>权限字段</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">Select_priv：   确定用户是否可以通过SELECT命令选择数据。</span><br><span class="line"></span><br><span class="line">Insert_priv：   确定用户是否可以通过INSERT命令插入数据。</span><br><span class="line"></span><br><span class="line">Update_priv：   确定用户是否可以通过UPDATE命令修改现有数据。</span><br><span class="line"></span><br><span class="line">Delete_priv：   确定用户是否可以通过DELETE命令删除现有数据。</span><br><span class="line"></span><br><span class="line">Create_priv：   确定用户是否可以创建新的数据库和表。</span><br><span class="line"></span><br><span class="line">Drop_priv：     确定用户是否可以删除现有数据库和表。</span><br><span class="line"></span><br><span class="line">Reload_priv：   确定用户是否可以执行刷新和重新加载MySQL所用各种内部缓存的特定命令，包括日志、权限、主机、查询和表。</span><br><span class="line"></span><br><span class="line">Shutdown_priv： 确定用户是否可以关闭MySQL服务器。在将此权限提供给root账户之外的任何用户时，都应当非常谨慎。</span><br><span class="line"></span><br><span class="line">Process_priv：  确定用户是否可以通过SHOW PROCESSLIST命令查看其他用户的进程。</span><br><span class="line"></span><br><span class="line">File_priv： 确定用户是否可以执行SELECT INTO OUTFILE和LOAD DATA INFILE命令。</span><br><span class="line"></span><br><span class="line">Grant_priv：    确定用户是否可以将已经授予给该用户自己的权限再授予其他用户。例如，如果用户可以插入、选择和删除foo数据库中的信息，并且授予了GRANT权限，则该用户就可以将其任何或全部权限授予系统中的任何其他用户。</span><br><span class="line"></span><br><span class="line">References_priv：   目前只是某些未来功能的占位符；现在没有作用。</span><br><span class="line"></span><br><span class="line">Index_priv：    确定用户是否可以创建和删除表索引。</span><br><span class="line"></span><br><span class="line">Alter_priv：    确定用户是否可以重命名和修改表结构。</span><br><span class="line"></span><br><span class="line">Show_db_priv：  确定用户是否可以查看服务器上所有数据库的名字，包括用户拥有足够访问权限的数据库。可以考虑对所有用户禁用这个权限，除非有特别不可抗拒的原因。</span><br><span class="line"></span><br><span class="line">Super_priv：    确定用户是否可以执行某些强大的管理功能，例如通过KILL命令删除用户进程，使用SET GLOBAL修改全局MySQL变量，执行关于复制和日志的各种命令。</span><br><span class="line"></span><br><span class="line">Create_tmp_table_priv： 确定用户是否可以创建临时表。</span><br><span class="line"></span><br><span class="line">Lock_tables_priv：  确定用户是否可以使用LOCK TABLES命令阻止对表的访问/修改。</span><br><span class="line"></span><br><span class="line">Execute_priv：  确定用户是否可以执行存储过程。此权限只在MySQL 5.0及更高版本中有意义。</span><br><span class="line"></span><br><span class="line">Repl_slave_priv：   确定用户是否可以读取用于维护复制数据库环境的二进制日志文件。此用户位于主系统中，有利于主机和客户机之间的通信。</span><br><span class="line"></span><br><span class="line">Repl_client_priv：  确定用户是否可以确定复制从服务器和主服务器的位置。</span><br><span class="line"></span><br><span class="line">Create_view_priv：  确定用户是否可以创建视图。此权限只在MySQL 5.0及更高版本中有意义。关于视图的更多信息，参见第34章。</span><br><span class="line"></span><br><span class="line">Show_view_priv：    确定用户是否可以查看视图或了解视图如何执行。此权限只在MySQL 5.0及更高版本中有意义。</span><br><span class="line"></span><br><span class="line">Create_routine_priv：   确定用户是否可以更改或放弃存储过程和函数。此权限是在MySQL 5.0中引入的。</span><br><span class="line"></span><br><span class="line">Alter_routine_priv：    确定用户是否可以修改或删除存储函数及函数。此权限是在MySQL 5.0中引入的。</span><br><span class="line"></span><br><span class="line">Create_user_priv：  确定用户是否可以执行CREATE USER命令，这个命令用于创建新的MySQL账户。</span><br><span class="line"></span><br><span class="line">Event_priv：    确定用户能否创建、修改和删除事件。这个权限是MySQL 5.1.6新增的。</span><br><span class="line"></span><br><span class="line">Trigger_priv：  确定用户能否创建和删除触发器，这个权限是MySQL 5.1.6新增的。</span><br></pre></td></tr></table></figure><h3 id="mysql-db表"><a href="#mysql-db表" class="headerlink" title="mysql.db表"></a>mysql.db表</h3><p>user表中的每项权限为Y的时候，则代表该用户对所有数据库的所有表都拥有该权限。<br>而如果某个用户只对单独的某个数据库的某张表有该权限时，则user表中该权限对应的字段为N，并在db表中添加一条记录用来标识此项权限。</p><p>测试失败。给某个用户添加了一个权限，但是mysql.db中并没有增加记录。</p><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user &#x27;username&#x27;@&#x27;host&#x27; identified by &#x27;password&#x27;; (不建议用)</span><br></pre></td></tr></table></figure><p>如果不填host（<code>create user &#39;username&#39; identified by &#39;password&#39;;</code>），则默认为%:即所有ip的客户端均可访问。</p><h3 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 赋予单个权限</span><br><span class="line">grant all on database_name.table_name to &#x27;username&#x27;@&#x27;host&#x27; [identified by &#x27;password&#x27;];</span><br><span class="line"></span><br><span class="line">-- 赋予多个权限</span><br><span class="line">grant insert, select on database_name.table_name to &#x27;username&#x27;@&#x27;host&#x27; [identified by &#x27;password&#x27;];</span><br></pre></td></tr></table></figure><p>常见权限有：all, create, drop, insert, update, delete, select等。<br>如果带上[]里面的内则相当于修改此用户的密码。</p><p>这里发现一个问题，当修改密码或修改权限时，如果此用户已经登陆，则不会立刻受到权限修改的影响（过一段时间以后会不会影响暂没做测试。），还是可以正常的使用已经收回的权限。</p><h3 id="收回权限"><a href="#收回权限" class="headerlink" title="收回权限"></a>收回权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 收回单个权限</span><br><span class="line">revoke all on database_name.table_name from &#x27;username&#x27;@&#x27;host&#x27;;</span><br><span class="line"></span><br><span class="line">-- 收回多个权限</span><br><span class="line">revoke select, insert on database_name.table_name from &#x27;username&#x27;@&#x27;host&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>与赋予权限不一样的是，收回权限时不允许同时修改密码，而且将<code>to user</code> 改为 <code>from user</code>。</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure><h3 id="查看某个用户的权限"><a href="#查看某个用户的权限" class="headerlink" title="查看某个用户的权限"></a>查看某个用户的权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show grants for &#x27;username&#x27;@&#x27;host&#x27;;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants for root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON &#x27;&#x27;@&#x27;&#x27; TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看MYSQL数据库中所有用户"><a href="#查看MYSQL数据库中所有用户" class="headerlink" title="查看MYSQL数据库中所有用户"></a>查看MYSQL数据库中所有用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT DISTINCT CONCAT(<span class="string">&#x27;User: &#x27;</span><span class="string">&#x27;&#x27;</span>,user,<span class="string">&#x27;&#x27;&#x27;@&#x27;&#x27;&#x27;</span>,host,<span class="string">&#x27;&#x27;&#x27;;&#x27;) AS query FROM mysql.user;</span></span><br><span class="line"><span class="string">+------------------------------------+</span></span><br><span class="line"><span class="string">| query                              |</span></span><br><span class="line"><span class="string">+------------------------------------+</span></span><br><span class="line"><span class="string">| User: &#x27;root&#x27;@&#x27;%&#x27;;                  |</span></span><br><span class="line"><span class="string">| User: &#x27;mysql.session&#x27;@&#x27;localhost&#x27;; |</span></span><br><span class="line"><span class="string">| User: &#x27;mysql.sys&#x27;@&#x27;localhost&#x27;;     |</span></span><br><span class="line"><span class="string">| User: &#x27;root&#x27;@&#x27;localhost&#x27;;          |</span></span><br><span class="line"><span class="string">+------------------------------------+</span></span><br><span class="line"><span class="string">4 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure><h3 id="查看数据库中具体某个用户的权限"><a href="#查看数据库中具体某个用户的权限" class="headerlink" title="查看数据库中具体某个用户的权限"></a>查看数据库中具体某个用户的权限</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants <span class="keyword">for</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> root@%                                           |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> WITH GRANT OPTION |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="查看user表中某个用户的具体权限"><a href="#查看user表中某个用户的具体权限" class="headerlink" title="查看user表中某个用户的具体权限"></a>查看user表中某个用户的具体权限</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * <span class="keyword">from</span> mysql.user where user=<span class="string">&#x27;root&#x27;</span> \G;</span><br><span class="line">*************************** <span class="number">1.</span> row ***************************</span><br><span class="line">                  Host: localhost</span><br><span class="line">                  User: root</span><br><span class="line">           Select_priv: Y</span><br><span class="line">           Insert_priv: Y</span><br><span class="line">           Update_priv: Y</span><br><span class="line">           Delete_priv: Y</span><br><span class="line">           Create_priv: Y</span><br><span class="line">             Drop_priv: Y</span><br><span class="line">           Reload_priv: Y</span><br><span class="line">         Shutdown_priv: Y</span><br><span class="line">          Process_priv: Y</span><br><span class="line">             File_priv: Y</span><br><span class="line">            Grant_priv: Y</span><br><span class="line">       References_priv: Y</span><br><span class="line">            Index_priv: Y</span><br><span class="line">            Alter_priv: Y</span><br><span class="line">          Show_db_priv: Y</span><br><span class="line">            Super_priv: Y</span><br><span class="line"> Create_tmp_table_priv: Y</span><br><span class="line">      Lock_tables_priv: Y</span><br><span class="line">          Execute_priv: Y</span><br><span class="line">       Repl_slave_priv: Y</span><br><span class="line">      Repl_client_priv: Y</span><br><span class="line">      Create_view_priv: Y</span><br><span class="line">        Show_view_priv: Y</span><br><span class="line">   Create_routine_priv: Y</span><br><span class="line">    Alter_routine_priv: Y</span><br><span class="line">      Create_user_priv: Y</span><br><span class="line">            Event_priv: Y</span><br><span class="line">          Trigger_priv: Y</span><br><span class="line">Create_tablespace_priv: Y</span><br><span class="line">              ssl_type: </span><br><span class="line">            ssl_cipher: </span><br><span class="line">           x509_issuer: </span><br><span class="line">          x509_subject: </span><br><span class="line">         max_questions: <span class="number">0</span></span><br><span class="line">           max_updates: <span class="number">0</span></span><br><span class="line">       max_connections: <span class="number">0</span></span><br><span class="line">  max_user_connections: <span class="number">0</span></span><br><span class="line">                plugin: mysql_native_password</span><br><span class="line"> authentication_string: *064C811C8A9344D23DFC73BDBE590528C07A6FCC</span><br><span class="line">      password_expired: N</span><br><span class="line"> password_last_changed: <span class="number">2022</span>-07-<span class="number">26</span> <span class="number">13</span>:03:<span class="number">51</span></span><br><span class="line">     password_lifetime: NULL</span><br><span class="line">        account_locked: N</span><br></pre></td></tr></table></figure><h3 id="修改账号密码"><a href="#修改账号密码" class="headerlink" title="修改账号密码"></a>修改账号密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 修改当前登录账号的密码</span><br><span class="line">set password = password(&#x27;pwd&#x27;);</span><br><span class="line"></span><br><span class="line">-- 修改别的账号密码</span><br><span class="line">set password for &#x27;username&#x27;@&#x27;host&#x27; = password(&#x27;pwd&#x27;);</span><br><span class="line"></span><br><span class="line">-- 可以使用赋予权限的方式修改密码（上文提到过），用此种方式时最好赋予的是登陆权限，这样可以不影响账号当前的权限。</span><br><span class="line">grant usage on *.* to &#x27;username&#x27;@&#x27;host&#x27; identified by &#x27;pwd&#x27;;</span><br></pre></td></tr></table></figure><h3 id="mysql的各种权限（共27种）"><a href="#mysql的各种权限（共27种）" class="headerlink" title="mysql的各种权限（共27种）"></a>mysql的各种权限（共27种）</h3><p>（以下操作都是以root身份登陆进行grant授权，以p1@localhost身份登陆执行各种命令。）</p><h4 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h4><p>连接（登陆）权限，建立一个用户，就会自动授予其usage权限（默认授予）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant usage on *.* to &#x27;p1&#x27;@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span><br></pre></td></tr></table></figure><p>该权限只能用于数据库登陆，不能执行任何操作；且usage权限不能被回收，也即REVOKE用户并不能删除用户。</p><h4 id="select"><a href="#select" class="headerlink" title="select"></a>select</h4><p>必须有select的权限，才可以使用select table</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant select on pyt.* to ‘p1′@’localhost’;</span><br><span class="line">select * from shop;</span><br></pre></td></tr></table></figure><h4 id="create"><a href="#create" class="headerlink" title="create"></a>create</h4><p>必须有create的权限，才可以使用create table</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant create on pyt.* to ‘p1′@’localhost’;</span><br></pre></td></tr></table></figure><h4 id="create-routine"><a href="#create-routine" class="headerlink" title="create routine"></a>create routine</h4><p>必须具有create routine的权限，才可以使用{create | alter | drop} {procedure | function}</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">grant create routine on pyt.* to ‘p1′@’localhost’;</span><br><span class="line">-- 当授予create routine时，自动授予EXECUTE, ALTER ROUTINE权限给它的创建者：</span><br><span class="line"></span><br><span class="line">show grants for ‘p1′@’localhost’;</span><br><span class="line"> </span><br><span class="line">+—————————————————————————+</span><br><span class="line">Grants for p1@localhost</span><br><span class="line">+————————————————————————–+</span><br><span class="line">| GRANT USAGE ON *.* TO ‘p1′@’localhost’ IDENTIFIED BY PASSWORD ‘*23AE809DDACAF96AF0FD78ED04B6A265E05AA257′ |</span><br><span class="line">| GRANT SELECT, CREATE, CREATE ROUTINE ON `pyt`.* TO ‘p1′@’localhost’|</span><br><span class="line">| GRANT EXECUTE, ALTER ROUTINE ON PROCEDURE `pyt`.`pro_shop1` TO ‘p1′@’localhost’ |</span><br><span class="line">+————————————————————————————-+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="create-temporary-tables-注意这里是tables，不是table"><a href="#create-temporary-tables-注意这里是tables，不是table" class="headerlink" title="create temporary tables(注意这里是tables，不是table)"></a>create temporary tables(注意这里是tables，不是table)</h4><p>必须有create temporary tables的权限，才可以使用create temporary tables.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant create temporary tables on pyt.* to ‘p1′@’localhost’;</span><br><span class="line">[mysql@mydev ~]$ mysql -h localhost -u p1 -p pyt</span><br><span class="line">create temporary table tt1(id int);</span><br></pre></td></tr></table></figure><h4 id="create-view"><a href="#create-view" class="headerlink" title="create view"></a>create view</h4><p>必须有create view的权限，才可以使用create view</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant create view on pyt.* to ‘p1′@’localhost’;</span><br><span class="line">create view v_shop as select price from shop;</span><br></pre></td></tr></table></figure><h4 id="create-user"><a href="#create-user" class="headerlink" title="create user"></a>create user</h4><p>要使用CREATE USER，必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant create user on *.* to ‘p1′@’localhost’;</span><br><span class="line">-- 也可以使用</span><br><span class="line">grant insert on *.* to p1@localhost;</span><br></pre></td></tr></table></figure><h4 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h4><p>必须有insert的权限，才可以使用insert into …… values….</p><h4 id="alter"><a href="#alter" class="headerlink" title="alter"></a>alter</h4><p>必须有alter的权限，才可以使用alter table</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table shop modify dealer char(15);</span><br></pre></td></tr></table></figure><h4 id="alter-routine"><a href="#alter-routine" class="headerlink" title="alter routine"></a>alter routine</h4><p>必须具有alter routine的权限，才可以使用{alter |drop} {procedure|function}</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grant alter routine on pyt.* to ‘p1′@’ localhost ‘;</span><br><span class="line">drop procedure pro_shop;</span><br><span class="line"> </span><br><span class="line">revoke alter routine on pyt.* from ‘p1′@’localhost’;</span><br><span class="line"></span><br><span class="line">[mysql@mydev ~]$ mysql -h localhost -u p1 -p pyt</span><br><span class="line"></span><br><span class="line">drop procedure pro_shop;</span><br><span class="line"></span><br><span class="line">ERROR 1370 (42000): alter routine command denied to user ‘p1′@’localhost’ for routine ‘pyt.pro_shop’</span><br></pre></td></tr></table></figure><h4 id="update"><a href="#update" class="headerlink" title="update"></a>update</h4><p>必须有update的权限，才可以使用update table</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update shop set price=3.5 where article=0001 and dealer=’A’;</span><br></pre></td></tr></table></figure><h4 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h4><p>必须有delete的权限，才可以使用delete from ….where….(删除表中的记录)</p><h4 id="drop"><a href="#drop" class="headerlink" title="drop"></a>drop</h4><p>必须有drop的权限，才可以使用drop database db_name; drop table tab_name;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view vi_name; drop index in_name;</span><br></pre></td></tr></table></figure><h4 id="show-database"><a href="#show-database" class="headerlink" title="show database"></a>show database</h4><p>通过show database只能看到你拥有的某些权限的数据库，除非你拥有全局SHOW DATABASES权限。</p><p>对于p1@localhost用户来说，没有对mysql数据库的权限，所以以此身份登陆查询时，无法看到mysql数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line">+——————–+</span><br><span class="line">| Database |</span><br><span class="line">+——————–+</span><br><span class="line">| information_schema|</span><br><span class="line">| pyt |</span><br><span class="line">| test |</span><br><span class="line">+——————–+</span><br></pre></td></tr></table></figure><h4 id="show-view"><a href="#show-view" class="headerlink" title="show view"></a>show view</h4><p>必须拥有show view权限，才能执行show create view。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant show view on pyt.* to p1@localho</span><br><span class="line">show create view v_shop;</span><br></pre></td></tr></table></figure><h4 id="index"><a href="#index" class="headerlink" title="index"></a>index</h4><p>必须拥有index权限，才能执行[create |drop] index</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant index on pyt.* to p1@localhost;</span><br><span class="line">create index ix_shop on shop(article);</span><br><span class="line">drop index ix_shop on shop;</span><br></pre></td></tr></table></figure><h4 id="excute"><a href="#excute" class="headerlink" title="excute"></a>excute</h4><p>执行存在的Functions,Procedures</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">call pro_shop1(0001,@a)；</span><br><span class="line">+———+</span><br><span class="line">| article |</span><br><span class="line">+———+</span><br><span class="line">| 0001 |</span><br><span class="line">| 0001 |</span><br><span class="line">+———+</span><br><span class="line">select @a;</span><br><span class="line">+——+</span><br><span class="line">| @a |</span><br><span class="line">+——+</span><br><span class="line">| 2 |</span><br><span class="line">+——+</span><br></pre></td></tr></table></figure><h4 id="lock-tables"><a href="#lock-tables" class="headerlink" title="lock tables"></a>lock tables</h4><p>必须拥有lock tables权限，才可以使用lock tables</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant lock tables on pyt.* to p1@localhost;</span><br><span class="line">lock tables a1 read;</span><br><span class="line">unlock tables;</span><br></pre></td></tr></table></figure><h4 id="references"><a href="#references" class="headerlink" title="references"></a>references</h4><p>有了REFERENCES权限，用户就可以将其它表的一个字段作为某一个表的外键约束。</p><h4 id="reload"><a href="#reload" class="headerlink" title="reload"></a>reload</h4><p>必须拥有reload权限，才可以执行flush [tables | logs | privileges]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grant reload on pyt.* to p1@localhost;</span><br><span class="line">ERROR 1221 (HY000): Incorrect usage of DB GRANT and GLOBAL PRIVILEGES</span><br><span class="line">grant reload on *.* to ‘p1′@’localhost’;</span><br><span class="line">flush tables;</span><br></pre></td></tr></table></figure><h4 id="replication-client"><a href="#replication-client" class="headerlink" title="replication client"></a>replication client</h4><p>拥有此权限可以查询master server、slave server状态。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show master status;</span><br><span class="line">ERROR 1227 (42000): Access denied; you need the SUPER,REPLICATION CLIENT privilege for this operation</span><br><span class="line">grant Replication client on *.* to p1@localhost;</span><br><span class="line">-- 也可以使用下面的命令</span><br><span class="line">grant super on *.* to p1@localhost;</span><br><span class="line">show master status;</span><br><span class="line">+——————+———-+————–+——————+</span><br><span class="line">| File | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+——————+———-+————–+——————+</span><br><span class="line">| mysql-bin.000006 | 2111 | | |</span><br><span class="line">+——————+———-+————–+——————+</span><br><span class="line">show slave status;</span><br></pre></td></tr></table></figure><h4 id="replication-slave"><a href="#replication-slave" class="headerlink" title="replication slave"></a>replication slave</h4><p>拥有此权限可以查看从服务器，从主服务器读取二进制日志。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show slave hosts;</span><br><span class="line">ERROR 1227 (42000): Access denied; you need the REPLICATION SLAVE privilege for this operation</span><br><span class="line">show binlog events;</span><br><span class="line">ERROR 1227 (42000): Access denied; you need the REPLICATION SLAVE privilege for this operation</span><br><span class="line">grant replication slave on *.* to p1@localhost;</span><br><span class="line">show slave hosts;</span><br><span class="line">show binlog events;</span><br><span class="line">+—————+——-+—————-+———–+————-+————–+</span><br><span class="line">| Log_name | Pos | Event_type | Server_id| End_log_pos|Info |</span><br><span class="line">+—————+——-+————–+———–+————-+—————+</span><br><span class="line">| mysql-bin.000005 | 4 | Format_desc | 1 | 98 | Server ver: 5.0.77-log, Binlog ver: 4 | |mysql-bin.000005|98|Query|1|197|use `mysql`; create table a1(i int)engine=myisam|</span><br><span class="line">……………………………………</span><br></pre></td></tr></table></figure><h4 id="Shutdown"><a href="#Shutdown" class="headerlink" title="Shutdown"></a>Shutdown</h4><p>关闭MySQL：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[mysql@mydev ~]$ mysqladmin shutdown</span><br><span class="line">重新连接：</span><br><span class="line">[mysql@mydev ~]$ mysql</span><br><span class="line">4 ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)</span><br><span class="line">[mysql@mydev ~]$ cd /u01/mysql/bin</span><br><span class="line">[mysql@mydev bin]$ ./mysqld_safe &amp;</span><br><span class="line">[mysql@mydev bin]$ mysql</span><br></pre></td></tr></table></figure><h4 id="grant-option"><a href="#grant-option" class="headerlink" title="grant option"></a>grant option</h4><p>拥有grant option，就可以将自己拥有的权限授予其他用户（仅限于自己已经拥有的权限）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant Grant option on pyt.* to p1@localhost;</span><br><span class="line">grant select on pyt.* to p2@localhost;</span><br></pre></td></tr></table></figure><h4 id="ile"><a href="#ile" class="headerlink" title="ile"></a>ile</h4><p>拥有file权限才可以执行 select …into outfile和load data infile…操作，但是不要把file, process, super权限授予管理员以外的账号，这样存在严重的安全隐患。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant file on *.* to p1@localhost;</span><br><span class="line">load data infile ‘/home/mysql/pet.txt’ into table pet;</span><br></pre></td></tr></table></figure><h4 id="super"><a href="#super" class="headerlink" title="super"></a>super</h4><p>这个权限允许用户终止任何查询；修改全局变量的SET语句；使用CHANGE MASTER，PURGE MASTER LOGS。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant super on *.* to p1@localhost;</span><br><span class="line">purge master logs before ‘mysql-bin.000006′;</span><br></pre></td></tr></table></figure><h4 id="process"><a href="#process" class="headerlink" title="process"></a>process</h4><p>通过这个权限，用户可以执行SHOW PROCESSLIST和KILL命令。默认情况下，每个用户都可以执行SHOW PROCESSLIST命令，但是只能查询本用户的进程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">show processlist;</span><br><span class="line">+—-+——+———–+——+———+——+——-+——————+</span><br><span class="line">| Id | User | Host | db | Command | Time | State | Info |</span><br><span class="line">+—-+——+———–+——+———+——+——-+——————+</span><br><span class="line">| 12 | p1 | localhost | pyt | Query | 0 | NULL | show processlist |</span><br><span class="line">+—-+——+———–+——+———+——+——-+——————+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql常用命令总结</title>
      <link href="/2022/01/03/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
      <url>/2022/01/03/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><h4 id="连接本地数据库与远程数据库-10-4-xx-xx-3306"><a href="#连接本地数据库与远程数据库-10-4-xx-xx-3306" class="headerlink" title="连接本地数据库与远程数据库(10.4.xx.xx:3306)"></a>连接本地数据库与远程数据库(10.4.xx.xx:3306)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -u root -p123</span><br><span class="line"></span><br><span class="line">mysql -h 10.4.xx.xx -P 3306 -u root -p</span><br></pre></td></tr></table></figure><h4 id="显示数据库列表"><a href="#显示数据库列表" class="headerlink" title="显示数据库列表"></a>显示数据库列表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h4 id="显示库中的数据表"><a href="#显示库中的数据表" class="headerlink" title="显示库中的数据表"></a>显示库中的数据表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h4 id="显示数据表的结构"><a href="#显示数据表的结构" class="headerlink" title="显示数据表的结构"></a>显示数据表的结构</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe 表名;</span><br></pre></td></tr></table></figure><p>默认表结构类型为MYISAM,并在&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;abc 目录下建立student.frm(表定义文件)，student.MDY(数据文件)，student.MYI(索引文件)。</p><h4 id="建库"><a href="#建库" class="headerlink" title="建库"></a>建库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 库名;</span><br></pre></td></tr></table></figure><h4 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table 表名 (字段设定列表);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">create table <span class="built_in">test</span> (<span class="built_in">id</span> int(20));</span></span><br></pre></td></tr></table></figure><h4 id="删库和删表"><a href="#删库和删表" class="headerlink" title="删库和删表"></a>删库和删表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop database 库名;</span><br><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure><h4 id="将表中记录清空"><a href="#将表中记录清空" class="headerlink" title="将表中记录清空"></a>将表中记录清空</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">内容清空，自增<span class="built_in">id</span>不会被清掉，自增<span class="built_in">id</span>会保留</span></span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash"><span class="built_in">truncate</span> table <span class="built_in">users</span>;</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">数据库返回：“Query OK, 0 rows affected (0.04 sec)”</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">（成功返回0）（自增<span class="built_in">id</span>也一同会被清掉)</span></span><br></pre></td></tr></table></figure><h4 id="显示表中的记录"><a href="#显示表中的记录" class="headerlink" title="显示表中的记录"></a>显示表中的记录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名;</span><br></pre></td></tr></table></figure><h3 id="库的基本操作"><a href="#库的基本操作" class="headerlink" title="库的基本操作"></a>库的基本操作</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">create database ceshi;</span></span><br></pre></td></tr></table></figure><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">use ceshi;</span></span><br></pre></td></tr></table></figure><h4 id="查看当前使用的数据库"><a href="#查看当前使用的数据库" class="headerlink" title="查看当前使用的数据库"></a>查看当前使用的数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">select database();</span></span><br></pre></td></tr></table></figure><h4 id="当前数据库包含的表信息"><a href="#当前数据库包含的表信息" class="headerlink" title="当前数据库包含的表信息"></a>当前数据库包含的表信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show tables;</span> </span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">drop database ceshi;</span></span><br></pre></td></tr></table></figure><h3 id="表的基本操作"><a href="#表的基本操作" class="headerlink" title="表的基本操作"></a>表的基本操作</h3><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table &lt;表名&gt; (&lt;字段名 1&gt; &lt;类型 1&gt; [,..&lt;字段名 n&gt; &lt;类型 n&gt;]);</span><br></pre></td></tr></table></figure><p><strong>例如</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">create table Class(</span></span><br><span class="line">id int(4) not null primary key auto_increment, </span><br><span class="line">name varchar(25) not null, </span><br><span class="line">age int (4) not null default&#x27;0&#x27;);    </span><br><span class="line"><span class="meta"># </span><span class="language-bash">default<span class="string">&#x27;0&#x27;</span> 设置默认值为0 ,not null(不能为空) ,primary key（主键）,auto_increment（自增长）</span></span><br></pre></td></tr></table></figure><h4 id="获取表结构"><a href="#获取表结构" class="headerlink" title="获取表结构"></a>获取表结构</h4><h5 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名，或者show columns from 表名</span><br></pre></td></tr></table></figure><p><strong>例如</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">desc Class;</span></span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">describe Class;</span></span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show columns from Class;</span></span><br></pre></td></tr></table></figure><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><h5 id="命令-2"><a href="#命令-2" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into &lt;表名&gt; [( &lt;字段名 1&gt;[,..&lt;字段名 n &gt; ])] values ( 值 1 )[, ( 值 n )]</span><br></pre></td></tr></table></figure><p><strong>例如</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">insert into Class values(1,<span class="string">&#x27;Wrry&#x27;</span>,26),(2,<span class="string">&#x27;ZJW&#x27;</span>,28);</span></span><br></pre></td></tr></table></figure><h4 id="查询表中的数据"><a href="#查询表中的数据" class="headerlink" title="查询表中的数据"></a>查询表中的数据</h4><h5 id="查询所有行"><a href="#查询所有行" class="headerlink" title="查询所有行"></a>查询所有行</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">select * from Class;</span></span><br></pre></td></tr></table></figure><h5 id="查询前几行数据"><a href="#查询前几行数据" class="headerlink" title="查询前几行数据"></a>查询前几行数据</h5><p><strong>例如:查看表 Class 中前 3 行数据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">select * from Class <span class="built_in">limit</span> 0,3;</span></span><br></pre></td></tr></table></figure><p><strong>或者</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">select * from Class order by <span class="built_in">id</span> <span class="built_in">limit</span> 0,3;    <span class="comment"># order by id:以id排序</span></span></span><br></pre></td></tr></table></figure><h4 id="删除表中数据"><a href="#删除表中数据" class="headerlink" title="删除表中数据"></a>删除表中数据</h4><h5 id="命令-3"><a href="#命令-3" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 where 表达式;</span><br></pre></td></tr></table></figure><h5 id="例如-删除表-Class-中编号为-6-的记录"><a href="#例如-删除表-Class-中编号为-6-的记录" class="headerlink" title="例如:删除表 Class 中编号为 6 的记录"></a>例如:删除表 Class 中编号为 6 的记录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">delete from MyClass <span class="built_in">where</span> <span class="built_in">id</span>=6;</span></span><br></pre></td></tr></table></figure><h4 id="修改表中数据"><a href="#修改表中数据" class="headerlink" title="修改表中数据"></a>修改表中数据</h4><h5 id="命令-4"><a href="#命令-4" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 字段=新值,... where 条件;</span><br></pre></td></tr></table></figure><h5 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">update Class <span class="built_in">set</span> name=<span class="string">&#x27;AI&#x27;</span> <span class="built_in">where</span> <span class="built_in">id</span>=1;</span></span><br></pre></td></tr></table></figure><h4 id="在表中增加字段"><a href="#在表中增加字段" class="headerlink" title="在表中增加字段"></a>在表中增加字段</h4><h5 id="命令-5"><a href="#命令-5" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add 字段 类型 其他;</span><br></pre></td></tr></table></figure><h5 id="例如-在表-Class-中添加了一个字段-sex-类型为-varchar-25-默认值为-0"><a href="#例如-在表-Class-中添加了一个字段-sex-类型为-varchar-25-默认值为-0" class="headerlink" title="例如:在表 Class 中添加了一个字段 sex,类型为 varchar(25),默认值为 0"></a>例如:在表 Class 中添加了一个字段 sex,类型为 varchar(25),默认值为 0</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">alter table Class add sex varchar(25) default <span class="string">&#x27;0&#x27;</span>;</span></span><br></pre></td></tr></table></figure><h4 id="更改表名"><a href="#更改表名" class="headerlink" title="更改表名"></a>更改表名</h4><h5 id="命令-6"><a href="#命令-6" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename table 原表名 to 新表名;</span><br></pre></td></tr></table></figure><h5 id="例如-在表-Class-名字更改为-MClass"><a href="#例如-在表-Class-名字更改为-MClass" class="headerlink" title="例如:在表 Class 名字更改为 MClass"></a>例如:在表 Class 名字更改为 MClass</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">rename table Class to MClass;</span></span><br></pre></td></tr></table></figure><h4 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table 新表名 like 原表名称;</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">create table Test like <span class="built_in">test</span>;</span></span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令:drop table &lt;表名&gt;</span><br></pre></td></tr></table></figure><h5 id="例如-删除表名为-MClass-的表"><a href="#例如-删除表名为-MClass-的表" class="headerlink" title="例如:删除表名为 MClass 的表"></a>例如:删除表名为 MClass 的表</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">drop table MClass;</span></span><br></pre></td></tr></table></figure><p>更多操作<a href="https://www.w3school.com.cn/sql/sql_autoincrement.asp">参考</a></p><h3 id="Mysql查看触发器"><a href="#Mysql查看触发器" class="headerlink" title="Mysql查看触发器"></a>Mysql查看触发器</h3><h4 id="连接数据库并进入库"><a href="#连接数据库并进入库" class="headerlink" title="连接数据库并进入库"></a>连接数据库并进入库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br></pre></td></tr></table></figure><h4 id="查看当前库中所有表的触发器"><a href="#查看当前库中所有表的触发器" class="headerlink" title="查看当前库中所有表的触发器"></a>查看当前库中所有表的触发器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show triggers \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             Trigger: trigupdate</span><br><span class="line">               Event: UPDATE</span><br><span class="line">               Table: account</span><br><span class="line">           Statement: INSERT INTO myevent VALUES(1,&#x27;after update&#x27;)</span><br><span class="line">              Timing: AFTER</span><br><span class="line">             Created: NULL</span><br><span class="line">            sql_mode: </span><br><span class="line">             Definer: root@localhost</span><br><span class="line">character_set_client: utf8</span><br><span class="line">collation_connection: utf8_general_ci</span><br><span class="line">  Database Collation: utf8_general_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure><h4 id="触发器的创建"><a href="#触发器的创建" class="headerlink" title="触发器的创建"></a>触发器的创建</h4><p>新建表account，表中有两个字段，分别是 INT 类型的 accnum 和 DECIMAL 类型的 amount。SQL 语句和运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE account(</span><br><span class="line">       accnum INT(4),</span><br><span class="line">       amount DECIMAL(10,2));</span><br><span class="line">Query OK, 0 rows affected (0.49 sec)</span><br></pre></td></tr></table></figure><p>创建一个名为 trigupdate 的触发器，每次 account 表更新数据之后都向 myevent 数据表中插入一条数据。创建数据表 myevent 的 SQL 语句和运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE myevent(</span><br><span class="line">       id INT(11) DEFAULT NULL,</span><br><span class="line">       evtname CHAR(20) DEFAULT NULL);</span><br><span class="line">Query OK, 0 rows affected (0.26 sec)</span><br></pre></td></tr></table></figure><p>创建 trigupdate 触发器的 SQL 代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TRIGGER trigupdate AFTER UPDATE ON account</span><br><span class="line">       FOR EACH ROW INSERT INTO myevent VALUES(1,&#x27;after update&#x27;);</span><br><span class="line">Query OK, 0 rows affected (0.15 sec)</span><br></pre></td></tr></table></figure><p>使用 SHOW TRIGGERS 语句查看触发器（在 SHOW TRIGGERS 命令后添加<code>\G</code>，这样显示信息会比较有条理），SQL 语句和运行结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show triggers\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             Trigger: trigupdate</span><br><span class="line">               Event: INSERT</span><br><span class="line">               Table: account</span><br><span class="line">           Statement: INSERT INTO myevent VALUES(1,&#x27;after insert&#x27;)</span><br><span class="line">              Timing: AFTER</span><br><span class="line">             Created: NULL</span><br><span class="line">            sql_mode: </span><br><span class="line">             Definer: root@localhost</span><br><span class="line">character_set_client: utf8</span><br><span class="line">collation_connection: utf8_general_ci</span><br><span class="line">  Database Collation: utf8_general_ci</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure><p>由运行结果可以看到触发器的基本信息。对以上显示信息的说明如下：</p><ul><li>Trigger 表示触发器的名称，在这里触发器的名称为 trigupdate；</li><li>Event 表示激活触发器的事件，这里的触发事件为更新操作 UPDATE；</li><li>Table 表示激活触发器的操作对象表，这里为 account 表；</li><li>Statement 表示触发器执行的操作，这里是向 myevent 数据表中插入一条数据；</li><li>Timing 表示触发器触发的时间，这里为更新操作之后（AFTER）；</li><li>还有一些其他信息，比如触发器的创建时间、SQL 的模式、触发器的定义账户和字符集等，这里不再一一介绍。</li></ul><p>SHOW TRIGGERS 语句用来查看当前创建的所有触发器的信息。因为该语句无法查询指定的触发器，所以在触发器较少的情况下，使用该语句会很方便。如果要查看特定触发器的信息或者数据库中触发器较多时，可以直接从 information_schema 数据库中的 triggers 数据表中查找。</p><h4 id="在triggers表中查看触发器信息"><a href="#在triggers表中查看触发器信息" class="headerlink" title="在triggers表中查看触发器信息"></a>在triggers表中查看触发器信息</h4><p>在 MySQL 中，所有触发器的信息都存在 information_schema 数据库的 triggers 表中，可以通过查询命令 SELECT 来查看，具体的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM information_schema.triggers WHERE trigger_name= &#x27;触发器名&#x27;;</span><br></pre></td></tr></table></figure><p>其中，<code>&#39;触发器名&#39;</code>用来指定要查看的触发器的名称，需要用单引号引起来。这种方式可以查询指定的触发器，使用起来更加方便、灵活。</p><p>下面使用 SELECT 命令查看 trigupdate 触发器，SQL 语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM information_schema.triggers WHERE TRIGGER_NAME= &#x27;trigupdate&#x27;\G;</span><br></pre></td></tr></table></figure><p>上述命令通过 WHERE 来指定需要查看的触发器的名称，运行结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">SELECT * FROM information_schema.triggers WHERE TRIGGER_NAME= <span class="string">&#x27;trigupdate&#x27;</span>\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           TRIGGER_CATALOG: def</span><br><span class="line">            TRIGGER_SCHEMA: test</span><br><span class="line">              TRIGGER_NAME: trigupdate</span><br><span class="line">        EVENT_MANIPULATION: INSERT</span><br><span class="line">      EVENT_OBJECT_CATALOG: def</span><br><span class="line">       EVENT_OBJECT_SCHEMA: test</span><br><span class="line">        EVENT_OBJECT_TABLE: account</span><br><span class="line">              ACTION_ORDER: 0</span><br><span class="line">          ACTION_CONDITION: NULL</span><br><span class="line">          ACTION_STATEMENT: INSERT INTO myevent VALUES(1,&#x27;after insert&#x27;)</span><br><span class="line">        ACTION_ORIENTATION: ROW</span><br><span class="line">             ACTION_TIMING: AFTER</span><br><span class="line">ACTION_REFERENCE_OLD_TABLE: NULL</span><br><span class="line">ACTION_REFERENCE_NEW_TABLE: NULL</span><br><span class="line">  ACTION_REFERENCE_OLD_ROW: OLD</span><br><span class="line">  ACTION_REFERENCE_NEW_ROW: NEW</span><br><span class="line">                   CREATED: NULL</span><br><span class="line">                  SQL_MODE: </span><br><span class="line">                   DEFINER: root@localhost</span><br><span class="line">      CHARACTER_SET_CLIENT: utf8</span><br><span class="line">      COLLATION_CONNECTION: utf8_general_ci</span><br><span class="line">        DATABASE_COLLATION: utf8_general_ci</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>由运行结果可以看到触发器的详细信息。对以上显示信息的说明如下：</p><ul><li>TRIGGER_SCHEMA 表示触发器所在的数据库；</li><li>TRIGGER_NAME 表示触发器的名称；</li><li>EVENT_OBJECT_TABLE 表示在哪个数据表上触发；</li><li>ACTION_STATEMENT 表示触发器触发的时候执行的具体操作；</li><li>ACTION_ORIENTATION 的值为 ROW，表示在每条记录上都触发；</li><li>ACTION_TIMING 表示触发的时刻是 AFTER；</li><li>还有一些其他信息，比如触发器的创建时间、SQL 的模式、触发器的定义账户和字符集等，这里不再一一介绍。</li></ul><p>上述 SQL 语句也可以不指定触发器名称，这样将查看所有的触发器，SQL 语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM information_schema.triggers \G;</span><br></pre></td></tr></table></figure><p>这个语句会显示 triggers 数据表中所有的触发器信息。</p>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql主从架构</title>
      <link href="/2022/01/03/mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/"/>
      <url>/2022/01/03/mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# uname -r </span><br><span class="line">3.10.0-1062.el7.x86_64</span><br><span class="line">[root@hdss7-11 ~]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line">[root@hdss7-11 ~]# </span><br></pre></td></tr></table></figure><p>master 10.4.7.11</p><p>slave1 10.4.7.12</p><p>slave2 10.4.7.21</p><h3 id="安装mysql5-7"><a href="#安装mysql5-7" class="headerlink" title="安装mysql5.7"></a>安装mysql5.7</h3><h4 id="查询并删除旧的MySQL-没有可以忽略"><a href="#查询并删除旧的MySQL-没有可以忽略" class="headerlink" title="查询并删除旧的MySQL(没有可以忽略)"></a>查询并删除旧的MySQL(没有可以忽略)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# rpm  -qa |grep mysql</span><br><span class="line">php-mysql-5.4.16-48.el7.x86_64</span><br><span class="line">mysql57-community-release-el7-9.noarch</span><br><span class="line"></span><br><span class="line">[root@hdss7-11 ~]# rpm  -e php-mysql-5.4.16-48.el7.x86_64</span><br></pre></td></tr></table></figure><h4 id="下载MySQL源"><a href="#下载MySQL源" class="headerlink" title="下载MySQL源"></a>下载MySQL源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="repo的安装"><a href="#repo的安装" class="headerlink" title="repo的安装"></a>repo的安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# rpm -ivh mysql57-community-release-el7-9.noarch.rpm </span><br><span class="line"></span><br><span class="line">warning: mysql57-community-release-el7-9.noarch.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line">Preparing...                          ################################# [100%]</span><br><span class="line">Updating / installing...</span><br><span class="line">   1:mysql57-community-release-el7-9  ################################# [100%]</span><br></pre></td></tr></table></figure><h4 id="开始安装MySQL"><a href="#开始安装MySQL" class="headerlink" title="开始安装MySQL"></a>开始安装MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><h4 id="启动mysql并查看状态"><a href="#启动mysql并查看状态" class="headerlink" title="启动mysql并查看状态"></a>启动mysql并查看状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br><span class="line">systemctl status  mysqld.service</span><br></pre></td></tr></table></figure><p>● mysqld.service - MySQL Server<br>   Loaded: <strong>loaded</strong> (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Mon 2022-01-03 18:12:46 CST; 15s ago<br>     Docs: man:mysqld(8)<br>           <a href="http://dev.mysql.com/doc/refman/en/using-systemd.html">http://dev.mysql.com/doc/refman/en/using-systemd.html</a><br>  Process: 3241 ExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;mysqld –daemonize –pid-file&#x3D;&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid $MYSQLD_OPTS (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)<br>  Process: 3187 ExecStartPre&#x3D;&#x2F;usr&#x2F;bin&#x2F;mysqld_pre_systemd (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)<br> Main PID: 3244 (mysqld)<br>   CGroup: &#x2F;system.slice&#x2F;mysqld.service<br>           └─3244 &#x2F;usr&#x2F;sbin&#x2F;mysqld –daemonize –pid-file&#x3D;&#x2F;var&#x2F;run&#x2F;m…</p><p>Jan 03 18:12:41 hdss7-11.host.com systemd[1]: Starting MySQL Server…<br>Jan 03 18:12:46 hdss7-11.host.com systemd[1]: Started MySQL Server.<br>Hint: Some lines were ellipsized, use -l to show in full.</p><h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br></pre></td></tr></table></figure><p>mysql  Ver 14.14 Distrib 5.7.36, for Linux (x86_64) using  EditLine wrapper</p><h4 id="查找系统默认密码"><a href="#查找系统默认密码" class="headerlink" title="查找系统默认密码"></a>查找系统默认密码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /var/log</span><br><span class="line">grep -e &quot;password&quot; mysqld.log</span><br><span class="line"></span><br><span class="line">A temporary password is generated for root@localhost: kaNNUw-2y,Gc</span><br></pre></td></tr></table></figure><h4 id="设置新密码，密码修改为IThaipeng123"><a href="#设置新密码，密码修改为IThaipeng123" class="headerlink" title="设置新密码，密码修改为IThaipeng123."></a>设置新密码，密码修改为IThaipeng123.</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p </span><br><span class="line">输入密码kaNNUw-2y,Gc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;IThaipeng123.&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p><strong>如果有以下报错说明密码强度不够，需要加特殊字符。</strong></p><p>mysql&gt; alter user ‘root‘@’localhost’ identified by ‘IThaipeng123’;<br>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</p><p><strong>注意：三台服务器安装方法相同，这里只给出一台的说明。</strong></p><p>三台MySQL搭建好之后，需要把时间同步开启，防火墙关闭</p><h4 id="NTP配置"><a href="#NTP配置" class="headerlink" title="NTP配置"></a>NTP配置</h4><p>NTP服务端：10.4.7.11</p><p>NTP客户端：10.4.7.12 10.4.7.21 </p><p><strong>安装ntp服务（三台都需安装）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ntp</span><br></pre></td></tr></table></figure><p>查看ntp安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# rpm -qa |grep ntp</span><br><span class="line">ntp-4.2.6p5-29.el7.centos.2.x86_64</span><br><span class="line">ntpdate-4.2.6p5-29.el7.centos.2.x86_64</span><br></pre></td></tr></table></figure><p>7.11上修改NTP配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line">把配置文件下面四行注释掉：</span><br><span class="line">server 0.centos.pool.ntp.org iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br><span class="line">然后在下面添加这几行：</span><br><span class="line">server 0.cn.pool.ntp.org iburst</span><br><span class="line">server 1.cn.pool.ntp.org iburst</span><br><span class="line">server 2.cn.pool.ntp.org iburst</span><br><span class="line">server 3.cn.pool.ntp.org iburst</span><br></pre></td></tr></table></figure><p>启动ntp服务，并开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start ntpd</span><br><span class="line">systemctl enable ntpd</span><br></pre></td></tr></table></figure><p>查看ntp是否同步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> ntp5.flashdance 194.58.202.20    2 u    1   64    1  318.796   49.178   1.689</span><br><span class="line"> time.cloudflare 10.4.3.52        3 u    2   64    1  183.991   28.217   4.578</span><br><span class="line"> ntp6.flashdance 194.58.202.148   2 u    1   64    1  331.954   46.528   5.128</span><br><span class="line"> 139.199.214.202 100.122.36.196   2 u    2   64    1   72.218   10.343   0.000</span><br></pre></td></tr></table></figure><p>防火墙开启ntp默认端口udp123(可选，如果没开启防火墙则不用操作此步)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# firewall-cmd --permanent --zone=public --add-port=123/udp</span><br><span class="line">success</span><br><span class="line">[root@hdss7-11 ~]# firewall-cmd --reload</span><br><span class="line">success</span><br></pre></td></tr></table></figure><p>NTP 客户端配置</p><p>7.12 7.21 上修改ntp配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line"><span class="meta">#</span><span class="language-bash">配置允许NTP Server时间服务器主动修改本机的时间</span></span><br><span class="line">restrict 10.4.7.11 nomodify notrap noquery</span><br><span class="line"><span class="meta">#</span><span class="language-bash">注释掉其他时间服务器</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">配置时间服务器为本地搭建的NTP Server服务器</span></span><br><span class="line">server 10.4.7.11</span><br></pre></td></tr></table></figure><h4 id="同步主服务器-7-12-7-21-上操作）"><a href="#同步主服务器-7-12-7-21-上操作）" class="headerlink" title="同步主服务器(7.12 7.21 上操作）"></a>同步主服务器(7.12 7.21 上操作）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-21 ~]# ntpdate -u 10.4.7.11</span><br><span class="line"> 3 Jan 10:53:42 ntpdate[6675]: adjust time server 10.4.7.11 offset 0.015245 sec</span><br></pre></td></tr></table></figure><h4 id="查看NTP同步状态"><a href="#查看NTP同步状态" class="headerlink" title="查看NTP同步状态"></a>查看NTP同步状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-21 ~]# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 10.4.7.11       139.199.214.202  3 u    1   64    7    0.327   -6.267  15.285</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置MySQL-master主服务器"><a href="#配置MySQL-master主服务器" class="headerlink" title="配置MySQL master主服务器"></a>配置MySQL master主服务器</h3><h4 id="在-x2F-etc-x2F-my-cnf-中修改或者增加以下内容"><a href="#在-x2F-etc-x2F-my-cnf-中修改或者增加以下内容" class="headerlink" title="在&#x2F;etc&#x2F;my.cnf 中修改或者增加以下内容"></a>在&#x2F;etc&#x2F;my.cnf 中修改或者增加以下内容</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-11 ~]# tail -n 3 /etc/my.cnf</span><br><span class="line">server-id = 11</span><br><span class="line">log-bin=master-bin</span><br><span class="line">log-slave-updates=true</span><br></pre></td></tr></table></figure><h4 id="重启mysql服务"><a href="#重启mysql服务" class="headerlink" title="重启mysql服务"></a>重启mysql服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  restart mysqld</span><br></pre></td></tr></table></figure><h4 id="登录MySQL程序，给服务器授权"><a href="#登录MySQL程序，给服务器授权" class="headerlink" title="登录MySQL程序，给服务器授权"></a>登录MySQL程序，给服务器授权</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">输入密码</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="language-bash">grant replication slave on *.* to <span class="string">&#x27;myslave&#x27;</span>@<span class="string">&#x27;10.4.7.%&#x27;</span> identified by <span class="string">&#x27;Haipengv123456?&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show master status;</span></span><br><span class="line">+-------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+-------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| master-bin.000001 |      599 |              |                  |                   |</span><br><span class="line">+-------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file列显示的日志名，position 列显示偏移量。</p><h3 id="配置从服务器"><a href="#配置从服务器" class="headerlink" title="配置从服务器"></a>配置从服务器</h3><p>7-12  server-id &#x3D; 22</p><p>7-21 server-id &#x3D; 23</p><h4 id="在-x2F-etc-x2F-my-cnf-中修改或者增加以下内容："><a href="#在-x2F-etc-x2F-my-cnf-中修改或者增加以下内容：" class="headerlink" title="在&#x2F;etc&#x2F;my.cnf 中修改或者增加以下内容："></a>在&#x2F;etc&#x2F;my.cnf 中修改或者增加以下内容：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hdss7-12 ~]# tail -n 3 /etc/my.cnf</span><br><span class="line">server-id = 22   ## 这里的ID不能与主服务器相同，也不能和其他从服务器相同</span><br><span class="line">relay-log=relay-log-bin  ## 从主服务器上同步日志到本地</span><br><span class="line">relay-log-index=slave-relay-bin.index  ## 定义relay-log的位置和名称</span><br></pre></td></tr></table></figure><h4 id="重启从服务器的MySQL"><a href="#重启从服务器的MySQL" class="headerlink" title="重启从服务器的MySQL"></a>重启从服务器的MySQL</h4><p>登录mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><p>配置同步</p><p>根据主服务器的结果来更改下面的master_log_file 和master_log_post 的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">change master to master_host=<span class="string">&#x27;10.4.7.11&#x27;</span>,master_user=<span class="string">&#x27;myslave&#x27;</span>,master_password=<span class="string">&#x27;Haipengv123456?&#x27;</span>,master_log_file=<span class="string">&#x27;master-bin.000001&#x27;</span>,master_log_pos=599;</span></span><br><span class="line"></span><br><span class="line">Query OK, 0 rows affected, 2 warnings (0.02 sec)</span><br></pre></td></tr></table></figure><h4 id="启动同步"><a href="#启动同步" class="headerlink" title="启动同步"></a>启动同步</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">start slave;</span></span><br><span class="line">Query OK, 0 rows affected (0.35 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt; </span></span><br></pre></td></tr></table></figure><h4 id="查看slave确保两个值都为yes"><a href="#查看slave确保两个值都为yes" class="headerlink" title="查看slave确保两个值都为yes"></a>查看slave确保两个值都为yes</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show slave status \G</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.4.7.11</span><br><span class="line">                  Master_User: myslave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: master-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 599</span><br><span class="line">               Relay_Log_File: relay-log-bin.000002</span><br><span class="line">                Relay_Log_Pos: 321</span><br><span class="line">        Relay_Master_Log_File: master-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h3 id="验证主从复制结果"><a href="#验证主从复制结果" class="headerlink" title="验证主从复制结果"></a>验证主从复制结果</h3><h4 id="在主服务器上创建数据库"><a href="#在主服务器上创建数据库" class="headerlink" title="在主服务器上创建数据库"></a>在主服务器上创建数据库</h4><p>10.4.7.11 主服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">create database db_test;</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="查看主从服务器的数据库是否同步"><a href="#查看主从服务器的数据库是否同步" class="headerlink" title="查看主从服务器的数据库是否同步"></a>查看主从服务器的数据库是否同步</h4><p>主服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db_test            |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>slave1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db_test            |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>slave2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db_test            |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="拓展server-id的用途"><a href="#拓展server-id的用途" class="headerlink" title="拓展server-id的用途"></a>拓展server-id的用途</h3><p><code>server-id</code>用于标识数据库实例，防止在链式主从、多主多从拓扑中导致<code>SQL</code>语句的无限循环：</p><ol><li>标记<code>binlog event</code>的源实例</li><li>过滤主库<code>binlog</code>，当发现<code>server-id</code>相同时，跳过该<code>event</code>执行，避免无限循环执行。</li><li>如果设置了<code>replicate-same-server-id=1</code>，则执行所有<code>event</code>，但有可能导致无限循环执行<code>SQL</code>语句。</li></ol><p>我们用两个例子来说明<code>server-id</code>为什么不要重复：</p><h3 id="当主库和备库server-id重复时"><a href="#当主库和备库server-id重复时" class="headerlink" title="当主库和备库server-id重复时"></a>当主库和备库<code>server-id</code>重复时</h3><p>由于默认情况<code>replicate-same-server-id=0</code>，因此备库会跳过所有主库同步的数据，导致主从数据的不一致。</p><h3 id="当两个备库server-id重复时"><a href="#当两个备库server-id重复时" class="headerlink" title="当两个备库server-id重复时"></a>当两个备库<code>server-id</code>重复时</h3><p>会导致从库跟主库的连接时断时连，产生大量异常。根据<code>MySQL</code>的设计，主库和从库通过事件机制进行连接和同步，当新的连接到来时，如果发现<code>server-id</code>相同，主库会断开之前的连接并重新注册新连接。当<code>A</code>库连接上主库时，此时<code>B</code>库连接到来，会断开<code>A</code>库连接，<code>A</code>库再进行重连，周而复始导致大量异常信息。</p><h3 id="生成server-id的规则"><a href="#生成server-id的规则" class="headerlink" title="生成server-id的规则"></a>生成<code>server-id</code>的规则</h3><p>既然<code>server-id</code>不能相同，而当我们有<code>10</code>个实例时，怎么保证每个都不同呢？有几种常用的方法：</p><ol><li>随机数</li><li>时间戳</li><li><code>IP</code>地址+端口</li><li>在管理中心集中分配，生成自增<code>ID</code></li></ol><p>上面的这些方法都可以，但是注意不要超过了最大值<code>2^32-1</code>，同时值最好<code>&gt;2</code>。我采用的方法是<code>IP</code>地址后两位+本机<code>MySQL</code>实例序号，但如果是通过<code>docker</code>来进行管理多实例时，这个怎么生成大家可以想下有没有什么优美的解决方案。</p><h2 id="server-uuid配置"><a href="#server-uuid配置" class="headerlink" title="server-uuid配置"></a><code>server-uuid</code>配置</h2><p><code>MySQL</code>服务会自动创建并生成<code>server-uuid</code>配置：</p><ol><li>读取<code>$&#123;data_dir&#125;/auto.cnf</code>文件中的<code>UUID</code></li><li>如果不存在，自动创建文件和生成新的<code>UUID</code>并读取</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">shell&gt; </span><span class="language-bash"><span class="built_in">cat</span> ~/mysql/data/auto.cnf</span></span><br><span class="line">[auto]</span><br><span class="line">server-uuid=fd5d03bc-cfde-11e9-ae59-48d539355108</span><br></pre></td></tr></table></figure><p>这个<code>auto.cnf</code>配置风格类似于<code>my.cnf</code>，但这个文件只包含一个<code>auto</code>配置块和一行<code>server-uuid</code>配置。它是自动创建的，因此不要修改它的内容。</p><p>在主从拓扑中，主从可以知道互相的<code>UUID</code>，在主机上使用<code>show slave hosts</code>，在从机上使用<code>show slave status</code>查看<code>Master_UUID</code>字段。</p><p><code>server-uuid</code>参数并不能取代<code>server-id</code>，他们有不同的作用。当主从同步时如果主从实例的<code>server-uuid</code>相同会报错退出，不过我们可以通过设置<code>replicate-same-server-id=1</code>来避免报错（不推荐）。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://segmentfault.com/a/1190000020315036">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx安装与使用</title>
      <link href="/2022/01/02/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/02/nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="nginx-1-16-1-安装使用说明"><a href="#nginx-1-16-1-安装使用说明" class="headerlink" title="nginx 1.16.1 安装使用说明"></a>nginx 1.16.1 安装使用说明</h2><p>1.创建目录</p><p>mkdir -p &#x2F;var&#x2F;temp&#x2F;nginx</p><p>下载：</p><p><a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p><p>解压</p><p>tar -zxvf nginx-1.16.1.tar.gz </p><p>安装编译依赖包：</p><p>yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</p><p>2.进入nginx-1.16.1</p><p>编译参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid \</span><br><span class="line">--lock-path=/var/lock/nginx.lock \</span><br><span class="line">--error-log-path=/var/log/nginx/error.log \</span><br><span class="line">--http-log-path=/var/log/nginx/access.log \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--http-client-body-temp-path=/var/temp/nginx/client \</span><br><span class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</span><br><span class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</span><br><span class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</span><br><span class="line">--http-scgi-temp-path=/var/temp/nginx/scgi</span><br></pre></td></tr></table></figure><p><a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p><h3 id="config-编译参数"><a href="#config-编译参数" class="headerlink" title="config 编译参数"></a>config 编译参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">nginx1.16编译安装configure参数：</span><br><span class="line">[root@363ee3055cf0 nginx-1.16.1]# ./configure --help</span><br><span class="line"></span><br><span class="line">  --help                             print this message 打印帮助信息</span><br><span class="line"></span><br><span class="line">  --prefix=PATH                      set installation prefix 设置安装目录</span><br><span class="line">  --sbin-path=PATH                   set nginx binary pathname 设置sbin路径</span><br><span class="line">  --modules-path=PATH                set modules path 设置模块路径</span><br><span class="line">  --conf-path=PATH                   set nginx.conf pathname 设置配置文件路径</span><br><span class="line">  --error-log-path=PATH              set error log pathname 设置错误日志的路径</span><br><span class="line">  --pid-path=PATH                    set nginx.pid pathname 设置pid路径</span><br><span class="line">  --lock-path=PATH                   set nginx.lock pathname 设置锁路径</span><br><span class="line"></span><br><span class="line">  --user=USER                        set non-privileged user for 设置用户</span><br><span class="line">                                     worker processes</span><br><span class="line">  --group=GROUP                      set non-privileged group for 设置组</span><br><span class="line">                                     worker processes</span><br><span class="line"></span><br><span class="line">  --build=NAME                       set build name 设置构建名</span><br><span class="line">  --builddir=DIR                     set build directory 设置构建文件夹</span><br><span class="line"></span><br><span class="line">  --with-select_module               enable select module 开启select模块</span><br><span class="line">  --without-select_module            disable select module关闭</span><br><span class="line">  --with-poll_module                 enable poll module</span><br><span class="line">  --without-poll_module              disable poll module</span><br><span class="line"></span><br><span class="line">  --with-threads                     enable thread pool support</span><br><span class="line"></span><br><span class="line">  --with-file-aio                    enable file AIO support</span><br><span class="line"></span><br><span class="line">  --with-http_ssl_module             enable ngx_http_ssl_module</span><br><span class="line">  --with-http_v2_module              enable ngx_http_v2_module</span><br><span class="line">  --with-http_realip_module          enable ngx_http_realip_module</span><br><span class="line">  --with-http_addition_module        enable ngx_http_addition_module</span><br><span class="line">  --with-http_xslt_module            enable ngx_http_xslt_module</span><br><span class="line">  --with-http_xslt_module=dynamic    enable dynamic ngx_http_xslt_module</span><br><span class="line">  --with-http_image_filter_module    enable ngx_http_image_filter_module</span><br><span class="line">  --with-http_image_filter_module=dynamic</span><br><span class="line">                                     enable dynamic ngx_http_image_filter_module</span><br><span class="line">  --with-http_geoip_module           enable ngx_http_geoip_module</span><br><span class="line">  --with-http_geoip_module=dynamic   enable dynamic ngx_http_geoip_module</span><br><span class="line">  --with-http_sub_module             enable ngx_http_sub_module</span><br><span class="line">  --with-http_dav_module             enable ngx_http_dav_module</span><br><span class="line">  --with-http_flv_module             enable ngx_http_flv_module</span><br><span class="line">  --with-http_mp4_module             enable ngx_http_mp4_module</span><br><span class="line">  --with-http_gunzip_module          enable ngx_http_gunzip_module</span><br><span class="line">  --with-http_gzip_static_module     enable ngx_http_gzip_static_module</span><br><span class="line">  --with-http_auth_request_module    enable ngx_http_auth_request_module</span><br><span class="line">  --with-http_random_index_module    enable ngx_http_random_index_module</span><br><span class="line">  --with-http_secure_link_module     enable ngx_http_secure_link_module</span><br><span class="line">  --with-http_degradation_module     enable ngx_http_degradation_module</span><br><span class="line">  --with-http_slice_module           enable ngx_http_slice_module</span><br><span class="line">  --with-http_stub_status_module     enable ngx_http_stub_status_module</span><br><span class="line"></span><br><span class="line">  --without-http_charset_module      disable ngx_http_charset_module</span><br><span class="line">  --without-http_gzip_module         disable ngx_http_gzip_module</span><br><span class="line">  --without-http_ssi_module          disable ngx_http_ssi_module</span><br><span class="line">  --without-http_userid_module       disable ngx_http_userid_module</span><br><span class="line">  --without-http_access_module       disable ngx_http_access_module</span><br><span class="line">  --without-http_auth_basic_module   disable ngx_http_auth_basic_module</span><br><span class="line">  --without-http_mirror_module       disable ngx_http_mirror_module</span><br><span class="line">  --without-http_autoindex_module    disable ngx_http_autoindex_module</span><br><span class="line">  --without-http_geo_module          disable ngx_http_geo_module</span><br><span class="line">  --without-http_map_module          disable ngx_http_map_module</span><br><span class="line">  --without-http_split_clients_module disable ngx_http_split_clients_module</span><br><span class="line">  --without-http_referer_module      disable ngx_http_referer_module</span><br><span class="line">  --without-http_rewrite_module      disable ngx_http_rewrite_module</span><br><span class="line">  --without-http_proxy_module        disable ngx_http_proxy_module</span><br><span class="line">  --without-http_fastcgi_module      disable ngx_http_fastcgi_module</span><br><span class="line">  --without-http_uwsgi_module        disable ngx_http_uwsgi_module</span><br><span class="line">  --without-http_scgi_module         disable ngx_http_scgi_module</span><br><span class="line">  --without-http_grpc_module         disable ngx_http_grpc_module</span><br><span class="line">  --without-http_memcached_module    disable ngx_http_memcached_module</span><br><span class="line">  --without-http_limit_conn_module   disable ngx_http_limit_conn_module</span><br><span class="line">  --without-http_limit_req_module    disable ngx_http_limit_req_module</span><br><span class="line">  --without-http_empty_gif_module    disable ngx_http_empty_gif_module</span><br><span class="line">  --without-http_browser_module      disable ngx_http_browser_module</span><br><span class="line">  --without-http_upstream_hash_module</span><br><span class="line">                                     disable ngx_http_upstream_hash_module</span><br><span class="line">  --without-http_upstream_ip_hash_module</span><br><span class="line">                                     disable ngx_http_upstream_ip_hash_module</span><br><span class="line">  --without-http_upstream_least_conn_module</span><br><span class="line">                                     disable ngx_http_upstream_least_conn_module</span><br><span class="line">  --without-http_upstream_random_module</span><br><span class="line">                                     disable ngx_http_upstream_random_module</span><br><span class="line">  --without-http_upstream_keepalive_module</span><br><span class="line">                                     disable ngx_http_upstream_keepalive_module</span><br><span class="line">  --without-http_upstream_zone_module</span><br><span class="line">                                     disable ngx_http_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-http_perl_module            enable ngx_http_perl_module</span><br><span class="line">  --with-http_perl_module=dynamic    enable dynamic ngx_http_perl_module</span><br><span class="line">  --with-perl_modules_path=PATH      set Perl modules path</span><br><span class="line">  --with-perl=PATH                   set perl binary pathname</span><br><span class="line"></span><br><span class="line">  --http-log-path=PATH               set http access log pathname</span><br><span class="line">  --http-client-body-temp-path=PATH  set path to store</span><br><span class="line">                                     http client request body temporary files</span><br><span class="line">  --http-proxy-temp-path=PATH        set path to store</span><br><span class="line">                                     http proxy temporary files</span><br><span class="line">  --http-fastcgi-temp-path=PATH      set path to store</span><br><span class="line">                                     http fastcgi temporary files</span><br><span class="line">  --http-uwsgi-temp-path=PATH        set path to store</span><br><span class="line">                                     http uwsgi temporary files</span><br><span class="line">  --http-scgi-temp-path=PATH         set path to store</span><br><span class="line">                                     http scgi temporary files</span><br><span class="line"></span><br><span class="line">  --without-http                     disable HTTP server</span><br><span class="line">  --without-http-cache               disable HTTP cache</span><br><span class="line"></span><br><span class="line">  --with-mail                        enable POP3/IMAP4/SMTP proxy module</span><br><span class="line">  --with-mail=dynamic                enable dynamic POP3/IMAP4/SMTP proxy module</span><br><span class="line">  --with-mail_ssl_module             enable ngx_mail_ssl_module</span><br><span class="line">  --without-mail_pop3_module         disable ngx_mail_pop3_module</span><br><span class="line">  --without-mail_imap_module         disable ngx_mail_imap_module</span><br><span class="line">  --without-mail_smtp_module         disable ngx_mail_smtp_module</span><br><span class="line"></span><br><span class="line">  --with-stream                      enable TCP/UDP proxy module</span><br><span class="line">  --with-stream=dynamic              enable dynamic TCP/UDP proxy module</span><br><span class="line">  --with-stream_ssl_module           enable ngx_stream_ssl_module</span><br><span class="line">  --with-stream_realip_module        enable ngx_stream_realip_module</span><br><span class="line">  --with-stream_geoip_module         enable ngx_stream_geoip_module</span><br><span class="line">  --with-stream_geoip_module=dynamic enable dynamic ngx_stream_geoip_module</span><br><span class="line">  --with-stream_ssl_preread_module   enable ngx_stream_ssl_preread_module</span><br><span class="line">  --without-stream_limit_conn_module disable ngx_stream_limit_conn_module</span><br><span class="line">  --without-stream_access_module     disable ngx_stream_access_module</span><br><span class="line">  --without-stream_geo_module        disable ngx_stream_geo_module</span><br><span class="line">  --without-stream_map_module        disable ngx_stream_map_module</span><br><span class="line">  --without-stream_split_clients_module</span><br><span class="line">                                     disable ngx_stream_split_clients_module</span><br><span class="line">  --without-stream_return_module     disable ngx_stream_return_module</span><br><span class="line">  --without-stream_upstream_hash_module</span><br><span class="line">                                     disable ngx_stream_upstream_hash_module</span><br><span class="line">  --without-stream_upstream_least_conn_module</span><br><span class="line">                                     disable ngx_stream_upstream_least_conn_module</span><br><span class="line">  --without-stream_upstream_random_module</span><br><span class="line">                                     disable ngx_stream_upstream_random_module</span><br><span class="line">  --without-stream_upstream_zone_module</span><br><span class="line">                                     disable ngx_stream_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-google_perftools_module     enable ngx_google_perftools_module</span><br><span class="line">  --with-cpp_test_module             enable ngx_cpp_test_module</span><br><span class="line"></span><br><span class="line">  --add-module=PATH                  enable external module</span><br><span class="line">  --add-dynamic-module=PATH          enable dynamic external module</span><br><span class="line"></span><br><span class="line">  --with-compat                      dynamic modules compatibility</span><br><span class="line"></span><br><span class="line">  --with-cc=PATH                     set C compiler pathname</span><br><span class="line">  --with-cpp=PATH                    set C preprocessor pathname</span><br><span class="line">  --with-cc-opt=OPTIONS              set additional C compiler options</span><br><span class="line">  --with-ld-opt=OPTIONS              set additional linker options</span><br><span class="line">  --with-cpu-opt=CPU                 build for the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro, pentium3, pentium4,</span><br><span class="line">                                     athlon, opteron, sparc32, sparc64, ppc64</span><br><span class="line"></span><br><span class="line">  --without-pcre                     disable PCRE library usage</span><br><span class="line">  --with-pcre                        force PCRE library usage</span><br><span class="line">  --with-pcre=DIR                    set path to PCRE library sources</span><br><span class="line">  --with-pcre-opt=OPTIONS            set additional build options for PCRE</span><br><span class="line">  --with-pcre-jit                    build PCRE with JIT compilation support</span><br><span class="line"></span><br><span class="line">  --with-zlib=DIR                    set path to zlib library sources</span><br><span class="line">  --with-zlib-opt=OPTIONS            set additional build options for zlib</span><br><span class="line">  --with-zlib-asm=CPU                use zlib assembler sources optimized</span><br><span class="line">                                     for the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro</span><br><span class="line"></span><br><span class="line">  --with-libatomic                   force libatomic_ops library usage</span><br><span class="line">  --with-libatomic=DIR               set path to libatomic_ops library sources</span><br><span class="line"></span><br><span class="line">  --with-openssl=DIR                 set path to OpenSSL library sources</span><br><span class="line">  --with-openssl-opt=OPTIONS         set additional build options for OpenSSL</span><br><span class="line"></span><br><span class="line">  --with-debug                       enable debug logging</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">编译</span></span><br><span class="line">make</span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装</span></span><br><span class="line">make install </span><br></pre></td></tr></table></figure><p>whereis nginx </p><p>在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;内</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">./nginx 启动</span><br><span class="line"></span><br><span class="line"> ./nginx -s stop 强制停止</span><br><span class="line"> ./nginx -s quit 优雅停止</span><br><span class="line"></span><br><span class="line">./nginx -s reload 重新加载</span><br><span class="line">./nginx -t 配置检测</span><br><span class="line">./nginx -v 版本信息</span><br><span class="line">./nginx -V 详细信息</span><br><span class="line">./nginx -h 帮助</span><br><span class="line">./nginx -c 指定配置文件</span><br></pre></td></tr></table></figure><p>注意：</p><p>1.云服务器需要默认开启nginx 80</p><p>2.虚拟机安装，需要关闭防火墙</p><p>3.本机win或mac需要关闭防火墙</p><p>nginx.conf </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>; #监听端口</span><br><span class="line">    server_name  localhost;#域名</span><br><span class="line">    location / &#123;# / 从根开始匹配。html文件夹内的index index.<span class="property">html</span> index.<span class="property">htm</span></span><br><span class="line">        root   html;</span><br><span class="line">        index  index.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.<span class="property">html</span>;   #匹配不到自动转到错误页。html/50x.<span class="property">html</span> </span><br><span class="line">    location = /50x.<span class="property">html</span> &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>更改 80 端口后需重新加载。</p><p>cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin </p><p>.&#x2F;nginx -s reload </p><p>访问：ip+监听端口</p><h2 id="nginx-的进程模型"><a href="#nginx-的进程模型" class="headerlink" title="nginx 的进程模型"></a>nginx 的进程模型</h2><p>master 主进程</p><p>worker  工作进程</p><p>worker_processes  2; # 默认为1,配置为n-1 .n为cpu数量。</p><h3 id="nginx事件处理。异步非阻塞。"><a href="#nginx事件处理。异步非阻塞。" class="headerlink" title="nginx事件处理。异步非阻塞。"></a>nginx事件处理。异步非阻塞。</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    # 默认使用epoll</span><br><span class="line">    use epoll;</span><br><span class="line">    # 每个worker 允许连接的客户端最大连接数</span><br><span class="line">    worker_connections  <span class="number">10240</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置文件详解："><a href="#配置文件详解：" class="headerlink" title="配置文件详解："></a>配置文件详解：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">89</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  imooc.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;imooc.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to immoc!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">35em</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: Tahoma, Verdana, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome imooc!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者：</p><p>nginx.conf中添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include       imooc.conf;</span><br></pre></td></tr></table></figure><p>创建imooc.conf文件。</p><p>&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;imooc.conf</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       <span class="number">89</span>;</span><br><span class="line">     server_name  localhost;</span><br><span class="line">     location / &#123;</span><br><span class="line">         root   html;</span><br><span class="line">         index  imooc.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>每次更改后都要重启服务。</p><h2 id="常见pid报错"><a href="#常见pid报错" class="headerlink" title="常见pid报错"></a>常见pid报错</h2><h3 id="nginx-pid打开失败："><a href="#nginx-pid打开失败：" class="headerlink" title="nginx.pid打开失败："></a>nginx.pid打开失败：</h3><p>1.nginx: [error] invalid PID number “” in “&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid”</p><p>解决方法：</p><p>使用nginx -c的参数指定nginx.conf文件的位置<br>然后再重新启动，解决问题，可以通过ps -ef|grep nginx 看到服务已经启动成功。</p><p>&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</p><p>2.nginx: [error] open() “&#x2F;var&#x2F;run&#x2F;nginx&#x2F;nginx.pid” failed (2: No such file or directory) </p><p>提示信息说明在 <strong>&#x2F;var&#x2F;run&#x2F;nginx&#x2F;</strong> 目录下找不到 <strong>nginx.pid</strong> 文件，解决方式有两种</p><p>第一种方式：创建默认目录 <strong>&#x2F;var&#x2F;run&#x2F;nginx&#x2F;</strong> ；</p><p>第二种方式：修改 <strong>nginx.conf</strong> 文件，指定 <strong>pid文件</strong> 所在目录。</p><h2 id="日志切割：-手动"><a href="#日志切割：-手动" class="headerlink" title="日志切割：(手动)"></a>日志切割：(手动)</h2><p>cat_my_log.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">LOG_PATH=&quot;/var/log/nginx/&quot;</span><br><span class="line">RECORD_TIME=$(date -d &quot;yesterday&quot; +%Y-%m-%d+%H:%M)</span><br><span class="line">PID=/var/run/nginx/nginx.pid</span><br><span class="line">mv $&#123;LOG_PATH&#125;/access.log $&#123;LOG_PATH&#125;/access.$&#123;RECORD_TIME&#125;.log</span><br><span class="line">mv $&#123;LOG_PATH&#125;/error.log $&#123;LOG_PATH&#125;/error.$&#123;RECORD_TIME&#125;.log</span><br><span class="line"><span class="meta">#</span><span class="language-bash">向nginx主进程发送信号，用于重新打开日志文件</span></span><br><span class="line">kill -USR1 `cat $PID`</span><br></pre></td></tr></table></figure><p>chmod +x cat_my_log.sh</p><h2 id="日志切割：-定时"><a href="#日志切割：-定时" class="headerlink" title="日志切割：(定时)"></a>日志切割：(定时)</h2><p>1.安装定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install crontabs</span><br></pre></td></tr></table></figure><p>2.crontab -e 编辑并添加一行新的任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /usr/local/nginx/sbin/cut_my_log.sh</span><br></pre></td></tr></table></figure><p>3.重启定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond restart </span><br></pre></td></tr></table></figure><p>4.常用定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">service crond start </span><br><span class="line">service crond stop </span><br><span class="line">service crond reload #重新加载</span><br><span class="line">service crond restart  #重启服务</span><br><span class="line">crontab -l #查看任务列表</span><br><span class="line">crontab -e # 编辑任务</span><br></pre></td></tr></table></figure><p>每分钟执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * *</span><br></pre></td></tr></table></figure><p>每日凌晨（每天晚上23：59）执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59 23 * * *</span><br></pre></td></tr></table></figure><p>每日凌晨1点执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 * * *</span><br></pre></td></tr></table></figure><p>每天为数据库定时备份：<a href="https://www.cnblogs.com/leechenxiang/p/7110382.html">参考</a></p><h2 id="虚拟主机-使用nginx为静态资源提供服务"><a href="#虚拟主机-使用nginx为静态资源提供服务" class="headerlink" title="虚拟主机-使用nginx为静态资源提供服务"></a>虚拟主机-使用nginx为静态资源提供服务</h2><p>静态资源可以是mp4、png、jpg等等。</p><p>&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;imooc.conf中创建静态资源路径。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">90</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /home/foodie-shop;</span><br><span class="line">        index  index.<span class="property">html</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /<span class="keyword">static</span> &#123;</span><br><span class="line"> alias /home/imooc;</span><br><span class="line">    &#125;</span><br><span class="line">    location /imooc &#123;</span><br><span class="line">        root   /home;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>请求&#x2F;home&#x2F;imooc下的资源。</p><p>两种写法：</p><p>一、正常请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /imooc &#123;</span><br><span class="line">    root   /home;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接请求：</p><p><a href="http://10.4.7.129:90/imooc/456.jpg">http://10.4.7.129:90/imooc/456.jpg</a></p><p>二、给路径起别名：</p><p>将&#x2F;home&#x2F;imooc创建别名 为&#x2F;static</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   location /<span class="keyword">static</span> &#123;</span><br><span class="line">alias /home/imooc;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>请求时用别名请求</p><p><a href="http://10.4.7.129:90/static/456.jpg">http://10.4.7.129:90/static/456.jpg</a></p><p>将imooc.conf文件内容应用到nginx.conf中</p><p>编辑&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</p><p>单独添加一行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include       imooc.conf;</span><br></pre></td></tr></table></figure><p>检测配置是否正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -t </span><br><span class="line"></span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload </span><br></pre></td></tr></table></figure><p>测试结果：</p><p><a href="http://10.4.7.129:90/imooc/456.jpg">http://10.4.7.129:90/imooc/456.jpg</a></p><p><a href="http://10.4.7.129:90/static/456.jpg">http://10.4.7.129:90/static/456.jpg</a></p><h2 id="gzip压缩提升请求效率"><a href="#gzip压缩提升请求效率" class="headerlink" title="gzip压缩提升请求效率"></a>gzip压缩提升请求效率</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">开启gzip压缩功能，目的：提高传输效率，节约带宽</span></span><br><span class="line">gzip  on;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">限制最小压缩，小于1字节的文件不会压缩</span></span><br><span class="line">gzip_min_length 1;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">的定义压缩的级别（压缩比，文件越大，压缩越多，但是cpu使用会越多）</span> </span><br><span class="line">gzip_comp_level 3;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">定义压缩文件类型</span></span><br><span class="line">gzip_types text/plain application/javascript application/x-javascript test/css application/xml text/javascript application/x-httpd/php image/jpeg image/gif image/png application/json;</span><br></pre></td></tr></table></figure><h2 id="location匹配规则"><a href="#location匹配规则" class="headerlink" title="location匹配规则"></a>location匹配规则</h2><p>空格：默认匹配，普通匹配</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">91</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location  / &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  imooc.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&#x3D; ：精确匹配</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">91</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    #精确匹配</span><br><span class="line">    location = / &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  imooc.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>正则表达式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/home/imooc/img</span><br><span class="line">[root@centos7 img]# ll</span><br><span class="line">total 808</span><br><span class="line">-rw-r--r--. 1 root root  25125 Jun 30 19:40 456.jpg</span><br><span class="line">-rw-r--r--. 1 root root  25125 Dec 19 00:12 456.JPG</span><br><span class="line">-rw-r--r--. 1 root root 383222 Dec 13 19:25 AutoPlayOptIn.gif</span><br><span class="line">-rw-r--r--. 1 root root 383222 Dec 19 00:17 AutoPlayOptIn.GIF</span><br></pre></td></tr></table></figure><p>~*  ：匹配正则表达式，*代表不区分大小写</p><p><a href="http://10.4.7.129:92/imooc/img/456.JGP">http://10.4.7.129:92/imooc/img/456.JGP</a> (可以访问)不论是否定义了.JPG这种类型都能访问。</p><p>~ ：匹配正则表达式，区分大小写</p><p><a href="http://10.4.7.129:92/imooc/img/456.JGP">http://10.4.7.129:92/imooc/img/456.JGP</a> (不能访问)因为没有定义.JPG这种类型能访问。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">92</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    #正则表达式。*代表不区分大小写</span><br><span class="line">    location ~* \.(<span class="variable constant_">GIF</span>|png|bmp|jpg|jpeg) &#123;</span><br><span class="line">        root   /home;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">92</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    #正则表达式。*代表不区分大小写</span><br><span class="line">    location ~ \.(<span class="variable constant_">GIF</span>|png|bmp|jpg|jpeg) &#123;</span><br><span class="line">        root   /home;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>^~ 以某个字符路径开头请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">93</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    #^~ 以某个字符路径开头请求</span><br><span class="line">    location ^~ <span class="regexp">/imooc/img</span> &#123;</span><br><span class="line">        root   /home;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="DNS解析域名"><a href="#DNS解析域名" class="headerlink" title="DNS解析域名"></a>DNS解析域名</h2><p>user-&gt; client(<a href="http://www.imooc.com/">www.imooc.com</a>) -&gt; nginx(代理服务器192.168.1.88 小区大门) —&gt; tomcat1 （目标服务器 内网） ##号楼##室</p><p>​                                                                                                                                    —&gt; tomcat2 （目标服务器 内网）##号楼##室</p><h2 id="用switchhosts-模拟本地域名解析访问"><a href="#用switchhosts-模拟本地域名解析访问" class="headerlink" title="用switchhosts 模拟本地域名解析访问"></a>用switchhosts 模拟本地域名解析访问</h2><p><a href="https://cloud.tencent.com/developer/article/1408956">https://cloud.tencent.com/developer/article/1408956</a></p><p><a href="https://links.jianshu.com/go?to=https://github.com/oldj/SwitchHosts/releases/download/v3.3.12/SwitchHosts-win32-ia32_v3.3.12.5349.zip">https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Foldj%2FSwitchHosts%2Freleases%2Fdownload%2Fv3.3.12%2FSwitchHosts-win32-ia32_v3.3.12.5349.zip</a></p><p>自定义hosts 一键切换。不用更改本机hosts</p><p>定义nginx-dev-imooc 的hosts</p><p>添加映射：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.4.7.129 www.imooc.com</span><br></pre></td></tr></table></figure><p>访问：</p><p><a href="http://www.imooc.com/">www.imooc.com</a> 显示10.4.7.129 默认界面</p><h2 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h2><p><img src="/img/postimages/nginx%E8%B7%A8%E5%9F%9F.webp" alt="nginx跨域"></p><p><img src="/img/postimages/nginx%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AEsuccess.webp" alt="nginx跨域访问success"></p><p><img src="/img/postimages/cors%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB.webp" alt="cors跨域资源共享"></p><p>当出现403跨域错误的时候 <code>No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource</code>，需要给Nginx服务器配置响应的header参数：</p><p>只需要在Nginx的配置文件中配置以下参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location / &#123; </span><br><span class="line">    #允许跨域请求的域，*代表所有</span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> *;</span><br><span class="line">    #允许请求的方法，比如<span class="variable constant_">GET</span>, <span class="variable constant_">POST</span>, <span class="variable constant_">DELETE</span>，<span class="variable constant_">PUT</span></span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> *;</span><br><span class="line">    #允许带上cookie请求</span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Credentails&#x27;</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">    #允许请求的<span class="variable constant_">HEADER</span></span><br><span class="line">    add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> *;</span><br><span class="line">    <span class="keyword">if</span> ($request_method = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">204</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="nginx-防盗链技术支持"><a href="#nginx-防盗链技术支持" class="headerlink" title="nginx 防盗链技术支持"></a>nginx 防盗链技术支持</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#对源站点验证</span><br><span class="line">valid_referers *.<span class="property">imooc</span>.<span class="property">com</span>;</span><br><span class="line">#非法引入会进入下方判断</span><br><span class="line"><span class="keyword">if</span> ($invalid_referer) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx-模块化体系"><a href="#nginx-模块化体系" class="headerlink" title="nginx 模块化体系"></a>nginx 模块化体系</h2><p><img src="/img/postimages/nginx%E6%A8%A1%E5%9D%97%E5%8C%96%E4%BD%93%E7%B3%BB.webp" alt="nginx模块化体系"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 nginx-1.16.1]# ll</span><br><span class="line">total 756</span><br><span class="line">drwxr-xr-x. 6 1001 1001   4096 Dec 17 04:04 auto       #一些判断操作系统支持，编译等相关的文件</span><br><span class="line">-rw-r--r--. 1 1001 1001 296463 Aug 13  2019 CHANGES    #版本的更改日志</span><br><span class="line">-rw-r--r--. 1 1001 1001 452171 Aug 13  2019 CHANGES.ru #俄版版本的更改日志</span><br><span class="line">drwxr-xr-x. 2 1001 1001    168 Dec 17 04:04 conf      #配置文件夹</span><br><span class="line">-rwxr-xr-x. 1 1001 1001   2502 Aug 13  2019 configure #编译配置程序</span><br><span class="line">drwxr-xr-x. 4 1001 1001     72 Dec 17 04:04 contrib   #提供了语法高亮支持脚本，让vim打开时，语法高亮。需要拷贝contrib中到 本地vim目录(如果根目录没有该目录，先mkdir ~/.vim)</span><br><span class="line">drwxr-xr-x. 2 1001 1001     40 Dec 17 04:04 html      #默认页面</span><br><span class="line">-rw-r--r--. 1 1001 1001   1397 Aug 13  2019 LICENSE   #许可证书</span><br><span class="line">-rw-r--r--. 1 root root    355 Dec 17 04:19 Makefile  #编译后的文件</span><br><span class="line">drwxr-xr-x. 2 1001 1001     21 Dec 17 04:04 man       #使用手册</span><br><span class="line">drwxr-xr-x. 3 root root    174 Dec 17 04:20 objs      #第三方插件</span><br><span class="line">-rw-r--r--. 1 1001 1001     49 Aug 13  2019 README</span><br><span class="line">drwxr-xr-x. 9 1001 1001     91 Dec 17 04:04 src      #源码</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">cd conf</span><br><span class="line">[root@centos7 conf]# ll</span><br><span class="line">total 40</span><br><span class="line">-rw-r--r--. 1 1001 1001 1077 Aug 13  2019 fastcgi.conf</span><br><span class="line">-rw-r--r--. 1 1001 1001 1007 Aug 13  2019 fastcgi_params</span><br><span class="line">-rw-r--r--. 1 1001 1001 2837 Aug 13  2019 koi-utf</span><br><span class="line">-rw-r--r--. 1 1001 1001 2223 Aug 13  2019 koi-win</span><br><span class="line">-rw-r--r--. 1 1001 1001 5231 Aug 13  2019 mime.types</span><br><span class="line">-rw-r--r--. 1 1001 1001 2656 Aug 13  2019 nginx.conf # 核心配置文件</span><br><span class="line">-rw-r--r--. 1 1001 1001  636 Aug 13  2019 scgi_params</span><br><span class="line">-rw-r--r--. 1 1001 1001  664 Aug 13  2019 uwsgi_params</span><br><span class="line">-rw-r--r--. 1 1001 1001 3610 Aug 13  2019 win-utf</span><br><span class="line"></span><br><span class="line">[root@centos7 html]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 1001 1001 494 Aug 13  2019 50x.html</span><br><span class="line">-rw-r--r--. 1 1001 1001 612 Aug 13  2019 index.html</span><br><span class="line"></span><br><span class="line">[root@centos7 objs]# ll</span><br><span class="line">total 3888</span><br><span class="line">-rw-r--r--. 1 root root   17763 Dec 17 04:19 autoconf.err</span><br><span class="line">-rw-r--r--. 1 root root   40485 Dec 17 04:19 Makefile</span><br><span class="line">-rwxr-xr-x. 1 root root 3857136 Dec 17 04:20 nginx</span><br><span class="line">-rw-r--r--. 1 root root    5327 Dec 17 04:20 nginx.8</span><br><span class="line">-rw-r--r--. 1 root root    7363 Dec 17 04:19 ngx_auto_config.h</span><br><span class="line">-rw-r--r--. 1 root root     657 Dec 17 04:19 ngx_auto_headers.h</span><br><span class="line">-rw-r--r--. 1 root root    5975 Dec 17 04:19 ngx_modules.c</span><br><span class="line">-rw-r--r--. 1 root root   32552 Dec 17 04:20 ngx_modules.o</span><br><span class="line">drwxr-xr-x. 9 root root      91 Dec 17 04:19 src</span><br><span class="line"></span><br><span class="line">[root@centos7 src]# ll</span><br><span class="line">total 20</span><br><span class="line">drwxr-xr-x. 2 1001 1001 4096 Dec 17 04:04 core   #核心源码</span><br><span class="line">drwxr-xr-x. 3 1001 1001 4096 Dec 17 04:04 event  #事件</span><br><span class="line">drwxr-xr-x. 4 1001 1001 4096 Dec 17 04:04 http</span><br><span class="line">drwxr-xr-x. 2 1001 1001 4096 Dec 17 04:04 mail</span><br><span class="line">drwxr-xr-x. 2 1001 1001   74 Dec 17 04:04 misc   #辅助代码</span><br><span class="line">drwxr-xr-x. 3 1001 1001   18 Dec 17 04:04 os     #系统</span><br><span class="line">drwxr-xr-x. 2 1001 1001 4096 Aug 13  2019 stream </span><br><span class="line"></span><br><span class="line">[root@centos7 http]# ls</span><br><span class="line">modules                        ngx_http_file_cache.c              ngx_http_request.h               ngx_http_upstream_round_robin.h</span><br><span class="line">ngx_http.c                     ngx_http.h                         ngx_http_script.c                ngx_http_variables.c</span><br><span class="line">ngx_http_cache.h               ngx_http_header_filter_module.c    ngx_http_script.h                ngx_http_variables.h</span><br><span class="line">ngx_http_config.h              ngx_http_parse.c                   ngx_http_special_response.c      ngx_http_write_filter_module.c</span><br><span class="line">ngx_http_copy_filter_module.c  ngx_http_postpone_filter_module.c  ngx_http_upstream.c              v2</span><br><span class="line">ngx_http_core_module.c         ngx_http_request_body.c            ngx_http_upstream.h</span><br><span class="line">ngx_http_core_module.h         ngx_http_request.c                 ngx_http_upstream_round_robin.c</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><h3 id="四层负载均衡"><a href="#四层负载均衡" class="headerlink" title="四层负载均衡"></a>四层负载均衡</h3><p>主要是为了将请求分流到不同服务器</p><p>F5 硬负载均衡 基于硬件、商业化</p><p>LVS 四层负载均衡</p><p>Haproxy 四层负载均衡</p><p>Nginx 四层负载均衡</p><h3 id="七层负载均衡"><a href="#七层负载均衡" class="headerlink" title="七层负载均衡"></a>七层负载均衡</h3><p>基于应用层HTTP协议进行负载均衡</p><p>Nginx 七层负载均衡</p><p>Haproxy 七层负载均衡</p><p>apache 七层负载均衡</p><p>四层主要是tcp、udp转发请求，而不是处理请求<br>七层会处理请求，可以过滤、压缩、缓存等</p><h3 id="DNS-地域负载均衡"><a href="#DNS-地域负载均衡" class="headerlink" title="DNS 地域负载均衡"></a>DNS 地域负载均衡</h3><p><img src="/img/postimages/DNS%E5%9C%B0%E5%9F%9F%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.webp" alt="DNS地域负载均衡"></p><p>可以根据请求者地域，分配到最近的服务器<br>减少网络传输的损耗</p><h2 id="使用Nginx搭建三台tomcat集群"><a href="#使用Nginx搭建三台tomcat集群" class="headerlink" title="使用Nginx搭建三台tomcat集群"></a>使用Nginx搭建三台tomcat集群</h2><p>tomcat1 :10.4.7.11</p><p>tomcat2 :10.4.7.12</p><p>tomcat3 :10.4.7.21</p><p>tomcat安装：10.4.7.{11,12,21}都要安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install tomcat -y</span><br><span class="line">yum install tomcat-webapps tomcat-admin-webapps tomcat-docs-webapp tomcat-javadoc</span><br><span class="line"><span class="meta">#</span><span class="language-bash">关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta">#</span><span class="language-bash">启动tomcat</span></span><br><span class="line">systemctl restart tomcat</span><br></pre></td></tr></table></figure><p>10.4.7.129 (nginx服务器)上配置tomcat集群</p><p>vim imooc.conf</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  www.<span class="property">tomcats</span>.<span class="property">com</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass <span class="attr">http</span>:<span class="comment">//tomcats;</span></span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload </span><br></pre></td></tr></table></figure><p>windwos配置hosts规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.4.7.129 www.tomcats.com</span><br></pre></td></tr></table></figure><p>测试访问。</p><p><a href="http://www.tomcats.com/">www.tomcats.com</a></p><p>请求会平均分配给后面三台tomcat.</p><p>参考：<a href="http://tengine.taobao.org/book/chapter_05.html">http://tengine.taobao.org/book/chapter_05.html</a></p><h2 id="负载均衡之轮询"><a href="#负载均衡之轮询" class="headerlink" title="负载均衡之轮询"></a>负载均衡之轮询</h2><p>默认nginx使用的是轮询。交替出现。出现次数均等。</p><p>修改每台tomcat默认页面</p><p>&#x2F;usr&#x2F;share&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;index.jsp</p><p>第37行。home改成对应IP最后一位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">37 <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;nav-home&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;tomcatUrl&#125;&quot;</span>&gt;</span>12<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重启tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart tomcat </span><br></pre></td></tr></table></figure><p>![nginx 轮询](&#x2F;img&#x2F;postimages&#x2F;nginx 轮询.webp)</p><p> 11 12 21 会交替出现。</p><h2 id="负载均衡之权重-加权轮询"><a href="#负载均衡之权重-加权轮询" class="headerlink" title="负载均衡之权重-加权轮询"></a>负载均衡之权重-加权轮询</h2><p>weight 值越大，出现的次数越多（后端服务器被访问的次数就越多）。</p><p>配置在upstream 模块内。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> weight=<span class="number">2</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> weight=<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>11:12:21 &#x3D; 1:2:3</p><p>21出现几率最大。</p><h2 id="upstream-指令参数"><a href="#upstream-指令参数" class="headerlink" title="upstream 指令参数"></a>upstream 指令参数</h2><p>max_conns :限制<code>*number*</code>到代理服务器的最大同时活动连接数.默认值为零，表示没有限制。如果启用了<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive">idle keepalive</a>连接、多个<a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes">worker</a>和<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone">共享内存</a>，则代理服务器的 active 和 idle 连接总数可能会超过该<code>max_conns</code>值。允许最大连接数。</p><p>限制每台server的连接数，用于保护避免过载起到限流作用。</p><p>测试参考配置如下：</p><p>#worker 进程设置1个，便于测试观察成功的连接数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">worker_processes <span class="number">1</span> </span><br><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> max_conns=<span class="number">2</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> max_conns=<span class="number">2</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> max_conns=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>slow_start:当节点恢复，不立即加入,而是等待 slow_start 后加入服务对列.(仅商业版支持)</p><p>测试参考配置如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> weight=<span class="number">6</span> slow_start=60s;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> weight=<span class="number">2</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> weight=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p>该参数不能使用在hash 和random load balancing中</p><p>如果在upstream中只有一台server，则该参数失效。</p><p>down :将服务器标记为永久不可用。</p><p>测试参考配置如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> down;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> weight=<span class="number">2</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> weight=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>backup:将服务器标记为备份服务器,只有在其他的服务器都宕机以后，自己才会加入到集群中，被用户访问到。</p><p>该参数不能与 <a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash">hash</a>、<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash">ip_hash</a>和<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random">随机</a> 负载平衡方法一起使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> backup;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>max_fails:失败几次，则标记server已宕机，剔出上游服务。</p><p>fail_timeout:表示失败的重试时间。</p><p>假设目前设置如下：</p><p>max_fails&#x3D;2  fail_timeout&#x3D;15s</p><p>则表示在15秒内请求某一server失败达到2次后，则认为该server已经挂了或者宕机了，随后再过15s，这15s内不会有新的请求到达刚刚挂掉的节点上，而是会请求到正常运作的server，15秒后会在有新请求尝试连接挂掉的server，如果还是失败，重复上一过程，直到恢复。</p><h2 id="使用keepalive提高吞吐量"><a href="#使用keepalive提高吞吐量" class="headerlink" title="使用keepalive提高吞吐量"></a>使用keepalive提高吞吐量</h2><p><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive">https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive</a></p><p>测试配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">        keepalive <span class="number">32</span>; #配置长连接的数量，保持连接可以提高吞吐量</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  www.<span class="property">tomcats</span>.<span class="property">com</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass <span class="attr">http</span>:<span class="comment">//tomcats;</span></span><br><span class="line">            proxy_http_version <span class="number">1.1</span>; #代表上面长连接的版本号，（默认<span class="number">1.0</span>，但<span class="number">1.0</span>不是长链接）</span><br><span class="line">            proxy_set_header <span class="title class_">Connection</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="负载均衡之ip-hash"><a href="#负载均衡之ip-hash" class="headerlink" title="负载均衡之ip_hash"></a>负载均衡之ip_hash</h2><p>hash算法</p><p>hash(ip) % node_counts &#x3D; index</p><p>算出用户访问的服务器具体是哪一台</p><p>保证用户访问的服务器是同一台，保持会话一致</p><p>测试配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">ip_hash;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.11</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.12</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">10.4</span><span class="number">.7</span><span class="number">.21</span>:<span class="number">8080</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>   10.4.7.110<br>   10.4.7.120        —&gt; hash(10 4 7)<br>   10.4.7.210</p><p>分段进行计算，同一片区域，会访问到一个里</p><h3 id="负载均衡之url-hash"><a href="#负载均衡之url-hash" class="headerlink" title="负载均衡之url_hash"></a>负载均衡之<strong>url_hash</strong></h3><p><img src="/img/postimages/url_hash.webp" alt="url_hash"></p><p>通过配置hash $request_uri<br>开启url_hash</p><h2 id="nginx控制浏览器缓存"><a href="#nginx控制浏览器缓存" class="headerlink" title="nginx控制浏览器缓存"></a>nginx控制浏览器缓存</h2><p><img src="/img/postimages/nginx%E7%BC%93%E5%AD%98.webp" alt="nginx缓存"></p><p>1、设置静态内容的过期时间(expires time;)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location  /<span class="keyword">static</span> &#123;</span><br><span class="line">    alias  /home/naga;</span><br><span class="line">    expires  10s;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、固定时间 expires @[time]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expires  @22h30s;   代表晚上10:30pm失效，浏览器会自动计算时间差</span><br></pre></td></tr></table></figure><p>3、 expires -[time]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expires  -1h;  距离现在的1小时之前就失效了，相当于不用缓存</span><br></pre></td></tr></table></figure><p>4、expires eposh; 不使用缓存</p><p>5、expires off; 默认值，其实就是不管，由浏览器自己使用自己的默认缓存</p><p>6、expires max; 缓存不会过期，除非修改过。</p><h2 id="上游服务静态内容缓存"><a href="#上游服务静态内容缓存" class="headerlink" title="上游服务静态内容缓存"></a>上游服务静态内容缓存</h2><p>keys_zone 是内存缓存 max_size 是硬盘缓存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">upstream xxx &#123;  ...  &#125;</span><br><span class="line"></span><br><span class="line"># proxy_cache_path  设置缓存保存的地址，目录会自动创建</span><br><span class="line">#   keys_zone 设置共享内存，以及占用的空间大小 ## 内存缓存 ##  (mycache是共享内存名，下面)</span><br><span class="line">#   max_size 设置缓存大小</span><br><span class="line">#   inactive 超过此时间，缓存自动清理</span><br><span class="line">#   use_temp_path=off  关闭临时目录</span><br><span class="line">proxy_cache_path  /usr/local/nginx/upstream_cache  keys_zone=<span class="attr">mycache</span>:50m  max_size=30g  inactive=8h  use_temp_path=off;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen  <span class="number">80</span>;</span><br><span class="line">  server_name  www.<span class="property">naga</span>.<span class="property">cn</span>;</span><br><span class="line">  </span><br><span class="line">  #开启并且使用缓存</span><br><span class="line">  proxy_cache  mycache;</span><br><span class="line">  #针对<span class="number">200</span>和<span class="number">304</span>状态码的缓存设置过期时间</span><br><span class="line">  proxy_cache_valid   <span class="number">200</span>  <span class="number">304</span>  8h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用nginx-配置https域名证书"><a href="#使用nginx-配置https域名证书" class="headerlink" title="使用nginx 配置https域名证书"></a>使用nginx 配置https域名证书</h2><ol><li><p>安装ssl模块</p><p>要在nginx中配置https,及必须安装ssl模块，也就是‘http_ssl_module’.</p><p>进入到nginx解压目录：nginx-1.16.1</p><p>新增ssl模块（原来的模块需要保留）–with-http_ssl_module</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid \</span><br><span class="line">--lock-path=/var/lock/nginx.lock \</span><br><span class="line">--error-log-path=/var/log/nginx/error.log \</span><br><span class="line">--http-log-path=/var/log/nginx/access.log \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--http-client-body-temp-path=/var/temp/nginx/client \</span><br><span class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</span><br><span class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</span><br><span class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</span><br><span class="line">--http-scgi-temp-path=/var/temp/nginx/scgi \</span><br><span class="line">--with-http_ssl_module</span><br></pre></td></tr></table></figure><p>编译和安装：</p><p>make </p><p>make install </p><h2 id="配置ssl"><a href="#配置ssl" class="headerlink" title="配置ssl"></a>配置ssl</h2><p>1、云上申请证书，审核完成后将证书下载下来，nginx包含两个文件，一个crt证书文件，一个key密钥文件</p><p>2、将文件上传到云服务器，可以放在conf下</p><p>3、修改nginx.conf  (事先在nginx里面加入ssl模块    –with-http_ssl_module, 安装后通过  .&#x2F;nginx -V 查看 )</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  <span class="number">443</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    </span><br><span class="line">    # 开启ssl </span><br><span class="line">    ssl on; </span><br><span class="line">    # 配置ssl证书   因为放在conf下的，和nginx.<span class="property">conf</span>同一路径，就这样写就行</span><br><span class="line">    ssl_certificate 1_www.<span class="property">imoocdsp</span>.<span class="property">com_bundle</span>.<span class="property">crt</span>; </span><br><span class="line">    # 配置证书秘钥 </span><br><span class="line">    ssl_certificate_key 2_www.<span class="property">imoocdsp</span>.<span class="property">com</span>.<span class="property">key</span>; </span><br><span class="line">    # ssl会话cache </span><br><span class="line">    ssl_session_cache <span class="attr">shared</span>:<span class="attr">SSL</span>:1m; </span><br><span class="line">    # ssl会话超时时间 </span><br><span class="line">    ssl_session_timeout 5m; </span><br><span class="line">    # 配置加密套件，写法遵循 openssl 标准 </span><br><span class="line">    ssl_protocols <span class="title class_">TLSv1</span> <span class="title class_">TLSv1</span><span class="number">.1</span> <span class="title class_">TLSv1</span><span class="number">.2</span>; </span><br><span class="line">    ssl_ciphers <span class="variable constant_">ECDHE</span>-<span class="variable constant_">RSA</span>-<span class="title class_">AES128</span>-<span class="variable constant_">GCM</span>-<span class="title class_">SHA256</span>:<span class="attr">HIGH</span>:!<span class="attr">aNULL</span>:!<span class="title class_">MD5</span>:!<span class="title class_">RC4</span>:!<span class="variable constant_">DHE</span>; </span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">&#125;</span><br><span class="line">### 将http的请求转发到https</span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    </span><br><span class="line">    # 排除法</span><br><span class="line">    <span class="keyword">if</span> ($http_name ~* <span class="string">&quot;^online$&quot;</span> ) &#123;</span><br><span class="line">        rewrite ^<span class="regexp">/(.*)$ https:/</span><span class="regexp">/localhost/</span>online/ permanent;</span><br><span class="line">    &#125;</span><br><span class="line">    rewrite ^ <span class="attr">https</span>:<span class="comment">//$host$1 permanent;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p>1.分布式</p><p>2.前后端解耦</p><p>3.静态归nginx</p><p>4.接口服务化</p><p>静态数据：css&#x2F;js&#x2F;html&#x2F;images&#x2F;audios&#x2F;videos&#x2F;…</p><p>动态数据：得到的响应可能会和上次不同。</p><p>动静分离的问题</p><p>跨域：</p><p>springboot</p><p>nginx </p><p>jsonp</p><p>分布式会话： 分布式缓存中间件Redis</p><h2 id="nginx高可用HA-keepalived-双机主备"><a href="#nginx高可用HA-keepalived-双机主备" class="headerlink" title="nginx高可用HA keepalived 双机主备"></a>nginx高可用HA keepalived 双机主备</h2><p>keepalived 使用的是虚拟路由冗余协议 VRRP ，这个协议的特点如下：</p><p>1、解决内网单机故障的路由协议，</p><p>2、用于构建过个路由MASTER BACKUP，将几台提供相同服务的路由器组成一个路由器组。一个路由就是nginx</p><p>3、虚拟IP-VIP（Virtual IP Address）</p><p>过程：用户不直接访问nginx，访问虚拟IP，这个虚拟IP是绑定了nginx的master节点，会根据这个关系解析出来结果。 master主节点挂了，心跳检测到后会让虚拟IP找到备用机，多个备用机会根据权重选择。</p><p>此外，主备节点的硬件配置应一样。</p><h2 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h2><p>解压后进入文件夹进行配置，类似nginx，但是需要用 –sysconf&#x3D;&#x2F;etc指定配置文件地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libnl libnl-devel</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/keepalived  --sysconf=/etc</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>prefix：keepalived安装的位置</p><p>sysconf：keepalived核心配置文件所在位置，固定位置，改成其他位置则keepalived启动不了。会报错。</p><p>libnl libnl-devel 是libnl&#x2F;libnl-3依赖包。</p><h3 id="核心配置文件："><a href="#核心配置文件：" class="headerlink" title="核心配置文件："></a>核心配置文件：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">!<span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line"># 全局配置</span><br><span class="line">global_defs &#123;</span><br><span class="line">   # 节点故障，切换了节点之后会通知管理员，下面还要配置邮箱的协议等，可以不要</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     <span class="number">123456</span>@qq.<span class="property">com</span></span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from <span class="title class_">Alexandre</span>.<span class="property">Cassen</span>@firewall.<span class="property">loc</span></span><br><span class="line">   smtp_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.1</span></span><br><span class="line">   smtp_connect_timeout <span class="number">30</span></span><br><span class="line">   </span><br><span class="line">   # 路由<span class="variable constant_">ID</span>：当前安装keepalived节点主机的标识符，全局唯一</span><br><span class="line">   router_id naga_170</span><br><span class="line">   </span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval <span class="number">0</span></span><br><span class="line">   vrrp_gna_interval <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#基于<span class="variable constant_">VRRP</span>协议的对象，计算机节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">MASTER</span>            # 表示当前为nginx的master主节点</span><br><span class="line">    interface eth0          # 当前实例绑定的网卡， 用 ip addr查看</span><br><span class="line">    virtual_router_id <span class="number">51</span>     #虚拟路由<span class="variable constant_">ID</span>，主备节点需要一致</span><br><span class="line">    priority <span class="number">100</span>            #权重，备机优先级越高就成为新的master</span><br><span class="line">    advert_int <span class="number">1</span>            # 主备心跳检查，时间间隔1s</span><br><span class="line">    authentication &#123;        # 认证授权，防止非法节点。每个节点一样就可以</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span>      </span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;     # 虚拟<span class="variable constant_">IP</span>，用一个就可以了</span><br><span class="line">        <span class="number">192.168</span><span class="number">.17</span><span class="number">.17</span></span><br><span class="line">        #<span class="number">192.168</span><span class="number">.200</span><span class="number">.17</span></span><br><span class="line">        #<span class="number">192.168</span><span class="number">.200</span><span class="number">.18</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#下面的都可以不要</span><br><span class="line">virtual_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.100</span> <span class="number">443</span> &#123;</span><br><span class="line">    delay_loop <span class="number">6</span></span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind <span class="variable constant_">NAT</span></span><br><span class="line">    persistence_timeout <span class="number">50</span></span><br><span class="line">    protocol <span class="variable constant_">TCP</span></span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.201</span><span class="number">.100</span> <span class="number">443</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        <span class="variable constant_">SSL_GET</span> &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server <span class="number">10.10</span><span class="number">.10</span><span class="number">.2</span> <span class="number">1358</span> &#123;</span><br><span class="line">    delay_loop <span class="number">6</span></span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind <span class="variable constant_">NAT</span></span><br><span class="line">    persistence_timeout <span class="number">50</span></span><br><span class="line">    protocol <span class="variable constant_">TCP</span></span><br><span class="line"></span><br><span class="line">    sorry_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.200</span> <span class="number">1358</span></span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.2</span> <span class="number">1358</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        <span class="variable constant_">HTTP_GET</span> &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.3</span> <span class="number">1358</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        <span class="variable constant_">HTTP_GET</span> &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server <span class="number">10.10</span><span class="number">.10</span><span class="number">.3</span> <span class="number">1358</span> &#123;</span><br><span class="line">    delay_loop <span class="number">3</span></span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind <span class="variable constant_">NAT</span></span><br><span class="line">    persistence_timeout <span class="number">50</span></span><br><span class="line">    protocol <span class="variable constant_">TCP</span></span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.4</span> <span class="number">1358</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        <span class="variable constant_">HTTP_GET</span> &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.5</span> <span class="number">1358</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        <span class="variable constant_">HTTP_GET</span> &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.<span class="property">jsp</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#### 第一台 ####</span><br><span class="line">! <span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line">#全局变量-路由id，标识主机id</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id keep_140</span><br><span class="line">&#125;</span><br><span class="line">#计算机节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">MASTER</span>#标示当前机器为主节点，从节点<span class="variable constant_">BACKUP</span></span><br><span class="line">    interface ens33#当前网卡</span><br><span class="line">    virtual_router_id <span class="number">51</span>#保持主备机一致</span><br><span class="line">    priority <span class="number">100</span>#权重，最高的当选下一任主机</span><br><span class="line">    advert_int <span class="number">1</span>#检查时间间隔1s</span><br><span class="line">    authentication &#123;#认证授权，防止非法节点进入</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span></span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;#虚拟ip</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#### 第二台 ####</span><br><span class="line">! <span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line">#全局变量-路由id，标识主机id</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id keep_141</span><br><span class="line">&#125;</span><br><span class="line">#计算机节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">BACKUP</span>#标示当前机器为从节点</span><br><span class="line">    interface ens33#当前网卡</span><br><span class="line">    virtual_router_id <span class="number">51</span>#保持主备机一致</span><br><span class="line">    priority <span class="number">80</span>#权重，最高的当选下一任主机</span><br><span class="line">    advert_int <span class="number">1</span>#检查时间间隔1s</span><br><span class="line">    authentication &#123;#认证授权，防止非法节点进入</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span></span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;#虚拟ip，保持和主节点一致</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><p>两台机器nginx 和keeplived进程都在。两台一主一备的目的是，主服务器keeplived挂了，vip切到备服务器上，业务不中断。默认vip是在主上生效的。主备的keepalived进程都在，vip会在主上生效。vip切到备服务器上时.主服务器上的keepalived恢复了。vip会再次切回到主服务器上。</p><h3 id="keepalived配置Nginx自动启动"><a href="#keepalived配置Nginx自动启动" class="headerlink" title="keepalived配置Nginx自动启动"></a>keepalived配置Nginx自动启动</h3><p>这时如果nginx挂了，keepalived没有挂，还是会无法访问。</p><p>1.脚本（主从都配置）</p><p>cd &#x2F;etc&#x2F;keepalived<br>vim check_nginx_alive.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">A=`ps -C nginx --no-header | wc -l`</span><br><span class="line"><span class="meta"># </span><span class="language-bash">进程数是0的话，就尝试重启nginx</span></span><br><span class="line">if [ $A -eq 0 ]; then</span><br><span class="line">    /usr/local/nginx/sbin/nginx</span><br><span class="line">    # 等一会儿再次检查ngxin，如果nginx没有启动成功，则停止当前机器的keepalived，使用备用机器</span><br><span class="line">    sleep 3</span><br><span class="line">    if [ `ps -C nginx --no-header | wc -l` -eq 0 ]; then</span><br><span class="line">        killall keepalived  </span><br><span class="line">    fi</span><br><span class="line">fi      </span><br></pre></td></tr></table></figure><p>执行这个脚本后，会检测nginx，挂掉会重启nginx。</p><p>我们将它配置到keepalived配置文件里。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">! <span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id keep_140</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check_nginx_alive &#123;</span><br><span class="line">        script <span class="string">&quot;/etc/keepalived/check_nginx_alive.sh&quot;</span></span><br><span class="line">        interval <span class="number">2</span> #每隔两秒钟运行脚本检测</span><br><span class="line">        weight <span class="number">10</span> #脚本运行成功，升级权重+<span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">MASTER</span></span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">100</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span></span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">    &#125;</span><br><span class="line">    #在此执行上面的定时器</span><br><span class="line">    track_script&#123;</span><br><span class="line">        check_nginx_alive</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="双机主备缺点"><a href="#双机主备缺点" class="headerlink" title="双机主备缺点"></a>双机主备缺点</h4><p>这样我们就能保证高可用的架构了，但是双机主备会有资源浪费的问题，主机永远不挂机，备机白干活儿。</p><h4 id="Keepalived-双主热备"><a href="#Keepalived-双主热备" class="headerlink" title="Keepalived 双主热备"></a>Keepalived 双主热备</h4><p><img src="/img/postimages/nginx%E5%8F%8C%E4%B8%BB1.webp" alt="nginx双主1"></p><p><img src="/img/postimages/nginx%E5%8F%8C%E4%B8%BB2.webp" alt="nginx双主2"></p><p>双机使用两个虚拟IP，互为主备。</p><p>使用DNS轮询两个虚拟IP进行访问，这样两台服务器都可以使用了。解析域名的时候，给域名解析两个云服务器的ip地址，再均衡权重即可。</p><p>配置（原主节点）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">! <span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id keep_140</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check_nginx_alive &#123;</span><br><span class="line">        script <span class="string">&quot;/etc/keepalived/check_nginx_alive.sh&quot;</span></span><br><span class="line">        interval <span class="number">2</span> #每隔两秒钟运行脚本检测</span><br><span class="line">        weight <span class="number">10</span> #脚本运行成功，升级权重+<span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">#<span class="number">211</span>主节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">MASTER</span></span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">100</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span></span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script&#123;</span><br><span class="line">        check_nginx_alive</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#<span class="number">212</span>从节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_2</span> &#123;        #名字要改</span><br><span class="line">    state <span class="variable constant_">BACKUP</span></span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">52</span>        #换了一组实例，改</span><br><span class="line">    priority <span class="number">80</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span>      </span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_nginx_alive </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.212</span>           #<span class="variable constant_">VIP</span>更改  虚拟ip  virtual <span class="variable constant_">IP</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script&#123;</span><br><span class="line">    check_nginx_alive</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置（原从节点）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">! <span class="title class_">Configuration</span> <span class="title class_">File</span> <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id keep_141</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check_nginx_alive &#123;</span><br><span class="line">        script <span class="string">&quot;/etc/keepalived/check_nginx_alive.sh&quot;</span></span><br><span class="line">        interval <span class="number">2</span> #每隔两秒钟运行脚本检测</span><br><span class="line">        weight <span class="number">10</span> #脚本运行成功，升级权重+<span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">#<span class="number">211</span>从节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_1</span> &#123;</span><br><span class="line">    state <span class="variable constant_">BACKUP</span></span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">80</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span></span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">    &#125;</span><br><span class="line">        track_script &#123;</span><br><span class="line">        check_nginx_alive </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#<span class="number">212</span>主节点</span><br><span class="line">vrrp_instance <span class="variable constant_">VI_2</span> &#123;           #第二组实例</span><br><span class="line">    state <span class="variable constant_">MASTER</span>            </span><br><span class="line">    interface ens33          </span><br><span class="line">    virtual_router_id <span class="number">52</span>        #第二组router_id</span><br><span class="line">    priority <span class="number">100</span>            </span><br><span class="line">    advert_int <span class="number">1</span>            </span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type <span class="variable constant_">PASS</span>      </span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;     </span><br><span class="line">        <span class="number">10.4</span><span class="number">.7</span><span class="number">.212</span>           #改为第二个虚拟ip</span><br><span class="line">    &#125;</span><br><span class="line">        track_script &#123;</span><br><span class="line">        check_nginx_alive </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s集群搭建</title>
      <link href="/2022/01/02/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/01/02/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-（1-22-2）安装手册（Ubuntu非高可用版）"><a href="#Kubernetes-（1-22-2）安装手册（Ubuntu非高可用版）" class="headerlink" title="Kubernetes （1.22.2）安装手册（Ubuntu非高可用版）"></a>Kubernetes （1.22.2）安装手册（Ubuntu非高可用版）</h1><h2 id="安装前准备工作"><a href="#安装前准备工作" class="headerlink" title="安装前准备工作"></a>安装前准备工作</h2><h3 id="（重要！）安装k8s-1-22-2-版本需要的硬件条件："><a href="#（重要！）安装k8s-1-22-2-版本需要的硬件条件：" class="headerlink" title="（重要！）安装k8s 1.22.2 版本需要的硬件条件："></a>（重要！）安装k8s 1.22.2 版本需要的硬件条件：</h3><p>所有节点：</p><p><strong>cpu数量2个及以上</strong></p><p>4G 以上内存</p><p>不用开虚拟化</p><p><strong>(重要！！)虚拟机不要用克隆，每台都要单独创建否则会出问题。</strong></p><p>未安装docker 之前创建一个快照。</p><p>安装docker、kubelet，并初始化集群后在创建一个快照。</p><p>未安装cni插件之前创建一个快照，以便于随时更改calico 和fluence</p><p>kubeadm 初始化失败检查，重置kubeadm。</p><p>ip 地址规划：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">master: 10.4.7.60/24 </span><br><span class="line"></span><br><span class="line">gw:10.4.7.254</span><br><span class="line"></span><br><span class="line">dns:114.114.114.114</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worker1: 10.4.7.61/24</span><br><span class="line"></span><br><span class="line">gw:10.4.7.254</span><br><span class="line"></span><br><span class="line">dns:114.114.114.114</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worker1: 10.4.7.61/24</span><br><span class="line"></span><br><span class="line">gw:10.4.7.254</span><br><span class="line"></span><br><span class="line">dns:114.114.114.114</span><br></pre></td></tr></table></figure><p><strong>各节点安装时需要更换apt源：(更新和安装deb包都很快！！！)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.tuna.tsinghua.edu.cn/ubuntu/</span><br></pre></td></tr></table></figure><h3 id="1-设置hosts解析"><a href="#1-设置hosts解析" class="headerlink" title="1. 设置hosts解析"></a>1. 设置hosts解析</h3><p>操作节点：所有节点（<code>master</code>）均需执行</p><ul><li><strong>修改hostname</strong><br>hostname必须只能包含小写字母、数字、”,”、”-“，且开头结尾必须是小写字母或数字</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">在master节点</span></span><br><span class="line">hostnamectl set-hostname master #设置master节点的hostname</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">slave1节点</span></span><br><span class="line">hostnamectl set-hostname worker1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">slave2节点</span></span><br><span class="line">hostnamectl set-hostname worker2</span><br></pre></td></tr></table></figure><h3 id="2-调整系统配置"><a href="#2-调整系统配置" class="headerlink" title="2. 调整系统配置"></a>2. 调整系统配置</h3><p>操作节点： 所有的master和slave节点（<code>master,k8s-slave</code>）需要执行</p><blockquote><p>本章下述操作均以master为例，其他节点均是相同的操作（ip和hostname的值换成对应机器的真实值）</p></blockquote><p><strong>设置iptables</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">/etc/init.d/ufw stop</span><br><span class="line">ufw disable</span><br></pre></td></tr></table></figure><ul><li><strong>关闭swap</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line"><span class="meta"># </span><span class="language-bash">防止开机自动挂载 swap 分区</span></span><br><span class="line">rm /swap.img  </span><br><span class="line">sed -i &#x27;/ swap / s/^\(.*\)$/#\1/g&#x27; /etc/fstab</span><br></pre></td></tr></table></figure><ul><li><strong>修改内核参数</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line">EOF</span><br><span class="line">modprobe br_netfilter</span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure><ul><li>设置apt源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https ca-certificates software-properties-common </span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main&quot;</span><br><span class="line"></span><br><span class="line">apt-get update   </span><br><span class="line"><span class="meta">#</span><span class="language-bash">若上步出现NO_PUBLICKEY问题，参考https://www.cnblogs.com/jiangzuo/p/13667011.html</span></span><br></pre></td></tr></table></figure><h3 id="3-安装docker"><a href="#3-安装docker" class="headerlink" title="3. 安装docker"></a>3. 安装docker</h3><p>操作节点： 所有节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install docker-ce=<span class="number">5</span>:<span class="number">20.10</span><span class="number">.9</span>~<span class="number">3</span>-<span class="number">0</span>~ubuntu-focal</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>注意要关闭docker 默认的cgroup 否则会出现kubeadm 初始化失败！！！！</p><p>这是cgroup驱动问题。默认情况下Kubernetes cgroup驱动程序设置为system，但docker设置为systemd。我们需要更改Docker cgroup驱动，通过创建配置文件<code>/etc/docker/daemon.json</code>并添加以下行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><p>然后，为使配置生效，你必须重启docker和kubelet。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reloadsystemctl restart dockersystemctl restart kubelet</span><br></pre></td></tr></table></figure><p>重置kubeadm </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm reset</span><br></pre></td></tr></table></figure><p>查看所有节点是否有污点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes -o json | jq &#x27;.items[].spec.taints&#x27;</span><br></pre></td></tr></table></figure><h3 id="给kubectl-设置别名为k，永久生效。"><a href="#给kubectl-设置别名为k，永久生效。" class="headerlink" title="给kubectl 设置别名为k，永久生效。"></a>给kubectl 设置别名为k，永久生效。</h3><p>退出当前用户在进入就生效了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi .bashrc</span><br><span class="line">alias k=&#x27;kubectl&#x27;</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>删除master节点上的污点，删除后pod可以调度到master上。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure><h3 id="使用kubectl中的强制删除命令"><a href="#使用kubectl中的强制删除命令" class="headerlink" title="使用kubectl中的强制删除命令"></a>使用kubectl中的强制删除命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod podName -n NAMESPACE --force --grace-period=0</span><br></pre></td></tr></table></figure><h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt install bash-completion</span><br><span class="line">// locate bash_completion</span><br><span class="line">source /usr/share/bash-completion/bash_completion</span><br><span class="line">source &lt;(kubectl completion bash)</span><br><span class="line">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>查看所有pod </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get po -owide  -A </span><br></pre></td></tr></table></figure><h2 id="部署kubernetes"><a href="#部署kubernetes" class="headerlink" title="部署kubernetes"></a>部署kubernetes</h2><h3 id="1-安装-kubeadm-kubelet-和-kubectl"><a href="#1-安装-kubeadm-kubelet-和-kubectl" class="headerlink" title="1. 安装 kubeadm, kubelet 和 kubectl"></a>1. 安装 kubeadm, kubelet 和 kubectl</h3><p>操作节点： 所有的master和slave节点(<code>master,k8s-slave</code>) 需要执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install kubelet=1.22.2-00 kubectl=1.22.2-00 kubeadm=1.22.2-00</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 查看kubeadm 版本</span></span></span><br><span class="line">kubeadm version</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 设置kubelet开机启动</span></span></span><br><span class="line">systemctl enable kubelet </span><br></pre></td></tr></table></figure><h3 id="2-初始化配置文件"><a href="#2-初始化配置文件" class="headerlink" title="2. 初始化配置文件"></a>2. 初始化配置文件</h3><p>操作节点： 只在master节点（<code>master</code>）执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config print init-defaults &gt; kubeadm.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfigurationx</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.4.7.60 #修改为master 的IP</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: /var/run/dockershim.sock</span><br><span class="line">  name: node     # 删掉此行，删掉此行，删掉此行</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  taints: null</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: 1.22.2</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16   #添加此行</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="3-提前下载镜像"><a href="#3-提前下载镜像" class="headerlink" title="3. 提前下载镜像"></a>3. 提前下载镜像</h3><p>操作节点：只在master节点（<code>master</code>）执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">提前下载镜像到本地</span></span><br><span class="line">kubeadm config images pull --config kubeadm.yaml</span><br><span class="line"></span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-apiserver:v1.22.2</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.22.2</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.22.2</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-proxy:v1.22.2</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/pause:3.5</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/etcd:3.5.0-0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/coredns:v1.8.4</span><br></pre></td></tr></table></figure><h3 id="4-初始化master节点"><a href="#4-初始化master节点" class="headerlink" title="4. 初始化master节点"></a>4. 初始化master节点</h3><p>操作节点：只在master节点（<code>k8s-master</code>）执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config kubeadm.yaml</span><br></pre></td></tr></table></figure><p>若初始化成功后，最后会提示如下信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, if you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.4.7.60:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:3a7987c9f5007ebac7980e6614281ee0e064c760c8db012471f9f662289cc9ce</span><br></pre></td></tr></table></figure><p>接下来按照上述提示信息操作，配置kubectl客户端的认证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><blockquote><p><strong>⚠️注意：</strong>此时使用 kubectl get nodes查看节点应该处于notReady状态，因为还未配置网络插件</p><p>若执行初始化过程中出错，根据错误信息调整后，执行kubeadm reset后再次执行init操作即可</p></blockquote><h3 id="5-添加slave节点到集群中"><a href="#5-添加slave节点到集群中" class="headerlink" title="5. 添加slave节点到集群中"></a>5. 添加slave节点到集群中</h3><p>操作节点：所有的slave节点（<code>worker1</code>`worker2&#96;）需要执行<br>在每台slave节点，执行如下命令，该命令是在kubeadm init成功后提示信息中打印出来的，需要替换成实际init后打印出的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 10.4.7.60:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:3a7987c9f5007ebac7980e6614281ee0e064c760c8db012471f9f662289cc9ce</span><br></pre></td></tr></table></figure><h3 id="6-安装calico插件"><a href="#6-安装calico插件" class="headerlink" title="6. 安装calico插件"></a>6. 安装calico插件</h3><p>操作节点：只在master节点（<code>master</code>）执行</p><p><strong>方式一：直接安装</strong>（未使用！！！）</p><ul><li><p>下载资源文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/manifests/calico-etcd.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改配置</p><ul><li><p>注释掉文件的前22行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="string">---</span></span><br><span class="line">  <span class="number">2</span> <span class="comment"># Source: calico/templates/calico-etcd-secrets.yaml</span></span><br><span class="line">  <span class="number">3</span> <span class="comment"># The following contains k8s Secrets for use with a TLS enabled etcd cluster.</span></span><br><span class="line">  <span class="number">4</span> <span class="comment"># For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/</span></span><br><span class="line">  <span class="number">5</span> <span class="comment">#apiVersion: v1</span></span><br><span class="line">  <span class="number">6</span> <span class="comment">#kind: Secret</span></span><br><span class="line">  <span class="number">7</span> <span class="comment">#type: Opaque</span></span><br><span class="line">  <span class="number">8</span> <span class="comment">#metadata:</span></span><br><span class="line">  <span class="number">9</span> <span class="comment">#  name: calico-etcd-secrets</span></span><br><span class="line"> <span class="number">10</span> <span class="comment">#  namespace: kube-system</span></span><br><span class="line"> <span class="number">11</span> <span class="comment">#data:</span></span><br><span class="line"> <span class="number">12</span>   <span class="comment"># Populate the following with etcd TLS configuration if desired, but leave blank if</span></span><br><span class="line"> <span class="number">13</span>   <span class="comment"># not using TLS for etcd.</span></span><br><span class="line"> <span class="number">14</span>   <span class="comment"># The keys below should be uncommented and the values populated with the base64</span></span><br><span class="line"> <span class="number">15</span>   <span class="comment"># encoded contents of each file that would be associated with the TLS data.</span></span><br><span class="line"> <span class="number">16</span>   <span class="comment"># Example command for encoding a file contents: cat &lt;file&gt; | base64 -w 0</span></span><br><span class="line"> <span class="number">17</span>   <span class="comment"># etcd-key: null</span></span><br><span class="line"> <span class="number">18</span>   <span class="comment"># etcd-cert: null</span></span><br><span class="line"> <span class="number">19</span>   <span class="comment"># etcd-ca: null</span></span><br><span class="line"> <span class="number">20</span> <span class="string">---</span></span><br><span class="line"> <span class="number">21</span> <span class="comment"># Source: calico/templates/calico-config.yaml</span></span><br><span class="line"> <span class="number">22</span> <span class="comment"># This ConfigMap is used to configure a self-hosted Calico installation.</span></span><br><span class="line"> <span class="attr">23 kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"> <span class="attr">24 apiVersion:</span> <span class="string">v1</span></span><br><span class="line"> <span class="attr">25 metadata:</span></span><br><span class="line"> <span class="attr">26   name:</span> <span class="string">calico-config</span></span><br><span class="line"> <span class="attr">27   namespace:</span> <span class="string">kube-system</span></span><br><span class="line"> <span class="string">...</span></span><br></pre></td></tr></table></figure></li><li><p>修改configmap</p><p>注意30-35行，其中etcd_endpoints换成环境的etcd地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">23 kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">24 apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">25 metadata:</span></span><br><span class="line"><span class="attr">26   name:</span> <span class="string">calico-config</span></span><br><span class="line"><span class="attr">27   namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">28 data:</span></span><br><span class="line"><span class="number">29</span>   <span class="comment"># Configure this with the location of your etcd cluster.</span></span><br><span class="line"><span class="attr">30   etcd_endpoints:</span> <span class="string">&quot;https://10.4.7.60:2379&quot;</span></span><br><span class="line"><span class="number">31</span>   <span class="comment"># If you&#x27;re using TLS enabled etcd uncomment the following.</span></span><br><span class="line"><span class="number">32</span>   <span class="comment"># You must also populate the Secret below with these files.</span></span><br><span class="line"><span class="attr">33   etcd_ca:</span> <span class="string">&quot;/calico-secrets/etcd-ca&quot;</span>   <span class="comment"># &quot;/calico-secrets/etcd-ca&quot;</span></span><br><span class="line"><span class="attr">34   etcd_cert:</span> <span class="string">&quot;/calico-secrets/etcd-cert&quot;</span> <span class="comment"># &quot;/calico-secrets/etcd-cert&quot;</span></span><br><span class="line"><span class="attr">35   etcd_key:</span> <span class="string">&quot;/calico-secrets/etcd-key&quot;</span>  <span class="comment"># &quot;/calico-secrets/etcd-key&quot;</span></span><br><span class="line"><span class="number">36</span>   <span class="comment"># Typha is disabled.</span></span><br><span class="line"><span class="attr">37   typha_service_name:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line"><span class="number">38</span>   <span class="comment"># Configure the backend to use.</span></span><br><span class="line"><span class="attr">39   calico_backend:</span> <span class="string">&quot;bird&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>添加calico-node环境变量</p><p>注意297-302行为新添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">285       containers:</span></span><br><span class="line"><span class="number">286</span>         <span class="comment"># Runs calico-node container on each Kubernetes node. This</span></span><br><span class="line"><span class="number">287</span>         <span class="comment"># container programs network policy and routes on each</span></span><br><span class="line"><span class="number">288</span>         <span class="comment"># host.</span></span><br><span class="line"><span class="attr">289         - name:</span> <span class="string">calico-node</span></span><br><span class="line"><span class="attr">290           image:</span> <span class="string">docker.io/calico/node:v3.20.0</span></span><br><span class="line"><span class="attr">291           envFrom:</span></span><br><span class="line"><span class="attr">292           - configMapRef:</span></span><br><span class="line"><span class="number">293</span>               <span class="comment"># Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.</span></span><br><span class="line"><span class="attr">294               name:</span> <span class="string">kubernetes-services-endpoint</span></span><br><span class="line"><span class="attr">295               optional:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">296           env:</span></span><br><span class="line"><span class="attr">297             - name:</span> <span class="string">KUBERNETES_SERVICE_HOST</span></span><br><span class="line"><span class="attr">298               value:</span> <span class="string">&quot;10.4.7.60&quot;</span></span><br><span class="line"><span class="attr">299             - name:</span> <span class="string">KUBERNETES_SERVICE_PORT</span></span><br><span class="line"><span class="attr">300               value:</span> <span class="string">&quot;6443&quot;</span></span><br><span class="line"><span class="attr">301             - name:</span> <span class="string">KUBERNETES_SERVICE_PORT_HTTPS</span></span><br><span class="line"><span class="attr">302               value:</span> <span class="string">&quot;6443&quot;</span></span><br><span class="line"><span class="number">303</span>             <span class="comment"># The location of the etcd cluster.</span></span><br><span class="line"><span class="attr">304             - name:</span> <span class="string">ETCD_ENDPOINTS</span></span><br><span class="line"><span class="attr">305               valueFrom:</span></span><br><span class="line"><span class="attr">306                 configMapKeyRef:</span></span><br><span class="line"><span class="attr">307                   name:</span> <span class="string">calico-config</span></span><br><span class="line"><span class="attr">308                   key:</span> <span class="string">etcd_endpoints</span></span><br><span class="line"><span class="number">309</span>             <span class="comment"># Location of the CA certificate for etcd.</span></span><br><span class="line"><span class="attr">310             - name:</span> <span class="string">ETCD_CA_CERT_FILE</span></span><br></pre></td></tr></table></figure></li><li><p>修改CIDR</p><p>注意371-372行，value值为k8s集群初始化的pod-network-cidr</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">370</span>             <span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line"><span class="attr">371             - name:</span> <span class="string">CALICO_IPV4POOL_CIDR</span></span><br><span class="line"><span class="attr">372               value:</span> <span class="string">&quot;10.244.0.0/16&quot;</span></span><br><span class="line"><span class="number">373</span>             <span class="comment"># Disable file logging so `kubectl logs` works.</span></span><br><span class="line"><span class="attr">374             - name:</span> <span class="string">CALICO_DISABLE_FILE_LOGGING</span></span><br><span class="line"><span class="attr">375               value:</span> <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure><p>创建secret</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system create secret generic calico-etcd-secrets --from-file=etcd-ca=/etc/kubernetes/pki/etcd/ca.crt --from-file=etcd-cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=etcd-key=/etc/kubernetes/pki/etcd/healthcheck-client.key</span><br></pre></td></tr></table></figure><p>创建calico资源清单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico-etcd.yaml</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>​               等待pod启动完成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system get po </span><br><span class="line"></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-59db5cf8fd-fpzdq   1/1     Running   1          32m</span><br><span class="line">calico-node-d2xq4                          1/1     Running   1          32m</span><br><span class="line">calico-node-ppzjk     </span><br></pre></td></tr></table></figure><p>calico插件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker.io/calico/cni:v3.20.2</span><br><span class="line"></span><br><span class="line">docker.io/calico/pod2daemon-flexvol:v3.20.2</span><br><span class="line"></span><br><span class="line">docker.io/calico/node:v3.20.2</span><br></pre></td></tr></table></figure><p><strong>方式二：使用operator安装</strong>(已成功！！！！！！)</p><ul><li><p>安装operator</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml</span><br></pre></td></tr></table></figure></li><li><p>等待operator pod安装启动完成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n tigera-operator get po</span><br><span class="line"></span><br><span class="line">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">tigera-operator-698876cbb5-kfpb2   1/1     Running   0          38m</span><br></pre></td></tr></table></figure><blockquote><p>镜像拉取比较慢，可以手动去节点docker pull拉取</p></blockquote></li><li><p>编辑calico配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vim custom-resources.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: operator.tigera.io/v1</span><br><span class="line">kind: Installation</span><br><span class="line">metadata:</span><br><span class="line">  name: default</span><br><span class="line">spec:</span><br><span class="line"><span class="meta">  # </span><span class="language-bash">Configures Calico networking.</span></span><br><span class="line">  calicoNetwork:</span><br><span class="line">    # Note: The ipPools section cannot be modified post-install.</span><br><span class="line">    ipPools:</span><br><span class="line">    - blockSize: 26</span><br><span class="line">      cidr: 10.244.0.0/16        #修改和pod cidr一致</span><br><span class="line">      encapsulation: VXLANCrossSubnet</span><br><span class="line">      natOutgoing: Enabled</span><br><span class="line">      nodeSelector: all()</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">This section configures the Calico API server.</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">For more information, see: https://docs.projectcalico.org/v3.20/reference/installation/api<span class="comment">#operator.tigera.io/v1.APIServer</span></span></span><br><span class="line">apiVersion: operator.tigera.io/v1</span><br><span class="line">kind: APIServer</span><br><span class="line">metadata:</span><br><span class="line">  name: default</span><br><span class="line">spec: &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建calico配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f custom-resources.yaml</span><br></pre></td></tr></table></figure></li><li><p>等待operator自动创建calico的pod</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">operator会自动创建calico-apiserver和calico-system两个命名空间以及必要的pod，等待pod启动完成即可</span></span><br><span class="line">kubectl get ns</span><br><span class="line"></span><br><span class="line">NAME               STATUS   AGE</span><br><span class="line">calico-apiserver   Active   13m</span><br><span class="line">calico-system      Active   19m</span><br><span class="line"></span><br><span class="line">kubectl -n calico-apiserver get po</span><br><span class="line"></span><br><span class="line">NAME                                READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-apiserver-554fbf9554-b6kzv   1/1     Running   0          13m</span><br><span class="line"></span><br><span class="line">kubectl -n calico-system get po</span><br><span class="line"></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-868b656ff4-hn6qv   1/1     Running   0          20m</span><br><span class="line">calico-node-qqrp9                          1/1     Running   0          20m</span><br><span class="line">calico-node-r45z2                          1/1     Running   0          20m</span><br><span class="line">calico-typha-5b64cf4b48-vws5j              1/1     Running   0          20m</span><br><span class="line">calico-typha-5b64cf4b48-w6wqf              1/1     Running   0          20m</span><br></pre></td></tr></table></figure><h3 id="7-验证集群"><a href="#7-验证集群" class="headerlink" title="7. 验证集群"></a>7. 验证集群</h3><p>操作节点： 在master节点（<code>k8s-master</code>）执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes  #观察集群节点是否全部Ready</span><br></pre></td></tr></table></figure><p>创建测试nginx服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl run  test-nginx --image=nginx:alpine</span><br></pre></td></tr></table></figure><p>查看pod是否创建成功，并访问pod ip测试是否可用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">kubectl get po -o wide</span><br><span class="line"></span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE   IP           NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">test-nginx-5bd8859b98-5nnnw   1/1     Running   0          9s    10.244.1.2   k8s-slave1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">curl 10.244.1.2</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="8-清理环境"><a href="#8-清理环境" class="headerlink" title="8. 清理环境"></a>8. 清理环境</h3><p>如果你的集群安装过程中遇到了其他问题，我们可以使用下面的命令来进行重置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">在全部集群节点执行</span></span><br><span class="line">kubeadm reset</span><br><span class="line">ifconfig cni0 down &amp;&amp; ip link delete cni0</span><br><span class="line">ifconfig flannel.1 down &amp;&amp; ip link delete flannel.1</span><br><span class="line">rm -rf /run/flannel/subnet.env</span><br><span class="line">rm -rf /var/lib/cni/</span><br><span class="line">mv /etc/kubernetes/ /tmp</span><br><span class="line">mv /var/lib/etcd /tmp</span><br><span class="line">mv ~/.kube /tmp</span><br><span class="line">iptables -F</span><br><span class="line">iptables -t nat -F</span><br><span class="line">ipvsadm -C</span><br><span class="line">ip link del kube-ipvs0</span><br><span class="line">ip link del dummy0</span><br></pre></td></tr></table></figure><p>设置apt源报错。换源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https ca-certificates software-properties-common </span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main&quot;</span><br><span class="line"></span><br><span class="line">apt-get update   </span><br><span class="line"><span class="meta">#</span><span class="language-bash">若上步出现NO_PUBLICKEY问题，参考https://www.cnblogs.com/jiangzuo/p/13667011.html</span></span><br></pre></td></tr></table></figure><p>未安装cni插件pod状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> coredns-7f6cbbb7b8-c778v pod 不能启动因为未安装cni插件。 </span><br><span class="line">  events:</span><br><span class="line">  Warning  FailedScheduling  43s (x2 over 2m13s)  default-scheduler  0/3 nodes are available: 3 node(s) had taint &#123;node.kubernetes.io/not-ready: &#125;, that the pod didn&#x27;t tolerate.</span><br><span class="line">  </span><br><span class="line">  root@master:~# k get po -A -owide </span><br><span class="line">NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE     IP          NODE      NOMINATED NODE   READINESS GATES</span><br><span class="line">kube-system   coredns-7f6cbbb7b8-c778v         0/1     Pending   0          3m54s   &lt;none&gt;      &lt;none&gt;    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   coredns-7f6cbbb7b8-px7cm         0/1     Pending   0          3m54s   &lt;none&gt;      &lt;none&gt;    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   etcd-master                      1/1     Running   0          4m7s    10.4.7.70   master    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-apiserver-master            1/1     Running   0          4m7s    10.4.7.70   master    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-controller-manager-master   1/1     Running   0          4m7s    10.4.7.70   master    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-5w6c4                 1/1     Running   0          3m23s   10.4.7.71   worker1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-6jnkr                 1/1     Running   0          3m20s   10.4.7.72   worker2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-hcwtz                 1/1     Running   0          3m54s   10.4.7.70   master    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-scheduler-master            1/1     Running   0          4m8s    10.4.7.70   master    &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/01/02/Ubuntu%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/01/02/Ubuntu%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Ubuntu20-10-server-LTS安装"><a href="#一、Ubuntu20-10-server-LTS安装" class="headerlink" title="一、Ubuntu20.10 server LTS安装"></a>一、Ubuntu20.10 server LTS安装</h3><p>LTS（长期支持版）</p><p>支持以下处理器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">amd64 (Intel/AMD 64-bit)</span><br><span class="line">arm64 (64-bit ARM)</span><br><span class="line">ppc64el (POWER8 and POWER9)</span><br><span class="line">s390x (IBM Z and LinuxONE)</span><br></pre></td></tr></table></figure><p>最低配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CPU: 1 gigahertz or better</span><br><span class="line">RAM: 1 gigabyte or more</span><br><span class="line">Disk: a minimum of 2.5 gigabytes</span><br></pre></td></tr></table></figure><h4 id="桌面版和服务器版不同"><a href="#桌面版和服务器版不同" class="headerlink" title="桌面版和服务器版不同"></a><strong>桌面版和服务器版不同</strong></h4><p>Ubuntu服务器版和Ubuntu桌面版使用相同的Apt库。</p><p>一个主要区别是用于桌面版的图形环境没有为服务器安装。这包括图形服务器本身、图形实用程序和应用程序，以及桌面用户所需的各种用户支持服务。</p><p>如果这不是第一次在您的计算机上安装操作系统，您可能需要重新分区您的磁盘以为 Ubuntu 腾出空间。</p><h4 id="镜像下载地址"><a href="#镜像下载地址" class="headerlink" title="镜像下载地址"></a>镜像下载地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://releases.ubuntu.com/20.04/</span><br></pre></td></tr></table></figure><p>开机引导启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ESC、F2、F10、或F12</span><br></pre></td></tr></table></figure><p>快捷键</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ESCgo back</span><br><span class="line">F1open help menu</span><br><span class="line">Control-Z, F2switch to shell</span><br><span class="line">Control-L, F3redraw screen</span><br><span class="line">Control-T, F4toggle rich mode (colour, unicode) on and off</span><br></pre></td></tr></table></figure><h4 id="更换清华源"><a href="#更换清华源" class="headerlink" title="更换清华源"></a>更换清华源</h4><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">参考</a></p><p>1.备份源文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>2.打开sources.list:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>加入清华源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security multiverse</span><br></pre></td></tr></table></figure><p>3.刷新软件源信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>4.更新软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>5.如果更新报以下错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Ign:1 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal InRelease</span><br><span class="line">Ign:2 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-updates InRelease</span><br><span class="line">Ign:3 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-backports InRelease</span><br><span class="line">Ign:4 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-security InRelease</span><br><span class="line">Err:5 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal Release</span><br><span class="line">  Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate.  Could not handshake: Error in the certificate verification. [IP: 101.6.15.130 443]</span><br><span class="line">Err:6 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-updates Release</span><br><span class="line">  Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate.  Could not handshake: Error in the certificate verification. [IP: 101.6.15.130 443]</span><br><span class="line">Err:7 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-backports Release</span><br><span class="line">  Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate.  Could not handshake: Error in the certificate verification. [IP: 101.6.15.130 443]</span><br><span class="line">Err:8 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-security Release</span><br><span class="line">  Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate.  Could not handshake: Error in the certificate verification. [IP: 101.6.15.130 443]</span><br></pre></td></tr></table></figure><p>将源中<code>https</code>改为<code>http</code>即可</p><h3 id="二、包管理"><a href="#二、包管理" class="headerlink" title="二、包管理"></a>二、包管理</h3><p><strong>后缀名为.deb</strong></p><h4 id="安装软件包nmap"><a href="#安装软件包nmap" class="headerlink" title="安装软件包nmap"></a><strong>安装软件包nmap</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nmap</span><br></pre></td></tr></table></figure><h4 id="卸载软件包nmap"><a href="#卸载软件包nmap" class="headerlink" title="卸载软件包nmap"></a><strong>卸载软件包nmap</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove nmap</span><br></pre></td></tr></table></figure><p>卸载多个包用空格分隔。</p><h4 id="更新包索引"><a href="#更新包索引" class="headerlink" title="更新包索引"></a><strong>更新包索引</strong></h4><p>APT 包索引本质上是<code>/etc/apt/sources.list</code>文件和<code>/etc/apt/sources.list.d</code>目录中定义的存储库中可用包的数据库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h4 id="升级包"><a href="#升级包" class="headerlink" title="升级包"></a><strong>升级包</strong></h4><p>随着时间的推移，您计算机上当前安装的包的更新版本可能会从包存储库中获得（例如安全更新）。要升级你的系统，首先，更新你的包索引，如上所述，然后输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p><strong>从低版本到高版本的升级过程</strong></p><p>从16.04到20.04升级路径</p><p>需要升级两次，不能跨版本升级。</p><p>Ubuntu 16.04 LTS -&gt;Ubuntu 18.04 LTS </p><p>Ubuntu 18.04 LTS-&gt;Ubuntu 20.04 LTS</p><p>相关版本及状态查阅</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://wiki.ubuntu.com/Releases?_ga=2.249587526.1765783651.1631927770-1233097571.1631927770</span><br></pre></td></tr></table></figure><p>要升级运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>建议使用<code>do-release-upgrade</code>服务器版和云镜像上的命令升级系统。此命令可以处理在不同版本之间有时需要的系统配置更改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo do-release-upgrade</span><br></pre></td></tr></table></figure><p>可以使用该<code>-d</code>标志升级到 Ubuntu 的开发版本。但是，不建议在生产环境中使用开发版本或此标志。</p><p>从一个 LTS 升级到下一个 LTS 版本仅在第一个点发布后可用。例如，Ubuntu 18.04 LTS 只会在 20.04.1 点发布后升级到 Ubuntu 20.04 LTS。如果用户希望在点发布之前更新（例如在评估 LTS 升级的机器子集上），用户可以通过<code>-d</code>标志强制升级。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo do-release-upgrade -d </span><br></pre></td></tr></table></figure><p><strong>升级文章相关参考</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://soulteary.com/2020/04/25/server-upgrade-ubuntu-20-04-lts.html</span><br></pre></td></tr></table></figure><p><strong>操作日志</strong>（包括安装、删除软件包）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/log/dpkg.log</span><br></pre></td></tr></table></figure><p><strong>帮助</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt help</span><br></pre></td></tr></table></figure><h3 id="aptitude-包管理工具"><a href="#aptitude-包管理工具" class="headerlink" title="aptitude-包管理工具"></a>aptitude-包管理工具</h3><p>aptitude 在删除一个包时，会同时删除本身所依赖的包。这样，系统中不会残留无用的包，整个系统更为干净。</p><h4 id="常用包管理命令"><a href="#常用包管理命令" class="headerlink" title="常用包管理命令"></a><strong>常用包管理命令</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">aptitude update                   更新可用的包列表</span><br><span class="line">　　aptitude upgrade               升级可用的包</span><br><span class="line">　　aptitude dist-upgrade        将系统升级到新的发行版</span><br><span class="line">　　aptitude install pkgname     安装包</span><br><span class="line">　　aptitude remove pkgname  删除包</span><br><span class="line">　　aptitude purge pkgname    删除包及其配置文件</span><br><span class="line">　　aptitude search string        搜索包</span><br><span class="line">　　aptitude show pkgname     显示包的详细信息</span><br><span class="line">　　aptitude clean                   删除下载的包文件</span><br><span class="line">　　aptitude autoclean            仅删除过期的包文件</span><br></pre></td></tr></table></figure><h4 id="查看程序所需依赖包"><a href="#查看程序所需依赖包" class="headerlink" title="查看程序所需依赖包"></a><strong>查看程序所需依赖包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@liujie-desktop:~# apt-cache depends freeradius</span><br><span class="line">freeradius</span><br><span class="line">  依赖: lsb-base</span><br><span class="line">  依赖: libc6</span><br><span class="line">  依赖: libfreeradius2</span><br><span class="line">  依赖: libgdbm3</span><br><span class="line">  依赖: libltdl7</span><br><span class="line">  依赖: libpam0g</span><br><span class="line">  依赖: libperl5.10</span><br><span class="line">  依赖: libpython2.6</span><br><span class="line">  依赖: libssl0.9.8</span><br><span class="line">  依赖: zlib1g</span><br><span class="line">  依赖: freeradius-common</span><br><span class="line">  依赖: ssl-cert</span><br><span class="line">  依赖: adduser</span><br><span class="line">  建议: freeradius-ldap</span><br><span class="line">  建议: freeradius-postgresql</span><br><span class="line">  建议: freeradius-mysql</span><br><span class="line">  建议: freeradius-krb5</span><br></pre></td></tr></table></figure><p>aptitude 安装nmap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install nmap</span><br></pre></td></tr></table></figure><p>aptitude 卸载nmap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude remove nmap</span><br></pre></td></tr></table></figure><h3 id="dpkg-包管理器"><a href="#dpkg-包管理器" class="headerlink" title="dpkg-包管理器"></a>dpkg-包管理器</h3><p><strong>它可以安装、删除和构建包，但与其他包管理系统不同，它不能自动下载和安装包或其依赖项。Apt 和 Aptitude 是较新的，并且在 dpkg 之上添加了附加功能。</strong></p><p>列出系统包数据库中的所有包，包括所有已安装和已卸载的包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l</span><br></pre></td></tr></table></figure><p>通过 grep 管道输出以查看是否安装了特定的包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l | grep apache2</span><br></pre></td></tr></table></figure><p>要列出包安装的文件，在本例中为 ufw 包，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -L ufw</span><br></pre></td></tr></table></figure><p>如果你不确定安装了哪个包的文件，<code>dpkg -S</code>也许可以告诉你。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -S /etc/host.conf base-files: /etc/host.conf</span><br></pre></td></tr></table></figure><p>输出显示<code>/etc/host.conf</code>属于 base-files 包。</p><p>您可以<code>.deb</code>通过输入以下内容来安装本地文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i zip_3.0-4_amd64.deb</span><br></pre></td></tr></table></figure><p>更改<code>zip_3.0-4_amd64.deb</code>为要安装的本地 .deb 文件的实际文件名。</p><p>卸载软件包可以通过以下方式完成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -r zip</span><br></pre></td></tr></table></figure><p>注意：在大多数情况下，不推荐使用 dpkg 卸载软件包。最好使用处理依赖关系的包管理器，以确保系统处于一致状态。它不会卸载相关依赖包。</p><h3 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a>自动更新</h3><p>unattended-upgrades 软件包可用于自动安装更新的软件包，并可配置为更新所有软件包或仅安装安全更新。首先，通过在终端中输入以下内容来安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install unattended-upgrades</span><br></pre></td></tr></table></figure><p>要配置无人值守升级，请编辑<code>/etc/apt/apt.conf.d/50unattended-upgrades</code>和调整以下内容以满足您的需要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Unattended-Upgrade::Allowed-Origins &#123;</span><br><span class="line">        &quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;&quot;;</span><br><span class="line">        &quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;-security&quot;;</span><br><span class="line">//      &quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;-updates&quot;;</span><br><span class="line">//      &quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;-proposed&quot;;</span><br><span class="line">//      &quot;$&#123;distro_id&#125;:$&#123;distro_codename&#125;-backports&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>某些软件包也可能被<em>列入黑名单</em>，因此不会自动更新。要将软件包列入黑名单，请将其添加到列表中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Unattended-Upgrade::Package-Blacklist &#123;</span><br><span class="line">//      &quot;vim&quot;;</span><br><span class="line">//      &quot;libc6&quot;;</span><br><span class="line">//      &quot;libc6-dev&quot;;</span><br><span class="line">//      &quot;libc6-i686&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; 用作注释</p><p>要启用自动更新，请编辑<code>/etc/apt/apt.conf.d/20auto-upgrades</code>并设置适当的 apt 配置选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">APT::Periodic::Update-Package-Lists &quot;1&quot;;</span><br><span class="line">APT::Periodic::Download-Upgradeable-Packages &quot;1&quot;;</span><br><span class="line">APT::Periodic::AutocleanInterval &quot;7&quot;;</span><br><span class="line">APT::Periodic::Unattended-Upgrade &quot;1&quot;;</span><br></pre></td></tr></table></figure><p>以上配置每天更新包列表、下载和安装可用升级。本地下载存档每周清理一次。在升级到较新版本 Ubuntu 的服务器上，根据您的回答，上面列出的文件可能不存在。在这种情况下，创建此名称的新文件也应该有效。</p><p><strong>帮助文档</strong></p><p>您可以在<code>apt.conf(5)</code>联机帮助页和<code>/usr/lib/apt/apt.systemd.daily</code>脚本标题中阅读有关 apt Periodic 配置选项的更多信息。</p><p>无人值守升级的结果将被记录到<code>/var/log/unattended-upgrades</code>.</p><h3 id="apticron"><a href="#apticron" class="headerlink" title="apticron"></a>apticron</h3><p>定时向系统管理员发邮件，类似于计划任务。</p><p>apticron 将配置一个 cron 作业，以通过电子邮件向管理员发送有关系统上具有可用更新的任何软件包的信息，以及每个软件包中更改的摘要。</p><p>安装 apticron 软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apticron</span><br></pre></td></tr></table></figure><p>安装包后 edit <code>/etc/apticron/apticron.conf</code>，设置电子邮件地址和其他选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EMAIL=&quot;root@example.com&quot;</span><br></pre></td></tr></table></figure><h3 id="三、无人值守批量安装Ubuntu-server-20-04-3"><a href="#三、无人值守批量安装Ubuntu-server-20-04-3" class="headerlink" title="三、无人值守批量安装Ubuntu server 20.04.3"></a>三、无人值守批量安装Ubuntu server 20.04.3</h3><p>使用PXE自动从网络加载安装程序，发起安装。</p><p>使用Ubuntu的自动安装功能，自动加载cloud-init安装配置，完成操作系统的自动选择。</p><p>需要装有pxe的服务端，服务器需要安装的软件有tftp客户端，dnsmasq 服务端，tftp服务端可以在dnsmasq.conf中配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install tftp</span><br><span class="line">apt install dnsmasq</span><br></pre></td></tr></table></figure><p>需要安装系统的客户端（此时用虚拟机创建一个空的虚拟机。需要第一启动项为网卡启动，并且默认uefi启动）</p><h4 id="PXE-安装流程"><a href="#PXE-安装流程" class="headerlink" title="PXE 安装流程"></a>PXE 安装流程</h4><p>PXE（Pre-boot Execution Environment&#x2F;预启动执行环境）的实现依赖于网卡，只有支持PXE Client的网卡才能实现网络自动安装。这种网卡实现DHCP Client和 TFTP Client，在BIOS的引导下通过DHCP协议自动分配IP地址，通过TFTP获取最小内核，然后在最小内核环境下通过HTTP协议或NFS协议获取Ubuntu安装版本。之后最小内核引导进行Ubuntu 20.04的安装。下图是详细的安装流程。</p><p><img src="/img/postimages/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%881.webp" alt="无人值守1"></p><p>上图有几个前提：</p><ol><li>网卡支持PXE，今年新出的网卡基本都支持，同时BIOS的启动项也要配置，请大家自行研究。</li><li>UEFI启动才会请求bootx64.efi，如果是传统启动模式（Legacy），那么PXE Client会请求pxelinux.0。</li><li>可以采用nfsboot方式，这个流程采用的是iso镜像下载再安装的方式。</li></ol><p>以下引导方式为uefi，虚拟机客户端需要将bios模式改为uefi模式，同时，将开机启动项将从网卡启动设置为第一启动项。</p><p><img src="/img/postimages/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%882.webp" alt="无人值守2"></p><p><img src="/img/postimages/noskip.png" alt="noskip"></p><h4 id="安装必须的服务端软件"><a href="#安装必须的服务端软件" class="headerlink" title="安装必须的服务端软件"></a>安装必须的服务端软件</h4><ol><li>安装DHCP、TFTP服务器<br>dnsmasq同时实现了DHCP、TFTP、DNS三种服务器<br><code>sudo apt-get install dnsmasq</code></li><li>安装HTTP服务器<br>HTTP Server有很多，大家可以使用自己的熟悉的服务器如nginx，这里使用的是apache2<br><code>sudo apt-get install apache2</code></li></ol><h4 id="准备启动文件"><a href="#准备启动文件" class="headerlink" title="准备启动文件"></a>准备启动文件</h4><ol><li><p>下载uefi 引导文件，shim.signed、grub-efi-amd64-signed 安全启动链加载的引导程序</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get download shim.<span class="type">signed</span></span><br><span class="line">apt-get download grub-efi-amd64-<span class="type">signed</span></span><br></pre></td></tr></table></figure></li><li><p>下载ubuntu 20.04 server iso<br>这个直接去官网下载，我下载的是 ubuntu-20.04.3-live-server-amd64.iso，需要注意的是只有live版本才能支持subiquity<br><code>https://ubuntu.com/download/server</code></p></li></ol><h4 id="创建TFTP-文件夹"><a href="#创建TFTP-文件夹" class="headerlink" title="创建TFTP 文件夹"></a>创建TFTP 文件夹</h4><p>TFTP 文件夹是TFTP服务的根目录，PXE启动过程中下载的文件都存在在该目录中</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tftp</span><br><span class="line">├── <span class="keyword">boot</span></span><br><span class="line"><span class="keyword"></span>│   └── live-server</span><br><span class="line">│       ├── initrd</span><br><span class="line">│       └── vmlinuz</span><br><span class="line">├── grub</span><br><span class="line">│   ├── <span class="keyword">bootx64.efi</span></span><br><span class="line"><span class="keyword"></span>│   ├── font.pf2</span><br><span class="line">│   └── grub.cfg</span><br><span class="line">└── grubx64.efi</span><br></pre></td></tr></table></figure><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ol><li>bootx64.efi、grubx64.efi 引导程序，来自shim.signed 安装包</li><li>grub.cfg 自建</li><li>其他文件来自 ubuntu安装包</li><li>五个文件是需要的，但是目录结构是我自建的，大家可以根据自己的喜好修改</li></ol><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><p>在 &#x2F;tftp (可根据实际情况修改)目录下创建 tftp目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tftp</span><br><span class="line">mkdir <span class="regexp">/tftp/g</span>rub</span><br><span class="line">mkdir <span class="regexp">/tftp/</span>boot</span><br><span class="line">mkdir <span class="regexp">/tftp/</span>boot/live-server</span><br></pre></td></tr></table></figure><h4 id="获取引导文件"><a href="#获取引导文件" class="headerlink" title="获取引导文件"></a>获取引导文件</h4><p>在安装包下载目录创建一个shim文件夹</p><p>解压shim安装包到shim文件夹<br><code>dpkg -x &lt;%刚才下载的shim.signed 安装包包名%&gt; shim</code></p><p>解压grub安装包到grub文件夹</p><p>拷贝引导文件到tftp目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp .<span class="regexp">/root/g</span>rub<span class="regexp">/usr/</span>lib<span class="regexp">/grub/</span>x86_64-efi-signed<span class="regexp">/grubnetx64.efi.signed  /</span>tftp/grubx64.efi</span><br><span class="line">cp .<span class="regexp">/root/</span>shim<span class="regexp">/usr/</span>lib<span class="regexp">/shim/</span>shimx64.efi.signed  <span class="regexp">/tftp/g</span>rub/bootx64.efi</span><br></pre></td></tr></table></figure><h4 id="获取内核镜像文件"><a href="#获取内核镜像文件" class="headerlink" title="获取内核镜像文件"></a>获取内核镜像文件</h4><p>在下载目录mount iso文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> mount ubuntu-<span class="number">20</span>.<span class="number">04</span>.<span class="number">3</span>-live-server-amd64.iso /media</span><br></pre></td></tr></table></figure><p>系统会提示只读，不影响使用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount: /media: <span class="built_in">WARNING</span>: device <span class="keyword">write</span>-protected, mounted <span class="keyword">read</span>-<span class="keyword">only</span>.</span><br></pre></td></tr></table></figure><p>拷贝内核镜像文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/media/</span>casper<span class="regexp">/initrd       /</span>tftp<span class="regexp">/boot/</span>live-server</span><br><span class="line">cp <span class="regexp">/media/</span>casper<span class="regexp">/vmlinuz      /</span>tftp<span class="regexp">/boot/</span>live-server</span><br></pre></td></tr></table></figure><p>拷贝grub文件<br>grub.cfg拷贝过来做个参考，内容会被全部修改掉</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/media/g</span>rub<span class="regexp">/font.pf2       /</span>tftp/grub</span><br><span class="line">cp <span class="regexp">/media/g</span>rub<span class="regexp">/grub.cfg       /</span>tftp/grub</span><br></pre></td></tr></table></figure><h3 id="配置dnsmasq（默认端口53udp）"><a href="#配置dnsmasq（默认端口53udp）" class="headerlink" title="配置dnsmasq（默认端口53udp）"></a>配置dnsmasq（默认端口53udp）</h3><p>tftp默认端口69</p><p>关键配置有以下几个</p><ol><li>配置DHCP 地址段</li><li>配置引导文件目录</li><li>配置tftp 根目录</li><li>配置日志路径</li><li>配置服务网卡，多网卡机器需关注</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置外网DNS服务器地址</span></span><br><span class="line"><span class="attribute">server</span>=10.4.7.254</span><br><span class="line"><span class="comment"># 指定服务的网卡</span></span><br><span class="line"><span class="attribute">interface</span>=ens33,lo</span><br><span class="line"><span class="comment"># 绑定端口</span></span><br><span class="line">bind-interfaces</span><br><span class="line"><span class="comment"># 设置DHCP分发IP端范围、地址掩码、IP地址有效时间</span></span><br><span class="line"><span class="attribute">dhcp-range</span>=10.4.7.240,10.4.7.241,255.255.255.0,12h</span><br><span class="line"><span class="comment"># 指定网关地址   和安装无关，应该可以不配置</span></span><br><span class="line"><span class="attribute">dhcp-option</span>=3,10.4.7.254</span><br><span class="line"><span class="comment"># 指定DNS服务器地址  和安装无关，应该可以不配置</span></span><br><span class="line"><span class="attribute">dhcp-option</span>=6,10.4.7.254</span><br><span class="line"><span class="comment"># 设置引导程序相对tftp根目录的路径</span></span><br><span class="line"><span class="attribute">dhcp-match</span>=set:efi-x86_64,option:client-arch,7</span><br><span class="line"><span class="attribute">dhcp-boot</span>=tag:efi-x86_64,grub/bootx64.efi</span><br><span class="line"><span class="comment"># 打开tftp服务</span></span><br><span class="line">enable-tftp</span><br><span class="line"><span class="comment"># 设置tftp根路径</span></span><br><span class="line"><span class="attribute">tftp-root</span>=/tftp</span><br><span class="line"><span class="comment"># 设置日志路径</span></span><br><span class="line"><span class="attribute">log-facility</span>=/var/log/dnsmasq.log</span><br></pre></td></tr></table></figure><p>修改配置后，重启dnsmasq服务才能生效。</p><h3 id="创建HTTP文件夹"><a href="#创建HTTP文件夹" class="headerlink" title="创建HTTP文件夹"></a>创建HTTP文件夹</h3><p>apache2的默认服务根目录是 &#x2F;var&#x2F;www&#x2F;html，不修改他，在他下面创建目录</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">html</span>/</span><br><span class="line">├── autoinstall</span><br><span class="line">│   ├── meta-<span class="class"><span class="keyword">data</span></span></span><br><span class="line">│   └── user-<span class="class"><span class="keyword">data</span></span></span><br><span class="line">├── index.html</span><br><span class="line">└── iso</span><br><span class="line">    └── ubuntu-<span class="number">20.04</span>.<span class="number">2</span>-live-server-amd64.iso</span><br></pre></td></tr></table></figure><h4 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h4><p>autoinstall 目录存放参数自动配置文件，user-data、meta-data是cloud-init要求的文件名</p><p>iso 目录存放操作系统镜像文件</p><h4 id="创建目录-1"><a href="#创建目录-1" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="regexp">/var/</span>www<span class="regexp">/html/</span>autoinstall</span><br><span class="line">mkdir <span class="regexp">/var/</span>www<span class="regexp">/html/i</span>so</span><br></pre></td></tr></table></figure><h4 id="拷贝iso文件"><a href="#拷贝iso文件" class="headerlink" title="拷贝iso文件"></a>拷贝iso文件</h4><p>到下载目录拷贝iso文件<br><code>cp ubuntu-20.04.3-live-server-amd64.iso /var/www/html/iso</code></p><h4 id="创建参数自动配置文件"><a href="#创建参数自动配置文件" class="headerlink" title="创建参数自动配置文件"></a>创建参数自动配置文件</h4><p>先创建空文件，meta-data无需修改，user-data后续章节会详细描述配置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="regexp">/var/</span>www<span class="regexp">/html/</span>autoinstall/user-data</span><br><span class="line">touch <span class="regexp">/var/</span>www<span class="regexp">/html/</span>autoinstall/meta-data</span><br></pre></td></tr></table></figure><h3 id="配置grub-cfg"><a href="#配置grub-cfg" class="headerlink" title="配置grub.cfg"></a>配置grub.cfg</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> loadfont /grub/font.pf2 ; then</span><br><span class="line">        <span class="built_in">set</span> <span class="attribute">gfxmode</span>=auto</span><br><span class="line">        insmod efi_gop</span><br><span class="line">        insmod efi_uga</span><br><span class="line">        insmod gfxterm</span><br><span class="line">        terminal_output gfxterm</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="attribute">menu_color_normal</span>=white/black</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">menu_color_highlight</span>=black/light-gray</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">timeout</span>=5</span><br><span class="line"></span><br><span class="line">menuentry <span class="string">&quot;Ubuntu server 20.04.3 autoinstall&quot;</span> &#123;</span><br><span class="line">        <span class="built_in">set</span> <span class="attribute">gfxpayload</span>=keep</span><br><span class="line">        linux  /boot/live-server/vmlinuz <span class="attribute">root</span>=/dev/ram0 <span class="attribute">ramdisk_size</span>=1500000 <span class="attribute">ip</span>=dhcp <span class="attribute">url</span>=<span class="string">&#x27;http://10.4.7.150/iso/ubuntu-20.04.3-live-server-amd64.iso&#x27;</span> autoinstall <span class="attribute">ds</span>=nocloud-net\;s=http://10.4.7.150/autoinstall/ ---</span><br><span class="line">        initrd /boot/live-server/initrd</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>menuentry 之前是配置样式，也可以删除，重点关注<code>menuentry &quot;Ubuntu server 20.04 autoinstall&quot;</code><br>内的配置。</p><ol><li>指定镜像文件相对于tftp根目录的路径 &#x2F;boot&#x2F;live-server&#x2F;initrd</li><li>root&#x3D;&#x2F;dev&#x2F;ram0 ramdisk_size&#x3D;1500000 为了指定内核镜像挂载空间，是否可删除待确认</li><li>ip&#x3D;dhcp 指定内核镜像挂载后使用DHCP 获取IP地址</li><li>url&#x3D; 指定ISO文件的网络存放路径</li><li><code>autoinstall ds=nocloud-net\;s=http://10.4.7.150/autoinstall/ ---</code> 该配置指明参数自动填写，并指明配置文件所在路径</li></ol><h4 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h4><p>网上很多文章配置是这么写的<code>ds=nocloud-net;s=http://10.4.7.150/autoinstall/</code>，我试了很多次，都没有自动安装。<br>在网上查到，由于UEFI启动使用了grub，grub将;识别为了特殊字符，所以要在;前加\转义。</p><h3 id="配置user-data"><a href="#配置user-data" class="headerlink" title="配置user-data"></a>配置user-data</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cloud-config</span></span><br><span class="line"><span class="attr">autoinstall:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># 修改apt 服务地址</span></span><br><span class="line">  <span class="attr">apt:</span></span><br><span class="line">    <span class="attr">primary:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">arches:</span> [<span class="string">default</span>]</span><br><span class="line">      <span class="attr">uri:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span></span><br><span class="line">  <span class="attr">user-data:</span></span><br><span class="line">    <span class="comment"># 配置时区</span></span><br><span class="line">    <span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="comment"># 去使能 root账号</span></span><br><span class="line">    <span class="attr">disable_root:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 配置用户  </span></span><br><span class="line">  <span class="attr">identity:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">ubuntu-server</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;yours&quot;</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="comment"># 配置键盘  </span></span><br><span class="line">  <span class="attr">keyboard:</span> &#123;<span class="attr">layout:</span> <span class="string">us</span>, <span class="attr">variant:</span> <span class="string">&#x27;us&#x27;</span>&#125;</span><br><span class="line">  <span class="attr">locale:</span> <span class="string">en_US.UTF-8</span></span><br><span class="line">  <span class="comment"># 默认安装ssh server</span></span><br><span class="line">  <span class="attr">ssh:</span></span><br><span class="line">    <span class="attr">install-server:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 指定安装的包</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">net-tools</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">python3-pip</span></span><br><span class="line">  <span class="comment"># 配置磁盘分区</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">grub:</span></span><br><span class="line">      <span class="attr">reorder_uefi:</span> <span class="literal">False</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">ptable:</span> <span class="string">gpt</span>, <span class="attr">path:</span> <span class="string">/dev/sda</span>, <span class="attr">wipe:</span> <span class="string">superblock-recursive</span>, <span class="attr">preserve:</span> <span class="literal">false</span>, <span class="attr">name:</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">grub_device:</span> <span class="literal">false</span>, <span class="attr">type:</span> <span class="string">disk</span>, <span class="attr">id:</span> <span class="string">disk-sda</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">device:</span> <span class="string">disk-sda</span>, <span class="attr">size:</span> <span class="number">536870912</span>, <span class="attr">wipe:</span> <span class="string">superblock</span>, <span class="attr">flag:</span> <span class="string">boot</span>, <span class="attr">number:</span> <span class="number">1</span>,</span><br><span class="line">      <span class="attr">preserve:</span> <span class="literal">false</span>, <span class="attr">grub_device:</span> <span class="literal">true</span>, <span class="attr">type:</span> <span class="string">partition</span>, <span class="attr">id:</span> <span class="string">partition-0</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">fstype:</span> <span class="string">fat32</span>, <span class="attr">volume:</span> <span class="string">partition-0</span>, <span class="attr">preserve:</span> <span class="literal">false</span>, <span class="attr">type:</span> <span class="string">format</span>, <span class="attr">id:</span> <span class="string">format-0</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">device:</span> <span class="string">disk-sda</span>, <span class="attr">size:</span> <span class="number">-1</span>, <span class="attr">wipe:</span> <span class="string">superblock</span>, <span class="attr">flag:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">number:</span> <span class="number">2</span>,</span><br><span class="line">      <span class="attr">preserve:</span> <span class="literal">false</span>, <span class="attr">type:</span> <span class="string">partition</span>, <span class="attr">id:</span> <span class="string">partition-1</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">fstype:</span> <span class="string">ext4</span>, <span class="attr">volume:</span> <span class="string">partition-1</span>, <span class="attr">preserve:</span> <span class="literal">false</span>, <span class="attr">type:</span> <span class="string">format</span>, <span class="attr">id:</span> <span class="string">format-1</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">device:</span> <span class="string">format-1</span>, <span class="attr">path:</span> <span class="string">/</span>, <span class="attr">type:</span> <span class="string">mount</span>, <span class="attr">id:</span> <span class="string">mount-1</span>&#125;</span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">device:</span> <span class="string">format-0</span>, <span class="attr">path:</span> <span class="string">/boot/efi</span>, <span class="attr">type:</span> <span class="string">mount</span>, <span class="attr">id:</span> <span class="string">mount-0</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h4><ol><li>密码需要加密，可以先用工具对自己的密码进行加密后填入</li><li>代理不是必须的配置，与网络拓扑有关</li><li>磁盘分区配置要注意，配置不对会导致自动安装走不下去，提示crash；这个配置的整体思路是先格式化disk-sda，然后在disk-sda下划分&#x2F;dev&#x2F;sda1 、&#x2F;dev&#x2F;sda2 ，然后分别mount &#x2F;,&#x2F;boot&#x2F;efi目录</li><li>安装过程日志在 &#x2F;var&#x2F;log&#x2F;installer&#x2F;，如果安装失败可以通过nc 等工具实时发出去</li></ol><h3 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h3><ol><li>我在电脑上搭建了DHCP、TFTP、HTTP三种服务</li><li>目标机器不能上网，三台机器在同一个局域网</li></ol><p> dnsmasq.log </p><p><img src="/img/postimages/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%883.webp" alt="无人值守3"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sep 21 19:26:56 dnsmasq-dhcp[1910]: DHCP, IP range 10.4.7.240 -- 10.4.7.241, lease time 12h</span><br><span class="line">Sep 21 19:26:56 dnsmasq-dhcp[1910]: DHCP, sockets bound exclusively to interface ens33</span><br><span class="line">Sep 21 19:26:56 dnsmasq-tftp[1910]: TFTP root is /tftp  </span><br><span class="line">Sep 21 19:29:33 dnsmasq-tftp[1910]: failed sending /tftp/grubx64.efi to 10.4.7.140</span><br><span class="line">Sep 21 19:35:37 dnsmasq-dhcp[1910]: DHCPDISCOVER(ens33) 00:0c:29:68:21:9a </span><br><span class="line">Sep 21 19:35:37 dnsmasq-dhcp[1910]: DHCPOFFER(ens33) 10.4.7.240 00:0c:29:68:21:9a </span><br><span class="line">Sep 21 19:35:38 dnsmasq-dhcp[1910]: DHCPREQUEST(ens33) 10.4.7.240 00:0c:29:68:21:9a </span><br><span class="line">Sep 21 19:35:38 dnsmasq-dhcp[1910]: DHCPACK(ens33) 10.4.7.240 00:0c:29:68:21:9a </span><br><span class="line">Sep 21 19:35:38 dnsmasq-tftp[1910]: error 8 User aborted the transfer received from 10.4.7.240</span><br><span class="line">Sep 21 19:35:38 dnsmasq-tftp[1910]: sent /tftp/grub/bootx64.efi to 10.4.7.240</span><br><span class="line">Sep 21 19:35:38 dnsmasq-tftp[1910]: sent /tftp/grub/bootx64.efi to 10.4.7.240</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: sent /tftp/grubx64.efi to 10.4.7.240</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: file /tftp/grub/x86_64-efi/command.lst not found</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: file /tftp/grub/x86_64-efi/fs.lst not found</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: file /tftp/grub/x86_64-efi/crypto.lst not found</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: file /tftp/grub/x86_64-efi/terminal.lst not found</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: sent /tftp/grub/grub.cfg to 10.4.7.240</span><br><span class="line">Sep 21 19:35:40 dnsmasq-tftp[1910]: sent /tftp/grub/font.pf2 to 10.4.7.240</span><br><span class="line">Sep 21 19:35:51 dnsmasq-tftp[1910]: sent /tftp/boot/live-server/vmlinuz to 10.4.7.240</span><br></pre></td></tr></table></figure><h3 id="四、Ubuntu-网络配置"><a href="#四、Ubuntu-网络配置" class="headerlink" title="四、Ubuntu 网络配置"></a>四、Ubuntu 网络配置</h3><p>要快速识别所有可用的以太网接口，您可以使用如下所示的 ip 命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:/etc/netplan# ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:da:c6:09 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.4.7.142/24 brd 10.4.7.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:feda:c609/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>另一个可以帮助识别系统可用的所有网络接口的应用程序是 lshw 命令。此命令提供有关特定适配器的硬件功能的更多详细信息。在下面的示例中，lshw 显示了一个具有<em>eth1</em>逻辑名称的以太网接口以及总线信息、驱动程序详细信息和所有支持的功能。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:/etc/netplan# lshw -class network</span><br><span class="line">  *-network                 </span><br><span class="line">       description: Ethernet interface</span><br><span class="line">       product: 82545EM Gigabit Ethernet Controller (Copper)</span><br><span class="line">       vendor: Intel Corporation</span><br><span class="line">       physical id: 1</span><br><span class="line">       bus info: pci@0000:02:01.0</span><br><span class="line">       logical name: ens33</span><br><span class="line">       version: 01</span><br><span class="line">       serial: 00:0c:29:da:c6:09</span><br><span class="line">       size: 1Gbit/s</span><br><span class="line">       capacity: 1Gbit/s</span><br><span class="line">       width: 64 bits</span><br><span class="line">       clock: 66MHz</span><br><span class="line">       capabilities: pm pcix bus_master cap_list rom ethernet physical logical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation</span><br><span class="line">       configuration: autonegotiation=on broadcast=yes driver=e1000 driverversion=7.3.21-k8-NAPI duplex=full ip=10.4.7.142 latency=0 link=yes mingnt=255 multicast=yes port=twisted pair speed=1Gbit/s</span><br><span class="line">       resources: irq:19 memory:fd5c0000-fd5dffff memory:fdff0000-fdffffff ioport:2000(size=64) memory:fd500000-fd50ffff</span><br></pre></td></tr></table></figure><p>ethtool 是一个程序，用于显示和更改以太网卡设置，例如自动协商、端口速度、双工模式和 LAN 唤醒。以下是如何查看以太网接口支持的功能和配置设置的示例。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:/etc/netplan# ethtool ens33 </span><br><span class="line">Settings for ens33:</span><br><span class="line">Supported ports: [ TP ]</span><br><span class="line">Supported link modes:   10baseT/Half 10baseT/Full </span><br><span class="line">                        100baseT/Half 100baseT/Full </span><br><span class="line">                        1000baseT/Full </span><br><span class="line">Supported pause frame use: No</span><br><span class="line">Supports auto-negotiation: Yes</span><br><span class="line">Supported FEC modes: Not reported</span><br><span class="line">Advertised link modes:  10baseT/Half 10baseT/Full </span><br><span class="line">                        100baseT/Half 100baseT/Full </span><br><span class="line">                        1000baseT/Full </span><br><span class="line">Advertised pause frame use: No</span><br><span class="line">Advertised auto-negotiation: Yes</span><br><span class="line">Advertised FEC modes: Not reported</span><br><span class="line">Speed: 1000Mb/s</span><br><span class="line">Duplex: Full</span><br><span class="line">Port: Twisted Pair</span><br><span class="line">PHYAD: 0</span><br><span class="line">Transceiver: internal</span><br><span class="line">Auto-negotiation: on</span><br><span class="line">MDI-X: off (auto)</span><br><span class="line">Supports Wake-on: d</span><br><span class="line">Wake-on: d</span><br><span class="line">Current message level: 0x00000007 (7)</span><br><span class="line">       drv probe link</span><br><span class="line">Link detected: yes</span><br></pre></td></tr></table></figure><p>要临时配置 IP 地址，可以通过以下方式使用 ip 命令。修改 IP 地址和子网掩码以符合您的网络要求。ip 命令允许您配置立即生效的设置，但是它们不是持久的并且会在重新启动后丢失。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip addr add 10.102.66.200/24 dev ens33</span><br></pre></td></tr></table></figure><p>然后可以使用 ip 来设置链接的开启或关闭。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link set dev ens33 up</span><br><span class="line">ip link set dev ens33 down</span><br></pre></td></tr></table></figure><p>验证enp0s25的IP地址配置，可以通过以下方式使用ip命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ip address show dev enp0s25</span><br><span class="line">10: enp0s25: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether 00:16:3e:e2:52:42 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet 10.102.66.200/24 brd 10.102.66.255 scope global dynamic eth0</span><br><span class="line">       valid_lft 2857sec preferred_lft 2857sec</span><br><span class="line">    inet6 fe80::216:3eff:fee2:5242/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever6</span><br></pre></td></tr></table></figure><p>要配置默认网关，您可以按以下方式使用 ip 命令。修改默认网关地址以符合您的网络要求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add default via 10.102.66.1</span><br></pre></td></tr></table></figure><p>要验证您的默认网关配置，您可以按以下方式使用 ip 命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip route show</span><br><span class="line">default via 10.102.66.1 dev eth0 proto dhcp src 10.102.66.200 metric 100</span><br><span class="line">10.102.66.0/24 dev eth0 proto kernel scope link src 10.102.66.200</span><br><span class="line">10.102.66.1 dev eth0 proto dhcp scope link src 10.102.66.200 metric 100 </span><br></pre></td></tr></table></figure><p>如果您的临时网络配置需要 DNS，您可以在文件中添加 DNS 服务器 IP 地址<code>/etc/resolv.conf</code>。一般情况下，<code>/etc/resolv.conf</code>不建议直接编辑，但这是一种临时且非持久的配置。下面的示例显示了如何将两个 DNS 服务器输入到 中<code>/etc/resolv.conf</code>，应将其更改为适合您网络的服务器。以下部分详细介绍了进行 DNS 客户端配置的正确持久方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure><p>如果您不再需要此配置并希望从接口中清除所有 IP 配置，您可以使用带有flush 选项的ip 命令，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr flush eth0</span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>使用 ip 命令刷新 IP 配置不会清除<code>/etc/resolv.conf</code>. 您必须手动删除或修改这些条目，或者重新启动，这也应该导致<code>/etc/resolv.conf</code>，它是到 的符号链接<code>/run/systemd/resolve/stub-resolv.conf</code>，被重写。</p></blockquote><h3 id="动态-IP-地址分配（DHCP-客户端）"><a href="#动态-IP-地址分配（DHCP-客户端）" class="headerlink" title="动态 IP 地址分配（DHCP 客户端）"></a>动态 IP 地址分配（DHCP 客户端）</h3><p>要将您的服务器配置为使用 DHCP 进行动态地址分配，请在文件<code>/etc/netplan/99_config.yaml</code>. 下面的示例假设您正在配置标识为<em>enp3s0 的</em>第一个以太网接口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    enp3s0:</span><br><span class="line">      dhcp4: true</span><br></pre></td></tr></table></figure><p>然后可以使用 netplan 命令应用配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><h3 id="静态-IP-地址分配"><a href="#静态-IP-地址分配" class="headerlink" title="静态 IP 地址分配"></a>静态 IP 地址分配</h3><p>要将系统配置为使用静态地址分配，请在文件<code>/etc/netplan/99_config.yaml</code>. 下面的示例假设您正在配置标识为<em>eth0 的</em>第一个以太网接口。更改<em>address</em>、<em>gateway4</em>和<em>nameservers</em>值以满足您的网络要求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      addresses:</span><br><span class="line">        - 10.10.10.2/24</span><br><span class="line">      gateway4: 10.10.10.1</span><br><span class="line">      nameservers:</span><br><span class="line">          search: [mydomain, otherdomain]</span><br><span class="line">          addresses: [10.10.10.1, 1.1.1.1]</span><br></pre></td></tr></table></figure><p>然后可以使用 netplan 命令应用配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><p><strong>注：早期版本如：Ubuntu 18.04等等，它们的配置文件在&#x2F;etc&#x2F;network&#x2F;interface文件中。</strong></p><p>网卡重启：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set ens33 down ip link set ens33 up </span><br></pre></td></tr></table></figure><h3 id="环回接口"><a href="#环回接口" class="headerlink" title="环回接口"></a>环回接口</h3><p>环回接口由系统标识为<em>lo</em>，默认 IP 地址为 127.0.0.1。可以使用ip命令查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ip address show lo</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="名称解析"><a href="#名称解析" class="headerlink" title="名称解析"></a>名称解析</h3><p>与 IP 网络相关的名称解析是将 IP 地址映射到主机名的过程，从而更容易识别网络上的资源。以下部分将解释如何正确配置系统以使用 DNS 和静态主机名记录进行名称解析。</p><h3 id="DNS-客户端配置"><a href="#DNS-客户端配置" class="headerlink" title="DNS 客户端配置"></a>DNS 客户端配置</h3><p>传统上，该文件<code>/etc/resolv.conf</code>是一个静态配置文件，很少需要更改或通过 DCHP 客户端挂钩自动更改。Systemd-resolved 处理名称服务器配置，它应该通过<code>systemd-resolve</code>命令进行交互。Netplan 配置 systemd-resolved 以生成要放入的名称服务器和域列表<code>/etc/resolv.conf</code>，这是一个符号链接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/resolv.conf -&gt; ../run/systemd/resolve/stub-resolv.conf</span><br></pre></td></tr></table></figure><p>要配置解析器，请将适合您网络的名称服务器的 IP 地址添加到 netplan 配置文件中。您还可以添加可选的 DNS 后缀搜索列表以匹配您的网络域名。生成的文件可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    enp0s25:</span><br><span class="line">      addresses:</span><br><span class="line">        - 192.168.0.100/24</span><br><span class="line">      gateway4: 192.168.0.1</span><br><span class="line">      nameservers:</span><br><span class="line">          search: [mydomain, otherdomain]</span><br><span class="line">          addresses: [1.1.1.1, 8.8.8.8, 4.4.4.4]</span><br></pre></td></tr></table></figure><p>该搜索选项也可以用多个域名使用，使得DNS查询将按照它们的输入顺序追加。例如，您的网络可能有多个要搜索的子域的父域*<code>example.com</code><em>，和两个子域，</em><code>sales.example.com</code><em>以及</em><code>dev.example.com</code>*.</p><p>如果您有多个要搜索的域，您的配置可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    enp0s25:</span><br><span class="line">      addresses:</span><br><span class="line">        - 192.168.0.100/24</span><br><span class="line">      gateway4: 192.168.0.1</span><br><span class="line">      nameservers:</span><br><span class="line">          search: [example.com, sales.example.com, dev.example.com]</span><br><span class="line">          addresses: [1.1.1.1, 8.8.8.8, 4.4.4.4]</span><br></pre></td></tr></table></figure><p>如果您尝试 ping 名为<em>server1</em>的主机，您的系统将按以下顺序自动查询 DNS 以获取其完全限定域名 (FQDN)：</p><ol><li><code>server1.example.com</code></li><li><code>server1.sales.example.com</code></li><li><code>server1.dev.example.com</code></li></ol><p>如果未找到匹配项，DNS 服务器将提供<em>notfound</em>结果并且 DNS 查询将失败。</p><h3 id="静态主机名"><a href="#静态主机名" class="headerlink" title="静态主机名"></a>静态主机名</h3><p>静态主机名是位于文件中的本地定义的主机名到 IP 的映射<code>/etc/hosts</code>。<code>hosts</code>默认情况下，文件中的条目优先于 DNS。这意味着如果您的系统尝试解析主机名并且它与 &#x2F;etc&#x2F;hosts 中的条目匹配，则它不会尝试在 DNS 中查找记录。在某些配置中，尤其是当不需要访问 Internet 时，可以方便地将与有限数量资源通信的服务器设置为使用静态主机名而不是 DNS。</p><p>以下是一个<code>hosts</code>文件示例，其中通过简单的主机名、别名及其等效的完全限定域名 (FQDN) 标识了多个本地服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">127.0.1.1   ubuntu-server</span><br><span class="line">10.0.0.11   server1 server1.example.com vpn</span><br><span class="line">10.0.0.12   server2 server2.example.com mail</span><br><span class="line">10.0.0.13   server3 server3.example.com www</span><br><span class="line">10.0.0.14   server4 server4.example.com file</span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>在上面的示例中，请注意，除了专有名称和 FQDN 之外，每个服务器还被赋予了别名。<em>Server1</em>已映射到名称<em>vpn</em>，<em>server2</em>称为<em>mail</em>，<em>server3</em>称为<em>www</em>，<em>server4</em>称为<em>file</em>。</p></blockquote><h3 id="名称服务交换机配置"><a href="#名称服务交换机配置" class="headerlink" title="名称服务交换机配置"></a>名称服务交换机配置</h3><p>系统选择将主机名解析为 IP 地址的方法的顺序由名称服务交换机 (NSS) 配置文件控制<code>/etc/nsswitch.conf</code>。如上一节所述，通常在系统<code>/etc/hosts</code>文件中定义的静态主机名优先于从 DNS 解析的名称。以下是负责文件中主机名查找顺序的行的示例<code>/etc/nsswitch.conf</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hosts:          files mdns4_minimal [NOTFOUND=return] dns mdns4</span><br></pre></td></tr></table></figure><ul><li><strong>文件</strong>首先尝试解析位于<code>/etc/hosts</code>.</li><li><strong>mdns4_minimal</strong>尝试使用多播 DNS 解析名称。</li><li>**[NOTFOUND &#x3D;返回]*<em>意味着任何响应</em>NOTFOUND<em>由前述</em>mdns4_minimal*过程应为权威并且该系统不应该试图继续狩猎的答案进行处理。</li><li><strong>dns</strong>代表传统的单播 DNS 查询。</li><li><strong>mdns4</strong>表示多播 DNS 查询。</li></ul><p>要修改上述名称解析方法的顺序，您可以简单地将*hosts:*字符串更改为您选择的值。例如，如果您更喜欢使用传统的单播 DNS 而不是多播 DNS，您可以更改字符串，<code>/etc/nsswitch.conf</code>如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hosts: files dns [NOTFOUND=return] mdns4_minimal mdns4</span><br></pre></td></tr></table></figure><h3 id="桥接"><a href="#桥接" class="headerlink" title="桥接"></a>桥接</h3><p>桥接多个接口是一种更高级的配置，但在多个场景中非常有用。一种方案是建立具有多个网络接口的网桥，然后使用防火墙过滤两个网段之间的流量。另一种情况是在具有一个接口的系统上使用桥接器，以允许虚拟机直接访问外部网络。以下示例涵盖了后一种情况。</p><p>通过编辑您在<code>/etc/netplan/</code>以下位置找到的 netplan 配置来配置网桥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    enp3s0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">  bridges:</span><br><span class="line">    br0:</span><br><span class="line">      dhcp4: yes</span><br><span class="line">      interfaces:</span><br><span class="line">        - enp3s0</span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>为您的物理接口和网络输入适当的值。</p></blockquote><p>现在应用配置以启用网桥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><p>新的桥接接口现在应该已经启动并运行了。brctl 提供有关网桥状态的有用信息，控制哪些接口是网桥的一部分等。有关<code>man brctl</code>更多信息，请参见。</p><h3 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h3><p>DHCP 服务器可以使用以下方法提供配置设置：</p><ul><li>手动分配（MAC 地址）<br>这种方法需要使用 DHCP 来识别连接到网络的每个网卡的唯一硬件地址，然后在每次 DHCP 客户端使用该网络设备向 DHCP 服务器发出请求时不断提供恒定配置。这可确保根据其 MAC 地址自动将特定地址分配给该网卡。</li><li>动态分配（地址池）<br>在这种方法中，DHCP 服务器将从地址池（有时也称为范围或范围）中分配一个 IP 地址，用于一段时间或租用，即在服务器上配置或直到客户端通知服务器它不再需要该地址。这样，客户端将在“先到先得”的基础上动态接收其配置属性。当 DHCP 客户端在指定时间段内不再位于网络上时，配置将过期并释放回地址池以供其他 DHCP 客户端使用。这样，一个地址可以被租用或使用一段时间。在此期间之后，客户端必须与服务器重新协商租用以维持地址的使用。</li><li>自动分配<br>使用这种方法，DHCP 会自动为设备永久分配一个 IP 地址，从可用地址池中选择它。通常 DHCP 用于为客户端分配临时地址，但 DHCP 服务器可以允许无限的租用时间。</li></ul><p>后两种方法可以被认为是“自动的”，因为在每种情况下，DHCP 服务器都会分配一个地址，而无需额外干预。它们之间的唯一区别在于 IP 地址的租用时间长短，换句话说，客户端的地址是否随时间变化。Ubuntu 提供的 DHCP 服务器是 dhcpd（动态主机配置协议守护进程），它易于安装和配置，并且会在系统启动时自动启动。</p><p>安装</p><p>在终端提示符下，输入以下命令来安装 dhcpd：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install isc-dhcp-server</span><br></pre></td></tr></table></figure><p>注意：dhcpd 的消息正在发送到 syslog。在那里查找诊断消息。</p><p>配置</p><p>您可能需要通过编辑来更改默认配置<code>/etc/dhcp/dhcpd.conf</code>以满足您的需要和特定配置。</p><p>最常见的是，您想要做的是随机分配一个 IP 地址。这可以通过如下设置来完成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># minimal sample /etc/dhcp/dhcpd.conf</span><br><span class="line">default-lease-time 600;</span><br><span class="line">max-lease-time 7200;</span><br><span class="line">ddns-update-style none;</span><br><span class="line"></span><br><span class="line">subnet 10.4.7.0 netmask 255.255.255.0 &#123;</span><br><span class="line">  range 10.4.7.220 10.4.7.230;</span><br><span class="line">  option routers 10.4.7.254;</span><br><span class="line">  option subnet-mask 255.255.255.0;</span><br><span class="line">  option broadcast-address 10.4.7.255;</span><br><span class="line">  option domain-name-servers 10.4.7.254;</span><br><span class="line">  option ntp-servers 10.4.7.254;</span><br><span class="line">  option netbios-name-servers 10.4.7.254;</span><br><span class="line">  option netbios-node-type 8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这将导致 DHCP 服务器为客户端提供一个范围为 10.4.7.220-10.4.7.230 的 IP 地址。如果客户端不要求特定的时间范围，它将租用一个 IP 地址 600 秒。否则最大（允许）租期将为 7200 秒。服务器还将“建议”客户端使用 10.4.7.254 作为默认网关，使用 10.4.7.254 作为其 DNS 服务器。使用10.4.7.254 作为ntp服务器。使用10.4.7.254作为局域网内部主机名对应的IP。</p><p>您可能还需要编辑<code>/etc/default/isc-dhcp-server</code>以指定 dhcpd 应侦听的接口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INTERFACESv4=&quot;eth4&quot;</span><br></pre></td></tr></table></figure><p>更改配置文件后，您必须重新启动 dhcpd 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart isc-dhcp-server.service</span><br></pre></td></tr></table></figure><h3 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h3><p>NTP 是一种 TCP&#x2F;IP 协议，用于通过网络同步时间。基本上，客户端从服务器请求当前时间，并使用它来设置自己的时钟。</p><p>在这个简单的描述背后，有很多复杂性——NTP 服务器有很多层，第一层 NTP 服务器连接到原子钟，而第二层和第三层服务器则通过 Internet 分散实际处理请求的负载。Ubuntu 默认使用<em>timedatectl &#x2F; timesyncd</em>来同步时间，用户可以选择使用 chrony 来为网络时间协议提供服务。</p><p>同步时间</p><p>Ubuntu 16.04 <em>timedatectl &#x2F; timesyncd</em>（它们是 systemd 的一部分）替换了大部分<em>ntpdate &#x2F; ntp</em>。</p><p>默认情况下，timesyncd 是可用的，它不仅替换 ntpdate，而且替换 chrony（或以前的 ntpd）的客户端部分。因此，除了 ntpdate 在启动和网络激活时提供的一次性操作之外，现在默认情况下 timesyncd 会定期检查并保持本地时间同步。它还在本地存储时间更新，以便在重新启动后单调前进（如果适用）。</p><p>如果安装了 chrony，timedatectl 会退回让 chrony 进行计时。这将确保没有两个时间同步服务发生冲突。虽然不再推荐使用，但这仍然适用于安装 ntpd 以保留您通过升级获得的任何类型的旧行为&#x2F;配置。但这也意味着在从以前的版本升级时可能仍会安装 ntp&#x2F;ntpdate，因此会禁用新的基于 systemd 的服务。</p><p>ntpdate 被认为已弃用，取而代之的是 timedatectl（或 chrony），因此默认情况下不再安装。timesyncd 通常会做正确的事情，使您的时间保持同步，而 chrony 将帮助处理更复杂的情况。</p><p>需要一次性同步：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chronyd -q</span><br></pre></td></tr></table></figure><p>需要一次性检查时间，而不设置时间:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chronyd -Q</span><br></pre></td></tr></table></figure><p>timesyncd 和chronyd 同时存在时，只有一个生效，如果chronyd正在运行，那么chronyd生效。</p><p>通过 timedatectl 和 timesyncd 可以检查时间和时间配置的当前状态<code>timedatectl status</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl status</span><br><span class="line">                       Local time: Fr 2018-02-23 08:47:13 UTC</span><br><span class="line">                   Universal time: Fr 2018-02-23 08:47:13 UTC</span><br><span class="line">                         RTC time: Fr 2018-02-23 08:47:13</span><br><span class="line">                        Time zone: Etc/UTC (UTC, +0000)</span><br><span class="line">        System clock synchronized: yes</span><br><span class="line"> systemd-timesyncd.service active: yes</span><br><span class="line">                  RTC in local TZ: no</span><br></pre></td></tr></table></figure><p>如果 chrony 正在运行，它将自动切换到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[...]</span><br><span class="line"> systemd-timesyncd.service active: no </span><br></pre></td></tr></table></figure><p>通过 timedatectl 管理员可以控制时区、系统时钟应该如何与 hwclock 相关以及是否应该启用永久同步。有关<code>man timedatectl</code>更多详细信息，请参阅。</p><p>timesyncd 本身仍然是一个正常的服务，所以你也可以通过它更详细地检查它的状态。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:~# systemctl status systemd-timesyncd </span><br><span class="line">● systemd-timesyncd.service</span><br><span class="line">     Loaded: masked (Reason: Unit systemd-timesyncd.service is masked.)</span><br><span class="line">     Active: inactive (dead) since Thu 2021-09-23 02:41:56 UTC; 35min ago</span><br><span class="line">   Main PID: 736 (code=exited, status=0/SUCCESS)</span><br><span class="line">     Status: &quot;Shutting down...&quot;</span><br><span class="line"></span><br><span class="line">Sep 23 01:53:57 lhp-server systemd[1]: Starting Network Time Synchronization...</span><br><span class="line">Sep 23 01:53:57 lhp-server systemd[1]: Started Network Time Synchronization.</span><br><span class="line">Sep 23 01:54:05 lhp-server systemd-timesyncd[736]: Network configuration changed, trying to establish connection.</span><br><span class="line">Sep 23 01:54:06 lhp-server systemd-timesyncd[736]: Network configuration changed, trying to establish connection.</span><br><span class="line">Sep 23 01:54:39 lhp-server systemd-timesyncd[736]: Initial synchronization to time server 91.189.89.199:123 (ntp.ubuntu.com).</span><br><span class="line">Sep 23 02:41:56 lhp-server systemd[1]: Stopping Network Time Synchronization...</span><br><span class="line">Sep 23 02:41:56 lhp-server systemd[1]: systemd-timesyncd.service: Succeeded.</span><br><span class="line">Sep 23 02:41:56 lhp-server systemd[1]: Stopped Network Time Synchronization.</span><br></pre></td></tr></table></figure><p>可以从这两个配置文件中获取到根域名服务器的时间：&#x2F;etc&#x2F;systemd&#x2F;timesyncd.conf和&#x2F;etc&#x2F;systemd&#x2F;timesyncd.conf.d&#x2F;，更多信息可以查看man timesyncd.conf。</p><h3 id="Chrony"><a href="#Chrony" class="headerlink" title="Chrony"></a>Chrony</h3><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install chrony</span><br></pre></td></tr></table></figure><p>这将提供两个二进制文件：</p><ul><li>chronyd - 通过 NTP 协议同步和服务的实际守护进程</li><li>chronyc - chrony 守护进程的命令行界面</li></ul><p>配置：</p><p>编辑<code>/etc/chrony/chrony.conf</code>以添加&#x2F;删除服务器行。默认情况下，这些服务器配置为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Use servers from the NTP Pool Project. Approved by Ubuntu Technical Board</span><br><span class="line"># on 2011-02-08 (LP: #104525). See http://www.pool.ntp.org/join.html for</span><br><span class="line"># more information.</span><br><span class="line">pool 0.ubuntu.pool.ntp.org iburst</span><br><span class="line">pool 1.ubuntu.pool.ntp.org iburst</span><br><span class="line">pool 2.ubuntu.pool.ntp.org iburst</span><br><span class="line">pool 3.ubuntu.pool.ntp.org iburst</span><br></pre></td></tr></table></figure><p>有关<code>man chrony.conf</code>配置选项的更多详细信息，请参阅。更改任何配置文件后，您必须重新启动chrony：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart chrony.service</span><br></pre></td></tr></table></figure><p>如果需要，<code>pool 2.ubuntu.pool.ntp.org</code>以及<code>ntp.ubuntu.com</code>还支持 ipv6。如果需要强制使用 ipv6 <code>ipv6.ntp.ubuntu.com</code>，默认情况下也没有配置。</p><p>查看状态</p><p>使用 chronyc 查看查询 chrony 守护进程的状态。例如，获取当前可用和选定时间源的概览.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:~# chronyc sources 210 Number of sources = 8MS Name/IP address         Stratum Poll Reach LastRx Last sample               ===============================================================================^- chilipepper.canonical.com     2   6   377    43  +8909us[+8909us] +/-  192ms^- alphyn.canonical.com          2   7   175   108    +15ms[  +15ms] +/-  167ms^- golem.canonical.com           2   6   377    49    +17ms[  +17ms] +/-  188ms^- pugot.canonical.com           2   6   377    51    +16ms[  +16ms] +/-  178ms^- 139.199.215.251               2   6   377    53  -1308us[-1350us] +/-   32ms^* 202.118.1.130                 1   6   377    53   -113us[ -155us] +/- 8565us^- tock.ntp.infomaniak.ch        1   6   377    49    +36ms[  +36ms] +/-  118ms^- 111.230.189.174               2   7   237    54  -2129us[-2171us] +/-   27ms</span><br></pre></td></tr></table></figure><p>某些 chronyc 命令是特权命令，未经明确允许无法通过网络运行。见<em>指挥和监控访问</em>中<code>man chrony.conf</code>了解更多详情。本地管理员通常可以使用 sudo ，因为这将授予他访问本地管理员套接字的权限<code>/var/run/chrony/chronyd.sock</code>。</p><h3 id="五、安全"><a href="#五、安全" class="headerlink" title="五、安全"></a>五、安全</h3><p>用户管理</p><p>root用户默认禁止访问。</p><p>鼓励用户使用名为“sudo”的工具来执行系统管理职责。Sudo 允许授权用户使用他们自己的密码临时提升他们的权限，而不必知道属于 root 帐户的密码。这种简单而有效的方法为所有用户操作提供了问责制，并使管理员可以精细控制用户可以使用所述权限执行哪些操作。</p><p>启用root用户并设置新密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd</span><br></pre></td></tr></table></figure><p>Sudo 将提示您输入密码，然后要求您为 root 提供一个新密码，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[sudo] password for username: (enter your own password)</span><br><span class="line">Enter new UNIX password: (enter a new password for root)</span><br><span class="line">Retype new UNIX password: (repeat new password for root)</span><br><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure><p>禁用 root 帐户密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd -l root</span><br></pre></td></tr></table></figure><p>更多sudo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man sudo </span><br></pre></td></tr></table></figure><p>添加和删除用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser username</span><br></pre></td></tr></table></figure><p>删除用户帐户及其主要组，请使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo deluser username</span><br></pre></td></tr></table></figure><ul><li><p>删除帐户不会删除其各自的主文件夹。您是否希望手动删除文件夹或根据所需的保留策略保留它取决于您。</p><p>请记住，如果您没有采取必要的预防措施，任何后来添加的与前一个所有者具有相同 UID&#x2F;GID 的用户现在都可以访问此文件夹。</p><p>您可能希望将这些 UID&#x2F;GID 值更改为更合适的值，例如 root 帐户，甚至可能重新定位文件夹以避免将来发生冲突：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R root:root /home/username/</span><br><span class="line">sudo mkdir /home/archived_users/</span><br><span class="line">sudo mv /home/username /home/archived_users/</span><br></pre></td></tr></table></figure></li><li><p>要临时锁定或解锁用户密码，请分别使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd -l username</span><br><span class="line">sudo passwd -u username</span><br></pre></td></tr></table></figure></li><li><p>要添加或删除个性化组，请分别使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo addgroup groupname</span><br><span class="line">sudo delgroup groupname</span><br></pre></td></tr></table></figure></li><li><p>要将用户添加到组，请使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser username groupname</span><br></pre></td></tr></table></figure></li></ul><p>用户配置文件安全</p><p>创建新用户时， adduser 实用程序会创建一个名为 的全新主目录<code>/home/username</code>。默认配置文件以 目录中的内容为模型<code>/etc/skel</code>，其中包括所有配置文件基础。</p><p>如果您的服务器将有多个用户使用，则应密切注意用户主目录的权限以确保机密性。默认情况下，Ubuntu 中的用户主目录是使用全局读取&#x2F;执行权限创建的。这意味着所有用户都可以浏览和访问其他用户主目录的内容。这可能不适合您的环境。</p><ul><li><p>要验证您当前的用户主目录权限，请使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ld /home/username</span><br></pre></td></tr></table></figure><p>以下输出显示该目录<code>/home/username</code>具有全球可读的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x  2 username username    4096 2007-10-02 20:03 username</span><br></pre></td></tr></table></figure></li><li><p>您可以使用以下语法删除世界可读权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 0750 /home/username</span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>有些人倾向于不加选择地使用递归选项 (-R) 来修改所有子文件夹和文件，但这不是必需的，并且可能会产生其他不良结果。仅父目录就足以防止未经授权访问父目录下的任何内容。</p></blockquote><p>一个更有效的方法是在创建用户主文件夹时修改 adduser 全局默认权限。只需编辑文件<code>/etc/adduser.conf</code>并将<code>DIR_MODE</code>变量修改为适当的内容，以便所有新的主目录都将获得正确的权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DIR_MODE=0750</span><br></pre></td></tr></table></figure></li><li><p>使用前面提到的任何技术更正目录权限后，使用以下语法验证结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ld /home/username</span><br></pre></td></tr></table></figure><p>下面的结果表明，世界可读的权限已被删除：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwxr-x---   2 username username    4096 2007-10-02 20:03 username</span><br></pre></td></tr></table></figure></li></ul><p>密码策略</p><p>最小长度密码</p><p>默认情况下，Ubuntu 需要最少 6 个字符的密码长度，以及一些基本的熵检查。这些值在文件 中控制，<code>/etc/pam.d/common-password</code>概述如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password        [success=1 default=ignore]      pam_unix.so obscure sha512</span><br></pre></td></tr></table></figure><p>如果要将最小长度调整为 8 个字符，请将适当的变量更改为 min&#x3D;8。修改概述如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password        [success=1 default=ignore]      pam_unix.so obscure sha512 minlen=8</span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>基本密码熵检查和最小长度规则不适用于使用 sudo 级别命令设置新用户的管理员。</p></blockquote><p>密码过期</p><p>创建用户帐户时，您应该制定一项策略，设置最短和最长密码期限，迫使用户在密码到期时更改密码。</p><ul><li><p>要轻松查看用户帐户的当前状态，请使用以下语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chage -l username</span><br></pre></td></tr></table></figure><p>下面的输出显示了有关用户帐户的有趣事实，即没有应用任何策略：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Last password change                                    : Jan 20, 2015</span><br><span class="line">Password expires                                        : never</span><br><span class="line">Password inactive                                       : never</span><br><span class="line">Account expires                                         : never</span><br><span class="line">Minimum number of days between password change          : 0</span><br><span class="line">Maximum number of days between password change          : 99999</span><br><span class="line">Number of days of warning before password expires       : 7</span><br></pre></td></tr></table></figure></li><li><p>要设置这些值中的任何一个，只需使用以下语法，并按照交互式提示进行操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chage username</span><br></pre></td></tr></table></figure><p>下面也是一个示例，说明如何手动将显式到期日期 (-E) 更改为 01&#x2F;31&#x2F;2015、最短密码期限 (-m) 为 5 天、最长密码期限 (-M) 为 90 天、不活动密码到期后 30 天的时间段 (-I)，以及密码到期前 14 天的警告时间段 (-W)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chage -E 01/31/2015 -m 5 -M 90 -I 30 -W 14 username</span><br></pre></td></tr></table></figure></li><li><p>要验证更改，请使用与前面提到的相同的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chage -l username</span><br></pre></td></tr></table></figure><p>下面的输出显示了为账户建立的新策略：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Last password change                                    : Jan 20, 2015</span><br><span class="line">Password expires                                        : Apr 19, 2015</span><br><span class="line">Password inactive                                       : May 19, 2015</span><br><span class="line">Account expires                                         : Jan 31, 2015</span><br><span class="line">Minimum number of days between password change          : 5</span><br><span class="line">Maximum number of days between password change          : 90</span><br><span class="line">Number of days of warning before password expires       : 14</span><br></pre></td></tr></table></figure></li></ul><p>对于被禁用的用户ssh的访问</p><p>如果用户之前已经设置了 SSH 公钥身份验证，则简单地禁用&#x2F;锁定用户密码不会阻止用户远程登录您的服务器。他们仍然能够获得对服务器的 shell 访问，而无需任何密码。请记住检查用户主目录中是否有允许此类经过身份验证的 SSH 访问的文件，例如<code>/home/username/.ssh/authorized_keys</code>.</p><p>删除或重命名<code>.ssh/</code>用户主文件夹中的目录，以防止进一步的 SSH 身份验证功能。</p><p>请务必检查禁用用户建立的任何 SSH 连接，因为他们可能已经存在入站或出站连接。杀死任何找到的人。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">who | grep username  (to get the pts/# terminal)</span><br><span class="line">sudo pkill -f pts/#</span><br></pre></td></tr></table></figure><p>将 SSH 访问限制为只有应该拥有它的用户帐户。例如，您可以创建一个名为“sshlogin”的组，并将组名添加为与<code>AllowGroups</code>文件中的变量关联的值<code>/etc/ssh/sshd_config</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowGroups sshlogin</span><br></pre></td></tr></table></figure><p>然后将您允许的 SSH 用户添加到“sshlogin”组中，并重新启动 SSH 服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser username sshlogin</span><br><span class="line">sudo systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p>查看登录日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/auth.log</span><br><span class="line"></span><br><span class="line">Sep 23 07:32:58 lhp-server sshd[5801]: User test from 10.4.7.1 not allowed because none of user&#x27;s groups are listed in AllowGroups</span><br><span class="line">Sep 23 07:33:01 lhp-server sshd[5801]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=10.4.7.1  user=test</span><br><span class="line">Sep 23 07:33:03 lhp-server sshd[5801]: Failed password for invalid user test from 10.4.7.1 port 1047 ssh2</span><br><span class="line">Sep 23 07:33:07 lhp-server sshd[5801]: error: Received disconnect from 10.4.7.1 port 1047:0:  [preauth]</span><br><span class="line">Sep 23 07:33:07 lhp-server sshd[5801]: Disconnected from invalid user test 10.4.7.1 port 1047 [preauth]</span><br></pre></td></tr></table></figure><p><strong>apparmor</strong></p><p>AppArmor 是默认安装和加载的。它使用应用程序的<em>配置文件</em>来确定应用程序需要哪些文件和权限。一些包会安装它们自己的配置文件，额外的配置文件可以在 apparmor-profiles 包中找到。</p><p>从终端提示安装 apparmor-profiles 包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apparmor-profiles</span><br></pre></td></tr></table></figure><p><strong>AppArmor 配置文件有两种执行模式</strong></p><p>Enforcement – 在这种模式下，配置文件里列出的限制条件都会得到执行，并且对于违反这些限制条件的程序会进行日志记录。</p><p>Complain – 在这种模式下，配置文件里的限制条件不会得到执行，Apparmor只是对程序的行为进行记录。例如程序可以写一个在配置文件里注明只读的文件，但Apparmor不会对程序的行为进行限制，只是进行记录。</p><p>那既然complain不能限制程序，为什么还需要这种模式呢，因为——如果某个程序的行为不符合其配置文件的限制，可以将其行为记录到系统日志，并且可以根据程序的行为，将日志转换成配置文件。</p><p>当然我们可以随时对配置文件进行修改，选择自己需要的模式。</p><p>可选的 apparmor-utils 包包含可用于更改 AppArmor 执行模式、查找配置文件状态、创建新配置文件等的命令行实用程序。</p><ul><li><p>apparmor_status 用于查看 AppArmor 配置文件的当前状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apparmor_status</span><br></pre></td></tr></table></figure></li><li><p>aa-complain 将配置文件置于complain模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-complain /path/to/bin</span><br></pre></td></tr></table></figure></li><li><p>aa-enforce 将配置文件置于enforcement模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-enforce /path/to/bin</span><br></pre></td></tr></table></figure></li><li><p>该<code>/etc/apparmor.d</code>目录是 AppArmor 配置文件所在的位置。它可用于操纵所有配置文件的<em>模式</em>。</p><p>输入以下内容将所有配置文件置于complain模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-complain /etc/apparmor.d/*</span><br></pre></td></tr></table></figure><p>将所有配置文件置于enforcement模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-enforce /etc/apparmor.d/*</span><br></pre></td></tr></table></figure></li><li><p>apparmor_parser 用于将配置文件加载到内核中。它还可用于在修改当前加载的配置文件后使用*-r*选项重新加载它以使更改生效。<br>要重新加载配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apparmor_parser -r /etc/apparmor.d/profile.name</span><br></pre></td></tr></table></figure></li><li><p><code>systemctl</code>可用于<em>重新加载</em>所有配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload apparmor.service</span><br></pre></td></tr></table></figure></li><li><p>该<code>/etc/apparmor.d/disable</code>目录可以与 apparmor_parser -R 选项一起使用以<em>禁用</em>配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/apparmor.d/profile.name /etc/apparmor.d/disable/</span><br><span class="line">sudo apparmor_parser -R /etc/apparmor.d/profile.name</span><br></pre></td></tr></table></figure><p>要<em>重新启用</em>禁用的配置文件，请删除<code>/etc/apparmor.d/disable/</code>. 然后使用*-a*选项加载配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /etc/apparmor.d/disable/profile.name</span><br><span class="line">cat /etc/apparmor.d/profile.name | sudo apparmor_parser -a</span><br></pre></td></tr></table></figure></li><li><p>可以禁用 AppArmor，并通过输入以下内容卸载内核模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop apparmor.service</span><br><span class="line">sudo systemctl disable apparmor.service</span><br></pre></td></tr></table></figure></li><li><p>要重新启用 AppArmor，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable apparmor.service</span><br><span class="line">sudo systemctl start apparmor.service</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>笔记</strong></p><p>将<em>profile.name</em>替换为您要操作的配置文件的名称。另外，替换<code>/path/to/bin/</code>为实际的可执行文件路径。例如对于 ping 命令使用<code>/bin/ping</code></p></blockquote><p>简介</p><p>AppArmor 配置文件是位于<code>/etc/apparmor.d/</code>. 这些文件以它们分析的可执行文件的完整路径命名，将“&#x2F;”替换为“.”。例如<code>/etc/apparmor.d/bin.ping</code>，该<code>/bin/ping</code>命令的 AppArmor 配置文件。</p><p>配置文件中使用了两种主要类型的规则：</p><ul><li><em>路径条目：</em>详细说明应用程序可以访问文件系统中的哪些文件。</li><li><em>能力条目：</em>确定允许受限进程使用哪些权限。</li></ul><p>举个例子，看看<code>/etc/apparmor.d/bin.ping</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;tunables/global&gt;</span><br><span class="line">/bin/ping flags=(complain) &#123;</span><br><span class="line">  #include &lt;abstractions/base&gt;</span><br><span class="line">  #include &lt;abstractions/consoles&gt;</span><br><span class="line">  #include &lt;abstractions/nameservice&gt;</span><br><span class="line"></span><br><span class="line">  capability net_raw,</span><br><span class="line">  capability setuid,</span><br><span class="line">  network inet raw,</span><br><span class="line">  </span><br><span class="line">  /bin/ping mixr,</span><br><span class="line">  /etc/modules.conf r,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em>#include &lt;tunables&#x2F;global&gt;：</em>包含来自其他文件的语句。这允许将与多个应用程序有关的语句放在一个公共文件中。</li><li><em>&#x2F;bin&#x2F;ping flags&#x3D;(complain):<em>分析程序的路径，还将模式设置为</em>抱怨</em>。</li><li><em>能力 net_raw，：</em>允许应用程序访问 CAP_NET_RAW Posix.1e 能力。</li><li><em>&#x2F;bin&#x2F;ping mixr,：</em>允许应用程序对文件进行读取和执行访问。</li></ul><blockquote><p><strong>笔记</strong></p><p>编辑配置文件后，必须重新加载配置文件。有关详细信息，请参阅上面的<a href="https://ubuntu.com/server/docs/security-apparmor#loadrules">使用 AppArmor</a>。</p></blockquote><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><ul><li><p>设计一个测试计划：尝试考虑应该如何运行应用程序。测试计划应该分成小的测试用例。每个测试用例都应该有一个简短的描述并列出要遵循的步骤。</p><p>一些标准测试用例是：</p><ul><li>启动程序。</li><li>停止程序。</li><li>重新加载程序。</li><li>测试 init 脚本支持的所有命令。</li></ul></li><li><p>生成新配置文件：使用 aa-genprof 生成新配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-genprof executable</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-genprof slapd</span><br></pre></td></tr></table></figure></li><li><p>要将您的新配置文件包含在 apparmor-profiles 包中，请在Launchpad 中针对<a href="https://bugs.launchpad.net/ubuntu/+source/apparmor/+filebug">AppArmor</a>包提交错误：</p><ul><li>包括您的测试计划和测试用例。</li><li>将您的新配置文件附加到错误。</li></ul></li></ul><h3 id="更新配置文件"><a href="#更新配置文件" class="headerlink" title="更新配置文件"></a>更新配置文件</h3><p>当程序出现异常时，审核消息会发送到日志文件。程序 aa-logprof 可用于扫描 AppArmor 审核消息的日志文件，查看它们并更新配置文件。从终端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aa-logprof</span><br></pre></td></tr></table></figure><h3 id="其他预先存在的配置文件"><a href="#其他预先存在的配置文件" class="headerlink" title="其他预先存在的配置文件"></a>其他预先存在的配置文件</h3><p>为 AppArmor 安全策略打包<code>apport-profiles</code>并提供<code>apparmor-profiles-extra</code>一些实验性配置文件。<br>不要指望这些配置文件开箱即用，但是当您尝试通过从现有的基础开始创建新配置文件时，它们可以为您提供一个良好的开端。</p><p>默认情况下，这些配置文件被认为不够成熟，无法以强制模式发送。因此，它们以抱怨模式发送，以便用户可以测试它们，选择所需的，并在需要时帮助上游改进它们。</p><p>包装中携带的一些更多的实验配置文件被放置在<code> /usr/share/doc/apparmor-profiles/extras/</code></p><h3 id="检查和调试拒绝"><a href="#检查和调试拒绝" class="headerlink" title="检查和调试拒绝"></a>检查和调试拒绝</h3><p>如果您遇到拒绝，您将在“dmesg”和任何收集内核消息的日志中看到。<br>立即值得知道的是，这将涵盖任何被拒绝的访问<code>because it was not allowed</code>，但<code>explicit denies</code>根本不会在您的日志中放置任何消息。</p><p>示例可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1521056.552037] audit: type=1400 audit(1571868402.378:24425): apparmor=&quot;DENIED&quot; operation=&quot;open&quot; profile=&quot;/usr/sbin/cups-browsed&quot; name=&quot;/var/lib/libvirt/dnsmasq/&quot; pid=1128 comm=&quot;cups-browsed&quot; requested_mask=&quot;r&quot; denied_mask=&quot;r&quot; fsuid=0 ouid=0</span><br><span class="line">[1482106.651527] audit: type=1400 audit(1571829452.330:24323): apparmor=&quot;DENIED&quot; operation=&quot;sendmsg&quot; profile=&quot;snap.lxd.lxc&quot; pid=24115 comm=&quot;lxc&quot; laddr=10.7.0.69 lport=48796 faddr=10.7.0.231 fport=445 family=&quot;inet&quot; sock_type=&quot;stream&quot; protocol=6 requested_mask=&quot;send&quot; denied_mask=&quot;send&quot;</span><br></pre></td></tr></table></figure><p>这遵循以时间戳、审计标记和类别开头的通用结构<code>apparmor=&quot;DENIED&quot;</code>。<br>从以下字段中，您可以得出正在发生的事情以及失败的原因。</p><p>在上面的例子中，这将是</p><p>第一个例子：</p><ul><li>操作：（<code>open</code>程序试图打开一个文件）</li><li>个人资料：（<code>/usr/sbin/cups-browsed</code>你会发现<code>/etc/apparmor.d/usr.bin.cups-browsed</code>）</li><li>名称：（<code>/var/lib/libvirt/dnsmasq</code>它想访问什么）</li><li>pid&#x2F;comm：触发访问的程序</li><li>requested_mask&#x2F;denied_mask&#x2F;fsuid&#x2F;ouid：该公开调用的参数</li></ul><p>第二个例子：</p><ul><li>操作：（<code>sendmsg</code>程序尝试通过网络发送）</li><li>简介：（<code>snap.lxd.lxc</code>快照很特别，你会发现<code>/var/lib/snapd/apparmor/profiles/snap.lxd.lxc</code>）</li><li>pid&#x2F;comm：触发访问的程序</li><li>laddr&#x2F;lport&#x2F;faddr&#x2F;fport&#x2F;family&#x2F;sock_type&#x2F;protocol：sendmsg 调用的参数</li></ul><p>这样，如果您考虑调试或调整配置文件，您就可以知道在哪个配置文件中以及在什么操作中必须开始。</p><h3 id="个人资料定制"><a href="#个人资料定制" class="headerlink" title="个人资料定制"></a>个人资料定制</h3><p>配置文件旨在提供安全性，因此不能太开放。但通常一个非常特殊的设置可以与配置文件一起使用，如果它只<em>允许这个额外的访问</em>。可以通过三种方式来处理。</p><ul><li>修改配置文件本身<ul><li>总是有效，但有一个缺点，即配置文件在 &#x2F;etc 中并被视为 conffiles。因此，在对相关软件包更新进行修改后，您可能会收到一个 conffile 提示。最坏的情况取决于配置自动更新甚至可能覆盖它并且您的自定义规则消失了。</li></ul></li><li>使用可调参数<ul><li>那些提供了可在模板中使用的变量，例如，如果您希望将自定义目录视为主目录，您可以修改<code>/etc/apparmor.d/tunables/home</code>它定义用于主目录的基本路径规则</li><li>通过设计，这些变量只会影响使用它们的配置文件</li></ul></li><li>修改本地覆盖<ul><li>为了减轻上述方法的缺点，<em>本地包括</em>引入了添加编写将要使用的任意规则的能力，并且不会在修改打包规则的升级中出现问题。</li><li>这些文件可以在<code>/etc/apparmor.d/local/</code>已知有时需要为特殊设置稍作调整的软件包中找到并存在</li></ul></li></ul><h3 id="六、防火墙"><a href="#六、防火墙" class="headerlink" title="六、防火墙"></a>六、防火墙</h3><p><strong>uwf</strong></p><p>Ubuntu 的默认防火墙配置工具是 ufw。为简化 iptables 防火墙配置而开发，ufw 提供了一种用户友好的方式来创建基于 IPv4 或 IPv6 的基于主机的防火墙。</p><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a><strong>启用</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure><h4 id="添加端口（本例中为-SSH）"><a href="#添加端口（本例中为-SSH）" class="headerlink" title="添加端口（本例中为 SSH）"></a>添加端口（本例中为 SSH）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 22</span><br></pre></td></tr></table></figure><h4 id="使用编号格式添加"><a href="#使用编号格式添加" class="headerlink" title="使用编号格式添加"></a>使用编号格式添加</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw insert 1 allow 80</span><br></pre></td></tr></table></figure><h4 id="关闭要打开的端口"><a href="#关闭要打开的端口" class="headerlink" title="关闭要打开的端口"></a>关闭要打开的端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw deny 22</span><br></pre></td></tr></table></figure><h4 id="要删除规则，请使用-delete-后跟规则"><a href="#要删除规则，请使用-delete-后跟规则" class="headerlink" title="要删除规则，请使用 delete 后跟规则"></a>要删除规则，请使用 delete 后跟规则</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw delete deny 22</span><br></pre></td></tr></table></figure><p>还可以允许从特定主机或网络访问某个端口。以下示例允许从主机 192.168.0.2 SSH 访问此主机上的任何 IP 地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow proto tcp from 192.168.0.2 to any port 22</span><br></pre></td></tr></table></figure><p>将 192.168.0.2 替换为 192.168.0.0&#x2F;24 以允许从整个子网进行 SSH 访问。</p><ul><li><p>向<em>ufw</em>命令添加<em>–dry-run</em>选项将输出结果规则，但不会应用它们。例如，如果打开 HTTP 端口，将应用以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw --dry-run allow http</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:ufw-user-input - [0:0]</span><br><span class="line">:ufw-user-output - [0:0]</span><br><span class="line">:ufw-user-forward - [0:0]</span><br><span class="line">:ufw-user-limit - [0:0]</span><br><span class="line">:ufw-user-limit-accept - [0:0]</span><br><span class="line">### RULES ###</span><br><span class="line"></span><br><span class="line">### tuple ### allow tcp 80 0.0.0.0/0 any 0.0.0.0/0</span><br><span class="line">-A ufw-user-input -p tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line">### END RULES ###</span><br><span class="line">-A ufw-user-input -j RETURN</span><br><span class="line">-A ufw-user-output -j RETURN</span><br><span class="line">-A ufw-user-forward -j RETURN</span><br><span class="line">-A ufw-user-limit -m limit --limit 3/minute -j LOG --log-prefix &quot;[UFW LIMIT]: &quot;</span><br><span class="line">-A ufw-user-limit -j REJECT</span><br><span class="line">-A ufw-user-limit-accept -j ACCEPT</span><br><span class="line">COMMIT</span><br><span class="line">Rules updated</span><br></pre></td></tr></table></figure></li><li><p>可以通过以下方式禁用 ufw：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure></li><li><p>要查看防火墙状态，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure></li><li><p>对于更详细的状态信息，请使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status verbose</span><br></pre></td></tr></table></figure></li><li><p>查看编号格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status numbered</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>笔记</strong></p><p>如果要打开或关闭<code>/etc/services</code>的端口在 中定义，则可以使用端口名称而不是编号。在上面的示例中，将<em>22</em>替换为<em>ssh</em>。</p></blockquote><p>更多详细参数见：man ufw手册</p><p><strong>ufw 应用集成</strong></p><p>打开端口的应用程序可以包含一个 ufw 配置文件，其中详细说明了应用程序正常运行所需的端口。配置文件保存在 中<code>/etc/ufw/applications.d</code>，如果默认端口已更改，则可以对其进行编辑。</p><ul><li><p>要查看哪些应用程序安装了配置文件，请在终端中输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure></li><li><p>类似于允许流量到端口，使用应用程序配置文件是通过输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow Samba</span><br></pre></td></tr></table></figure></li><li><p>扩展语法也可用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow from 192.168.0.0/24 to any app Samba</span><br></pre></td></tr></table></figure><p>将<em>Samba</em>和<em>192.168.0.0&#x2F;24</em>替换为您正在使用的应用程序配置文件以及您网络的 IP 范围。</p><blockquote><p><strong>笔记</strong></p><p>无需为应用程序指定<em>协议</em>，因为该信息在配置文件中有详细说明。另请注意，<em>应用程序</em>名称替换了<em>端口</em>号。</p></blockquote></li><li><p>要查看有关为应用程序定义的端口、协议等的详细信息，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app info Samba</span><br></pre></td></tr></table></figure></li></ul><p>并非所有需要打开网络端口的应用程序都带有 ufw 配置文件，但是如果您对应用程序进行了配置文件并希望将文件包含在包中，请在 Launchpad 中针对该包提交错误。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu-bug nameofpackage</span><br></pre></td></tr></table></figure><h4 id="IP伪装"><a href="#IP伪装" class="headerlink" title="IP伪装"></a>IP伪装</h4><p>IP 伪装的目的是允许网络上具有私有、不可路由 IP 地址的机器通过执行伪装的机器访问 Internet。必须对来自您的专用网络的发往 Internet 的流量进行处理，以便回复可路由回发出请求的机器。为此，内核必须修改每个数据包的<em>源</em>IP 地址，以便将回复路由回它，而不是发送到发出请求的私有 IP 地址，这在 Internet 上是不可能的。Linux 使用<em>连接跟踪</em>(conntrack) 跟踪哪些连接属于哪些机器并相应地重新路由每个返回数据包。因此，离开您的专用网络的流量被“伪装”为源自您的 Ubuntu 网关机器。此过程在 Microsoft 文档中称为 Internet 连接共享。</p><h4 id="ufw-伪装"><a href="#ufw-伪装" class="headerlink" title="ufw 伪装"></a>ufw 伪装</h4><p>可以使用自定义 ufw 规则来实现 IP 伪装。这是可能的，因为 ufw 的当前后端是 iptables-restore，规则文件位于<code>/etc/ufw/*.rules</code>. 这些文件是添加不使用 ufw 使用的遗留 iptables 规则的好地方，以及与网关或网桥相关的规则。</p><p>规则分为两个不同的文件，应该在ufw命令行规则之前执行的规则，以及在ufw命令行规则之后执行的规则。</p><ul><li><p>首先需要在ufw中开启数据包转发。需要调整两个配置文件，将<em>DEFAULT_FORWARD_POLICY</em><code>/etc/default/ufw</code>更改为“ACCEPT”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_FORWARD_POLICY=&quot;ACCEPT&quot;</span><br></pre></td></tr></table></figure><p>然后编辑<code>/etc/ufw/sysctl.conf</code>并取消注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net/ipv4/ip_forward=1</span><br></pre></td></tr></table></figure><p>同样，对于 IPv6 转发取消注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net/ipv6/conf/default/forwarding=1</span><br></pre></td></tr></table></figure></li><li><p>现在将规则添加到<code>/etc/ufw/before.rules</code>文件中。默认规则只配置<em>过滤</em>表，并且启用伪装<em>nat</em>表需要配置。将以下内容添加到文件顶部的标题注释之后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># nat Table rules</span><br><span class="line">*nat</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line"># Forward traffic from eth1 through eth0.</span><br><span class="line">-A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"># don&#x27;t delete the &#x27;COMMIT&#x27; line or these nat table rules won&#x27;t be processed</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><p>注释不是绝对必要的，但记录您的配置被认为是一种很好的做法。此外，在修改 中的任何<em>规则</em>文件时<code>/etc/ufw</code>，请确保这些行是每个修改表的最后一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># don&#x27;t delete the &#x27;COMMIT&#x27; line or these rules won&#x27;t be processed</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><p>对于每个<em>表，</em>都需要一个相应的<em>COMMIT</em>语句。在这些示例中，只显示了<em>nat</em>和<em>filter</em>表，但您也可以为<em>raw</em>和<em>mangle</em>表添加规则。</p><blockquote><p><strong>笔记</strong></p><p>在上面的示例中，将<em>eth0</em>、<em>eth1</em>和<em>192.168.0.0&#x2F;24</em>替换为适合您网络的接口和 IP 范围。</p></blockquote></li><li><p>最后，禁用并重新启用 ufw 以应用更改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw disable &amp;&amp; sudo ufw enable</span><br></pre></td></tr></table></figure></li></ul><p>现在应该启用 IP 伪装。您还可以将任何其他 FORWARD 规则添加到<code>/etc/ufw/before.rules</code>. 建议将这些附加规则添加到<em>ufw-before-forward</em>链中。</p><h4 id="iptables-伪装"><a href="#iptables-伪装" class="headerlink" title="iptables 伪装"></a>iptables 伪装</h4><p>iptables 也可用于启用伪装。</p><ul><li><p>与 ufw 类似，第一步是通过编辑<code>/etc/sysctl.conf</code>并取消注释以下行来启用 IPv4 数据包转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><p>如果您希望启用 IPv6 转发也取消注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv6.conf.default.forwarding=1</span><br></pre></td></tr></table></figure></li><li><p>接下来，执行 sysctl 命令以启用配置文件中的新设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></li><li><p>现在可以使用单个 iptables 规则完成 IP 伪装，根据您的网络配置，该规则可能略有不同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>上述命令假设您的私有地址空间是 192.168.0.0&#x2F;16，并且您的面向 Internet 的设备是 ppp0。语法分解如下：</p><ul><li>-t nat – 规则是进入 nat 表</li><li>-A POSTROUTING – 规则将被附加 (-A) 到 POSTROUTING 链</li><li>-s 192.168.0.0&#x2F;16 – 该规则适用于源自指定地址空间的流量</li><li>-o ppp0 – 该规则适用于计划通过指定网络设备路由的流量</li><li>-j MASQUERADE - 与此规则匹配的流量将“跳转”（-j）到要操作的 MASQUERADE 目标，如上所述</li></ul></li><li><p>此外，过滤器表中的每个链（默认表，以及大多数或所有数据包过滤发生的地方）都有一个默认<em>策略</em>ACCEPT，但如果除了网关设备之外，您还创建了防火墙，您可能已将策略设置为DROP 或 REJECT，在这种情况下，您的伪装流量需要通过 FORWARD 链允许才能使上述规则起作用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT</span><br><span class="line">sudo iptables -A FORWARD -d 192.168.0.0/16 -m state \</span><br><span class="line">--state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</span><br></pre></td></tr></table></figure><p>上述命令将允许从本地网络到 Internet 的所有连接以及与这些连接相关的所有流量返回到启动它们的机器。</p></li><li><p>如果您希望在重新启动时启用伪装（您可能会这样做），请编辑<code>/etc/rc.local</code>并添加上面使用的任何命令。例如添加第一个没有过滤的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</span><br></pre></td></tr></table></figure></li></ul><h3 id="七、日志"><a href="#七、日志" class="headerlink" title="七、日志"></a>七、日志</h3><p>防火墙日志对于识别攻击、排除防火墙规则故障以及注意网络上的异常活动至关重要。但是，您必须在防火墙中包含日志规则才能生成它们，并且日志规则必须出现在任何适用的终止规则（具有决定数据包命运的目标的规则，例如 ACCEPT、DROP 或 REJECT）之前。</p><p>如果您使用的是 ufw，则可以通过在终端中输入以下内容来打开日志记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw logging on</span><br></pre></td></tr></table></figure><p>要在 ufw 中关闭注销，只需在上述命令中将<em>on</em>替换为<em>off</em>。</p><p>如果使用 iptables 而不是 ufw，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 \</span><br><span class="line">-j LOG --log-prefix &quot;NEW_HTTP_CONN: &quot;</span><br></pre></td></tr></table></figure><p>然后，来自本地计算机的端口 80 上的请求将在 dmesg 中生成如下所示的日志（将单行拆分为 3 行以适合此文档）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00</span><br><span class="line">SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP</span><br><span class="line">SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</span><br></pre></td></tr></table></figure><p>上面的日志也会出现在<code>/var/log/messages</code>、<code>/var/log/syslog</code>、 和 中<code>/var/log/kern.log</code>。可以通过<code>/etc/syslog.conf</code>适当编辑或安装和配置 ulogd 并使用 ULOG 目标而不是 LOG来修改此行为。ulogd 守护进程是一个用户空间服务器，它专门为防火墙侦听来自内核的日志记录指令，并且可以记录到您喜欢的任何文件，甚至是 PostgreSQL 或 MySQL 数据库。使用日志分析工具（例如 logwatch、fwanalog、fwlogwatch 或 lire）可以简化理解防火墙日志的过程。</p><h3 id="八、证书"><a href="#八、证书" class="headerlink" title="八、证书"></a>八、证书</h3><p>Ubuntu server 20.04.3  给apache2创建自签名证书</p><p><strong>介绍</strong></p><p><strong>TLS</strong>或“传输层安全”——及其前身<strong>SSL——</strong>是用于将正常流量包装在受保护的加密包装器中的协议。使用这项技术，服务器可以安全地向其客户端发送信息，而不会被外界拦截或读取其消息。</p><p><strong>注意：</strong>自签名证书将加密您的服务器和任何客户端之间的通信。但是，由于它不是由 Web 浏览器和操作系统中包含的任何受信任的证书颁发机构签署的，因此用户无法使用该证书来自动验证您的服务器的身份。因此，您的用户在访问您的网站时会看到安全错误。</p><p>由于此限制，自签名证书不适用于为公众服务的生产环境。它们通常用于测试或保护单个用户或一小群用户使用的非关键服务，这些用户可以通过备用通信渠道建立对证书有效性的信任。如需更适合生产的证书解决方案，请查看<a href="https://letsencrypt.org/">Let’s Encrypt</a>，一个免费的证书颁发机构。</p><p>先决条件</p><ul><li>使用非<strong>root 用户</strong>、启用 sudo 的用户访问 Ubuntu 20.04 服务器。我们的<a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04">Ubuntu 20.04 初始服务器设置</a>指南可以向您展示如何创建此帐户。</li><li>您还需要安装 Apache。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>然后，安装<code>apache2</code>软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apache2</span><br></pre></td></tr></table></figure><p>最后，如果您<code>ufw</code>设置了防火墙，请打开<code>http</code>和<code>https</code>端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&quot;Apache Full&quot;</span></span><br></pre></td></tr></table></figure><h4 id="步骤1：启用mod-ssl"><a href="#步骤1：启用mod-ssl" class="headerlink" title="步骤1：启用mod_ssl"></a>步骤1：启用mod_ssl</h4><p>在我们可以使用<em>任何</em>SSL 证书之前，我们首先必须启用<code>mod_ssl</code>Apache 模块，它提供对 SSL 加密的支持。</p><p><code>mod_ssl</code>使用以下<code>a2enmod</code>命令启用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod ssl</span><br></pre></td></tr></table></figure><p>重启Apache激活模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><p>该<code>mod_ssl</code>模块现已启用并可以使用。</p><h4 id="步骤2：创建ssl证书"><a href="#步骤2：创建ssl证书" class="headerlink" title="步骤2：创建ssl证书"></a>步骤2：创建ssl证书</h4><p>现在 Apache 已准备好使用加密，我们可以继续生成新的 SSL 证书。该证书将存储有关您站点的一些基本信息，并附带一个允许服务器安全处理加密数据的密钥文件。</p><p>我们可以使用以下<code>openssl</code>命令创建 SSL 密钥和证书文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt</span><br></pre></td></tr></table></figure><p>参数详解：</p><ul><li><code>openssl</code>：这是用于创建和管理 OpenSSL 证书、密钥和其他文件的命令行工具。</li><li><code>req -x509</code>：这指定我们要使用 X.509 证书签名请求 (CSR) 管理。X.509 是 SSL 和 TLS 遵守的用于密钥和证书管理的公钥基础结构标准。</li><li><code>-nodes</code>：这告诉 OpenSSL 跳过使用密码保护我们的证书的选项。当服务器启动时，我们需要 Apache 能够在没有用户干预的情况下读取文件。密码可以防止这种情况发生，因为我们必须在每次重新启动后输入它。</li><li><code>-days 365</code>：此选项设置证书被视为有效的时间长度。我们在这里设置了一年。许多现代浏览器会拒绝任何有效期超过一年的证书。</li><li><code>-newkey rsa:2048</code>：这指定我们要同时生成新证书和新密钥。我们没有在上一步中创建签署证书所需的密钥，因此我们需要将其与证书一起创建。该<code>rsa:2048</code>部分告诉它制作一个 2048 位长的 RSA 密钥。</li><li><code>-keyout</code>：这一行告诉 OpenSSL 在哪里放置我们正在创建的生成的私钥文件。</li><li><code>-out</code>：这告诉 OpenSSL 在哪里放置我们正在创建的证书。</li></ul><p><strong>最重要的一行是请求<code>Common Name</code>. 您需要输入用于访问服务器的主机名或服务器的公共 IP</strong>。重要的是，此字段与您将放入浏览器地址栏中以访问该站点的任何内容相匹配，因为不匹配会导致更多的安全错误。</p><p>完整的提示列表如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Country Name (2 letter code) [XX]:US</span><br><span class="line">State or Province Name (full name) []:Example</span><br><span class="line">Locality Name (eg, city) [Default City]:Example </span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:Example Inc</span><br><span class="line">Organizational Unit Name (eg, section) []:Example Dept</span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:your_domain_or_ip</span><br><span class="line">Email Address []:webmaster@example.com</span><br></pre></td></tr></table></figure><p>您创建的两个文件都将放置在<code>/etc/ssl</code>.</p><p>接下来，我们将更新我们的 Apache 配置以使用新的证书和密钥。</p><h4 id="步骤3：配置apache以使用ssl"><a href="#步骤3：配置apache以使用ssl" class="headerlink" title="步骤3：配置apache以使用ssl"></a>步骤3：配置apache以使用ssl</h4><p>现在我们有了自签名证书和密钥，我们需要更新我们的 Apache 配置以使用它们。在 Ubuntu 上，您可以将新的 Apache 配置文件（它们必须以 结尾<code>.conf</code>）放入<code>/etc/apache2/sites-available/</code>，它们将在下次重新加载或重新启动 Apache 进程时加载。</p><p>在本教程中，我们将创建一个新的最小配置文件。（如果您已经<code>&lt;Virtualhost&gt;</code>设置了Apache并且只需要向其中添加 SSL，您可能需要复制以 开头的配置行<code>SSL</code>，并将<code>VirtualHost</code>端口从切换<code>80</code>到<code>443</code>。我们将<code>80</code>在下一步中处理端口。 )</p><p>在 &#x2F;etc&#x2F;apache2&#x2F;sites-available 目录中打开一个新文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apache2/sites-available/your_domain_or_ip.conf</span><br></pre></td></tr></table></figure><p>粘贴以下最小的 VirtualHost 配置：</p><p>&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;your_domain_or_ip.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">   ServerName your_domain_or_ip</span><br><span class="line">   DocumentRoot /var/www/your_domain_or_ip</span><br><span class="line"></span><br><span class="line">   SSLEngine on</span><br><span class="line">   SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt</span><br><span class="line">   SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>请务必将<code>ServerName</code>行更新为您打算寻址服务器的任何方式。这可以是主机名、完整域名或 IP 地址。确保您选择的任何内容与<code>Common Name</code>您在制作证书时选择的内容相匹配。</p><p>剩下的几行指定一个<code>DocumentRoot</code>目录来提供文件，以及将 Apache 指向我们新创建的证书和密钥所需的 SSL 选项。</p><p>现在让我们创建我们<code>DocumentRoot</code>的 HTML 文件并将其放入其中，仅用于测试目的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /var/www/your_domain_or_ip</span><br></pre></td></tr></table></figure><p><code>index.html</code>使用文本编辑器打开一个新文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /var/www/your_domain_or_ip/index.html</span><br></pre></td></tr></table></figure><p>将以下内容粘贴到空白文件中：</p><p>&#x2F;var&#x2F;www&#x2F;your_domain_or_ip&#x2F;index.html</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;it worked!&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>当然，这不是一个完整的 HTML 文件，但浏览器很宽松，足以验证我们的配置。</p><p>保存并关闭文件<br>接下来，我们需要使用<code>a2ensite</code>工具启用配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite your_domain_or_ip.conf</span><br></pre></td></tr></table></figure><p>接下来，让我们测试一下配置错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apache2ctl configtest</span><br></pre></td></tr></table></figure><p>如果一切顺利，您将得到如下所示的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OutputAH00558: apache2: Could not reliably determine the server&#x27;s fully qualified domain name, using 127.0.1.1. Set the &#x27;ServerName&#x27; directive globally to suppress this messageSyntax OK</span><br></pre></td></tr></table></figure><p>第一行是一条消息，告诉您该<code>ServerName</code>指令未全局设置。如果你想摆脱那条消息，你可以<code>ServerName</code>在<code>/etc/apache2/apache2.conf</code>. 这是可选的，因为该消息不会造成伤害。</p><p>如果您的输出包含<code>Syntax OK</code>在其中，则您的配置文件没有语法错误。我们可以安全地重新加载 Apache 以实现我们的更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload apache2</span><br></pre></td></tr></table></figure><p>现在在浏览器中加载您的站点，确保<code>https://</code>在开始时使用。</p><p>您应该会看到一个错误。这对于自签名证书来说是正常的！浏览器警告您它无法验证服务器的身份，因为我们的证书没有由任何已知的证书颁发机构签署。对于测试目的和个人使用，这可以很好。您应该能够点击进入高级信息或更多信息，然后选择继续。</p><p>执行此操作后，您的浏览器将加载该<code>it worked!</code>消息。</p><p><strong>注意：</strong>如果您的浏览器根本没有连接到服务器，请确保您的连接没有被防火墙阻止。如果您使用的是<code>ufw</code>，以下命令将打开端口<code>80</code>和<code>443</code>：<code>sudo ufw allow &quot;Apache Full&quot;</code> 复制</p><p>接下来，我们将<code>VirtualHost</code>在我们的配置中添加另一个部分，以提供纯 HTTP 请求并将它们重定向到 HTTPS。</p><h4 id="步骤4：将http重定向到https"><a href="#步骤4：将http重定向到https" class="headerlink" title="步骤4：将http重定向到https"></a>步骤4：将http重定向到https</h4><p>目前，我们的配置只会响应端口上的 HTTPS 请求<code>443</code>。<code>80</code>即使您想强制加密所有流量，也最好在 port 上做出响应。让我们设置一个<code>VirtualHost</code>来响应这些未加密的请求并将它们重定向到 HTTPS。</p><p>打开我们在前面的步骤中启动的同一个 Apache 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apache2/sites-available/your_domain_or_ip.conf</span><br></pre></td></tr></table></figure><p>在底部，创建另一个<code>VirtualHost</code>块以匹配端口上的请求<code>80</code>。使用该<code>ServerName</code>指令再次匹配您的域名或 IP 地址。然后，用于<code>Redirect</code>匹配任何请求并将它们发送到 SSL <code>VirtualHost</code>。确保包含尾部斜杠：</p><p>&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;your_domain_or_ip.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName your_domain_or_ip</span><br><span class="line">    Redirect / https://your_domain_or_ip/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>完成后保存并关闭此文件，然后再次测试您的配置语法，并重新加载 Apache：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl configtest</span><br><span class="line">sudo systemctl reload apache2</span><br></pre></td></tr></table></figure><p>您可以通过<code>http://</code>在地址前面使用纯文本访问您的站点来测试新的重定向功能。您应该会被<code>https://</code>自动重定向到。</p><p>结果：</p><p>未重定向前访问<a href="http://10.4.7.142/">http://10.4.7.142</a></p><p><img src="/img/postimages/%E6%9C%AA%E9%87%8D%E5%AE%9A%E5%90%91%E5%89%8D.webp" alt="未重定向前"></p><p>访问：<a href="https://10.4.7.142/">https://10.4.7.142</a></p><p>将请求到http上的流量重定向到https上后访问：<a href="http://10.4.7.142/">http://10.4.7.142</a> 和 <a href="https://10.4.7.142/">https://10.4.7.142</a></p><p><img src="/img/postimages/%E9%87%8D%E5%AE%9A%E5%90%91%E5%90%8E.webp" alt="重定向后"></p><p>谷歌浏览器f12 security 选项可以查看自建的证书详细信息。</p><p><img src="/img/postimages/%E8%AF%81%E4%B9%A6%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.webp" alt="证书详细信息"></p><h4 id="控制台安全"><a href="#控制台安全" class="headerlink" title="控制台安全"></a>控制台安全</h4><p>禁用ctrl+alt+delete </p><p>任何对键盘有物理访问权限的人都可以简单地使用Ctrl+Alt+Delete组合键来重新启动服务器，而无需登录。虽然有人可以简单地拔掉电源，但您仍应防止在生产服务器上使用此组合键。这迫使攻击者采取更严厉的措施重启服务器，同时防止意外重启。</p><p>要禁用通过按Ctrl+Alt+Delete组合键执行的重启操作，请运行以下两个命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl mask ctrl-alt-del.target</span><br><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><p><a href="https://multipass.run/?_ga=2.172781731.1854281748.1632272954-1233097571.1631927770">https://multipass.run/?_ga=2.172781731.1854281748.1632272954-1233097571.1631927770</a></p><h4 id="multipass"><a href="#multipass" class="headerlink" title="multipass"></a>multipass</h4><p>Ubuntu虚拟机</p><p><a href="https://multipass.run/?_ga=2.172781731.1854281748.1632272954-1233097571.1631927770">Multipass</a>是在 Ubuntu 上创建 Ubuntu VM 的推荐方法。它专为希望通过单个命令获得全新 Ubuntu 环境并可在 Linux、Windows 和 macOS 上运行的开发人员而设计。</p><p>在 Linux 上，它可以快速使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install multipass --beta --classic</span><br></pre></td></tr></table></figure><p>用法：</p><p><strong>查找镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass find</span></span><br><span class="line">Image                   Aliases           Version          Description</span><br><span class="line">core                    core16            20190424         Ubuntu Core 16</span><br><span class="line">core18                                    20190213         Ubuntu Core 18</span><br><span class="line">16.04                   xenial            20190628         Ubuntu 16.04 LTS</span><br><span class="line">18.04                   bionic,lts        20190627.1       Ubuntu 18.04 LTS</span><br><span class="line">18.10                   cosmic            20190628         Ubuntu 18.10</span><br><span class="line">19.04                   disco             20190628         Ubuntu 19.04</span><br><span class="line">daily:19.10             devel,eoan        20190623         Ubuntu 19.10</span><br></pre></td></tr></table></figure><p><strong>在当前Ubuntu系统中创建新实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass launch ubuntu</span></span><br><span class="line">Launching dancing-chipmunk...</span><br><span class="line">Downloading Ubuntu 18.04 LTS..........</span><br><span class="line">Launched: dancing chipmunk</span><br></pre></td></tr></table></figure><p><strong>检查正在运行中的实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass info dancing-chipmunk</span></span><br><span class="line">Name:           dancing-chipmunk</span><br><span class="line">State:          RUNNING</span><br><span class="line">IPv4:           10.125.174.247</span><br><span class="line">Release:        Ubuntu 18.04.1 LTS</span><br><span class="line">Image hash:     19e9853d8267 (Ubuntu 18.04 LTS)</span><br><span class="line">Load:           0.97 0.30 0.10</span><br><span class="line">Disk usage:     1.1G out of 4.7G</span><br><span class="line">Memory usage:   85.1M out of 985.4M</span><br></pre></td></tr></table></figure><p><strong>显示刚才创建实例的详细信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass info dancing-chipmunkName:           dancing-chipmunkState:          RUNNINGIPv4:           10.125.174.247Release:        Ubuntu 18.04.1 LTSImage <span class="built_in">hash</span>:     19e9853d8267 (Ubuntu 18.04 LTS)Load:           0.97 0.30 0.10Disk usage:     1.1G out of 4.7GMemory usage:   85.1M out of 985.4M</span></span><br></pre></td></tr></table></figure><p><strong>进入到刚刚创建实例的系统中</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass shell dancing-chipmunk</span></span><br><span class="line">Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-42-generic x86_64)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>在刚刚创建的虚拟机外部查看创建的虚拟机的相关信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">multipass <span class="built_in">exec</span> dancing-chipmunk -- lsb_release -a</span></span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID:  Ubuntu</span><br><span class="line">Description:     Ubuntu 18.04.1 LTS</span><br><span class="line">Release:         18.04</span><br><span class="line">Codename:        bionic</span><br></pre></td></tr></table></figure><p><strong>停止刚才创建的实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass stop dancing-chipmunk</span><br></pre></td></tr></table></figure><p><strong>删除实例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass delete dancing-chipmunk</span><br></pre></td></tr></table></figure><p>它会显示删除了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Name                    State             IPv4             Release</span><br><span class="line">snapcraft-asciinema     STOPPED           --               Ubuntu Snapcraft builder for Core 18</span><br><span class="line">dancing-chipmunk        DELETED           --               Not Available</span><br></pre></td></tr></table></figure><p><strong>彻底删除</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass purge</span><br></pre></td></tr></table></figure><h3 id="九、容器"><a href="#九、容器" class="headerlink" title="九、容器"></a>九、容器</h3><p>LXD</p><p>LXD（发音为 lex-dee）是更轻的管理程序，或轻量级容器管理程序。LXC (lex-see) 是一个在本地系统上创建和管理“容器”的程序。它还提供了一个 API 以允许更高级别的管理器（例如 LXD）管理容器。从某种意义上说，可以将 LXC 与 QEMU 进行比较，同时将 LXD 与 libvirt 进行比较。</p><p>LXC API 处理“容器”。LXD API 处理“远程”，它提供图像和容器。这通过网络扩展了 LXC 功能，并允许对容器迁移和容器映像发布等任务进行简洁的管理。</p><p>LXD 在幕后使用 LXC 来完成一些容器管理任务。但是，它保留自己的容器配置信息并有自己的约定，因此最好不要将经典的 LXC 命令与 LXD 容器一起使用.</p><h4 id="ubuntu-server-预装LXD。其他系统可以使用以下命令安装-lxd-包"><a href="#ubuntu-server-预装LXD。其他系统可以使用以下命令安装-lxd-包" class="headerlink" title="ubuntu server 预装LXD。其他系统可以使用以下命令安装 lxd 包"></a>ubuntu server 预装LXD。其他系统可以使用以下命令安装 lxd 包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install lxd</span><br></pre></td></tr></table></figure><p>配置</p><p>lxd 初始化（必须以root身份运行）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxd init</span><br></pre></td></tr></table></figure><p>详细参数：</p><p>LXD Clustering：不需要<br>New storage pool：需要创建一个存储池<br>Name of storage pool：给存储池命名<br>storage backend：存储后端，使用 ZFS<br>Create a new ZFS pool：需要创建一个 ZFS 池<br>Use an existing block device：Yes<br>Path to block device：使用已有的磁盘分区用于 ZFS 的存储后端<br>MAAS server?：不知道是啥，不需要<br>New local network bridge?：需要，我只需要使用 LXD 默认的网桥即可<br>New bridge be called：给网桥命名<br>IPv4：默认 auto<br>IPv6：默认 auto<br>LXD available over the network？：默认 no<br>Stale cached？：默认 yes<br>YAML printed？：打印信息，yes&#x2F;no 都行</p><p>如果不能用root用户，普通用户如lhp 需要加入lxd用户组。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser lhp lxd </span><br></pre></td></tr></table></figure><p>查看lxd配置信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc info</span><br></pre></td></tr></table></figure><p>查看默认容器配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc profile show default</span><br></pre></td></tr></table></figure><p>查看容器列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc list</span><br></pre></td></tr></table></figure><h4 id="创建容器模板"><a href="#创建容器模板" class="headerlink" title="创建容器模板"></a>创建容器模板</h4><ul><li>配置清华镜像源</li></ul><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/lxc-images/">https://mirrors.tuna.tsinghua.edu.cn/help/lxc-images/</a></p><p><strong>LXD&#x2F;LXC 2.0及以上版本使用镜像加速的方法</strong>:</p><p>创建一个remote链接，指向镜像站即可，或替换掉默认的images链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># lxc remote add tuna-images https://mirrors.tuna.tsinghua.edu.cn/lxc-images/ --protocol=simplestreams --public</span><br><span class="line"># lxc image list tuna-images:</span><br></pre></td></tr></table></figure><ul><li>查看镜像列表，寻找合适的镜像的FINGERPRINT，用于下载(注意选择x86_64架构)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc image list tuna-images:</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:~/snap/lxd/common/config# lxc image list tuna-images:ubuntu | grep x86_64 </span><br><span class="line">| ubuntu/16.04 (7 more)               | 4f34b9f8a490 | yes    | Ubuntu xenial amd64 (20210924_07:42)    | x86_64       | VIRTUAL-MACHINE | 204.25MB  | Sep 24, 2021 at 12:00am (UTC) |</span><br><span class="line">| ubuntu/16.04 (7 more)               | 10c1476cf890 | yes    | Ubuntu xenial amd64 (20210924_07:42)    | x86_64       | CONTAINER       | 84.59MB   | Sep 24, 2021 at 12:00am (UTC) |</span><br><span class="line">| ubuntu/16.04/cloud (3 more)         | 31a69e3218ef | yes    | Ubuntu xenial amd64 (20210924_07:42)    | x86_64       | CONTAINER       | 103.50MB  | Sep 24, 2021 at 12:00am (UTC) |</span><br><span class="line">| ubuntu/16.04/cloud (3 more)         | b3637c07e450 | yes    | Ubuntu xenial amd64 (20210924_07:42)    | x86_64       | VIRTUAL-MACHINE | 233.88MB  | Sep 24, 2021 at 12:00am (UTC) |</span><br><span class="line">| ubuntu/18.04 (7 more)               | 89e249e9c85d | yes    | Ubuntu bionic amd64 (20210924_07:42)    | x86_64       | CONTAINER       | 100.45MB  | Sep 24, 2021 at 12:00am (UTC) |</span><br></pre></td></tr></table></figure><ul><li>FINGERPRINT是镜像的指纹，在上条命令下查找，ContainerTemplateName为容器模板名称，自己定义</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc launch tuna-images:&lt;FINGERPRINT&gt; &lt;ContainerTemplateName&gt;</span><br></pre></td></tr></table></figure><ul><li>举例，创建一个名为ubuntu的容器。在lxc清华源中10c1476cf890是Ubuntu16.04的fingerprint</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc launch tuna-images:10c1476cf890 ubuntu</span><br></pre></td></tr></table></figure><ul><li>进行容器列表查看</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc list</span><br><span class="line">+--------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">|  NAME  |  STATE  |         IPV4         |                     IPV6                      |   TYPE    | SNAPSHOTS |</span><br><span class="line">+--------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">| ubuntu | RUNNING | 10.235.54.209 (eth0) | fd42:1082:67cd:27dd:216:3eff:fec0:6ed1 (eth0) | CONTAINER | 0         |</span><br><span class="line">+--------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>可进入容器的 root 用户下 bash</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc exec &lt;ContainerTemplateName&gt; bash</span><br></pre></td></tr></table></figure><ul><li>用户切换</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo susu ubuntu</span><br></pre></td></tr></table></figure><h4 id="配置共享目录"><a href="#配置共享目录" class="headerlink" title="配置共享目录"></a>配置共享目录</h4><ul><li>设置共享目录来实现宿主机与容器之间的文件传输</li><li>设置键值</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc config set &lt;ContainerTemplateName&gt; security.privileged true</span><br></pre></td></tr></table></figure><ul><li>设置共享目录，其中shareName为虚拟的设备名称，lxd会虚拟出该设备并导通接通两者共享目录，path1为宿主机下共享目录路径，path2为容器下共享目录路径</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc config device add &lt;ContainerTemplateName&gt; &lt;shareName&gt; disk source=&lt;path1&gt; path=&lt;path2&gt;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">oot@lhp-server:~# lxc config set ubuntu security.privileged true</span><br><span class="line">root@lhp-server:~# lxc config device add ubuntu share disk source=/share path=/media</span><br><span class="line">Device share added to ubuntu</span><br></pre></td></tr></table></figure><p>可以在宿主机&#x2F;media中创建文件测试，容器&#x2F;share中文件是否存在。</p><p>设置用户名密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc exec &lt;ContainerTemplateName&gt; bashpasswd</span><br></pre></td></tr></table></figure><h4 id="容器克隆"><a href="#容器克隆" class="headerlink" title="容器克隆"></a>容器克隆</h4><ul><li>克隆容器 参数一为模板容器名称，参数二为目标容器名称</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc copy &lt;ContainerTemplateName&gt; &lt;newContainerName&gt;</span><br></pre></td></tr></table></figure><ul><li>运行新容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc start &lt;newContainerName&gt;</span><br></pre></td></tr></table></figure><ul><li>进入新容器bash</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lxc exec &lt;newContainerName&gt; bash</span><br></pre></td></tr></table></figure><p>注意，此步骤后需要修改Frp的端口，重新建立内外网穿透，建议修改后使用snapshot快照备份<code>sudo lxc snapshot &lt;ContainerName&gt;</code>。</p><p>实例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:~# lxc list </span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">|  NAME   |  STATE  |         IPV4         |                     IPV6                      |   TYPE    | SNAPSHOTS |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">| ubuntu  | RUNNING | 10.235.54.122 (eth0) | fd42:1082:67cd:27dd:216:3eff:fefa:fea3 (eth0) | CONTAINER | 0         |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">| ubuntu2 | STOPPED |                      |                                               | CONTAINER | 0         |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@lhp-server:~# lxc start ubuntu2 </span><br><span class="line">root@lhp-server:~# lxc list </span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">|  NAME   |  STATE  |         IPV4         |                     IPV6                      |   TYPE    | SNAPSHOTS |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">| ubuntu  | RUNNING | 10.235.54.122 (eth0) | fd42:1082:67cd:27dd:216:3eff:fefa:fea3 (eth0) | CONTAINER | 0         |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br><span class="line">| ubuntu2 | RUNNING | 10.235.54.50 (eth0)  |                                               | CONTAINER | 0         |</span><br><span class="line">+---------+---------+----------------------+-----------------------------------------------+-----------+-----------+</span><br></pre></td></tr></table></figure><h4 id="可视化管理"><a href="#可视化管理" class="headerlink" title="可视化管理"></a>可视化管理</h4><ul><li>下载源码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AdaptiveScale/lxdui.git</span><br></pre></td></tr></table></figure><ul><li>安装前环境检查</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/AdaptiveScale/lxdui/wiki/Installing-the-Prerequisites</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">which python </span><br><span class="line">python --version </span><br><span class="line">pip --version</span><br><span class="line">apt search python3-virtualenv</span><br><span class="line">apt install pip #安装pip</span><br><span class="line">apt install python3-virtualenv #安装python虚拟环境</span><br><span class="line"></span><br><span class="line">root@lhp-server:~# pip list | grep  virtualenv</span><br><span class="line">virtualenv             20.0.17 </span><br></pre></td></tr></table></figure><ul><li>创建虚拟环境并检查环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd /lxdui</span><br><span class="line">python3 -m venv test</span><br><span class="line">source test/bin/activate</span><br><span class="line"></span><br><span class="line">(test) root@lhp-server:~/lxdui# which pip </span><br><span class="line">/root/lxdui/test/bin/pip</span><br><span class="line">(test) root@lhp-server:~/lxdui# which python </span><br><span class="line">/root/lxdui/test/bin/python</span><br><span class="line"></span><br><span class="line">(test) root@lhp-server:~/lxdui# pip list </span><br><span class="line">Package       Version</span><br><span class="line">------------- -------</span><br><span class="line">pip           20.0.2 </span><br><span class="line">pkg-resources 0.0.0  </span><br><span class="line">setuptools    44.0.0 </span><br></pre></td></tr></table></figure><ul><li>安装LXDUI面板并再次检查环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">python3 setup.py install</span><br><span class="line">(test) root@lhp-server:~/lxdui# pip list </span><br><span class="line">Package             Version  </span><br><span class="line">------------------- ---------</span><br><span class="line">certifi             2021.5.30</span><br><span class="line">cffi                1.15.0rc1</span><br><span class="line">chardet             3.0.4    </span><br><span class="line">click               6.7      </span><br><span class="line">cryptography        3.4.8    </span><br><span class="line">Flask               1.0      </span><br><span class="line">Flask-JWT           0.3.2    </span><br><span class="line">Flask-Login         0.4.1    </span><br><span class="line">idna                2.7      </span><br><span class="line">itsdangerous        2.0.1    </span><br><span class="line">Jinja2              3.0.1    </span><br><span class="line">jsonschema          2.6.0    </span><br><span class="line">LXDUI               2.1.2    </span><br><span class="line">MarkupSafe          2.0.1    </span><br><span class="line">netaddr             0.7.19   </span><br><span class="line">pbr                 5.6.0    </span><br><span class="line">pip                 20.0.2   </span><br><span class="line">pkg-resources       0.0.0    </span><br><span class="line">psutil              5.6.6    </span><br><span class="line">ptyprocess          0.7.0    </span><br><span class="line">pycparser           2.20     </span><br><span class="line">PyJWT               1.4.2    </span><br><span class="line">pylxd               2.2.7    </span><br><span class="line">pyOpenSSL           17.5.0   </span><br><span class="line">python-dateutil     2.8.2    </span><br><span class="line">requests            2.20.0   </span><br><span class="line">requests-toolbelt   0.9.1    </span><br><span class="line">requests-unixsocket 0.2.0    </span><br><span class="line">setuptools          44.0.0   </span><br><span class="line">six                 1.16.0   </span><br><span class="line">terminado           0.8.1    </span><br><span class="line">tornado             5.0.2    </span><br><span class="line">tornado-xstatic     0.2      </span><br><span class="line">urllib3             1.24.3   </span><br><span class="line">Werkzeug            2.0.1    </span><br><span class="line">ws4py               0.5.1    </span><br><span class="line">XStatic             1.0.1    </span><br><span class="line">XStatic-term.js     0.0.7.0 </span><br></pre></td></tr></table></figure><ul><li>启动面板</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 run.py start</span><br></pre></td></tr></table></figure><ul><li>登录面板<a href="http://127.0.0.1:15151/">http://127.0.0.1:15151</a>，默认账户密码均为admin</li></ul><p><img src="/img/postimages/lxdui.webp" alt="lxdui"></p><p>参考：<a href="https://blog.csdn.net/CrazyBusby/article/details/114886340">https://blog.csdn.net/CrazyBusby/article/details/114886340</a> </p><p><a href="https://www.youtube.com/watch?v=Fzb6jN6GYL8&amp;ab_channel=JustmeandOpensource">https://www.youtube.com/watch?v=Fzb6jN6GYL8&amp;ab_channel=JustmeandOpensource</a></p><h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><p>要查看有关 LXD 本身的调试信息，请在基于 systemd 的主机上使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u lxd</span><br></pre></td></tr></table></figure><p>可以使用以下方式查看容器 c1 的容器日志文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc info c1 --show-log</span><br></pre></td></tr></table></figure><h4 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h4><p>可以使用以下<code>lxc move</code>命令重命名和实时迁移容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc move c1 final-beta</span><br></pre></td></tr></table></figure><p>它们也可以被快照：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc snapshot c1 YYYY-MM-DD</span><br></pre></td></tr></table></figure><p>然后可以通过恢复快照来恢复对 c1 的后续更改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc restore u1 YYYY-MM-DD</span><br></pre></td></tr></table></figure><p>也可以通过复制容器或快照来创建新容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc copy u1/YYYY-MM-DD testcontainer</span><br></pre></td></tr></table></figure><p>限制：</p><p>LXD 支持灵活限制容器可以消耗的资源。限制分为以下几类：</p><ul><li>CPU：以多种方式限制容器可用的 CPU。</li><li>磁盘：配置负载下I&#x2F;O请求的优先级</li><li>RAM：配置内存和交换可用性</li><li>网络：配置负载下的网络优先级</li><li>进程数：限制容器中的并发进程数。</li></ul><h4 id="lxd-容器端口暴露，使得外面能够访问容器内业务。"><a href="#lxd-容器端口暴露，使得外面能够访问容器内业务。" class="headerlink" title="lxd 容器端口暴露，使得外面能够访问容器内业务。"></a>lxd 容器端口暴露，使得外面能够访问容器内业务。</h4><p>前提条件：</p><p>lxd容器:Ubuntu</p><p>宿主机:Ubuntu</p><p>lxd容器内安装apache2 ,并将访问端口更改为8080,重启apache2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install apache2</span><br><span class="line">vi /etc/apache2/ports.conf </span><br><span class="line">Listen 8080</span><br><span class="line">systemctl restart apache2</span><br></pre></td></tr></table></figure><p>将宿主机的80端口和容器内8080做映射。外部通过访问宿主机的ip+80来访问容器内的业务。</p><p><img src="/img/postimages/lxc-expose.webp" alt="lxc-expose"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc config device add ubuntu myport80 proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>删除映射</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc config device remove ubuntu myport80</span><br></pre></td></tr></table></figure><h3 id="十、数据库"><a href="#十、数据库" class="headerlink" title="十、数据库"></a>十、数据库</h3><h4 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h4><p>PostgreSQL 是一个对象关系数据库系统，它具有传统商业数据库系统的特性，并在下一代 DBMS 系统中进行了增强。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install postgresql</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>要使其他计算机能够连接到您的 PostgreSQL 服务器，请编辑文件 <code>/etc/postgresql/12/main/postgresql.conf</code></p><p>找到*#listen_addresses &#x3D; ‘localhost’ 行*并将其更改为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen_addresses = &#x27;*&#x27;</span><br></pre></td></tr></table></figure><p><strong>笔记</strong></p><p>要同时允许 IPv4 和 IPv6 连接，请将 ‘localhost’ 替换为 ‘::’</p><p>现在我们可以连接到我们的 PostgreSQL 服务器，下一步是为<em>postgres</em>用户设置密码。在终端提示符下运行以下命令以连接到默认的 PostgreSQL 模板数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql template1</span><br></pre></td></tr></table></figure><p>上面的命令以用户<em>postgres</em>连接到 PostgreSQL 数据库<em>template1</em>。连接到 PostgreSQL 服务器后，您将看到 SQL 提示符。您可以在 psql 提示符下运行以下 SQL 命令来配置用户<em>postgres</em>的密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER postgres with encrypted password &#x27;your_password&#x27;;</span><br></pre></td></tr></table></figure><p>配置密码后，编辑文件<code>/etc/postgresql/12/main/pg_hba.conf</code>以对<em>postgres</em>用户使用<em>MD5</em>身份验证：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local   all         postgres                          md5</span><br></pre></td></tr></table></figure><p>最后，您应该重新启动 PostgreSQL 服务以初始化新配置。从终端提示输入以下内容以重新启动 PostgreSQL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart postgresql.service</span><br></pre></td></tr></table></figure><blockquote><p><strong>警告</strong></p><p>以上配置无论如何都不完整。更多参数请参考《<a href="http://www.postgresql.org/docs/current/static/admin.html">PostgreSQL 管理员指南》</a>。</p></blockquote><p>您可以使用 PostgreSQL 客户端测试来自其他机器的服务器连接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install postgresql-client</span><br><span class="line">psql -h postgres.example.com -U postgres -W </span><br></pre></td></tr></table></figure><blockquote><p><strong>笔记</strong></p><p>将域名替换为您的实际服务器域名。</p></blockquote><p>参考：<a href="https://ubuntu.com/server/docs/databases-postgresql">https://ubuntu.com/server/docs/databases-postgresql</a></p><h3 id="十一、监控"><a href="#十一、监控" class="headerlink" title="十一、监控"></a>十一、监控</h3><p>集群监控软件：</p><ul><li>Prometheus</li><li>Prometheus Alertmanager</li><li>Grafana</li><li>Telegraf</li></ul><p>所需端口：</p><table><thead><tr><th>Prometheus</th><th>monitor:9090</th></tr></thead><tbody><tr><td>Alertmanager</td><td>monitor:9093</td></tr><tr><td>Grafana</td><td>monitor:3000</td></tr><tr><td>Telegraf</td><td>workload:9273</td></tr></tbody></table><p>nagios 安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.osradar.com/how-to-install-nagios-on-ubuntu-20-04/<span class="comment">#:~:text=How%20To%20Install%20Nagios%20on%20Ubuntu%2020.04%201,pre-checks%20are%20okay.%20...%209%20Access%20Web%20Dashboard</span></span><br></pre></td></tr></table></figure><p><img src="/img/postimages/nagios.webp" alt="nagios"></p><h3 id="十二、备份"><a href="#十二、备份" class="headerlink" title="十二、备份"></a>十二、备份</h3><p>备份软件：</p><p>方案1：bacula </p><p>方案2：NFS+shell script + crontab </p><p>场景：nfs server ：10.4.7.141  共享目录： &#x2F;mnt&#x2F;backup</p><p>​           nfs client : 10.4.7.142 新建目录&#x2F;opt&#x2F;example 需要与 10.4.7.141的&#x2F;mnt&#x2F;backup 目录做绑定。</p><p>server：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-kernel-server</span><br><span class="line">sudo systemctl start nfs-kernel-server.service</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/exports</span><br><span class="line">/mnt/backup *(ro,sync,subtree_check)</span><br></pre></td></tr></table></figure><p>如果&#x2F;mnt&#x2F;backup 不存在先创建该目录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/backup</span><br></pre></td></tr></table></figure><p>配置生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure><p>client:</p><p>安装nfs客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common</span><br></pre></td></tr></table></figure><p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/example</span><br><span class="line">sudo mount 10.4.7.141:/mnt/backup /opt/example</span><br></pre></td></tr></table></figure><p>最后需要配置fstab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">10.4.7.141:/mnt/backup /opt/example nfs rsize=8192,wsize=8192,timeo=14,intr</span><br></pre></td></tr></table></figure><p>备份脚本编写：</p><p>场景：定时将client中 &#x2F;home &#x2F;var&#x2F;spool&#x2F;mail &#x2F;etc &#x2F;opt 中文件备份到server 的&#x2F;mnt&#x2F;backup 中。每天凌晨12：00 备份一次。</p><p>backup.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">###################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Backup to NFS mount script.</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">####################################</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">What to backup.</span> </span><br><span class="line">backup_files=&quot;/home /var/spool/mail /etc /opt&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Where to backup to.</span></span><br><span class="line">dest=&quot;/mnt/backup&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Create archive filename.</span></span><br><span class="line">day=$(date +%A)</span><br><span class="line">hostname=$(hostname -s)</span><br><span class="line">archive_file=&quot;$hostname-$day.tgz&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Print start status message.</span></span><br><span class="line">echo &quot;Backing up $backup_files to $dest/$archive_file&quot;</span><br><span class="line">date</span><br><span class="line">echo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Backup the files using tar.</span></span><br><span class="line">tar czf $dest/$archive_file $backup_files</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Print end status message.</span></span><br><span class="line">echo</span><br><span class="line">echo &quot;Backup finished&quot;</span><br><span class="line">date</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Long listing of files <span class="keyword">in</span> <span class="variable">$dest</span> to check file sizes.</span></span><br><span class="line">ls -lh $dest</span><br></pre></td></tr></table></figure><p>crontab </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * bash  /usr/local/bin/backup.sh</span><br></pre></td></tr></table></figure><p>从备份中恢复</p><ul><li><p>查看存档内容的列表。从终端提示输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -tzvf /mnt/backup/host-Monday.tgz</span><br></pre></td></tr></table></figure></li><li><p>要将文件从存档恢复到不同的目录，请输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf /mnt/backup/host-Monday.tgz -C /tmp etc/hosts</span><br></pre></td></tr></table></figure><p>tar的*-C*选项将提取的文件重定向到指定的目录。上面的例子将<code>/etc/hosts</code>文件解压到<code>/tmp/etc/hosts</code>. tar 重新创建它包含的目录结构。</p><p>另外，请注意前导<em>“&#x2F;”</em>不在要恢复的文件路径之外。</p></li><li><p>要恢复存档中的所有文件，请输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /sudo tar -xzvf /mnt/backup/host-Monday.tgz</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>笔记</strong></p><p>这将覆盖当前文件系统上的文件。</p></blockquote><h3 id="十三、邮件服务"><a href="#十三、邮件服务" class="headerlink" title="十三、邮件服务"></a>十三、邮件服务</h3><p>dovecot </p><p>postfix </p><h3 id="十四、web服务"><a href="#十四、web服务" class="headerlink" title="十四、web服务"></a>十四、web服务</h3><p>状态码：</p><ul><li><p><strong>1xx</strong> : <em>Informational</em> - 收到请求，继续处理</p></li><li><p><strong>2xx</strong> : <em>成功</em>- 动作被成功接收、理解和接受</p></li><li><p><strong>3xx</strong> : <em>重定向</em>- 必须采取进一步行动才能完成请求</p></li><li><p><strong>4xx</strong> : <em>客户端错误</em>- 请求包含错误的语法或无法完成</p></li><li><p><strong>5xx</strong>： <em>服务器错误</em>- 服务器未能满足明显有效的请求</p></li><li><p><strong>静态 Web 服务器</strong>：服务器响应的内容将是托管文件“原样”。</p></li><li><p><strong>动态 Web 服务器</strong>：由一个 Web 服务器和一个额外的软件组成，通常是一个应用服务器和一个数据库。例如，要生成您在 Web 浏览器中看到的 Web 页面，应用程序服务器可能会用数据库中的内容填充 HTML 模板。因此，我们说服务器响应的内容是动态生成的。</p></li></ul><h4 id="apache2"><a href="#apache2" class="headerlink" title="apache2"></a>apache2</h4><p>Apache 是 Linux 系统上最常用的 Web 服务器。Web 服务器用于为客户端计算机请求的网页提供服务。客户端通常使用 Firefox、Opera、Chromium 或 Internet Explorer 等 Web 浏览器应用程序请求和查看网页.</p><p>用于传输网页的最常用协议是超文本传输协议 (HTTP)。还支持诸如基于安全套接字层的超文本传输协议 (HTTPS) 和文件传输协议 (FTP)（用于上传和下载文件的协议）等协议。</p><p>Apache Web 服务器通常与 MySQL 数据库引擎、超文本预处理器 (PHP) 脚本语言和其他流行的脚本语言（如 Python 和 Perl）结合使用。这种配置被称为 LAMP（Linux、Apache、MySQL 和 Perl&#x2F;Python&#x2F;PHP），它为基于 Web 的应用程序的开发和部署形成了一个强大而健壮的平台。</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>在终端提示符下输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apache2</span><br></pre></td></tr></table></figure><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>Apache2 是通过在纯文本配置文件中放置<em>指令</em>来配置的。这些<em>指令</em>在以下文件和目录之间分开：</p><ul><li><em>apache2.conf：</em> Apache2 的主要配置文件。包含对 Apache2<em>全局的</em>设置。</li><li><em>httpd.conf：</em>历史上主要的 Apache2 配置文件，以 httpd 守护进程命名。在其他发行版（或旧版本的 Ubuntu）中，该文件可能存在。在 Ubuntu 中，所有配置选项已移至<em>apache2.conf</em>及以下引用目录，该文件不再存在。</li><li><em>conf-available：</em>该目录包含可用的配置文件。以前在的所有文件<code>/etc/apache2/conf.d</code>都应移动到<code>/etc/apache2/conf-available</code>.</li><li><em>conf-enabled</em>：<em>持有</em>符号链接*到文件<code>/etc/apache2/conf-available</code>。当配置文件被符号链接时，它将在下次重新启动 apache2 时启用。</li><li><em>envvars：</em>设置Apache2<em>环境</em>变量的文件。</li><li><em>mods-available：</em>此目录包含加载<em>模块</em>和配置它们的配置文件。然而，并非所有模块都有特定的配置文件。</li><li><em>mods-enabled</em>：<em>持有</em>符号链接*到文件<code>/etc/apache2/mods-available</code>。当模块配置文件被符号链接时，它将在下次重新启动 apache2 时启用。</li><li><em>ports.conf：</em>包含确定 Apache2 正在侦听的 TCP 端口的指令。</li><li><em>sites-available:<em>：</em>此目录包含 Apache2</em>虚拟主机的*配置文件。虚拟主机允许为具有单独配置的多个站点配置 Apache2。</li><li><em>sites-enabled</em>：<em>与</em>mods-enabled一样，<code>sites-enabled</code>包含指向<code>/etc/apache2/sites-available</code>目录的符号链接。类似地，当sites-available 中的配置文件被符号链接时，一旦Apache2 重新启动，由它配置的站点将处于活动状态。</li><li><em>magic：</em>根据文件的前几个字节确定 MIME 类型的说明。</li></ul><p>新建站点或虚拟主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/mynewsite.conf</span><br></pre></td></tr></table></figure><p><strong>最终要访问的域名或IP和&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;中.conf文件同名</strong></p><p>更改默认监听端口在：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/apache2/ports.conf</span><br></pre></td></tr></table></figure><p>您可能还希望您的站点响应<code>www.mynewsite.com</code>，因为许多用户会认为 www 前缀是合适的。为此使用<em>ServerAlias</em>指令。您还可以在 ServerAlias 指令中使用通配符。</p><p>例如，以下配置将使您的站点响应任何以*.mynewsite.com*结尾的域请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerAlias *.mynewsite.com</span><br></pre></td></tr></table></figure><p>默认站点位置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html</span><br></pre></td></tr></table></figure><p>示例：将80端口重定向到443端口</p><p>&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;10.4.7.142.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">   ServerName 10.4.7.142</span><br><span class="line">   DocumentRoot /var/www/10.4.7.142</span><br><span class="line"></span><br><span class="line">   SSLEngine on</span><br><span class="line">   SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt</span><br><span class="line">   SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName 10.4.7.142</span><br><span class="line">    Redirect / https://10.4.7.142/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>站点主页：</p><p>&#x2F;var&#x2F;www&#x2F;10.4.7.142&#x2F;index.html</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;it worked!&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>自签名证书需要自行创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/ssl/certs/apache-selfsigned.crt 和/etc/ssl/private/apache-selfsigned.key</span><br></pre></td></tr></table></figure><p>开启应用配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite l0.4.7.142</span><br><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure><p>禁用站点配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo a2dissite 10.4.7.142</span><br><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure><p>启动ssl模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod ssl</span><br></pre></td></tr></table></figure><p>您可以通过<code>https://your_hostname/url/</code>在浏览器地址栏中键入来访问安全服务器页面。</p><h3 id="十五、密码管理"><a href="#十五、密码管理" class="headerlink" title="十五、密码管理"></a>十五、密码管理</h3><h4 id="root密码忘记重置"><a href="#root密码忘记重置" class="headerlink" title="root密码忘记重置"></a>root密码忘记重置</h4><p>重启系统 按F1进入。</p><p>重启Ubuntu 在启动界面选择 （高级）</p><p>-》</p><p>选择 recovery mode</p><p>-》</p><p>首先重建GRUB引导，否则改密码可能会出现 <strong>Authentication token manipulation error</strong> 错误</p><p>-》</p><p>完成后回车，继续选择root</p><p>接下来输入，按照提示修改密码就可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p>修改完成后，重启服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="十六、ubuntu20-04-进入命令行模式"><a href="#十六、ubuntu20-04-进入命令行模式" class="headerlink" title="十六、ubuntu20.04 进入命令行模式"></a>十六、ubuntu20.04 进入命令行模式</h3><p>启动时禁用GUI</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default multi-user</span><br></pre></td></tr></table></figure><p>重新启动或退出当前会话以退出GUI:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnome-session-quit</span><br></pre></td></tr></table></figure><p><strong>恢复图形模式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default graphical</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu系统使用说明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh相关说明</title>
      <link href="/2022/01/02/ssh%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/01/02/ssh%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="SSH服务"><a href="#SSH服务" class="headerlink" title="SSH服务"></a>SSH服务</h2><h3 id="SSH服务协议说明"><a href="#SSH服务协议说明" class="headerlink" title="SSH服务协议说明"></a>SSH服务协议说明</h3><p>SSH 是 <strong>Secure Shell Protocol</strong> 的简写，由 IETF 网络工作小组（Network Working Group )制定；在进行数据传输之前，SSH先对联机数据包通过加密技术进行加密处理，加密后在进行数据传输。确保了传递的数据安全。</p><p>SSH是专为远程登录会话和其他网络服务提供的安全性协议。利用 SSH 协议可以有效的防止远程管理过程中的信息泄露问题，在当前的生产环境运维工作中，绝大多数企业普遍采用SSH协议服务来代替传统的不安全的远程联机服务软件，如telnet(23端口，非加密的)等。</p><p>在默认状态下，SSH服务主要提供两个服务功能：</p><p>一是提供类似telnet远程联机服务器的服务，即上面提到的SSH服务。</p><p>另一个是类似FTP服务的sftp-server,借助SSH协议来传输数据的.提供更安全的SFTP服务(vsftp，proftp)。</p><h3 id="SSH加密技术说明"><a href="#SSH加密技术说明" class="headerlink" title="SSH加密技术说明"></a>SSH加密技术说明</h3><p>当前，网络上的数据包加密技术一般是通过所谓的一对公钥与私钥（PublickeyandPivatekey)组合成的密钥对进行加密与解密操作。如下图，A-Server要给B_Client传数据，首先会通过本地的公钥加密后再到发到网络上传输。而加密的数据到达B_Client端后，再经由B_Client本地的私钥将加密的数据解密出来。ssh认证连接的过程如下</p><p><img src="/img/postimages/ssh%E8%AE%A4%E8%AF%81%E8%BF%9E%E6%8E%A5%E7%9A%84%E8%BF%87%E7%A8%8B.webp" alt="ssh认证连接的过程"></p><p><strong>ssh实现安全链接建立，利用钥匙和锁头</strong></p><ol><li><p>钥匙&#x3D;私钥 锁头&#x3D;公钥，私钥可以解密公钥。</p></li><li><p>公钥可以再网络中传输，私钥再本地主机保存。</p></li></ol><h3 id="ssh加密算法"><a href="#ssh加密算法" class="headerlink" title="ssh加密算法"></a>ssh加密算法</h3><p>v1 漏洞密钥不更换。</p><p>v2 定期更换密钥。</p><p>利用Diffie-Hellman机制定期更新密钥。</p><h3 id="ssh知识要点"><a href="#ssh知识要点" class="headerlink" title="ssh知识要点"></a>ssh知识要点</h3><p> ssh是安全的<strong>加密</strong>协议，用于远程链接linux服务器</p><p> ssh 默认端口是22，安全协议版本sshv2，出来2之外还有1（有漏洞）</p><p> ssh服务端主要包括两个服务功能 ssh远程链接和sftp服务</p><p> linux ssh 客户端包括ssh 远程链接命令，以及远程拷贝scp命令等。</p><h2 id="SSH服务软件详细说明"><a href="#SSH服务软件详细说明" class="headerlink" title="SSH服务软件详细说明"></a>SSH服务软件详细说明</h2><h3 id="什么是ssh服务"><a href="#什么是ssh服务" class="headerlink" title="什么是ssh服务"></a>什么是ssh服务</h3><p>SSH服务端是一个守护讲程 (daemon).它在后台运行并响应来自客户端的连接请求。 SSH服务端的进程名为sshd，负责实时监听远程SSH客户端的远程连接请求，并进行处理，一般包括公共密钥认证、密钥交换、对称密钥加密和非安全连接等。这个SSH服务就是我们前面基础系统优化中保留开机自启动的服务之。</p><p>ssh客户端包含ssh以及像scp(远程拷贝） slogin(远程登陆) sftp(安全FTP文件传输）等应用程序。</p><p>ssh的工作机制大致是本地的ssh客户端先发送一个连接请求到远程的ssh服务端，服务端检查连接的客户端发送的数据包和IP地址，如果确认合法，就会发送密钥给 SSH的客户端，此时，客户端本地再将密钥发回给服务端，自此连接建立。</p><h3 id="ssh软件安装"><a href="#ssh软件安装" class="headerlink" title="ssh软件安装"></a>ssh软件安装</h3><p><strong>客户端</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf <span class="string">&#x27;which ssh&#x27;</span></span><br></pre></td></tr></table></figure><p>openssh-clients-5.3p1-122.el6.x86_64</p><p><strong>服务端软件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf <span class="string">&#x27;which sshd&#x27;</span></span><br></pre></td></tr></table></figure><p>openssh-server-5.3p1-122.el6.x86_64</p><h3 id="openssh-clinets-软件的主要内容"><a href="#openssh-clinets-软件的主要内容" class="headerlink" title="openssh-clinets 软件的主要内容"></a>openssh-clinets 软件的主要内容</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql openssh-clients</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/etc/ssh/ssh_config     ---ssh客户端配置文件</span><br><span class="line"></span><br><span class="line">/usr/bin/.ssh.hmac</span><br><span class="line"></span><br><span class="line">/usr/bin/scp         ---远程复制命令</span><br><span class="line"></span><br><span class="line">/usr/bin/sftp         ---远程文件传输服务</span><br><span class="line"></span><br><span class="line">/usr/bin/slogin       ---远程登陆命令</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh         ---ssh远程登陆管理主机</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-add</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-agent</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-copy-id     ---ssh服务分发公钥命令</span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-keyscan</span><br></pre></td></tr></table></figure><h3 id="openssh-server-软件的主要内容"><a href="#openssh-server-软件的主要内容" class="headerlink" title="openssh-server 软件的主要内容"></a>openssh-server 软件的主要内容</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql openssh-server</span><br></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;sshd   #ssh服务启动脚本</p><p>&#x2F;etc&#x2F;ssh&#x2F;sshd_config    #ssh服务配置文件</p><p>&#x2F;etc&#x2F;sysconfig&#x2F;sshd    #ssh创建密钥有关</p><p>&#x2F;usr&#x2F;sbin&#x2F;.sshd.hmac    #ssh加密算法有关文件</p><p>&#x2F;usr&#x2F;sbin&#x2F;sshd       #ssh服务进程启动命令</p><p><strong>注意：****要使用sshd采用绝对路径进行启动</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshd</span><br></pre></td></tr></table></figure><p>sshd re-exec requires execution with an absolute path</p><h2 id="ssh服务配置文件说明"><a href="#ssh服务配置文件说明" class="headerlink" title="ssh服务配置文件说明"></a>ssh服务配置文件说明</h2><ol><li><p>配置文件中所有注释信息，表示默认参数配置</p></li><li><p>配置文件中#空格 后面内容表示说明信息</p></li></ol><p>​       #参数 表示配置参数信息</p><ol start="3"><li>配置文件参数信息修改后，一旦变为注释，即还原为默认配置</li></ol><h3 id="ssh服务的配置文件路径"><a href="#ssh服务的配置文件路径" class="headerlink" title="ssh服务的配置文件路径"></a>ssh服务的配置文件路径</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>修改SSH服务的运行参数，是通过修改配置文件**&#x2F;etc&#x2F;ssh&#x2F;sshd_config**实现的。</p><p>一般来说SSH服务使用默认的配置已经能够很好的工作了，如果对安全要求不高，仅仅提供SSH服务的情况，可以不需要修改任何配置。</p><h3 id="配置文件中常用配置说明"><a href="#配置文件中常用配置说明" class="headerlink" title="配置文件中常用配置说明"></a>配置文件中常用配置说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="variable">$OpenBSD</span>: sshd_config,v 1.80 2008/07/02 02:24:18 djm Exp $</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">This is the sshd server system-wide configuration file.  See</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">sshd_config(5) <span class="keyword">for</span> more information.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">This sshd was compiled with PATH=/usr/local/bin:/bin:/usr/bin</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">The strategy used <span class="keyword">for</span> options <span class="keyword">in</span> the default sshd_config shipped with</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">OpenSSH is to specify options with their default value <span class="built_in">where</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">possible, but leave them commented.  Uncommented options change a</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">default value.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">OpenSSH is to specify options with their default value <span class="built_in">where</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">possible, but leave them commented.  Uncommented options change a</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">default value.</span></span><br><span class="line">Port 25113                   #端口</span><br><span class="line"></span><br><span class="line">ListenAddress 10.0.0.41   #监听地址（本地网卡地址），指定本地网卡那个网卡提供服务</span><br><span class="line"></span><br><span class="line">PermitRootLogin no         #是否允许root用户登陆</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">PermitEmptyPasswords no  <span class="comment">#禁止空密码登陆</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">UseDNS no                   <span class="comment">#不使用DNS</span></span></span><br><span class="line"></span><br><span class="line">GSSAPIAuthentication no    #API认证</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">连接慢的解决</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">AddressFamily any         <span class="comment">#指定监听ipv4地址，或是ipv6地址，或者所有都监听</span></span></span><br></pre></td></tr></table></figure><p><strong>配置文件内容说明</strong></p><p>井号(<strong>#</strong>)注释的参数信息为默认配置</p><p>井号(<strong>#</strong>)后面有空格的为描述信息</p><p>井号(<strong>#</strong>)后面没有空格的为参数信息</p><p><strong>另外：</strong>配置文件参数信息修改后，一旦变为注释，即还原为默认配置.</p><p><strong>语法格式有错误</strong> <strong>↓</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshd -t /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;ssh&#x2F;sshd_config: line 50: Bad configuration option: uthorizedKeysFile</p><p>&#x2F;etc&#x2F;ssh&#x2F;sshd_config: terminating, 1 bad configuration options</p><p>ssh服务监听参数说明</p><p><img src="/img/postimages/ssh%E6%9C%8D%E5%8A%A1%E7%9B%91%E5%90%AC.webp" alt="ssh服务监听"></p><p>如图所示，sshd_config配置文件中实际监听本地的网卡，并非网络地址</p><p>监听地址只能监听本地网卡上配置的地址，<strong>监听的网卡可以对请求做出相应</strong>，为未监听的网卡不响应请求。</p><h2 id="ssh连接慢解决方法"><a href="#ssh连接慢解决方法" class="headerlink" title="ssh连接慢解决方法"></a>ssh连接慢解决方法</h2><p>vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config  修改几个参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UseDNS noGSSAPIAuthentication no</span><br></pre></td></tr></table></figure><h2 id="ssh-密钥认证方式"><a href="#ssh-密钥认证方式" class="headerlink" title="ssh 密钥认证方式"></a>ssh 密钥认证方式</h2><p><img src="/img/postimages/ssh%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F.webp" alt="ssh密钥认证方式"></p><h2 id="ubuntu-server-20-04-自动登录。"><a href="#ubuntu-server-20-04-自动登录。" class="headerlink" title="ubuntu server 20.04 自动登录。"></a>ubuntu server 20.04 自动登录。</h2><p>效果1：</p><p><img src="/img/postimages/%E6%95%88%E6%9E%9C1.webp" alt="效果1"></p><p>效果2：</p><p><img src="/img/postimages/%E6%95%88%E6%9E%9C2.webp" alt="效果2"></p><p>效果1实现：</p><h3 id="首先指定自动登录用户"><a href="#首先指定自动登录用户" class="headerlink" title="首先指定自动登录用户"></a><strong>首先指定自动登录用户</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/getty.target.wants/getty@tty1.service</span><br></pre></td></tr></table></figure><p><img src="/img/postimages/%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%951.webp" alt="自动登录1"></p><h3 id="再设置免密码登录"><a href="#再设置免密码登录" class="headerlink" title="再设置免密码登录"></a><strong>再设置免密码登录</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/passwd</span><br></pre></td></tr></table></figure><p>将 root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash 中的x去掉，即：root::0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash，如果要指定别的用户可以找到相对应的行，用户名位于第一行。</p><h3 id="允许ssh远程登录"><a href="#允许ssh远程登录" class="headerlink" title="允许ssh远程登录"></a><strong>允许ssh远程登录</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config，找到PermitRootLogin without-password 修改为PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">systemctl restart sshd</span><br><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure><p>效果2：</p><p><strong>每台机器设置hosts</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">10.4.7.70 master</span><br><span class="line">10.4.7.71 worker1</span><br><span class="line">10.4.7.72 worker2</span><br></pre></td></tr></table></figure><p>控制端master 上生成公钥和私钥。三次回车。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">ls </span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts </span><br></pre></td></tr></table></figure><p>将公钥传给被控端&#x2F;root&#x2F;.ssh内</p><p>公钥：id_rsa.pub</p><p>私钥：id_rsa</p><p>将生成的公钥内容写入到authorized_keys（控制端和被控端端都操作）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p>都重启ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshdsystemctl restart ssh</span><br></pre></td></tr></table></figure><p>测试：</p><p>在控制端连被控端看需不需要密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh worker1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux系统服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客建站全过程</title>
      <link href="/2022/01/02/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99%E5%85%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/2022/01/02/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99%E5%85%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><p>使用Hexo+keep+Github Actions+jsdelivr这一套技术实现blog搭建及自动化部署</p><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><p>下载地址：<a href="https://nodejs.org/en">node下载</a> .安装LTS版本。</p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p><strong>我们强烈建议永远安装最新版本的 Hexo，以及 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">推荐的 Node.js 版本</a>。</strong></p><table><thead><tr><th align="left">Hexo 版本</th><th align="left">最低兼容 Node.js 版本</th></tr></thead><tbody><tr><td align="left">5.0+</td><td align="left">10.13.0</td></tr><tr><td align="left">4.1 - 4.2</td><td align="left">8.10</td></tr><tr><td align="left">4.0</td><td align="left">8.6</td></tr><tr><td align="left">3.3 - 3.9</td><td align="left">6.9</td></tr><tr><td align="left">3.2 - 3.3</td><td align="left">0.12</td></tr><tr><td align="left">3.0 - 3.1</td><td align="left">0.10 or iojs</td></tr><tr><td align="left">0.0.1 - 2.8</td><td align="left">0.10</td></tr></tbody></table><h4 id="初始化博客目录"><a href="#初始化博客目录" class="headerlink" title="初始化博客目录"></a>初始化博客目录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init Smithkenny.github.io </span><br><span class="line"><span class="comment"># 这里的Smithkenny换成你自己的英文名</span></span><br></pre></td></tr></table></figure><h4 id="初始化完成后，我们就进入我们的目录"><a href="#初始化完成后，我们就进入我们的目录" class="headerlink" title="初始化完成后，我们就进入我们的目录"></a>初始化完成后，我们就进入我们的目录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Smithkenny.github.io</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="clean一下，然后生成静态页面"><a href="#clean一下，然后生成静态页面" class="headerlink" title="clean一下，然后生成静态页面"></a>clean一下，然后生成静态页面</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><h4 id="把你的网站运行起来"><a href="#把你的网站运行起来" class="headerlink" title="把你的网站运行起来"></a>把你的网站运行起来</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开你的浏览器，输入 <code>localhost:4000</code> 。</p><p>自此，你的个人网站就这么速度的搭建起来了！</p><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>初始化博客后，指定文件夹的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><strong>_config.yml</strong></p><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，您可以在此配置大部分的参数。</p><p>我的配置如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: Peng<span class="string">&#x27;s Blog</span></span><br><span class="line"><span class="string">subtitle: Peng 的个人博客</span></span><br><span class="line"><span class="string">description: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">keywords:</span></span><br><span class="line"><span class="string">author: Haipeng</span></span><br><span class="line"><span class="string">language: zh-CN</span></span><br><span class="line"><span class="string">timezone: Asia/Shanghai</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># URL</span></span><br><span class="line"><span class="string">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;</span>https://username.github.io/project<span class="string">&#x27;</span></span><br><span class="line"><span class="string">url: https://www.haipengv.com</span></span><br></pre></td></tr></table></figure><p><strong>package.json</strong></p><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderer 已默认安装，您可以自由移除。</p><p><strong>scaffolds</strong></p><p><a href="https://hexo.io/zh-cn/docs/writing">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold&#x2F;post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><p><strong>source</strong></p><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><p><strong>themes</strong></p><p><a href="https://hexo.io/zh-cn/docs/themes">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p><h3 id="选择一个主题"><a href="#选择一个主题" class="headerlink" title="选择一个主题"></a><strong>选择一个主题</strong></h3><p>这里可以选择你要的<a href="https://hexo.io/themes/">主题</a>，我选择的是、keep主题，因为它很简洁。</p><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a><strong>下载主题</strong></h4><p>keep主题github地址：<a href="https://github.com/XPoet/hexo-theme-keep">https://github.com/XPoet/hexo-theme-keep</a></p><p><code>keep </code>主题官方文档：<a href="https://keep-docs.xpoet.cn/">https://keep-docs.xpoet.cn/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里使用npm方式安装方便后期进行代码托管维护</span></span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a><strong>配置主题</strong></h4><ul><li><p>主题下载完之后，在你根目录下的 _config.yml 文件中，修改 theme 为你的主题名字</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure></li></ul><p>我这里选择自定义<code>hexo-theme-keep</code>主题，可以参考keep主题<a href="https://keep-docs.xpoet.cn/usage-tutorial/advanced.html#%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7">平滑升级</a></p><p>在博客根目录下的 <code>source</code>目录中新建文件夹<code>_data</code></p><p>将<code>node_modules</code>下的<code>hexo-theme-keep</code>目录中复制出<code>_config.yml</code>文件到<code>source/_data/</code>中，并重命名为<code>keep.yml</code>。</p><p>在<code>keep.yml</code>可根据文档配置对应的属性。</p><h4 id="重新生成和运行"><a href="#重新生成和运行" class="headerlink" title="重新生成和运行"></a><strong>重新生成和运行</strong></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><strong>keep主题</strong></p><p><img src="/img/postimages/keep%E4%B8%BB%E9%A2%98.webp" alt="keep主题"></p><h2 id="博客文章创建"><a href="#博客文章创建" class="headerlink" title="博客文章创建"></a>博客文章创建</h2><p>有两种方式来新建你的博文</p><h3 id="命令形式"><a href="#命令形式" class="headerlink" title="命令形式"></a><strong>命令形式</strong></h3><p>在你的blog目录下使用如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new hello <span class="comment"># 这里的article写上你的文章的名称</span></span><br></pre></td></tr></table></figure><p>你的source&#x2F;_posts下就会生成一个 <code>hello.md</code>文件，在这个文件下就可以写上你的博客内容了。用 Markdown 的语法去写。</p><h3 id="直接新建方式"><a href="#直接新建方式" class="headerlink" title="直接新建方式"></a><strong>直接新建方式</strong></h3><p>直接点的方式就是直接在<code>source/_posts</code>新建一个 Markdown 文件。</p><h4 id="打上标签"><a href="#打上标签" class="headerlink" title="打上标签"></a><strong>打上标签</strong></h4><p>打标签能让你的文章方便检索。</p><p>打开标签功能：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>这时候你的source&#x2F;下生成 tags&#x2F;index.md 文件，我们将其打开，然后把它改成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span> comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这时候你要为你的文章打上标签就可以在文章的头部写上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Java 安装与使用</span><br><span class="line"><span class="built_in">date</span>: 2021-12-28 15:36:27</span><br><span class="line">tags: Java</span><br><span class="line">tags: &lt;&lt;其他你想打的标签&gt;&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a><strong>添加分类</strong></h4><p>分类，归档，是你博客的特性之一。</p><p>打开分类功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>这说你的source目录下生成 categories&#x2F;index.md 文件，我们将其打开，把它改成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这时候你就可以给你的文章归类存档了，使用方式就是在你的文章的头部加上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Java 安装与使用</span><br><span class="line"><span class="built_in">date</span>: 2021-12-28 15:36:27</span><br><span class="line">tags: Java</span><br><span class="line">categories: Java</span><br><span class="line">categories: &lt;&lt;其他你想分的类&gt;&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>注意：标签和分类要确定你的配置文件 _config.yml 是否有打开了 tag_dir: tags 和 category_dir: categories。另外，Markdown 的语法是写作最优雅最简洁最简单的，如果之前没用过的建议去学一下<a href="https://www.appinn.com/markdown/">Markdown 语法说明</a>，一般一个钟左右就能掌握。因为它和HTML那样简单。</p><h4 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a><strong>添加评论系统</strong></h4><p>keep主题提供评论系统，详情见<a href="https://keep-docs.xpoet.cn/usage-tutorial/configuration-guide.html#comment">keep comment</a></p><p>这里先暂时不开启评论了。因为发现创建完之后还是无法评论。</p><h4 id="部署到线上"><a href="#部署到线上" class="headerlink" title="部署到线上"></a><strong>部署到线上</strong></h4><p>可以通过<code>GitHub Pages</code>来创建免费的线上访问地址。</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h2 id="创建Github-pages-仓库"><a href="#创建Github-pages-仓库" class="headerlink" title="创建Github pages 仓库"></a>创建Github pages 仓库</h2><p>创建一个<code>xxx.github.io</code>的 public 仓库，这里的xxx写你的名字，比如我写的是 <a href="https://smithkenny.github.io/">Smithkenny.github.io</a>,那么到时我就可以通过 <code>Smithkenny.github.io</code> 来访问我的网站了。 创建完成之后，那么你就有自己的 Git 地址了。</p><p>安装hexo-deployer-git</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Smithkenny.github.io</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="配置你的Git"><a href="#配置你的Git" class="headerlink" title="配置你的Git"></a>配置你的Git</h3><p>打开你的配置文件<code>_config.yml</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/xxx/xxx.github.io.git // 输入你的git地址</span><br></pre></td></tr></table></figure><p>github地址查看：</p><p><img src="/img/postimages/public-%E5%9C%B0%E5%9D%80.webp" alt="public-地址"></p><h3 id="推送你的网站到Github上"><a href="#推送你的网站到Github上" class="headerlink" title="推送你的网站到Github上"></a>推送你的网站到Github上</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br><span class="line"><span class="comment"># d 就是 deploy，部署上去的意思。</span></span><br></pre></td></tr></table></figure><h3 id="访问你的网站"><a href="#访问你的网站" class="headerlink" title="访问你的网站"></a>访问你的网站</h3><p>直接在浏览器输入你的 <code>xxx.github.io</code> 就可以访问了。</p><h4 id="绑定自己的域名"><a href="#绑定自己的域名" class="headerlink" title="绑定自己的域名"></a><strong>绑定自己的域名</strong></h4><h5 id="添加-CNAME-文件"><a href="#添加-CNAME-文件" class="headerlink" title="添加 CNAME 文件"></a>添加 CNAME 文件</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入sources</span></span><br><span class="line"><span class="built_in">cd</span> sources</span><br><span class="line"><span class="comment"># 创建CNAME文件，写入自己的域名，如：www.haipengv.com</span></span><br><span class="line"><span class="built_in">touch</span> CNAME</span><br></pre></td></tr></table></figure><h5 id="在你的域名商后台进行-DNS-解析添加两条记录"><a href="#在你的域名商后台进行-DNS-解析添加两条记录" class="headerlink" title="在你的域名商后台进行 DNS 解析添加两条记录"></a>在你的域名商后台进行 DNS 解析添加两条记录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主机记录： @</span><br><span class="line">  记录类型：A</span><br><span class="line">  记录值：ip1 或者 ip2</span><br><span class="line">主机记录： www</span><br><span class="line">  记录类型： CNAME</span><br><span class="line">  记录值： Smithkenny.github.io  (这里就是你的github仓库名称)</span><br></pre></td></tr></table></figure><h3 id="GitHub-设置域名"><a href="#GitHub-设置域名" class="headerlink" title="GitHub 设置域名"></a>GitHub 设置域名</h3><p>在你的 GitHub 设置域名，在你的 GitHub 博客项目中点击 Settings，在 GitHub Pages 下的 Custom domain 写上你的域名，然后 save。</p><p><img src="/img/postimages/github%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.webp" alt="github域名绑定"></p><h3 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h3><p>根据之前的步骤我们使用 Hexo + <a href="https://github.com/XPoet/hexo-theme-keep">Keep</a> 主题搭建了一个在线博客，下面教你如何使用 GitHub Actions 将博客自动部署到 GitHub Pages。以下内容参考了keep主题作者的<a href="https://juejin.cn/post/6943895271751286821">博文</a>.</p><h4 id="GitHub-Actions"><a href="#GitHub-Actions" class="headerlink" title="GitHub Actions"></a>GitHub Actions</h4><h5 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h5><p>创建一个<strong>私有仓库</strong>用来存储 Hexo 项目源代码。（保证你的重要信息不泄露）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myblog-source仓库的master分支用来存放源代码</span><br></pre></td></tr></table></figure><p>注意私有仓库默认分支已经变为main。需要更改名称为master</p><p><img src="/img/postimages/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%BB%98%E8%AE%A4%E5%90%8D%E7%A7%B0%E6%9B%B4%E6%94%B91.webp" alt="私有仓库默认名称更改1"></p><p><img src="/img/postimages/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%BB%98%E8%AE%A4%E5%90%8D%E7%A7%B0%E6%9B%B4%E6%94%B92.webp" alt="私有仓库默认名称更改2"></p><p><strong>创建私有仓库</strong></p><p><img src="/img/postimages/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA.webp" alt="私有仓库创建"></p><p><strong>公共仓库</strong>用来存储编译之后的静态页面。（这里就不用在创建仓库了，之前我们部署过github pages到xxx.github.io）</p><p>xxx.github.io这个仓库的master分支用来存储静态文件</p><p>当私有仓库的 <code>master</code> 有内容 <code>push</code> 进来时（例如：主题文件，文章 md 文件、图片等）， 会触发 GitHub Actions 自动编译并部署到公共仓库的 <code>master</code>分支。</p><h5 id="创建-GitHub-Token"><a href="#创建-GitHub-Token" class="headerlink" title="创建 GitHub Token"></a>创建 GitHub Token</h5><ul><li>创建一个有 <strong>repo</strong> 和 <strong>workflow</strong> 权限的 <a href="https://github.com/settings/tokens/new">GitHub Token</a> 。</li></ul><p><img src="/img/postimages/%E4%B8%AA%E4%BA%BAtoken2.webp" alt="个人token2"></p><p><img src="/img/postimages/%E4%B8%AA%E4%BA%BAtoken3.webp" alt="个人token3"></p><p><img src="/img/postimages/%E4%B8%AA%E4%BA%BAtoken1.webp" alt="个人token1"></p><ul><li>新生成的 Token 只会显示一次，如有遗失，重新生成即可。</li></ul><h5 id="创建-repository-secret"><a href="#创建-repository-secret" class="headerlink" title="创建 repository secret"></a>创建 repository secret</h5><ul><li>将上面生成的 Token 添加到私有仓库的 <code>Secrets</code> 里，并将这个新增的 <code>secret</code> 命名为 <code>HEXO_DEPLOY</code> （名字无所谓，看你喜欢）。</li><li>步骤：私有仓库 -&gt; <code>settings</code> -&gt; <code>Secrets</code> -&gt; <code>New repository secret</code>。</li></ul><p><img src="/img/postimages/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93secrets.webp" alt="私有仓库secrets"></p><p>新创建的 secret <code>HEXO_DEPLOY</code> 在 Actions 配置文件要用到，需跟配置文件保持一致！</p><h5 id="添加-Actions-配置文件"><a href="#添加-Actions-配置文件" class="headerlink" title="添加 Actions 配置文件"></a>添加 Actions 配置文件</h5><ol><li>在你的 Hexo 项目根目录下创建 <code>.github</code> 文件夹。</li><li>在 <code>.github</code> 文件夹下创建 <code>workflows</code> 文件夹。</li><li>在 <code>workflows</code> 文件夹下创建 <code>hexo-deploy.yml</code> 文件。</li></ol><p><code>hexo-deploy.yml</code> 文件配置如下：(这里是关键)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">deploying</span> <span class="string">Hexo</span> <span class="string">project</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">pages</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># master 分支有 push 行为时就触发这个 action</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@master</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">theme-keep/hexo-deploy-github-pages-action@master</span> <span class="comment"># 使用专门部署 Hexo 到 GitHub pages 的 action</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">PERSONAL_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY</span> <span class="string">&#125;&#125;</span> <span class="comment"># secret 名</span></span><br><span class="line">          <span class="attr">PUBLISH_REPOSITORY:</span> <span class="string">Smithkenny/Smithkenny.github.io</span> <span class="comment"># 公共仓库，格式：GitHub 用户名/仓库名</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">master</span> <span class="comment"># 分支，我这里是推送到Smithkenny/Smithkenny.github.io仓库里的master分支(根据自己的仓库进行填写)</span></span><br><span class="line">          <span class="attr">PUBLISH_DIR:</span> <span class="string">./public</span> <span class="comment"># 部署 public 目录下的文件</span></span><br></pre></td></tr></table></figure><h5 id="自动部署触发流程"><a href="#自动部署触发流程" class="headerlink" title="自动部署触发流程"></a>自动部署触发流程</h5><ul><li>修改你的 Hexo 博客源代码（例如：增加文章、修改文章、更改主题、修改主题配置文件等等）。</li><li>把你修改过的 Hexo 项目内容（只提交修改过的那部分内容） <code>push</code> 到 GitHub 公共仓库（本例：Smithkenny.github.io）的 <code>master</code> 分支。</li><li>GitHub Actions 检测到 <code>master</code> 分支有内容 <code>push</code> 进来，会自动执行 action 配置文件的命令，将 Hexo 项目编译成静态页面，然后部署到私有仓库的 <code>master</code> 分支。</li><li>在私有仓库的 Actions 可以查看到你配置的 action。</li><li>这样的好处是源码保存在线上私有仓库中，具有可移植性。更改源码后不用再手动重新部署、上传。</li></ul><p><img src="/img/postimages/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93action.webp" alt="私有仓库action"></p><h3 id="源码上传"><a href="#源码上传" class="headerlink" title="源码上传"></a><strong>源码上传</strong></h3><h4 id="上传前的准备"><a href="#上传前的准备" class="headerlink" title="上传前的准备"></a>上传前的准备</h4><h5 id="配置ssh-key"><a href="#配置ssh-key" class="headerlink" title="配置ssh key"></a>配置ssh key</h5><p>win10 ssh key 默认在当前用户的.ssh文件夹内。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;xxx@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>密钥路径：<br>.ssh\id_rsa.pub 公钥<br>.ssh\id_rsa 私钥</p><h5 id="打开你的github主页，进入个人设置-gt-SSH-and-GPG-keys-gt-New-SSH-key："><a href="#打开你的github主页，进入个人设置-gt-SSH-and-GPG-keys-gt-New-SSH-key：" class="headerlink" title="打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key："></a>打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</h5><p>名字：git-push<br>密钥输入<strong>公钥</strong>内容。<br>测试时是否成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h5 id="在网站根路径下右键Git-Bash-Here-通过git-命令来上传源码到私有仓库。"><a href="#在网站根路径下右键Git-Bash-Here-通过git-命令来上传源码到私有仓库。" class="headerlink" title="在网站根路径下右键Git Bash Here,通过git 命令来上传源码到私有仓库。"></a>在网站根路径下右键Git Bash Here,通过git 命令来上传源码到私有仓库。</h5><h5 id="还需要配置："><a href="#还需要配置：" class="headerlink" title="还需要配置："></a>还需要配置：</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Smithkenny&quot;</span>// 你的github用户名，非昵称</span><br><span class="line">git config --global user.email  <span class="string">&quot;xxx@qq.com&quot;</span>// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><h3 id="上传源码"><a href="#上传源码" class="headerlink" title="上传源码"></a><strong>上传源码</strong></h3><h4 id="初始化git"><a href="#初始化git" class="headerlink" title="初始化git"></a>初始化git</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="将改动添加到暂存区"><a href="#将改动添加到暂存区" class="headerlink" title="将改动添加到暂存区"></a>将改动添加到暂存区</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br></pre></td></tr></table></figure><h4 id="添加说明"><a href="#添加说明" class="headerlink" title="添加说明"></a>添加说明</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;代码上传&quot;</span></span><br></pre></td></tr></table></figure><h4 id="将本地更改推送到远程master分支"><a href="#将本地更改推送到远程master分支" class="headerlink" title="将本地更改推送到远程master分支"></a>将本地更改推送到远程master分支</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>如果报错，说明本地仓库代码和私有仓库代码不一致，可以用以下方式解决。</p><p>先从私有库（myblog-source）把代码拉下来，会自动合并的（不用操心）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>可以通过如下命令进行代码合并</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master </span><br></pre></td></tr></table></figure><p>再将本地更改推送到远程master分支</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master </span><br></pre></td></tr></table></figure><p>每次新增、修改文章都需要执行以下代码一次：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . （将改动添加到暂存区）</span><br><span class="line">git commit -m <span class="string">&quot;提交说明&quot;</span></span><br><span class="line">git push origin master 将本地更改推送到远程master分支。</span><br></pre></td></tr></table></figure><p>然后私有仓库中的action检测到有代码改动会自动重新部署。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a><strong>总结：</strong></h3><p>笔记本生成id_rsa是私钥，id_rsa.pub是公钥。公钥可以用记事本打开<br>配置路径：github网站–&gt;Settings–&gt;SSH and GPG keys 配置公钥。用于笔记本和github连接。<br>github action 执行流程，公共仓展示静态页面，私有仓保存文章，源代码等等。action检测到私有仓库内变动，会自动打包部署到公共仓。不用在笔记本本地再部署，上传。</p><p>上传代码需要用笔记本创建的私钥和私有仓库中secrects 中的公钥进行匹配。</p><p>hexo g 会在网站的根路径下创建public目录和db.json</p><p>hexo clean 会删除hexo g 执行后所创建的内容。</p><h3 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a><strong>遇到的问题</strong>：</h3><p>源代码上传后，页面使用的主题配置没生效，修改过的配置都没生效，logo也不显示，绑定的自定义域名也失效了。</p><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><strong>解决方法</strong>：</h4><p>在网站根路径下的source文件夹内创建_data文件夹，把keep主题配置 _config.yml复制一份命名为keep.yml。</p><p>如果以后配置有所更改，需要_data文件夹内的keep.yml和keep主题内的 _config.yml文件保持一致。</p><p>source文件夹内新建images 文件夹，用来存放图片。再创建CNAME 文件，文件内填写个人域名。如：haiewebpv.com </p><p>再次上传源码。等待部署完成后查看网站。</p><p>D:\newblog\source\keep.yml 文件为D:\newblog\node_modules\hexo-theme-keep_config.yml的备份文件。平滑升级hexo后<br>_config.yml会重置，所以要备份。</p><p>站点根路径：</p><p>D:\newblog\</p><p>D:\newblog\source 内文件夹：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">_data</span><br><span class="line">_posts</span><br><span class="line">about</span><br><span class="line">categories</span><br><span class="line">images</span><br><span class="line">links</span><br><span class="line"></span><br><span class="line">CNAME <span class="comment"># 文件</span></span><br></pre></td></tr></table></figure><p>keep 主题配置文件路径</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\newblog\node_modules\hexo-theme-keep\_config.yml</span><br></pre></td></tr></table></figure><p>如何访问网站？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://smithkenny.github.io/</span><br><span class="line">https://haipengcv.com</span><br></pre></td></tr></table></figure><h3 id="新上传文章流程"><a href="#新上传文章流程" class="headerlink" title="新上传文章流程"></a><strong>新上传文章流程</strong></h3><h4 id="在网站根目录内，右键git-bash-here-并创建文章标题"><a href="#在网站根目录内，右键git-bash-here-并创建文章标题" class="headerlink" title="在网站根目录内，右键git bash here 并创建文章标题"></a>在网站根目录内，右键git bash here 并创建文章标题</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new title <span class="string">&quot;new-article&quot;</span></span><br></pre></td></tr></table></figure><p>上述命令的结果是在 <code>./hexo/source/_posts</code> 路径下新建了一个 new-article.md&#96; 文件。</p><h4 id="进入到-x2F-source-x2F-posts内编辑文章内容。"><a href="#进入到-x2F-source-x2F-posts内编辑文章内容。" class="headerlink" title="进入到&#x2F;source&#x2F;_posts内编辑文章内容。"></a>进入到&#x2F;source&#x2F;_posts内编辑文章内容。</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span>/_posts</span><br><span class="line">vim new-article.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: new-article</span><br><span class="line"><span class="built_in">date</span>: 2022-01-01 18:11:25</span><br><span class="line">tags:</span><br><span class="line">categories：</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>也可以用typora打开，直接编辑。也可以创建分类categories 便于搜索。</p><h3 id="博客中的图片处理"><a href="#博客中的图片处理" class="headerlink" title="博客中的图片处理"></a><strong>博客中的图片处理</strong></h3><p>有以下两种方式保存图片：</p><h4 id="将图片上传到网站根路径source-x2F-images中，在文章中引用相对路径。"><a href="#将图片上传到网站根路径source-x2F-images中，在文章中引用相对路径。" class="headerlink" title="将图片上传到网站根路径source&#x2F;images中，在文章中引用相对路径。"></a>将图片上传到网站根路径source&#x2F;images中，在文章中引用相对路径。</h4><h4 id="使用网路路径，然后在文章中引用该路径。"><a href="#使用网路路径，然后在文章中引用该路径。" class="headerlink" title="使用网路路径，然后在文章中引用该路径。"></a>使用网路路径，然后在文章中引用该路径。</h4><p><strong>下面来说明如何使用网路路径</strong>：</p><p>搭建个人图床，使用github公有仓库充当云存储。新建公有仓库，起名为Myimage。</p><p>并在仓库内创建一个img文件夹并加以说明。</p><p><img src="/img/postimages/%E5%9B%BE%E5%BA%8A1.webp" alt="图床1"></p><h5 id="创建个人访问令牌"><a href="#创建个人访问令牌" class="headerlink" title="创建个人访问令牌"></a><strong>创建个人访问令牌</strong></h5><p>获取路径</p><p><strong>Settings</strong> –&gt; <strong>Developer settings</strong>–&gt; <strong>Personal access tokens</strong> –&gt; <strong>New personal access token</strong> –&gt; <strong>copy token</strong></p><h5 id="jsdelivr充当cdn，使图片访问更快"><a href="#jsdelivr充当cdn，使图片访问更快" class="headerlink" title="jsdelivr充当cdn，使图片访问更快"></a><strong>jsdelivr充当cdn，使图片访问更快</strong></h5><p><a href="https://www.jsdelivr.com/?docs=gh">https://www.jsdelivr.com/?docs=gh</a></p><p>获取cdn地址</p><p><img src="/img/postimages/cdn1.webp" alt="cdn1"></p><p><strong>举例：</strong></p><p>我的这个图床仓库名是Smithkenny&#x2F;Myimage</p><p><a href="https://github.com/Smithkenny/Myimage">https://github.com/Smithkenny/Myimage</a></p><p><strong>cdn地址为：</strong></p><p><a href="https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/%E5%9B%BE%E7%89%87%E5%90%8D%E7%A7%B0.webp">https://fastly.jsdelivr.net/gh/Smithkenny/Myimage/img/图片名称.webp</a></p><p><strong>使用picGo充当图片git push 工具</strong></p><p><a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p><p>安装地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p><img src="/img/postimages/picgo.webp" alt="picgo"></p><h4 id="配置picGo"><a href="#配置picGo" class="headerlink" title="配置picGo"></a><strong>配置picGo</strong></h4><p><img src="/img/postimages/picgo1.webp" alt="picgo1"></p><p>将github图床设置为默认图床。</p><h5 id="上传图片处理"><a href="#上传图片处理" class="headerlink" title="上传图片处理"></a><strong>上传图片处理</strong></h5><p>PicGo支持批量和单个的图片上传</p><ul><li>批量上传，把图片批量拖拽到大红框</li><li>单个上传，复制后，点击小红框</li></ul><p><img src="/img/postimages/picgo2.webp" alt="picgo2"></p><p>文章中使用图床中的图片格式</p><p>中括号小括号</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h3><p><strong>keep</strong>主题相关设置</p><p>设置标题、作者、url自定义logo、背景图片。开启百分比滚动条。添加个人联系方式。增加categories、links、about。开启文章预览。字数统计、作者标签。文章中代码可复制、启用左侧目录。开启文章最下方版权所有，开启全局搜索功能、开启rss订阅、cdn、慢加载功能。</p><h3 id="更换电脑如何上传文章到GitHub"><a href="#更换电脑如何上传文章到GitHub" class="headerlink" title="更换电脑如何上传文章到GitHub"></a>更换电脑如何上传文章到GitHub</h3><h4 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h4><p>新电脑需要安装git、hexo。并把旧电脑用户目录下.ssh文件夹内公钥和私钥复制出来到新电脑的用户目录的.ssh文件夹内。</p><h4 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h4><p>创建myblog文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/e/myblog</span><br></pre></td></tr></table></figure><p>右键git bush here。初始化git，会自动在&#x2F;e&#x2F;myblog目录内创建.git文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><p>测试笔记本到GitHub私有仓库的连通性。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">Hi Smithkenny! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>添加信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Smithkenny&quot;</span>// 你的github用户名，非昵称</span><br><span class="line">git config --global user.email  <span class="string">&quot;xxx@qq.com&quot;</span>// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>配置远端仓库并远程拉取源代码到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:Smithkenny/myblog-source.git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: 345, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (345/345), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (248/248), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 345 (delta 167), reused 231 (delta 71), pack-reused 0</span><br><span class="line">Receiving objects: 100% (345/345), 1.87 MiB | 105.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (167/167), <span class="keyword">done</span>.</span><br><span class="line">From github.com:Smithkenny/myblog-source</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line"> * [new branch]      master     -&gt; origin/master</span><br></pre></td></tr></table></figure><p>然后就可以修改文章，最后上传文章了。步骤见新文章上传流程。</p><h4 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h4><p>使用拉取源码到本地时，当本地的环境和远端环境中某些文件名字相同内容不同时，会出现远端部分文件拉取失败。此时只要删除提示中本地的文件，再次执行拉取命令即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: 360, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (360/360), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (256/256), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 360 (delta 178), reused 242 (delta 78), pack-reused 0</span><br><span class="line">Receiving objects: 100% (360/360), 1.87 MiB | 1.33 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (178/178), <span class="keyword">done</span>.</span><br><span class="line">From github.com:Smithkenny/myblog-source</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line"> * [new branch]      master     -&gt; origin/master</span><br><span class="line">error: The following untracked working tree files would be overwritten by merge:</span><br><span class="line">        .github/dependabot.yml</span><br><span class="line">        .gitignore</span><br><span class="line">        _config.landscape.yml</span><br><span class="line">        _config.yml</span><br><span class="line">        package-lock.json</span><br><span class="line">        package.json</span><br><span class="line">        scaffolds/draft.md</span><br><span class="line">        scaffolds/page.md</span><br><span class="line">        scaffolds/post.md</span><br><span class="line">        themes/.gitkeep</span><br><span class="line">Please move or remove them before you merge.</span><br><span class="line">Aborting</span><br></pre></td></tr></table></figure><p>清空github上私有仓库源代码，将本地重新创建好的博客源码上传到远端私有仓库。</p><h4 id="github-actions报错"><a href="#github-actions报错" class="headerlink" title="github actions报错"></a>github actions报错</h4><p>需要重新创建博客源码文件夹，重复以下操作。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1.初始化博客文件夹,如果初始化缓慢需要设置代理。</span><br><span class="line"><span class="comment">#$ export http_proxy=http://&lt;Windows 主机的 IP 地址&gt;:&lt;代理端口&gt;</span></span><br><span class="line"><span class="comment">#$ export https_proxy=http://&lt;Windows 主机的 IP 地址&gt;:&lt;代理端口&gt;</span></span><br><span class="line"><span class="comment">#使用下面的命令取消代理：</span></span><br><span class="line"><span class="comment">#$ unset http_proxy https_proxy</span></span><br><span class="line">hexo init myblog-source</span><br><span class="line">2.进入到目录</span><br><span class="line"><span class="built_in">cd</span> myblog-source</span><br><span class="line">npm install</span><br><span class="line">3.将旧文件夹内_config.yaml复制到myblog-source内</span><br><span class="line">4.下载主题，使用keep主题</span><br><span class="line">npm install hexo-theme-keep</span><br><span class="line">5.重新生成和运行</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">6.创建标题、分类、归档、友联、关于，在Myblog-source\<span class="built_in">source</span>内新建images文件夹，并分别在旧文件夹下对应位置将内容复制到新博客内</span><br><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;links&quot;</span></span><br><span class="line">7.将旧文件夹<span class="built_in">source</span>\_data复制到\Myblog-source\<span class="built_in">source</span>\_data内</span><br><span class="line">8.将旧文件夹\node_modules\hexo-theme-keep中_config.yml复制到新博客路径\Myblog-source\node_modules\hexo-theme-keep内</span><br><span class="line">9.将旧文件夹根路径下CNAME文件复制到新博客根路径下</span><br><span class="line">10.在新博客文件夹内初始化git，会生成.git文件夹。</span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;代码上传&quot;</span></span><br><span class="line">git push origin master</span><br><span class="line">如果报以下错误：Github <span class="string">&quot;Updates were rejected because the remote contains work that you do not have locally.&quot;</span></span><br><span class="line">则：</span><br><span class="line">查看git远程仓库</span><br><span class="line">git remote -v</span><br><span class="line">没有则使用以下命令添加：</span><br><span class="line">git remote add origin [//your github url]</span><br><span class="line">拉取远程仓库镜像</span><br><span class="line">git pull origin master --allow-unrelated-histories</span><br><span class="line">10.然后再执行以下命令推送到仓库</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;代码上传&quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>报错解决<a href="https://stackoverflow.com/questions/18328800/github-updates-were-rejected-because-the-remote-contains-work-that-you-do-not-h">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人域名注册购买教程</title>
      <link href="/2022/01/02/%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%B4%AD%E4%B9%B0%E6%95%99%E7%A8%8B/"/>
      <url>/2022/01/02/%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%B4%AD%E4%B9%B0%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>namesilo是国外的域名服务商，首次购买和续费价格都很实惠，不用翻墙也可以打开，此外还赠送隐私保护，支付方式支持支付宝、Paypal、Visa 等多种付款方式。</strong></p><p><strong>下面是namesilo购买域名的步骤流程</strong></p><h3 id="登陆https-www-namesilo-com-，注册账号"><a href="#登陆https-www-namesilo-com-，注册账号" class="headerlink" title="登陆https://www.namesilo.com/，注册账号"></a>登陆<a href="https://www.namesilo.com/%EF%BC%8C%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7">https://www.namesilo.com/，注册账号</a></h3><p><img src="/img/postimages/%E6%B3%A8%E5%86%8C.webp" alt="注册"></p><p><img src="/img/postimages/%E6%B3%A8%E5%86%8C2.webp" alt="注册2"></p><h3 id="输入要注册的域名查找、选择、结账"><a href="#输入要注册的域名查找、选择、结账" class="headerlink" title="输入要注册的域名查找、选择、结账"></a>输入要注册的域名查找、选择、结账</h3><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0.webp" alt="域名购买"></p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B02.webp" alt="域名购买2"></p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B03.webp" alt="域名购买3"></p><p>Auto-Renew：设置域名是否自动续费，自行确定，影响不大。</p><p>Privacy Setting：代表域名隐私保护设置，建议设置成 WHOIS Privacy ，反正是免费的。</p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B04.webp" alt="域名购买4"></p><h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h3><p>登录刚刚注册的账号选择my account</p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%901.webp" alt="域名解析1"></p><p><strong>选择accounts domains</strong></p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%902.webp" alt="域名解析2"></p><p><strong>管理域名</strong></p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%903.webp" alt="域名解析3"></p><p><strong>删掉多余的记录</strong></p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%904.webp" alt="域名解析4"></p><p><strong>添加一条CNAME记录，添加一条A记录。A记录可以添加多条。</strong></p><p>CNAME 指向github 的域名</p><p>github域名格式：[用户名].github.io</p><p>A记录指向GIThub域名所解析出来的IP</p><p><img src="/img/postimages/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%905.webp" alt="域名解析5"></p><p><strong>注意：添加后不会立刻生效，此处有说明.</strong></p><p><strong>You can use the form below to manage the DNS settings for the domain(s) listed above. Changes may take up to 15 minutes to completely process. Please keep in mind that correctly modifying the DNS records for this domain is extremely important. Any errors on your part could make your web site, email and other services inoperable. Please only utilize this form if you are comfortable and experienced managing DNS.</strong></p><p><strong>差不多半小时，域名就能解析成功。具体测试是否成功，可以在本地cmd的dos界面 ping 域名，查看IP，或者在一些域名查找对应IP的网站查询。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名注册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>happynewyear</title>
      <link href="/2021/12/31/happynewyear/"/>
      <url>/2021/12/31/happynewyear/</url>
      
        <content type="html"><![CDATA[<p><strong>你好，2022！新年快乐🐣</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java安装与使用</title>
      <link href="/2021/12/28/java%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/12/28/java%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p><strong>系统环境:centos7</strong></p><h2 id="安装之前先查看一下有无系统自带jdk"><a href="#安装之前先查看一下有无系统自带jdk" class="headerlink" title="安装之前先查看一下有无系统自带jdk"></a><strong>安装之前先查看一下有无系统自带jdk</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep java</span><br><span class="line">rpm -qa |grep jdk</span><br><span class="line">rpm -qa |grep gcj</span><br></pre></td></tr></table></figure><h3 id="如果有就使用批量卸载命令"><a href="#如果有就使用批量卸载命令" class="headerlink" title="如果有就使用批量卸载命令"></a><strong>如果有就使用批量卸载命令</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps </span><br></pre></td></tr></table></figure><h2 id="使用yum安装1-8-0版本openjdk"><a href="#使用yum安装1-8-0版本openjdk" class="headerlink" title="使用yum安装1.8.0版本openjdk"></a><strong>使用yum安装1.8.0版本openjdk</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a><strong>查看版本</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line"></span><br><span class="line">openjdk version &quot;1.8.0_312&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_312-b07)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.312-b07, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="默认jre-jdk-安装路径是-x2F-usr-x2F-lib-x2F-jvm-下面"><a href="#默认jre-jdk-安装路径是-x2F-usr-x2F-lib-x2F-jvm-下面" class="headerlink" title="默认jre jdk 安装路径是&#x2F;usr&#x2F;lib&#x2F;jvm 下面"></a><strong>默认jre jdk 安装路径是&#x2F;usr&#x2F;lib&#x2F;jvm 下面</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ll</span><br><span class="line"></span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx 1 root root  26 Dec 25 00:06 java -&gt; /etc/alternatives/java_sdk</span><br><span class="line">lrwxrwxrwx 1 root root  32 Dec 25 00:06 java-1.8.0 -&gt; /etc/alternatives/java_sdk_1.8.0</span><br><span class="line">lrwxrwxrwx 1 root root  40 Dec 25 00:06 java-1.8.0-openjdk -&gt; /etc/alternatives/java_sdk_1.8.0_openjdk</span><br><span class="line">drwxr-xr-x 9 root root 176 Dec 25 00:06 java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64</span><br><span class="line">lrwxrwxrwx 1 root root  34 Dec 25 00:06 java-openjdk -&gt; /etc/alternatives/java_sdk_openjdk</span><br><span class="line">lrwxrwxrwx 1 root root  21 Dec 25 00:06 jre -&gt; /etc/alternatives/jre</span><br><span class="line">lrwxrwxrwx 1 root root  27 Dec 25 00:06 jre-1.8.0 -&gt; /etc/alternatives/jre_1.8.0</span><br><span class="line">lrwxrwxrwx 1 root root  35 Dec 25 00:06 jre-1.8.0-openjdk -&gt; /etc/alternatives/jre_1.8.0_openjdk</span><br><span class="line">lrwxrwxrwx 1 root root  51 Dec 25 00:06 jre-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64 -&gt; java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64/jre</span><br><span class="line">lrwxrwxrwx 1 root root  29 Dec 25 00:06 jre-openjdk -&gt; /etc/alternatives/jre_openjdk</span><br></pre></td></tr></table></figure><h2 id="配置全局生效"><a href="#配置全局生效" class="headerlink" title="配置全局生效"></a><strong>配置全局生效</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="built_in">set</span> java environment</span></span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64</span><br><span class="line"></span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><h2 id="应用配置并查看是否生效"><a href="#应用配置并查看是否生效" class="headerlink" title="应用配置并查看是否生效"></a><strong>应用配置并查看是否生效</strong></h2><p><strong>source &#x2F;etc&#x2F;profile</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo $JAVA_HOME</span><br><span class="line"></span><br><span class="line">/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64</span><br><span class="line"></span><br><span class="line">echo $CLASSPATH</span><br><span class="line"></span><br><span class="line">.:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64/lib/dt.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64/lib/tools.jar</span><br><span class="line"></span><br><span class="line">echo $PATH</span><br><span class="line"></span><br><span class="line">/data/kafka_2.11-2.1.0/bin:/data/kafka_2.11-2.1.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.el7_9.x86_64/bin</span><br></pre></td></tr></table></figure><h2 id="创建一个java小程序测试下，名字叫-HelloWorld-java-输入以下命令"><a href="#创建一个java小程序测试下，名字叫-HelloWorld-java-输入以下命令" class="headerlink" title="创建一个java小程序测试下，名字叫 HelloWorld.java.输入以下命令:"></a><strong>创建一个java小程序测试下，名字叫 HelloWorld.java.输入以下命令:</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译并执行"><a href="#编译并执行" class="headerlink" title="编译并执行"></a><strong>编译并执行</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javac HelloWorld.java</span><br><span class="line">java HelloWorld</span><br><span class="line"></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h2 id="思考：如何运行-jar这类java应用？"><a href="#思考：如何运行-jar这类java应用？" class="headerlink" title="思考：如何运行.jar这类java应用？"></a><strong>思考：如何运行.jar这类java应用？</strong></h2><h3 id="语法如下"><a href="#语法如下" class="headerlink" title="语法如下"></a><strong>语法如下</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -jar file.jar</span><br><span class="line">java -jar /path/to/my/java/app.jar </span><br><span class="line"><span class="meta">#</span><span class="language-bash">/path/to/my/java/app.jar表示应用的路径</span></span><br><span class="line">java -jar /path/to/my/java/app.jar arg1 arg2 </span><br><span class="line"><span class="meta"># </span><span class="language-bash">arg1表示参数1 ，arg2表示参数2</span></span><br></pre></td></tr></table></figure><h3 id="结束了"><a href="#结束了" class="headerlink" title="结束了"></a><strong>结束了</strong></h3>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
